/*
 * generated by Xtext
 */
package com.jaspersoft.studio.data.formatting;

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;

import com.jaspersoft.studio.data.services.SqlGrammarAccess;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an
 * example
 */
public class SqlFormatter extends AbstractDeclarativeFormatter {

	@Override
	protected void configureFormatting(FormattingConfig c) {

		SqlGrammarAccess sga = (SqlGrammarAccess) getGrammarAccess();
		sga.findKeywords("FROM");

		c.setLinewrap(0, 1, 2).before(sga.getFromTableRule());

		// It's usually a good idea to activate the following three statements.
		// They will add and preserve newlines around comments
		c.setLinewrap(0, 1, 2).before(sga.getSL_COMMENTRule());
		c.setLinewrap(0, 1, 2).before(sga.getML_COMMENTRule());
		c.setLinewrap(0, 1, 1).after(sga.getML_COMMENTRule());
	}
}
