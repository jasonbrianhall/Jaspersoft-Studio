package com.jaspersoft.studio.data.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.jaspersoft.studio.data.services.SqlGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalSqlParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "UNBOUNDEDFOLLOWING", "UNBOUNDEDPRECEDING", "MINUTE_MICROSECOND", "SECOND_MICROSECOND", "ORDERSIBLINGSBY", "HOUR_MICROSECOND", "DAY_MICROSECOND", "MINUTE_SECOND", "STRAIGHT_JOIN", "PARTITIONBY", "CURRENTROW", "FETCHFIRST", "HOUR_MINUTE", "HOUR_SECOND", "ISNOTNULL", "MICROSECOND", "NOTBETWEEN", "DAY_MINUTE", "DAY_SECOND", "NOTEXISTS", "YEAR_MONTH", "KW_FOLLOWING", "INTERSECT", "PRECEDING", "WITHTIES", "BETWEEN_3", "BETWEEN_1", "DAY_HOUR", "DISTINCT", "GROUPBY", "NOTLIKE", "NOTEQUAL", "ORDERBY", "BETWEEN_2", "GREATER_1", "BETWEEN", "EXCLUDE", "EXTRACT", "GREATER", "INCLUDE", "ISNULL", "NATURAL", "PERCENT", "QUARTER", "UNPIVOT", "EXCEPT", "EXISTS", "HAVING", "MINUTE", "NOTIN_1", "OFFSET", "SECOND", "SELECT", "CAST", "CROSS", "EQUAL", "FIRST", "INNER", "LESS_1", "LIMIT", "MINUS", "MONTH", "NOTIN", "NULLS", "OUTER", "PIVOT", "RANGE", "RIGHT", "UNION", "USING", "WHERE", "CASE", "DESC", "ELSE", "FROM", "FULL", "HOUR", "JOIN", "LAST", "LEFT", "LESS", "LIKE", "NOT", "NOT_1", "ONLY", "OVER", "ROWS", "SOME", "THEN", "WEEK", "WHEN", "YEAR", "LeftParenthesisPlusSignRightParenthesis", "ALL", "AND", "ANY", "ASC", "DAY", "END", "FOR", "ROW", "TOP", "XML", "ExclamationMarkEqualsSign", "X", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "GreaterThanSignEqualsSign", "AS", "IN", "ON", "OR", "CircumflexAccentEqualsSign", "VerticalLineVerticalLine", "LeftParenthesis", "RightParenthesis", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "LessThanSign", "EqualsSign", "GreaterThanSign", "LeftCurlyBracket", "VerticalLine", "RightCurlyBracket", "RULE_JRPARAM", "RULE_JRNPARAM", "RULE_STAR", "RULE_UNSIGNED", "RULE_INT", "RULE_SIGNED_DOUBLE", "RULE_DATE", "RULE_TIME", "RULE_TIMESTAMP", "RULE_STRING_", "RULE_STRING", "RULE_DBNAME", "RULE_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int CAST=57;
    public static final int PIVOT=69;
    public static final int WEEK=93;
    public static final int RULE_ID=143;
    public static final int RULE_JRNPARAM=132;
    public static final int RULE_DATE=137;
    public static final int RightParenthesis=119;
    public static final int ROW=104;
    public static final int RULE_ANY_OTHER=147;
    public static final int CASE=75;
    public static final int LeftParenthesis=118;
    public static final int DAY=101;
    public static final int NOT=86;
    public static final int Solidus=124;
    public static final int EXCEPT=49;
    public static final int EOF=-1;
    public static final int MONTH=65;
    public static final int FullStop=123;
    public static final int NOTEQUAL=35;
    public static final int NOTLIKE=34;
    public static final int FULL=79;
    public static final int GREATER=42;
    public static final int QUARTER=47;
    public static final int USING=73;
    public static final int CircumflexAccentEqualsSign=116;
    public static final int PRECEDING=27;
    public static final int INCLUDE=43;
    public static final int LessThanSign=125;
    public static final int LESS=84;
    public static final int HOUR_MICROSECOND=9;
    public static final int RULE_SIGNED_DOUBLE=136;
    public static final int NOT_1=87;
    public static final int LAST=82;
    public static final int NOTIN_1=53;
    public static final int SELECT=56;
    public static final int GROUPBY=33;
    public static final int SECOND=55;
    public static final int DAY_MICROSECOND=10;
    public static final int ASC=100;
    public static final int ELSE=77;
    public static final int ON=114;
    public static final int LessThanSignEqualsSign=109;
    public static final int DAY_MINUTE=21;
    public static final int LeftCurlyBracket=128;
    public static final int CURRENTROW=14;
    public static final int HOUR_SECOND=17;
    public static final int STRAIGHT_JOIN=12;
    public static final int X=108;
    public static final int RULE_ML_COMMENT=144;
    public static final int INTERSECT=26;
    public static final int RULE_STRING=141;
    public static final int ORDERSIBLINGSBY=8;
    public static final int VerticalLine=129;
    public static final int OR=115;
    public static final int END=102;
    public static final int FROM=78;
    public static final int DISTINCT=32;
    public static final int XML=106;
    public static final int BETWEEN_3=29;
    public static final int BETWEEN_2=37;
    public static final int BETWEEN_1=30;
    public static final int RightCurlyBracket=130;
    public static final int NOTIN=66;
    public static final int OVER=89;
    public static final int WHERE=74;
    public static final int VerticalLineVerticalLine=117;
    public static final int HyphenMinus=122;
    public static final int INNER=61;
    public static final int YEAR=95;
    public static final int RULE_UNSIGNED=134;
    public static final int MICROSECOND=19;
    public static final int LIMIT=63;
    public static final int ONLY=88;
    public static final int UNPIVOT=48;
    public static final int ISNULL=44;
    public static final int FOR=103;
    public static final int ORDERBY=36;
    public static final int RULE_STRING_=140;
    public static final int LessThanSignGreaterThanSign=110;
    public static final int AND=98;
    public static final int NOTEXISTS=23;
    public static final int GreaterThanSign=127;
    public static final int CROSS=58;
    public static final int SECOND_MICROSECOND=7;
    public static final int YEAR_MONTH=24;
    public static final int LESS_1=62;
    public static final int AS=112;
    public static final int DAY_HOUR=31;
    public static final int THEN=92;
    public static final int IN=113;
    public static final int FETCHFIRST=15;
    public static final int OFFSET=54;
    public static final int LEFT=83;
    public static final int SOME=91;
    public static final int EQUAL=59;
    public static final int ALL=97;
    public static final int RULE_TIME=138;
    public static final int RULE_INT=135;
    public static final int RULE_TIMESTAMP=139;
    public static final int RULE_DBNAME=142;
    public static final int EXISTS=50;
    public static final int MINUTE_SECOND=11;
    public static final int EXTRACT=41;
    public static final int WITHTIES=28;
    public static final int LIKE=85;
    public static final int EXCLUDE=40;
    public static final int ExclamationMarkEqualsSign=107;
    public static final int OUTER=68;
    public static final int PARTITIONBY=13;
    public static final int PERCENT=46;
    public static final int UNBOUNDEDFOLLOWING=4;
    public static final int KW_FOLLOWING=25;
    public static final int GREATER_1=38;
    public static final int MINUTE_MICROSECOND=6;
    public static final int RANGE=70;
    public static final int RIGHT=71;
    public static final int HAVING=51;
    public static final int MINUS=64;
    public static final int HOUR=80;
    public static final int RULE_SL_COMMENT=145;
    public static final int JOIN=81;
    public static final int UNION=72;
    public static final int NOTBETWEEN=20;
    public static final int NULLS=67;
    public static final int ANY=99;
    public static final int PlusSign=120;
    public static final int ISNOTNULL=18;
    public static final int UNBOUNDEDPRECEDING=5;
    public static final int DAY_SECOND=22;
    public static final int RULE_STAR=133;
    public static final int WHEN=94;
    public static final int RULE_JRPARAM=131;
    public static final int ROWS=90;
    public static final int HOUR_MINUTE=16;
    public static final int GreaterThanSignEqualsSign=111;
    public static final int NATURAL=45;
    public static final int DESC=76;
    public static final int LeftParenthesisPlusSignRightParenthesis=96;
    public static final int MINUTE=52;
    public static final int RULE_WS=146;
    public static final int TOP=105;
    public static final int Comma=121;
    public static final int EqualsSign=126;
    public static final int BETWEEN=39;
    public static final int FIRST=60;

    // delegates
    // delegators


        public InternalSqlParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSqlParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSqlParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSqlParser.g"; }


     
     	private SqlGrammarAccess grammarAccess;
     	
     	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
     	
     	{
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("LeftCurlyBracket", "'{'");
    		tokenNameToValue.put("VerticalLine", "'|'");
    		tokenNameToValue.put("RightCurlyBracket", "'}'");
    		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
    		tokenNameToValue.put("X", "'\u0024X'");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AS", "'AS'");
    		tokenNameToValue.put("IN", "'IN'");
    		tokenNameToValue.put("ON", "'ON'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("CircumflexAccentEqualsSign", "'^='");
    		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
    		tokenNameToValue.put("LeftParenthesisPlusSignRightParenthesis", "'(+)'");
    		tokenNameToValue.put("ALL", "'ALL'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("ANY", "'ANY'");
    		tokenNameToValue.put("ASC", "'ASC'");
    		tokenNameToValue.put("DAY", "'DAY'");
    		tokenNameToValue.put("END", "'END'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("ROW", "'ROW'");
    		tokenNameToValue.put("TOP", "'TOP'");
    		tokenNameToValue.put("XML", "'XML'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("DESC", "'DESC'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("FROM", "'FROM'");
    		tokenNameToValue.put("FULL", "'FULL'");
    		tokenNameToValue.put("HOUR", "'HOUR'");
    		tokenNameToValue.put("JOIN", "'JOIN'");
    		tokenNameToValue.put("LAST", "'LAST'");
    		tokenNameToValue.put("LEFT", "'LEFT'");
    		tokenNameToValue.put("LESS", "'LESS'");
    		tokenNameToValue.put("LIKE", "'LIKE'");
    		tokenNameToValue.put("NOT", "'NOT\n'");
    		tokenNameToValue.put("NOT_1", "'NOT '");
    		tokenNameToValue.put("ONLY", "'ONLY'");
    		tokenNameToValue.put("OVER", "'OVER'");
    		tokenNameToValue.put("ROWS", "'ROWS'");
    		tokenNameToValue.put("SOME", "'SOME'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("WEEK", "'WEEK'");
    		tokenNameToValue.put("WHEN", "'WHEN'");
    		tokenNameToValue.put("YEAR", "'YEAR'");
    		tokenNameToValue.put("CAST", "'CAST('");
    		tokenNameToValue.put("CROSS", "'CROSS'");
    		tokenNameToValue.put("EQUAL", "'EQUAL'");
    		tokenNameToValue.put("FIRST", "'FIRST'");
    		tokenNameToValue.put("INNER", "'INNER'");
    		tokenNameToValue.put("LESS_1", "'LESS]'");
    		tokenNameToValue.put("LIMIT", "'LIMIT'");
    		tokenNameToValue.put("MINUS", "'MINUS'");
    		tokenNameToValue.put("MONTH", "'MONTH'");
    		tokenNameToValue.put("NOTIN", "'NOTIN'");
    		tokenNameToValue.put("NULLS", "'NULLS'");
    		tokenNameToValue.put("OUTER", "'OUTER'");
    		tokenNameToValue.put("PIVOT", "'PIVOT'");
    		tokenNameToValue.put("RANGE", "'RANGE'");
    		tokenNameToValue.put("RIGHT", "'RIGHT'");
    		tokenNameToValue.put("UNION", "'UNION'");
    		tokenNameToValue.put("USING", "'USING'");
    		tokenNameToValue.put("WHERE", "'WHERE'");
    		tokenNameToValue.put("EXCEPT", "'EXCEPT'");
    		tokenNameToValue.put("EXISTS", "'EXISTS'");
    		tokenNameToValue.put("HAVING", "'HAVING'");
    		tokenNameToValue.put("MINUTE", "'MINUTE'");
    		tokenNameToValue.put("NOTIN_1", "'NOT IN'");
    		tokenNameToValue.put("OFFSET", "'OFFSET'");
    		tokenNameToValue.put("SECOND", "'SECOND'");
    		tokenNameToValue.put("SELECT", "'SELECT'");
    		tokenNameToValue.put("BETWEEN", "'BETWEEN'");
    		tokenNameToValue.put("EXCLUDE", "'EXCLUDE'");
    		tokenNameToValue.put("EXTRACT", "'EXTRACT'");
    		tokenNameToValue.put("GREATER", "'GREATER'");
    		tokenNameToValue.put("INCLUDE", "'INCLUDE'");
    		tokenNameToValue.put("ISNULL", "'IS NULL'");
    		tokenNameToValue.put("NATURAL", "'NATURAL'");
    		tokenNameToValue.put("PERCENT", "'PERCENT'");
    		tokenNameToValue.put("QUARTER", "'QUARTER'");
    		tokenNameToValue.put("UNPIVOT", "'UNPIVOT'");
    		tokenNameToValue.put("BETWEEN_1", "'BETWEEN]'");
    		tokenNameToValue.put("DAY_HOUR", "'DAY_HOUR'");
    		tokenNameToValue.put("DISTINCT", "'DISTINCT'");
    		tokenNameToValue.put("GROUPBY", "'GROUP BY'");
    		tokenNameToValue.put("NOTLIKE", "'NOT LIKE'");
    		tokenNameToValue.put("NOTEQUAL", "'NOTEQUAL'");
    		tokenNameToValue.put("ORDERBY", "'ORDER BY'");
    		tokenNameToValue.put("BETWEEN_2", "'[BETWEEN'");
    		tokenNameToValue.put("GREATER_1", "'[GREATER'");
    		tokenNameToValue.put("KW_FOLLOWING", "'FOLLOWING'");
    		tokenNameToValue.put("INTERSECT", "'INTERSECT'");
    		tokenNameToValue.put("PRECEDING", "'PRECEDING'");
    		tokenNameToValue.put("WITHTIES", "'WITH TIES'");
    		tokenNameToValue.put("BETWEEN_3", "'[BETWEEN]'");
    		tokenNameToValue.put("DAY_MINUTE", "'DAY_MINUTE'");
    		tokenNameToValue.put("DAY_SECOND", "'DAY_SECOND'");
    		tokenNameToValue.put("NOTEXISTS", "'NOT EXISTS'");
    		tokenNameToValue.put("YEAR_MONTH", "'YEAR_MONTH'");
    		tokenNameToValue.put("CURRENTROW", "'CURRENT ROW'");
    		tokenNameToValue.put("FETCHFIRST", "'FETCH FIRST'");
    		tokenNameToValue.put("HOUR_MINUTE", "'HOUR_MINUTE'");
    		tokenNameToValue.put("HOUR_SECOND", "'HOUR_SECOND'");
    		tokenNameToValue.put("ISNOTNULL", "'IS NOT NULL'");
    		tokenNameToValue.put("MICROSECOND", "'MICROSECOND'");
    		tokenNameToValue.put("NOTBETWEEN", "'NOT BETWEEN'");
    		tokenNameToValue.put("PARTITIONBY", "'PARTITION BY'");
    		tokenNameToValue.put("MINUTE_SECOND", "'MINUTE_SECOND'");
    		tokenNameToValue.put("STRAIGHT_JOIN", "'STRAIGHT_JOIN'");
    		tokenNameToValue.put("DAY_MICROSECOND", "'DAY_MICROSECOND'");
    		tokenNameToValue.put("HOUR_MICROSECOND", "'HOUR_MICROSECOND'");
    		tokenNameToValue.put("ORDERSIBLINGSBY", "'ORDER SIBLINGS BY'");
    		tokenNameToValue.put("MINUTE_MICROSECOND", "'MINUTE_MICROSECOND'");
    		tokenNameToValue.put("SECOND_MICROSECOND", "'SECOND_MICROSECOND'");
    		tokenNameToValue.put("UNBOUNDEDFOLLOWING", "'UNBOUNDED FOLLOWING'");
    		tokenNameToValue.put("UNBOUNDEDPRECEDING", "'UNBOUNDED PRECEDING'");
     	}
     	
        public void setGrammarAccess(SqlGrammarAccess grammarAccess) {
        	this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected Grammar getGrammar() {
        	return grammarAccess.getGrammar();
        }

    	@Override
        protected String getValueForTokenName(String tokenName) {
        	String result = tokenNameToValue.get(tokenName);
        	if (result == null)
        		result = tokenName;
        	return result;
        }



    // $ANTLR start "entryRuleModel"
    // InternalSqlParser.g:190:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalSqlParser.g:191:1: ( ruleModel EOF )
            // InternalSqlParser.g:192:1: ruleModel EOF
            {
             before(grammarAccess.getModelRule()); 
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;

             after(grammarAccess.getModelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalSqlParser.g:199:1: ruleModel : ( ( rule__Model__Group__0 ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:203:5: ( ( ( rule__Model__Group__0 ) ) )
            // InternalSqlParser.g:204:1: ( ( rule__Model__Group__0 ) )
            {
            // InternalSqlParser.g:204:1: ( ( rule__Model__Group__0 ) )
            // InternalSqlParser.g:205:1: ( rule__Model__Group__0 )
            {
             before(grammarAccess.getModelAccess().getGroup()); 
            // InternalSqlParser.g:206:1: ( rule__Model__Group__0 )
            // InternalSqlParser.g:206:2: rule__Model__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Model__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getModelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleFetchFirst"
    // InternalSqlParser.g:218:1: entryRuleFetchFirst : ruleFetchFirst EOF ;
    public final void entryRuleFetchFirst() throws RecognitionException {
        try {
            // InternalSqlParser.g:219:1: ( ruleFetchFirst EOF )
            // InternalSqlParser.g:220:1: ruleFetchFirst EOF
            {
             before(grammarAccess.getFetchFirstRule()); 
            pushFollow(FOLLOW_1);
            ruleFetchFirst();

            state._fsp--;

             after(grammarAccess.getFetchFirstRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFetchFirst"


    // $ANTLR start "ruleFetchFirst"
    // InternalSqlParser.g:227:1: ruleFetchFirst : ( ( rule__FetchFirst__Group__0 ) ) ;
    public final void ruleFetchFirst() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:231:5: ( ( ( rule__FetchFirst__Group__0 ) ) )
            // InternalSqlParser.g:232:1: ( ( rule__FetchFirst__Group__0 ) )
            {
            // InternalSqlParser.g:232:1: ( ( rule__FetchFirst__Group__0 ) )
            // InternalSqlParser.g:233:1: ( rule__FetchFirst__Group__0 )
            {
             before(grammarAccess.getFetchFirstAccess().getGroup()); 
            // InternalSqlParser.g:234:1: ( rule__FetchFirst__Group__0 )
            // InternalSqlParser.g:234:2: rule__FetchFirst__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFetchFirstAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFetchFirst"


    // $ANTLR start "entryRuleOffset"
    // InternalSqlParser.g:246:1: entryRuleOffset : ruleOffset EOF ;
    public final void entryRuleOffset() throws RecognitionException {
        try {
            // InternalSqlParser.g:247:1: ( ruleOffset EOF )
            // InternalSqlParser.g:248:1: ruleOffset EOF
            {
             before(grammarAccess.getOffsetRule()); 
            pushFollow(FOLLOW_1);
            ruleOffset();

            state._fsp--;

             after(grammarAccess.getOffsetRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOffset"


    // $ANTLR start "ruleOffset"
    // InternalSqlParser.g:255:1: ruleOffset : ( ( rule__Offset__OffsetAssignment ) ) ;
    public final void ruleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:259:5: ( ( ( rule__Offset__OffsetAssignment ) ) )
            // InternalSqlParser.g:260:1: ( ( rule__Offset__OffsetAssignment ) )
            {
            // InternalSqlParser.g:260:1: ( ( rule__Offset__OffsetAssignment ) )
            // InternalSqlParser.g:261:1: ( rule__Offset__OffsetAssignment )
            {
             before(grammarAccess.getOffsetAccess().getOffsetAssignment()); 
            // InternalSqlParser.g:262:1: ( rule__Offset__OffsetAssignment )
            // InternalSqlParser.g:262:2: rule__Offset__OffsetAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Offset__OffsetAssignment();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getOffsetAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOffset"


    // $ANTLR start "entryRuleLimit"
    // InternalSqlParser.g:274:1: entryRuleLimit : ruleLimit EOF ;
    public final void entryRuleLimit() throws RecognitionException {
        try {
            // InternalSqlParser.g:275:1: ( ruleLimit EOF )
            // InternalSqlParser.g:276:1: ruleLimit EOF
            {
             before(grammarAccess.getLimitRule()); 
            pushFollow(FOLLOW_1);
            ruleLimit();

            state._fsp--;

             after(grammarAccess.getLimitRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLimit"


    // $ANTLR start "ruleLimit"
    // InternalSqlParser.g:283:1: ruleLimit : ( ( rule__Limit__Alternatives ) ) ;
    public final void ruleLimit() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:287:5: ( ( ( rule__Limit__Alternatives ) ) )
            // InternalSqlParser.g:288:1: ( ( rule__Limit__Alternatives ) )
            {
            // InternalSqlParser.g:288:1: ( ( rule__Limit__Alternatives ) )
            // InternalSqlParser.g:289:1: ( rule__Limit__Alternatives )
            {
             before(grammarAccess.getLimitAccess().getAlternatives()); 
            // InternalSqlParser.g:290:1: ( rule__Limit__Alternatives )
            // InternalSqlParser.g:290:2: rule__Limit__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLimitAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLimit"


    // $ANTLR start "entryRuleSelectQuery"
    // InternalSqlParser.g:302:1: entryRuleSelectQuery : ruleSelectQuery EOF ;
    public final void entryRuleSelectQuery() throws RecognitionException {
        try {
            // InternalSqlParser.g:303:1: ( ruleSelectQuery EOF )
            // InternalSqlParser.g:304:1: ruleSelectQuery EOF
            {
             before(grammarAccess.getSelectQueryRule()); 
            pushFollow(FOLLOW_1);
            ruleSelectQuery();

            state._fsp--;

             after(grammarAccess.getSelectQueryRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectQuery"


    // $ANTLR start "ruleSelectQuery"
    // InternalSqlParser.g:311:1: ruleSelectQuery : ( ( rule__SelectQuery__Group__0 ) ) ;
    public final void ruleSelectQuery() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:315:5: ( ( ( rule__SelectQuery__Group__0 ) ) )
            // InternalSqlParser.g:316:1: ( ( rule__SelectQuery__Group__0 ) )
            {
            // InternalSqlParser.g:316:1: ( ( rule__SelectQuery__Group__0 ) )
            // InternalSqlParser.g:317:1: ( rule__SelectQuery__Group__0 )
            {
             before(grammarAccess.getSelectQueryAccess().getGroup()); 
            // InternalSqlParser.g:318:1: ( rule__SelectQuery__Group__0 )
            // InternalSqlParser.g:318:2: rule__SelectQuery__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSelectQueryAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectQuery"


    // $ANTLR start "entryRuleSelectSubSet"
    // InternalSqlParser.g:330:1: entryRuleSelectSubSet : ruleSelectSubSet EOF ;
    public final void entryRuleSelectSubSet() throws RecognitionException {
        try {
            // InternalSqlParser.g:331:1: ( ruleSelectSubSet EOF )
            // InternalSqlParser.g:332:1: ruleSelectSubSet EOF
            {
             before(grammarAccess.getSelectSubSetRule()); 
            pushFollow(FOLLOW_1);
            ruleSelectSubSet();

            state._fsp--;

             after(grammarAccess.getSelectSubSetRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectSubSet"


    // $ANTLR start "ruleSelectSubSet"
    // InternalSqlParser.g:339:1: ruleSelectSubSet : ( ( rule__SelectSubSet__Group__0 ) ) ;
    public final void ruleSelectSubSet() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:343:5: ( ( ( rule__SelectSubSet__Group__0 ) ) )
            // InternalSqlParser.g:344:1: ( ( rule__SelectSubSet__Group__0 ) )
            {
            // InternalSqlParser.g:344:1: ( ( rule__SelectSubSet__Group__0 ) )
            // InternalSqlParser.g:345:1: ( rule__SelectSubSet__Group__0 )
            {
             before(grammarAccess.getSelectSubSetAccess().getGroup()); 
            // InternalSqlParser.g:346:1: ( rule__SelectSubSet__Group__0 )
            // InternalSqlParser.g:346:2: rule__SelectSubSet__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSelectSubSetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectSubSet"


    // $ANTLR start "entryRuleSelect"
    // InternalSqlParser.g:358:1: entryRuleSelect : ruleSelect EOF ;
    public final void entryRuleSelect() throws RecognitionException {
        try {
            // InternalSqlParser.g:359:1: ( ruleSelect EOF )
            // InternalSqlParser.g:360:1: ruleSelect EOF
            {
             before(grammarAccess.getSelectRule()); 
            pushFollow(FOLLOW_1);
            ruleSelect();

            state._fsp--;

             after(grammarAccess.getSelectRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelect"


    // $ANTLR start "ruleSelect"
    // InternalSqlParser.g:367:1: ruleSelect : ( ( rule__Select__Group__0 ) ) ;
    public final void ruleSelect() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:371:5: ( ( ( rule__Select__Group__0 ) ) )
            // InternalSqlParser.g:372:1: ( ( rule__Select__Group__0 ) )
            {
            // InternalSqlParser.g:372:1: ( ( rule__Select__Group__0 ) )
            // InternalSqlParser.g:373:1: ( rule__Select__Group__0 )
            {
             before(grammarAccess.getSelectAccess().getGroup()); 
            // InternalSqlParser.g:374:1: ( rule__Select__Group__0 )
            // InternalSqlParser.g:374:2: rule__Select__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelect"


    // $ANTLR start "entryRuleColumns"
    // InternalSqlParser.g:386:1: entryRuleColumns : ruleColumns EOF ;
    public final void entryRuleColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:387:1: ( ruleColumns EOF )
            // InternalSqlParser.g:388:1: ruleColumns EOF
            {
             before(grammarAccess.getColumnsRule()); 
            pushFollow(FOLLOW_1);
            ruleColumns();

            state._fsp--;

             after(grammarAccess.getColumnsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumns"


    // $ANTLR start "ruleColumns"
    // InternalSqlParser.g:395:1: ruleColumns : ( ( rule__Columns__Group__0 ) ) ;
    public final void ruleColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:399:5: ( ( ( rule__Columns__Group__0 ) ) )
            // InternalSqlParser.g:400:1: ( ( rule__Columns__Group__0 ) )
            {
            // InternalSqlParser.g:400:1: ( ( rule__Columns__Group__0 ) )
            // InternalSqlParser.g:401:1: ( rule__Columns__Group__0 )
            {
             before(grammarAccess.getColumnsAccess().getGroup()); 
            // InternalSqlParser.g:402:1: ( rule__Columns__Group__0 )
            // InternalSqlParser.g:402:2: rule__Columns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getColumnsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumns"


    // $ANTLR start "entryRuleColumnOrAlias"
    // InternalSqlParser.g:414:1: entryRuleColumnOrAlias : ruleColumnOrAlias EOF ;
    public final void entryRuleColumnOrAlias() throws RecognitionException {
        try {
            // InternalSqlParser.g:415:1: ( ruleColumnOrAlias EOF )
            // InternalSqlParser.g:416:1: ruleColumnOrAlias EOF
            {
             before(grammarAccess.getColumnOrAliasRule()); 
            pushFollow(FOLLOW_1);
            ruleColumnOrAlias();

            state._fsp--;

             after(grammarAccess.getColumnOrAliasRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOrAlias"


    // $ANTLR start "ruleColumnOrAlias"
    // InternalSqlParser.g:423:1: ruleColumnOrAlias : ( ( rule__ColumnOrAlias__Alternatives ) ) ;
    public final void ruleColumnOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:427:5: ( ( ( rule__ColumnOrAlias__Alternatives ) ) )
            // InternalSqlParser.g:428:1: ( ( rule__ColumnOrAlias__Alternatives ) )
            {
            // InternalSqlParser.g:428:1: ( ( rule__ColumnOrAlias__Alternatives ) )
            // InternalSqlParser.g:429:1: ( rule__ColumnOrAlias__Alternatives )
            {
             before(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 
            // InternalSqlParser.g:430:1: ( rule__ColumnOrAlias__Alternatives )
            // InternalSqlParser.g:430:2: rule__ColumnOrAlias__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOrAlias"


    // $ANTLR start "entryRuleColumnFull"
    // InternalSqlParser.g:442:1: entryRuleColumnFull : ruleColumnFull EOF ;
    public final void entryRuleColumnFull() throws RecognitionException {
        try {
            // InternalSqlParser.g:443:1: ( ruleColumnFull EOF )
            // InternalSqlParser.g:444:1: ruleColumnFull EOF
            {
             before(grammarAccess.getColumnFullRule()); 
            pushFollow(FOLLOW_1);
            ruleColumnFull();

            state._fsp--;

             after(grammarAccess.getColumnFullRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnFull"


    // $ANTLR start "ruleColumnFull"
    // InternalSqlParser.g:451:1: ruleColumnFull : ( ( rule__ColumnFull__Group__0 ) ) ;
    public final void ruleColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:455:5: ( ( ( rule__ColumnFull__Group__0 ) ) )
            // InternalSqlParser.g:456:1: ( ( rule__ColumnFull__Group__0 ) )
            {
            // InternalSqlParser.g:456:1: ( ( rule__ColumnFull__Group__0 ) )
            // InternalSqlParser.g:457:1: ( rule__ColumnFull__Group__0 )
            {
             before(grammarAccess.getColumnFullAccess().getGroup()); 
            // InternalSqlParser.g:458:1: ( rule__ColumnFull__Group__0 )
            // InternalSqlParser.g:458:2: rule__ColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getColumnFullAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnFull"


    // $ANTLR start "entryRuleTables"
    // InternalSqlParser.g:470:1: entryRuleTables : ruleTables EOF ;
    public final void entryRuleTables() throws RecognitionException {
        try {
            // InternalSqlParser.g:471:1: ( ruleTables EOF )
            // InternalSqlParser.g:472:1: ruleTables EOF
            {
             before(grammarAccess.getTablesRule()); 
            pushFollow(FOLLOW_1);
            ruleTables();

            state._fsp--;

             after(grammarAccess.getTablesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTables"


    // $ANTLR start "ruleTables"
    // InternalSqlParser.g:479:1: ruleTables : ( ( rule__Tables__Group__0 ) ) ;
    public final void ruleTables() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:483:5: ( ( ( rule__Tables__Group__0 ) ) )
            // InternalSqlParser.g:484:1: ( ( rule__Tables__Group__0 ) )
            {
            // InternalSqlParser.g:484:1: ( ( rule__Tables__Group__0 ) )
            // InternalSqlParser.g:485:1: ( rule__Tables__Group__0 )
            {
             before(grammarAccess.getTablesAccess().getGroup()); 
            // InternalSqlParser.g:486:1: ( rule__Tables__Group__0 )
            // InternalSqlParser.g:486:2: rule__Tables__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getTablesAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTables"


    // $ANTLR start "entryRuleFromTable"
    // InternalSqlParser.g:498:1: entryRuleFromTable : ruleFromTable EOF ;
    public final void entryRuleFromTable() throws RecognitionException {
        try {
            // InternalSqlParser.g:499:1: ( ruleFromTable EOF )
            // InternalSqlParser.g:500:1: ruleFromTable EOF
            {
             before(grammarAccess.getFromTableRule()); 
            pushFollow(FOLLOW_1);
            ruleFromTable();

            state._fsp--;

             after(grammarAccess.getFromTableRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTable"


    // $ANTLR start "ruleFromTable"
    // InternalSqlParser.g:507:1: ruleFromTable : ( ( rule__FromTable__Group__0 ) ) ;
    public final void ruleFromTable() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:511:5: ( ( ( rule__FromTable__Group__0 ) ) )
            // InternalSqlParser.g:512:1: ( ( rule__FromTable__Group__0 ) )
            {
            // InternalSqlParser.g:512:1: ( ( rule__FromTable__Group__0 ) )
            // InternalSqlParser.g:513:1: ( rule__FromTable__Group__0 )
            {
             before(grammarAccess.getFromTableAccess().getGroup()); 
            // InternalSqlParser.g:514:1: ( rule__FromTable__Group__0 )
            // InternalSqlParser.g:514:2: rule__FromTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFromTableAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTable"


    // $ANTLR start "entryRuleFromTableJoin"
    // InternalSqlParser.g:526:1: entryRuleFromTableJoin : ruleFromTableJoin EOF ;
    public final void entryRuleFromTableJoin() throws RecognitionException {
        try {
            // InternalSqlParser.g:527:1: ( ruleFromTableJoin EOF )
            // InternalSqlParser.g:528:1: ruleFromTableJoin EOF
            {
             before(grammarAccess.getFromTableJoinRule()); 
            pushFollow(FOLLOW_1);
            ruleFromTableJoin();

            state._fsp--;

             after(grammarAccess.getFromTableJoinRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTableJoin"


    // $ANTLR start "ruleFromTableJoin"
    // InternalSqlParser.g:535:1: ruleFromTableJoin : ( ( rule__FromTableJoin__Group__0 ) ) ;
    public final void ruleFromTableJoin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:539:5: ( ( ( rule__FromTableJoin__Group__0 ) ) )
            // InternalSqlParser.g:540:1: ( ( rule__FromTableJoin__Group__0 ) )
            {
            // InternalSqlParser.g:540:1: ( ( rule__FromTableJoin__Group__0 ) )
            // InternalSqlParser.g:541:1: ( rule__FromTableJoin__Group__0 )
            {
             before(grammarAccess.getFromTableJoinAccess().getGroup()); 
            // InternalSqlParser.g:542:1: ( rule__FromTableJoin__Group__0 )
            // InternalSqlParser.g:542:2: rule__FromTableJoin__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFromTableJoinAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTableJoin"


    // $ANTLR start "entryRuleJoinCondition"
    // InternalSqlParser.g:554:1: entryRuleJoinCondition : ruleJoinCondition EOF ;
    public final void entryRuleJoinCondition() throws RecognitionException {
        try {
            // InternalSqlParser.g:555:1: ( ruleJoinCondition EOF )
            // InternalSqlParser.g:556:1: ruleJoinCondition EOF
            {
             before(grammarAccess.getJoinConditionRule()); 
            pushFollow(FOLLOW_1);
            ruleJoinCondition();

            state._fsp--;

             after(grammarAccess.getJoinConditionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinCondition"


    // $ANTLR start "ruleJoinCondition"
    // InternalSqlParser.g:563:1: ruleJoinCondition : ( ( rule__JoinCondition__Group__0 ) ) ;
    public final void ruleJoinCondition() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:567:5: ( ( ( rule__JoinCondition__Group__0 ) ) )
            // InternalSqlParser.g:568:1: ( ( rule__JoinCondition__Group__0 ) )
            {
            // InternalSqlParser.g:568:1: ( ( rule__JoinCondition__Group__0 ) )
            // InternalSqlParser.g:569:1: ( rule__JoinCondition__Group__0 )
            {
             before(grammarAccess.getJoinConditionAccess().getGroup()); 
            // InternalSqlParser.g:570:1: ( rule__JoinCondition__Group__0 )
            // InternalSqlParser.g:570:2: rule__JoinCondition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getJoinConditionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinCondition"


    // $ANTLR start "entryRuleUsingCols"
    // InternalSqlParser.g:582:1: entryRuleUsingCols : ruleUsingCols EOF ;
    public final void entryRuleUsingCols() throws RecognitionException {
        try {
            // InternalSqlParser.g:583:1: ( ruleUsingCols EOF )
            // InternalSqlParser.g:584:1: ruleUsingCols EOF
            {
             before(grammarAccess.getUsingColsRule()); 
            pushFollow(FOLLOW_1);
            ruleUsingCols();

            state._fsp--;

             after(grammarAccess.getUsingColsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUsingCols"


    // $ANTLR start "ruleUsingCols"
    // InternalSqlParser.g:591:1: ruleUsingCols : ( ( rule__UsingCols__Group__0 ) ) ;
    public final void ruleUsingCols() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:595:5: ( ( ( rule__UsingCols__Group__0 ) ) )
            // InternalSqlParser.g:596:1: ( ( rule__UsingCols__Group__0 ) )
            {
            // InternalSqlParser.g:596:1: ( ( rule__UsingCols__Group__0 ) )
            // InternalSqlParser.g:597:1: ( rule__UsingCols__Group__0 )
            {
             before(grammarAccess.getUsingColsAccess().getGroup()); 
            // InternalSqlParser.g:598:1: ( rule__UsingCols__Group__0 )
            // InternalSqlParser.g:598:2: rule__UsingCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getUsingColsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUsingCols"


    // $ANTLR start "entryRuleTableOrAlias"
    // InternalSqlParser.g:610:1: entryRuleTableOrAlias : ruleTableOrAlias EOF ;
    public final void entryRuleTableOrAlias() throws RecognitionException {
        try {
            // InternalSqlParser.g:611:1: ( ruleTableOrAlias EOF )
            // InternalSqlParser.g:612:1: ruleTableOrAlias EOF
            {
             before(grammarAccess.getTableOrAliasRule()); 
            pushFollow(FOLLOW_1);
            ruleTableOrAlias();

            state._fsp--;

             after(grammarAccess.getTableOrAliasRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableOrAlias"


    // $ANTLR start "ruleTableOrAlias"
    // InternalSqlParser.g:619:1: ruleTableOrAlias : ( ( rule__TableOrAlias__Group__0 ) ) ;
    public final void ruleTableOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:623:5: ( ( ( rule__TableOrAlias__Group__0 ) ) )
            // InternalSqlParser.g:624:1: ( ( rule__TableOrAlias__Group__0 ) )
            {
            // InternalSqlParser.g:624:1: ( ( rule__TableOrAlias__Group__0 ) )
            // InternalSqlParser.g:625:1: ( rule__TableOrAlias__Group__0 )
            {
             before(grammarAccess.getTableOrAliasAccess().getGroup()); 
            // InternalSqlParser.g:626:1: ( rule__TableOrAlias__Group__0 )
            // InternalSqlParser.g:626:2: rule__TableOrAlias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getTableOrAliasAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableOrAlias"


    // $ANTLR start "entryRulePivotTable"
    // InternalSqlParser.g:638:1: entryRulePivotTable : rulePivotTable EOF ;
    public final void entryRulePivotTable() throws RecognitionException {
        try {
            // InternalSqlParser.g:639:1: ( rulePivotTable EOF )
            // InternalSqlParser.g:640:1: rulePivotTable EOF
            {
             before(grammarAccess.getPivotTableRule()); 
            pushFollow(FOLLOW_1);
            rulePivotTable();

            state._fsp--;

             after(grammarAccess.getPivotTableRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotTable"


    // $ANTLR start "rulePivotTable"
    // InternalSqlParser.g:647:1: rulePivotTable : ( ( rule__PivotTable__Group__0 ) ) ;
    public final void rulePivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:651:5: ( ( ( rule__PivotTable__Group__0 ) ) )
            // InternalSqlParser.g:652:1: ( ( rule__PivotTable__Group__0 ) )
            {
            // InternalSqlParser.g:652:1: ( ( rule__PivotTable__Group__0 ) )
            // InternalSqlParser.g:653:1: ( rule__PivotTable__Group__0 )
            {
             before(grammarAccess.getPivotTableAccess().getGroup()); 
            // InternalSqlParser.g:654:1: ( rule__PivotTable__Group__0 )
            // InternalSqlParser.g:654:2: rule__PivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotTableAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotTable"


    // $ANTLR start "entryRulePivotFunctions"
    // InternalSqlParser.g:666:1: entryRulePivotFunctions : rulePivotFunctions EOF ;
    public final void entryRulePivotFunctions() throws RecognitionException {
        try {
            // InternalSqlParser.g:667:1: ( rulePivotFunctions EOF )
            // InternalSqlParser.g:668:1: rulePivotFunctions EOF
            {
             before(grammarAccess.getPivotFunctionsRule()); 
            pushFollow(FOLLOW_1);
            rulePivotFunctions();

            state._fsp--;

             after(grammarAccess.getPivotFunctionsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotFunctions"


    // $ANTLR start "rulePivotFunctions"
    // InternalSqlParser.g:675:1: rulePivotFunctions : ( ( rule__PivotFunctions__AbcAssignment ) ) ;
    public final void rulePivotFunctions() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:679:5: ( ( ( rule__PivotFunctions__AbcAssignment ) ) )
            // InternalSqlParser.g:680:1: ( ( rule__PivotFunctions__AbcAssignment ) )
            {
            // InternalSqlParser.g:680:1: ( ( rule__PivotFunctions__AbcAssignment ) )
            // InternalSqlParser.g:681:1: ( rule__PivotFunctions__AbcAssignment )
            {
             before(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 
            // InternalSqlParser.g:682:1: ( rule__PivotFunctions__AbcAssignment )
            // InternalSqlParser.g:682:2: rule__PivotFunctions__AbcAssignment
            {
            pushFollow(FOLLOW_2);
            rule__PivotFunctions__AbcAssignment();

            state._fsp--;


            }

             after(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotFunctions"


    // $ANTLR start "entryRulePivotInClause"
    // InternalSqlParser.g:696:1: entryRulePivotInClause : rulePivotInClause EOF ;
    public final void entryRulePivotInClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:697:1: ( rulePivotInClause EOF )
            // InternalSqlParser.g:698:1: rulePivotInClause EOF
            {
             before(grammarAccess.getPivotInClauseRule()); 
            pushFollow(FOLLOW_1);
            rulePivotInClause();

            state._fsp--;

             after(grammarAccess.getPivotInClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClause"


    // $ANTLR start "rulePivotInClause"
    // InternalSqlParser.g:705:1: rulePivotInClause : ( ( rule__PivotInClause__Group__0 ) ) ;
    public final void rulePivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:709:5: ( ( ( rule__PivotInClause__Group__0 ) ) )
            // InternalSqlParser.g:710:1: ( ( rule__PivotInClause__Group__0 ) )
            {
            // InternalSqlParser.g:710:1: ( ( rule__PivotInClause__Group__0 ) )
            // InternalSqlParser.g:711:1: ( rule__PivotInClause__Group__0 )
            {
             before(grammarAccess.getPivotInClauseAccess().getGroup()); 
            // InternalSqlParser.g:712:1: ( rule__PivotInClause__Group__0 )
            // InternalSqlParser.g:712:2: rule__PivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotInClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClause"


    // $ANTLR start "entryRulePivotInClauseAny"
    // InternalSqlParser.g:724:1: entryRulePivotInClauseAny : rulePivotInClauseAny EOF ;
    public final void entryRulePivotInClauseAny() throws RecognitionException {
        try {
            // InternalSqlParser.g:725:1: ( rulePivotInClauseAny EOF )
            // InternalSqlParser.g:726:1: rulePivotInClauseAny EOF
            {
             before(grammarAccess.getPivotInClauseAnyRule()); 
            pushFollow(FOLLOW_1);
            rulePivotInClauseAny();

            state._fsp--;

             after(grammarAccess.getPivotInClauseAnyRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClauseAny"


    // $ANTLR start "rulePivotInClauseAny"
    // InternalSqlParser.g:733:1: rulePivotInClauseAny : ( ( rule__PivotInClauseAny__Group__0 ) ) ;
    public final void rulePivotInClauseAny() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:737:5: ( ( ( rule__PivotInClauseAny__Group__0 ) ) )
            // InternalSqlParser.g:738:1: ( ( rule__PivotInClauseAny__Group__0 ) )
            {
            // InternalSqlParser.g:738:1: ( ( rule__PivotInClauseAny__Group__0 ) )
            // InternalSqlParser.g:739:1: ( rule__PivotInClauseAny__Group__0 )
            {
             before(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 
            // InternalSqlParser.g:740:1: ( rule__PivotInClauseAny__Group__0 )
            // InternalSqlParser.g:740:2: rule__PivotInClauseAny__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClauseAny"


    // $ANTLR start "entryRuleUnpivotTable"
    // InternalSqlParser.g:752:1: entryRuleUnpivotTable : ruleUnpivotTable EOF ;
    public final void entryRuleUnpivotTable() throws RecognitionException {
        try {
            // InternalSqlParser.g:753:1: ( ruleUnpivotTable EOF )
            // InternalSqlParser.g:754:1: ruleUnpivotTable EOF
            {
             before(grammarAccess.getUnpivotTableRule()); 
            pushFollow(FOLLOW_1);
            ruleUnpivotTable();

            state._fsp--;

             after(grammarAccess.getUnpivotTableRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotTable"


    // $ANTLR start "ruleUnpivotTable"
    // InternalSqlParser.g:761:1: ruleUnpivotTable : ( ( rule__UnpivotTable__Group__0 ) ) ;
    public final void ruleUnpivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:765:5: ( ( ( rule__UnpivotTable__Group__0 ) ) )
            // InternalSqlParser.g:766:1: ( ( rule__UnpivotTable__Group__0 ) )
            {
            // InternalSqlParser.g:766:1: ( ( rule__UnpivotTable__Group__0 ) )
            // InternalSqlParser.g:767:1: ( rule__UnpivotTable__Group__0 )
            {
             before(grammarAccess.getUnpivotTableAccess().getGroup()); 
            // InternalSqlParser.g:768:1: ( rule__UnpivotTable__Group__0 )
            // InternalSqlParser.g:768:2: rule__UnpivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotTableAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotTable"


    // $ANTLR start "entryRuleUnpivotInClause"
    // InternalSqlParser.g:780:1: entryRuleUnpivotInClause : ruleUnpivotInClause EOF ;
    public final void entryRuleUnpivotInClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:781:1: ( ruleUnpivotInClause EOF )
            // InternalSqlParser.g:782:1: ruleUnpivotInClause EOF
            {
             before(grammarAccess.getUnpivotInClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleUnpivotInClause();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClause"


    // $ANTLR start "ruleUnpivotInClause"
    // InternalSqlParser.g:789:1: ruleUnpivotInClause : ( ( rule__UnpivotInClause__Group__0 ) ) ;
    public final void ruleUnpivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:793:5: ( ( ( rule__UnpivotInClause__Group__0 ) ) )
            // InternalSqlParser.g:794:1: ( ( rule__UnpivotInClause__Group__0 ) )
            {
            // InternalSqlParser.g:794:1: ( ( rule__UnpivotInClause__Group__0 ) )
            // InternalSqlParser.g:795:1: ( rule__UnpivotInClause__Group__0 )
            {
             before(grammarAccess.getUnpivotInClauseAccess().getGroup()); 
            // InternalSqlParser.g:796:1: ( rule__UnpivotInClause__Group__0 )
            // InternalSqlParser.g:796:2: rule__UnpivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClause"


    // $ANTLR start "entryRuleUnpivotInClauseArgs"
    // InternalSqlParser.g:808:1: entryRuleUnpivotInClauseArgs : ruleUnpivotInClauseArgs EOF ;
    public final void entryRuleUnpivotInClauseArgs() throws RecognitionException {
        try {
            // InternalSqlParser.g:809:1: ( ruleUnpivotInClauseArgs EOF )
            // InternalSqlParser.g:810:1: ruleUnpivotInClauseArgs EOF
            {
             before(grammarAccess.getUnpivotInClauseArgsRule()); 
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArgs();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseArgsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArgs"


    // $ANTLR start "ruleUnpivotInClauseArgs"
    // InternalSqlParser.g:817:1: ruleUnpivotInClauseArgs : ( ( rule__UnpivotInClauseArgs__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:821:5: ( ( ( rule__UnpivotInClauseArgs__Group__0 ) ) )
            // InternalSqlParser.g:822:1: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            {
            // InternalSqlParser.g:822:1: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            // InternalSqlParser.g:823:1: ( rule__UnpivotInClauseArgs__Group__0 )
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 
            // InternalSqlParser.g:824:1: ( rule__UnpivotInClauseArgs__Group__0 )
            // InternalSqlParser.g:824:2: rule__UnpivotInClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArgs"


    // $ANTLR start "entryRuleUnpivotInClauseArg"
    // InternalSqlParser.g:836:1: entryRuleUnpivotInClauseArg : ruleUnpivotInClauseArg EOF ;
    public final void entryRuleUnpivotInClauseArg() throws RecognitionException {
        try {
            // InternalSqlParser.g:837:1: ( ruleUnpivotInClauseArg EOF )
            // InternalSqlParser.g:838:1: ruleUnpivotInClauseArg EOF
            {
             before(grammarAccess.getUnpivotInClauseArgRule()); 
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArg();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseArgRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArg"


    // $ANTLR start "ruleUnpivotInClauseArg"
    // InternalSqlParser.g:845:1: ruleUnpivotInClauseArg : ( ( rule__UnpivotInClauseArg__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:849:5: ( ( ( rule__UnpivotInClauseArg__Group__0 ) ) )
            // InternalSqlParser.g:850:1: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            {
            // InternalSqlParser.g:850:1: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            // InternalSqlParser.g:851:1: ( rule__UnpivotInClauseArg__Group__0 )
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 
            // InternalSqlParser.g:852:1: ( rule__UnpivotInClauseArg__Group__0 )
            // InternalSqlParser.g:852:2: rule__UnpivotInClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArg"


    // $ANTLR start "entryRulePivotForClause"
    // InternalSqlParser.g:864:1: entryRulePivotForClause : rulePivotForClause EOF ;
    public final void entryRulePivotForClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:865:1: ( rulePivotForClause EOF )
            // InternalSqlParser.g:866:1: rulePivotForClause EOF
            {
             before(grammarAccess.getPivotForClauseRule()); 
            pushFollow(FOLLOW_1);
            rulePivotForClause();

            state._fsp--;

             after(grammarAccess.getPivotForClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotForClause"


    // $ANTLR start "rulePivotForClause"
    // InternalSqlParser.g:873:1: rulePivotForClause : ( ( rule__PivotForClause__Group__0 ) ) ;
    public final void rulePivotForClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:877:5: ( ( ( rule__PivotForClause__Group__0 ) ) )
            // InternalSqlParser.g:878:1: ( ( rule__PivotForClause__Group__0 ) )
            {
            // InternalSqlParser.g:878:1: ( ( rule__PivotForClause__Group__0 ) )
            // InternalSqlParser.g:879:1: ( rule__PivotForClause__Group__0 )
            {
             before(grammarAccess.getPivotForClauseAccess().getGroup()); 
            // InternalSqlParser.g:880:1: ( rule__PivotForClause__Group__0 )
            // InternalSqlParser.g:880:2: rule__PivotForClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotForClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotForClause"


    // $ANTLR start "entryRulePivotColumns"
    // InternalSqlParser.g:892:1: entryRulePivotColumns : rulePivotColumns EOF ;
    public final void entryRulePivotColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:893:1: ( rulePivotColumns EOF )
            // InternalSqlParser.g:894:1: rulePivotColumns EOF
            {
             before(grammarAccess.getPivotColumnsRule()); 
            pushFollow(FOLLOW_1);
            rulePivotColumns();

            state._fsp--;

             after(grammarAccess.getPivotColumnsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotColumns"


    // $ANTLR start "rulePivotColumns"
    // InternalSqlParser.g:901:1: rulePivotColumns : ( ( rule__PivotColumns__Alternatives ) ) ;
    public final void rulePivotColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:905:5: ( ( ( rule__PivotColumns__Alternatives ) ) )
            // InternalSqlParser.g:906:1: ( ( rule__PivotColumns__Alternatives ) )
            {
            // InternalSqlParser.g:906:1: ( ( rule__PivotColumns__Alternatives ) )
            // InternalSqlParser.g:907:1: ( rule__PivotColumns__Alternatives )
            {
             before(grammarAccess.getPivotColumnsAccess().getAlternatives()); 
            // InternalSqlParser.g:908:1: ( rule__PivotColumns__Alternatives )
            // InternalSqlParser.g:908:2: rule__PivotColumns__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPivotColumnsAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotColumns"


    // $ANTLR start "entryRulePivotCols"
    // InternalSqlParser.g:920:1: entryRulePivotCols : rulePivotCols EOF ;
    public final void entryRulePivotCols() throws RecognitionException {
        try {
            // InternalSqlParser.g:921:1: ( rulePivotCols EOF )
            // InternalSqlParser.g:922:1: rulePivotCols EOF
            {
             before(grammarAccess.getPivotColsRule()); 
            pushFollow(FOLLOW_1);
            rulePivotCols();

            state._fsp--;

             after(grammarAccess.getPivotColsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCols"


    // $ANTLR start "rulePivotCols"
    // InternalSqlParser.g:929:1: rulePivotCols : ( ( rule__PivotCols__Group__0 ) ) ;
    public final void rulePivotCols() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:933:5: ( ( ( rule__PivotCols__Group__0 ) ) )
            // InternalSqlParser.g:934:1: ( ( rule__PivotCols__Group__0 ) )
            {
            // InternalSqlParser.g:934:1: ( ( rule__PivotCols__Group__0 ) )
            // InternalSqlParser.g:935:1: ( rule__PivotCols__Group__0 )
            {
             before(grammarAccess.getPivotColsAccess().getGroup()); 
            // InternalSqlParser.g:936:1: ( rule__PivotCols__Group__0 )
            // InternalSqlParser.g:936:2: rule__PivotCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotColsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCols"


    // $ANTLR start "entryRulePivotCol"
    // InternalSqlParser.g:948:1: entryRulePivotCol : rulePivotCol EOF ;
    public final void entryRulePivotCol() throws RecognitionException {
        try {
            // InternalSqlParser.g:949:1: ( rulePivotCol EOF )
            // InternalSqlParser.g:950:1: rulePivotCol EOF
            {
             before(grammarAccess.getPivotColRule()); 
            pushFollow(FOLLOW_1);
            rulePivotCol();

            state._fsp--;

             after(grammarAccess.getPivotColRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCol"


    // $ANTLR start "rulePivotCol"
    // InternalSqlParser.g:957:1: rulePivotCol : ( ( rule__PivotCol__Group__0 ) ) ;
    public final void rulePivotCol() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:961:5: ( ( ( rule__PivotCol__Group__0 ) ) )
            // InternalSqlParser.g:962:1: ( ( rule__PivotCol__Group__0 ) )
            {
            // InternalSqlParser.g:962:1: ( ( rule__PivotCol__Group__0 ) )
            // InternalSqlParser.g:963:1: ( rule__PivotCol__Group__0 )
            {
             before(grammarAccess.getPivotColAccess().getGroup()); 
            // InternalSqlParser.g:964:1: ( rule__PivotCol__Group__0 )
            // InternalSqlParser.g:964:2: rule__PivotCol__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotColAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCol"


    // $ANTLR start "entryRuleTableFull"
    // InternalSqlParser.g:976:1: entryRuleTableFull : ruleTableFull EOF ;
    public final void entryRuleTableFull() throws RecognitionException {
        try {
            // InternalSqlParser.g:977:1: ( ruleTableFull EOF )
            // InternalSqlParser.g:978:1: ruleTableFull EOF
            {
             before(grammarAccess.getTableFullRule()); 
            pushFollow(FOLLOW_1);
            ruleTableFull();

            state._fsp--;

             after(grammarAccess.getTableFullRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableFull"


    // $ANTLR start "ruleTableFull"
    // InternalSqlParser.g:985:1: ruleTableFull : ( ( rule__TableFull__Group__0 ) ) ;
    public final void ruleTableFull() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:989:5: ( ( ( rule__TableFull__Group__0 ) ) )
            // InternalSqlParser.g:990:1: ( ( rule__TableFull__Group__0 ) )
            {
            // InternalSqlParser.g:990:1: ( ( rule__TableFull__Group__0 ) )
            // InternalSqlParser.g:991:1: ( rule__TableFull__Group__0 )
            {
             before(grammarAccess.getTableFullAccess().getGroup()); 
            // InternalSqlParser.g:992:1: ( rule__TableFull__Group__0 )
            // InternalSqlParser.g:992:2: rule__TableFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getTableFullAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableFull"


    // $ANTLR start "entryRuleDbObjectNameAll"
    // InternalSqlParser.g:1004:1: entryRuleDbObjectNameAll : ruleDbObjectNameAll EOF ;
    public final void entryRuleDbObjectNameAll() throws RecognitionException {
        try {
            // InternalSqlParser.g:1005:1: ( ruleDbObjectNameAll EOF )
            // InternalSqlParser.g:1006:1: ruleDbObjectNameAll EOF
            {
             before(grammarAccess.getDbObjectNameAllRule()); 
            pushFollow(FOLLOW_1);
            ruleDbObjectNameAll();

            state._fsp--;

             after(grammarAccess.getDbObjectNameAllRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectNameAll"


    // $ANTLR start "ruleDbObjectNameAll"
    // InternalSqlParser.g:1013:1: ruleDbObjectNameAll : ( ( rule__DbObjectNameAll__Group__0 ) ) ;
    public final void ruleDbObjectNameAll() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1017:5: ( ( ( rule__DbObjectNameAll__Group__0 ) ) )
            // InternalSqlParser.g:1018:1: ( ( rule__DbObjectNameAll__Group__0 ) )
            {
            // InternalSqlParser.g:1018:1: ( ( rule__DbObjectNameAll__Group__0 ) )
            // InternalSqlParser.g:1019:1: ( rule__DbObjectNameAll__Group__0 )
            {
             before(grammarAccess.getDbObjectNameAllAccess().getGroup()); 
            // InternalSqlParser.g:1020:1: ( rule__DbObjectNameAll__Group__0 )
            // InternalSqlParser.g:1020:2: rule__DbObjectNameAll__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDbObjectNameAllAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectNameAll"


    // $ANTLR start "entryRuleDbObjectName"
    // InternalSqlParser.g:1032:1: entryRuleDbObjectName : ruleDbObjectName EOF ;
    public final void entryRuleDbObjectName() throws RecognitionException {
        try {
            // InternalSqlParser.g:1033:1: ( ruleDbObjectName EOF )
            // InternalSqlParser.g:1034:1: ruleDbObjectName EOF
            {
             before(grammarAccess.getDbObjectNameRule()); 
            pushFollow(FOLLOW_1);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getDbObjectNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectName"


    // $ANTLR start "ruleDbObjectName"
    // InternalSqlParser.g:1041:1: ruleDbObjectName : ( ( rule__DbObjectName__DbnameAssignment ) ) ;
    public final void ruleDbObjectName() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1045:5: ( ( ( rule__DbObjectName__DbnameAssignment ) ) )
            // InternalSqlParser.g:1046:1: ( ( rule__DbObjectName__DbnameAssignment ) )
            {
            // InternalSqlParser.g:1046:1: ( ( rule__DbObjectName__DbnameAssignment ) )
            // InternalSqlParser.g:1047:1: ( rule__DbObjectName__DbnameAssignment )
            {
             before(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 
            // InternalSqlParser.g:1048:1: ( rule__DbObjectName__DbnameAssignment )
            // InternalSqlParser.g:1048:2: rule__DbObjectName__DbnameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectName__DbnameAssignment();

            state._fsp--;


            }

             after(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectName"


    // $ANTLR start "entryRuleOrderByColumns"
    // InternalSqlParser.g:1060:1: entryRuleOrderByColumns : ruleOrderByColumns EOF ;
    public final void entryRuleOrderByColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:1061:1: ( ruleOrderByColumns EOF )
            // InternalSqlParser.g:1062:1: ruleOrderByColumns EOF
            {
             before(grammarAccess.getOrderByColumnsRule()); 
            pushFollow(FOLLOW_1);
            ruleOrderByColumns();

            state._fsp--;

             after(grammarAccess.getOrderByColumnsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumns"


    // $ANTLR start "ruleOrderByColumns"
    // InternalSqlParser.g:1069:1: ruleOrderByColumns : ( ( rule__OrderByColumns__Group__0 ) ) ;
    public final void ruleOrderByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1073:5: ( ( ( rule__OrderByColumns__Group__0 ) ) )
            // InternalSqlParser.g:1074:1: ( ( rule__OrderByColumns__Group__0 ) )
            {
            // InternalSqlParser.g:1074:1: ( ( rule__OrderByColumns__Group__0 ) )
            // InternalSqlParser.g:1075:1: ( rule__OrderByColumns__Group__0 )
            {
             before(grammarAccess.getOrderByColumnsAccess().getGroup()); 
            // InternalSqlParser.g:1076:1: ( rule__OrderByColumns__Group__0 )
            // InternalSqlParser.g:1076:2: rule__OrderByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByColumnsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumns"


    // $ANTLR start "entryRuleOrderByColumnFull"
    // InternalSqlParser.g:1088:1: entryRuleOrderByColumnFull : ruleOrderByColumnFull EOF ;
    public final void entryRuleOrderByColumnFull() throws RecognitionException {
        try {
            // InternalSqlParser.g:1089:1: ( ruleOrderByColumnFull EOF )
            // InternalSqlParser.g:1090:1: ruleOrderByColumnFull EOF
            {
             before(grammarAccess.getOrderByColumnFullRule()); 
            pushFollow(FOLLOW_1);
            ruleOrderByColumnFull();

            state._fsp--;

             after(grammarAccess.getOrderByColumnFullRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumnFull"


    // $ANTLR start "ruleOrderByColumnFull"
    // InternalSqlParser.g:1097:1: ruleOrderByColumnFull : ( ( rule__OrderByColumnFull__Group__0 ) ) ;
    public final void ruleOrderByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1101:5: ( ( ( rule__OrderByColumnFull__Group__0 ) ) )
            // InternalSqlParser.g:1102:1: ( ( rule__OrderByColumnFull__Group__0 ) )
            {
            // InternalSqlParser.g:1102:1: ( ( rule__OrderByColumnFull__Group__0 ) )
            // InternalSqlParser.g:1103:1: ( rule__OrderByColumnFull__Group__0 )
            {
             before(grammarAccess.getOrderByColumnFullAccess().getGroup()); 
            // InternalSqlParser.g:1104:1: ( rule__OrderByColumnFull__Group__0 )
            // InternalSqlParser.g:1104:2: rule__OrderByColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByColumnFullAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumnFull"


    // $ANTLR start "entryRuleGroupByColumns"
    // InternalSqlParser.g:1116:1: entryRuleGroupByColumns : ruleGroupByColumns EOF ;
    public final void entryRuleGroupByColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:1117:1: ( ruleGroupByColumns EOF )
            // InternalSqlParser.g:1118:1: ruleGroupByColumns EOF
            {
             before(grammarAccess.getGroupByColumnsRule()); 
            pushFollow(FOLLOW_1);
            ruleGroupByColumns();

            state._fsp--;

             after(grammarAccess.getGroupByColumnsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumns"


    // $ANTLR start "ruleGroupByColumns"
    // InternalSqlParser.g:1125:1: ruleGroupByColumns : ( ( rule__GroupByColumns__Group__0 ) ) ;
    public final void ruleGroupByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1129:5: ( ( ( rule__GroupByColumns__Group__0 ) ) )
            // InternalSqlParser.g:1130:1: ( ( rule__GroupByColumns__Group__0 ) )
            {
            // InternalSqlParser.g:1130:1: ( ( rule__GroupByColumns__Group__0 ) )
            // InternalSqlParser.g:1131:1: ( rule__GroupByColumns__Group__0 )
            {
             before(grammarAccess.getGroupByColumnsAccess().getGroup()); 
            // InternalSqlParser.g:1132:1: ( rule__GroupByColumns__Group__0 )
            // InternalSqlParser.g:1132:2: rule__GroupByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGroupByColumnsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumns"


    // $ANTLR start "entryRuleGroupByColumnFull"
    // InternalSqlParser.g:1144:1: entryRuleGroupByColumnFull : ruleGroupByColumnFull EOF ;
    public final void entryRuleGroupByColumnFull() throws RecognitionException {
        try {
            // InternalSqlParser.g:1145:1: ( ruleGroupByColumnFull EOF )
            // InternalSqlParser.g:1146:1: ruleGroupByColumnFull EOF
            {
             before(grammarAccess.getGroupByColumnFullRule()); 
            pushFollow(FOLLOW_1);
            ruleGroupByColumnFull();

            state._fsp--;

             after(grammarAccess.getGroupByColumnFullRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumnFull"


    // $ANTLR start "ruleGroupByColumnFull"
    // InternalSqlParser.g:1153:1: ruleGroupByColumnFull : ( ( rule__GroupByColumnFull__Alternatives ) ) ;
    public final void ruleGroupByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1157:5: ( ( ( rule__GroupByColumnFull__Alternatives ) ) )
            // InternalSqlParser.g:1158:1: ( ( rule__GroupByColumnFull__Alternatives ) )
            {
            // InternalSqlParser.g:1158:1: ( ( rule__GroupByColumnFull__Alternatives ) )
            // InternalSqlParser.g:1159:1: ( rule__GroupByColumnFull__Alternatives )
            {
             before(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 
            // InternalSqlParser.g:1160:1: ( rule__GroupByColumnFull__Alternatives )
            // InternalSqlParser.g:1160:2: rule__GroupByColumnFull__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumnFull__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumnFull"


    // $ANTLR start "entryRuleFullExpression"
    // InternalSqlParser.g:1172:1: entryRuleFullExpression : ruleFullExpression EOF ;
    public final void entryRuleFullExpression() throws RecognitionException {
        try {
            // InternalSqlParser.g:1173:1: ( ruleFullExpression EOF )
            // InternalSqlParser.g:1174:1: ruleFullExpression EOF
            {
             before(grammarAccess.getFullExpressionRule()); 
            pushFollow(FOLLOW_1);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getFullExpressionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFullExpression"


    // $ANTLR start "ruleFullExpression"
    // InternalSqlParser.g:1181:1: ruleFullExpression : ( ( rule__FullExpression__Group__0 ) ) ;
    public final void ruleFullExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1185:5: ( ( ( rule__FullExpression__Group__0 ) ) )
            // InternalSqlParser.g:1186:1: ( ( rule__FullExpression__Group__0 ) )
            {
            // InternalSqlParser.g:1186:1: ( ( rule__FullExpression__Group__0 ) )
            // InternalSqlParser.g:1187:1: ( rule__FullExpression__Group__0 )
            {
             before(grammarAccess.getFullExpressionAccess().getGroup()); 
            // InternalSqlParser.g:1188:1: ( rule__FullExpression__Group__0 )
            // InternalSqlParser.g:1188:2: rule__FullExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFullExpressionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFullExpression"


    // $ANTLR start "entryRuleExpressionFragmentSecond"
    // InternalSqlParser.g:1200:1: entryRuleExpressionFragmentSecond : ruleExpressionFragmentSecond EOF ;
    public final void entryRuleExpressionFragmentSecond() throws RecognitionException {
        try {
            // InternalSqlParser.g:1201:1: ( ruleExpressionFragmentSecond EOF )
            // InternalSqlParser.g:1202:1: ruleExpressionFragmentSecond EOF
            {
             before(grammarAccess.getExpressionFragmentSecondRule()); 
            pushFollow(FOLLOW_1);
            ruleExpressionFragmentSecond();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentSecondRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragmentSecond"


    // $ANTLR start "ruleExpressionFragmentSecond"
    // InternalSqlParser.g:1209:1: ruleExpressionFragmentSecond : ( ( rule__ExpressionFragmentSecond__Alternatives ) ) ;
    public final void ruleExpressionFragmentSecond() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1213:5: ( ( ( rule__ExpressionFragmentSecond__Alternatives ) ) )
            // InternalSqlParser.g:1214:1: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            {
            // InternalSqlParser.g:1214:1: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            // InternalSqlParser.g:1215:1: ( rule__ExpressionFragmentSecond__Alternatives )
            {
             before(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 
            // InternalSqlParser.g:1216:1: ( rule__ExpressionFragmentSecond__Alternatives )
            // InternalSqlParser.g:1216:2: rule__ExpressionFragmentSecond__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragmentSecond"


    // $ANTLR start "entryRuleExpressionFragment"
    // InternalSqlParser.g:1228:1: entryRuleExpressionFragment : ruleExpressionFragment EOF ;
    public final void entryRuleExpressionFragment() throws RecognitionException {
        try {
            // InternalSqlParser.g:1229:1: ( ruleExpressionFragment EOF )
            // InternalSqlParser.g:1230:1: ruleExpressionFragment EOF
            {
             before(grammarAccess.getExpressionFragmentRule()); 
            pushFollow(FOLLOW_1);
            ruleExpressionFragment();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragment"


    // $ANTLR start "ruleExpressionFragment"
    // InternalSqlParser.g:1237:1: ruleExpressionFragment : ( ( rule__ExpressionFragment__Alternatives ) ) ;
    public final void ruleExpressionFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1241:5: ( ( ( rule__ExpressionFragment__Alternatives ) ) )
            // InternalSqlParser.g:1242:1: ( ( rule__ExpressionFragment__Alternatives ) )
            {
            // InternalSqlParser.g:1242:1: ( ( rule__ExpressionFragment__Alternatives ) )
            // InternalSqlParser.g:1243:1: ( rule__ExpressionFragment__Alternatives )
            {
             before(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 
            // InternalSqlParser.g:1244:1: ( rule__ExpressionFragment__Alternatives )
            // InternalSqlParser.g:1244:2: rule__ExpressionFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragment"


    // $ANTLR start "entryRuleExpressionGroup"
    // InternalSqlParser.g:1256:1: entryRuleExpressionGroup : ruleExpressionGroup EOF ;
    public final void entryRuleExpressionGroup() throws RecognitionException {
        try {
            // InternalSqlParser.g:1257:1: ( ruleExpressionGroup EOF )
            // InternalSqlParser.g:1258:1: ruleExpressionGroup EOF
            {
             before(grammarAccess.getExpressionGroupRule()); 
            pushFollow(FOLLOW_1);
            ruleExpressionGroup();

            state._fsp--;

             after(grammarAccess.getExpressionGroupRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionGroup"


    // $ANTLR start "ruleExpressionGroup"
    // InternalSqlParser.g:1265:1: ruleExpressionGroup : ( ( rule__ExpressionGroup__Group__0 ) ) ;
    public final void ruleExpressionGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1269:5: ( ( ( rule__ExpressionGroup__Group__0 ) ) )
            // InternalSqlParser.g:1270:1: ( ( rule__ExpressionGroup__Group__0 ) )
            {
            // InternalSqlParser.g:1270:1: ( ( rule__ExpressionGroup__Group__0 ) )
            // InternalSqlParser.g:1271:1: ( rule__ExpressionGroup__Group__0 )
            {
             before(grammarAccess.getExpressionGroupAccess().getGroup()); 
            // InternalSqlParser.g:1272:1: ( rule__ExpressionGroup__Group__0 )
            // InternalSqlParser.g:1272:2: rule__ExpressionGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionGroupAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionGroup"


    // $ANTLR start "entryRuleXExpression"
    // InternalSqlParser.g:1284:1: entryRuleXExpression : ruleXExpression EOF ;
    public final void entryRuleXExpression() throws RecognitionException {
        try {
            // InternalSqlParser.g:1285:1: ( ruleXExpression EOF )
            // InternalSqlParser.g:1286:1: ruleXExpression EOF
            {
             before(grammarAccess.getXExpressionRule()); 
            pushFollow(FOLLOW_1);
            ruleXExpression();

            state._fsp--;

             after(grammarAccess.getXExpressionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalSqlParser.g:1293:1: ruleXExpression : ( ( rule__XExpression__Group__0 ) ) ;
    public final void ruleXExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1297:5: ( ( ( rule__XExpression__Group__0 ) ) )
            // InternalSqlParser.g:1298:1: ( ( rule__XExpression__Group__0 ) )
            {
            // InternalSqlParser.g:1298:1: ( ( rule__XExpression__Group__0 ) )
            // InternalSqlParser.g:1299:1: ( rule__XExpression__Group__0 )
            {
             before(grammarAccess.getXExpressionAccess().getGroup()); 
            // InternalSqlParser.g:1300:1: ( rule__XExpression__Group__0 )
            // InternalSqlParser.g:1300:2: rule__XExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXExpression_"
    // InternalSqlParser.g:1312:1: entryRuleXExpression_ : ruleXExpression_ EOF ;
    public final void entryRuleXExpression_() throws RecognitionException {
        try {
            // InternalSqlParser.g:1313:1: ( ruleXExpression_ EOF )
            // InternalSqlParser.g:1314:1: ruleXExpression_ EOF
            {
             before(grammarAccess.getXExpression_Rule()); 
            pushFollow(FOLLOW_1);
            ruleXExpression_();

            state._fsp--;

             after(grammarAccess.getXExpression_Rule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression_"


    // $ANTLR start "ruleXExpression_"
    // InternalSqlParser.g:1321:1: ruleXExpression_ : ( ( rule__XExpression___Group__0 ) ) ;
    public final void ruleXExpression_() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1325:5: ( ( ( rule__XExpression___Group__0 ) ) )
            // InternalSqlParser.g:1326:1: ( ( rule__XExpression___Group__0 ) )
            {
            // InternalSqlParser.g:1326:1: ( ( rule__XExpression___Group__0 ) )
            // InternalSqlParser.g:1327:1: ( rule__XExpression___Group__0 )
            {
             before(grammarAccess.getXExpression_Access().getGroup()); 
            // InternalSqlParser.g:1328:1: ( rule__XExpression___Group__0 )
            // InternalSqlParser.g:1328:2: rule__XExpression___Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__0();

            state._fsp--;


            }

             after(grammarAccess.getXExpression_Access().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression_"


    // $ANTLR start "entryRuleXExpressionParams"
    // InternalSqlParser.g:1340:1: entryRuleXExpressionParams : ruleXExpressionParams EOF ;
    public final void entryRuleXExpressionParams() throws RecognitionException {
        try {
            // InternalSqlParser.g:1341:1: ( ruleXExpressionParams EOF )
            // InternalSqlParser.g:1342:1: ruleXExpressionParams EOF
            {
             before(grammarAccess.getXExpressionParamsRule()); 
            pushFollow(FOLLOW_1);
            ruleXExpressionParams();

            state._fsp--;

             after(grammarAccess.getXExpressionParamsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpressionParams"


    // $ANTLR start "ruleXExpressionParams"
    // InternalSqlParser.g:1349:1: ruleXExpressionParams : ( ( rule__XExpressionParams__Group__0 ) ) ;
    public final void ruleXExpressionParams() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1353:5: ( ( ( rule__XExpressionParams__Group__0 ) ) )
            // InternalSqlParser.g:1354:1: ( ( rule__XExpressionParams__Group__0 ) )
            {
            // InternalSqlParser.g:1354:1: ( ( rule__XExpressionParams__Group__0 ) )
            // InternalSqlParser.g:1355:1: ( rule__XExpressionParams__Group__0 )
            {
             before(grammarAccess.getXExpressionParamsAccess().getGroup()); 
            // InternalSqlParser.g:1356:1: ( rule__XExpressionParams__Group__0 )
            // InternalSqlParser.g:1356:2: rule__XExpressionParams__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionParamsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpressionParams"


    // $ANTLR start "entryRuleJRParameter"
    // InternalSqlParser.g:1368:1: entryRuleJRParameter : ruleJRParameter EOF ;
    public final void entryRuleJRParameter() throws RecognitionException {
        try {
            // InternalSqlParser.g:1369:1: ( ruleJRParameter EOF )
            // InternalSqlParser.g:1370:1: ruleJRParameter EOF
            {
             before(grammarAccess.getJRParameterRule()); 
            pushFollow(FOLLOW_1);
            ruleJRParameter();

            state._fsp--;

             after(grammarAccess.getJRParameterRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJRParameter"


    // $ANTLR start "ruleJRParameter"
    // InternalSqlParser.g:1377:1: ruleJRParameter : ( ( rule__JRParameter__JrprmAssignment ) ) ;
    public final void ruleJRParameter() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1381:5: ( ( ( rule__JRParameter__JrprmAssignment ) ) )
            // InternalSqlParser.g:1382:1: ( ( rule__JRParameter__JrprmAssignment ) )
            {
            // InternalSqlParser.g:1382:1: ( ( rule__JRParameter__JrprmAssignment ) )
            // InternalSqlParser.g:1383:1: ( rule__JRParameter__JrprmAssignment )
            {
             before(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 
            // InternalSqlParser.g:1384:1: ( rule__JRParameter__JrprmAssignment )
            // InternalSqlParser.g:1384:2: rule__JRParameter__JrprmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__JRParameter__JrprmAssignment();

            state._fsp--;


            }

             after(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJRParameter"


    // $ANTLR start "entryRuleExpression"
    // InternalSqlParser.g:1396:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalSqlParser.g:1397:1: ( ruleExpression EOF )
            // InternalSqlParser.g:1398:1: ruleExpression EOF
            {
             before(grammarAccess.getExpressionRule()); 
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getExpressionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSqlParser.g:1405:1: ruleExpression : ( ( rule__Expression__Group__0 ) ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1409:5: ( ( ( rule__Expression__Group__0 ) ) )
            // InternalSqlParser.g:1410:1: ( ( rule__Expression__Group__0 ) )
            {
            // InternalSqlParser.g:1410:1: ( ( rule__Expression__Group__0 ) )
            // InternalSqlParser.g:1411:1: ( rule__Expression__Group__0 )
            {
             before(grammarAccess.getExpressionAccess().getGroup()); 
            // InternalSqlParser.g:1412:1: ( rule__Expression__Group__0 )
            // InternalSqlParser.g:1412:2: rule__Expression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleComparison"
    // InternalSqlParser.g:1424:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalSqlParser.g:1425:1: ( ruleComparison EOF )
            // InternalSqlParser.g:1426:1: ruleComparison EOF
            {
             before(grammarAccess.getComparisonRule()); 
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getComparisonRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalSqlParser.g:1433:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1437:5: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalSqlParser.g:1438:1: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalSqlParser.g:1438:1: ( ( rule__Comparison__Group__0 ) )
            // InternalSqlParser.g:1439:1: ( rule__Comparison__Group__0 )
            {
             before(grammarAccess.getComparisonAccess().getGroup()); 
            // InternalSqlParser.g:1440:1: ( rule__Comparison__Group__0 )
            // InternalSqlParser.g:1440:2: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleLike"
    // InternalSqlParser.g:1452:1: entryRuleLike : ruleLike EOF ;
    public final void entryRuleLike() throws RecognitionException {
        try {
            // InternalSqlParser.g:1453:1: ( ruleLike EOF )
            // InternalSqlParser.g:1454:1: ruleLike EOF
            {
             before(grammarAccess.getLikeRule()); 
            pushFollow(FOLLOW_1);
            ruleLike();

            state._fsp--;

             after(grammarAccess.getLikeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLike"


    // $ANTLR start "ruleLike"
    // InternalSqlParser.g:1461:1: ruleLike : ( ( rule__Like__Group__0 ) ) ;
    public final void ruleLike() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1465:5: ( ( ( rule__Like__Group__0 ) ) )
            // InternalSqlParser.g:1466:1: ( ( rule__Like__Group__0 ) )
            {
            // InternalSqlParser.g:1466:1: ( ( rule__Like__Group__0 ) )
            // InternalSqlParser.g:1467:1: ( rule__Like__Group__0 )
            {
             before(grammarAccess.getLikeAccess().getGroup()); 
            // InternalSqlParser.g:1468:1: ( rule__Like__Group__0 )
            // InternalSqlParser.g:1468:2: rule__Like__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLikeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLike"


    // $ANTLR start "entryRuleLikeOperand"
    // InternalSqlParser.g:1480:1: entryRuleLikeOperand : ruleLikeOperand EOF ;
    public final void entryRuleLikeOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:1481:1: ( ruleLikeOperand EOF )
            // InternalSqlParser.g:1482:1: ruleLikeOperand EOF
            {
             before(grammarAccess.getLikeOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleLikeOperand();

            state._fsp--;

             after(grammarAccess.getLikeOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLikeOperand"


    // $ANTLR start "ruleLikeOperand"
    // InternalSqlParser.g:1489:1: ruleLikeOperand : ( ( rule__LikeOperand__Alternatives ) ) ;
    public final void ruleLikeOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1493:5: ( ( ( rule__LikeOperand__Alternatives ) ) )
            // InternalSqlParser.g:1494:1: ( ( rule__LikeOperand__Alternatives ) )
            {
            // InternalSqlParser.g:1494:1: ( ( rule__LikeOperand__Alternatives ) )
            // InternalSqlParser.g:1495:1: ( rule__LikeOperand__Alternatives )
            {
             before(grammarAccess.getLikeOperandAccess().getAlternatives()); 
            // InternalSqlParser.g:1496:1: ( rule__LikeOperand__Alternatives )
            // InternalSqlParser.g:1496:2: rule__LikeOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LikeOperand__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLikeOperandAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLikeOperand"


    // $ANTLR start "entryRuleBetween"
    // InternalSqlParser.g:1508:1: entryRuleBetween : ruleBetween EOF ;
    public final void entryRuleBetween() throws RecognitionException {
        try {
            // InternalSqlParser.g:1509:1: ( ruleBetween EOF )
            // InternalSqlParser.g:1510:1: ruleBetween EOF
            {
             before(grammarAccess.getBetweenRule()); 
            pushFollow(FOLLOW_1);
            ruleBetween();

            state._fsp--;

             after(grammarAccess.getBetweenRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBetween"


    // $ANTLR start "ruleBetween"
    // InternalSqlParser.g:1517:1: ruleBetween : ( ( rule__Between__Group__0 ) ) ;
    public final void ruleBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1521:5: ( ( ( rule__Between__Group__0 ) ) )
            // InternalSqlParser.g:1522:1: ( ( rule__Between__Group__0 ) )
            {
            // InternalSqlParser.g:1522:1: ( ( rule__Between__Group__0 ) )
            // InternalSqlParser.g:1523:1: ( rule__Between__Group__0 )
            {
             before(grammarAccess.getBetweenAccess().getGroup()); 
            // InternalSqlParser.g:1524:1: ( rule__Between__Group__0 )
            // InternalSqlParser.g:1524:2: rule__Between__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getBetweenAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBetween"


    // $ANTLR start "entryRuleInOperator"
    // InternalSqlParser.g:1536:1: entryRuleInOperator : ruleInOperator EOF ;
    public final void entryRuleInOperator() throws RecognitionException {
        try {
            // InternalSqlParser.g:1537:1: ( ruleInOperator EOF )
            // InternalSqlParser.g:1538:1: ruleInOperator EOF
            {
             before(grammarAccess.getInOperatorRule()); 
            pushFollow(FOLLOW_1);
            ruleInOperator();

            state._fsp--;

             after(grammarAccess.getInOperatorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInOperator"


    // $ANTLR start "ruleInOperator"
    // InternalSqlParser.g:1545:1: ruleInOperator : ( ( rule__InOperator__Group__0 ) ) ;
    public final void ruleInOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1549:5: ( ( ( rule__InOperator__Group__0 ) ) )
            // InternalSqlParser.g:1550:1: ( ( rule__InOperator__Group__0 ) )
            {
            // InternalSqlParser.g:1550:1: ( ( rule__InOperator__Group__0 ) )
            // InternalSqlParser.g:1551:1: ( rule__InOperator__Group__0 )
            {
             before(grammarAccess.getInOperatorAccess().getGroup()); 
            // InternalSqlParser.g:1552:1: ( rule__InOperator__Group__0 )
            // InternalSqlParser.g:1552:2: rule__InOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getInOperatorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInOperator"


    // $ANTLR start "entryRuleExistsOperator"
    // InternalSqlParser.g:1564:1: entryRuleExistsOperator : ruleExistsOperator EOF ;
    public final void entryRuleExistsOperator() throws RecognitionException {
        try {
            // InternalSqlParser.g:1565:1: ( ruleExistsOperator EOF )
            // InternalSqlParser.g:1566:1: ruleExistsOperator EOF
            {
             before(grammarAccess.getExistsOperatorRule()); 
            pushFollow(FOLLOW_1);
            ruleExistsOperator();

            state._fsp--;

             after(grammarAccess.getExistsOperatorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExistsOperator"


    // $ANTLR start "ruleExistsOperator"
    // InternalSqlParser.g:1573:1: ruleExistsOperator : ( ( rule__ExistsOperator__Group__0 ) ) ;
    public final void ruleExistsOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1577:5: ( ( ( rule__ExistsOperator__Group__0 ) ) )
            // InternalSqlParser.g:1578:1: ( ( rule__ExistsOperator__Group__0 ) )
            {
            // InternalSqlParser.g:1578:1: ( ( rule__ExistsOperator__Group__0 ) )
            // InternalSqlParser.g:1579:1: ( rule__ExistsOperator__Group__0 )
            {
             before(grammarAccess.getExistsOperatorAccess().getGroup()); 
            // InternalSqlParser.g:1580:1: ( rule__ExistsOperator__Group__0 )
            // InternalSqlParser.g:1580:2: rule__ExistsOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExistsOperatorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExistsOperator"


    // $ANTLR start "entryRuleOperandListGroup"
    // InternalSqlParser.g:1592:1: entryRuleOperandListGroup : ruleOperandListGroup EOF ;
    public final void entryRuleOperandListGroup() throws RecognitionException {
        try {
            // InternalSqlParser.g:1593:1: ( ruleOperandListGroup EOF )
            // InternalSqlParser.g:1594:1: ruleOperandListGroup EOF
            {
             before(grammarAccess.getOperandListGroupRule()); 
            pushFollow(FOLLOW_1);
            ruleOperandListGroup();

            state._fsp--;

             after(grammarAccess.getOperandListGroupRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandListGroup"


    // $ANTLR start "ruleOperandListGroup"
    // InternalSqlParser.g:1601:1: ruleOperandListGroup : ( ( rule__OperandListGroup__Group__0 ) ) ;
    public final void ruleOperandListGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1605:5: ( ( ( rule__OperandListGroup__Group__0 ) ) )
            // InternalSqlParser.g:1606:1: ( ( rule__OperandListGroup__Group__0 ) )
            {
            // InternalSqlParser.g:1606:1: ( ( rule__OperandListGroup__Group__0 ) )
            // InternalSqlParser.g:1607:1: ( rule__OperandListGroup__Group__0 )
            {
             before(grammarAccess.getOperandListGroupAccess().getGroup()); 
            // InternalSqlParser.g:1608:1: ( rule__OperandListGroup__Group__0 )
            // InternalSqlParser.g:1608:2: rule__OperandListGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOperandListGroupAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandListGroup"


    // $ANTLR start "entryRuleOperandList"
    // InternalSqlParser.g:1620:1: entryRuleOperandList : ruleOperandList EOF ;
    public final void entryRuleOperandList() throws RecognitionException {
        try {
            // InternalSqlParser.g:1621:1: ( ruleOperandList EOF )
            // InternalSqlParser.g:1622:1: ruleOperandList EOF
            {
             before(grammarAccess.getOperandListRule()); 
            pushFollow(FOLLOW_1);
            ruleOperandList();

            state._fsp--;

             after(grammarAccess.getOperandListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandList"


    // $ANTLR start "ruleOperandList"
    // InternalSqlParser.g:1629:1: ruleOperandList : ( ( rule__OperandList__Group__0 ) ) ;
    public final void ruleOperandList() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1633:5: ( ( ( rule__OperandList__Group__0 ) ) )
            // InternalSqlParser.g:1634:1: ( ( rule__OperandList__Group__0 ) )
            {
            // InternalSqlParser.g:1634:1: ( ( rule__OperandList__Group__0 ) )
            // InternalSqlParser.g:1635:1: ( rule__OperandList__Group__0 )
            {
             before(grammarAccess.getOperandListAccess().getGroup()); 
            // InternalSqlParser.g:1636:1: ( rule__OperandList__Group__0 )
            // InternalSqlParser.g:1636:2: rule__OperandList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOperandListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandList"


    // $ANTLR start "entryRuleOperandGroup"
    // InternalSqlParser.g:1648:1: entryRuleOperandGroup : ruleOperandGroup EOF ;
    public final void entryRuleOperandGroup() throws RecognitionException {
        try {
            // InternalSqlParser.g:1649:1: ( ruleOperandGroup EOF )
            // InternalSqlParser.g:1650:1: ruleOperandGroup EOF
            {
             before(grammarAccess.getOperandGroupRule()); 
            pushFollow(FOLLOW_1);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getOperandGroupRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandGroup"


    // $ANTLR start "ruleOperandGroup"
    // InternalSqlParser.g:1657:1: ruleOperandGroup : ( ( rule__OperandGroup__Alternatives ) ) ;
    public final void ruleOperandGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1661:5: ( ( ( rule__OperandGroup__Alternatives ) ) )
            // InternalSqlParser.g:1662:1: ( ( rule__OperandGroup__Alternatives ) )
            {
            // InternalSqlParser.g:1662:1: ( ( rule__OperandGroup__Alternatives ) )
            // InternalSqlParser.g:1663:1: ( rule__OperandGroup__Alternatives )
            {
             before(grammarAccess.getOperandGroupAccess().getAlternatives()); 
            // InternalSqlParser.g:1664:1: ( rule__OperandGroup__Alternatives )
            // InternalSqlParser.g:1664:2: rule__OperandGroup__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getOperandGroupAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandGroup"


    // $ANTLR start "entryRuleOperand"
    // InternalSqlParser.g:1676:1: entryRuleOperand : ruleOperand EOF ;
    public final void entryRuleOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:1677:1: ( ruleOperand EOF )
            // InternalSqlParser.g:1678:1: ruleOperand EOF
            {
             before(grammarAccess.getOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleOperand();

            state._fsp--;

             after(grammarAccess.getOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalSqlParser.g:1685:1: ruleOperand : ( ( rule__Operand__Group__0 ) ) ;
    public final void ruleOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1689:5: ( ( ( rule__Operand__Group__0 ) ) )
            // InternalSqlParser.g:1690:1: ( ( rule__Operand__Group__0 ) )
            {
            // InternalSqlParser.g:1690:1: ( ( rule__Operand__Group__0 ) )
            // InternalSqlParser.g:1691:1: ( rule__Operand__Group__0 )
            {
             before(grammarAccess.getOperandAccess().getGroup()); 
            // InternalSqlParser.g:1692:1: ( rule__Operand__Group__0 )
            // InternalSqlParser.g:1692:2: rule__Operand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOperandAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleOperandFragment"
    // InternalSqlParser.g:1704:1: entryRuleOperandFragment : ruleOperandFragment EOF ;
    public final void entryRuleOperandFragment() throws RecognitionException {
        try {
            // InternalSqlParser.g:1705:1: ( ruleOperandFragment EOF )
            // InternalSqlParser.g:1706:1: ruleOperandFragment EOF
            {
             before(grammarAccess.getOperandFragmentRule()); 
            pushFollow(FOLLOW_1);
            ruleOperandFragment();

            state._fsp--;

             after(grammarAccess.getOperandFragmentRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFragment"


    // $ANTLR start "ruleOperandFragment"
    // InternalSqlParser.g:1713:1: ruleOperandFragment : ( ( rule__OperandFragment__Alternatives ) ) ;
    public final void ruleOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1717:5: ( ( ( rule__OperandFragment__Alternatives ) ) )
            // InternalSqlParser.g:1718:1: ( ( rule__OperandFragment__Alternatives ) )
            {
            // InternalSqlParser.g:1718:1: ( ( rule__OperandFragment__Alternatives ) )
            // InternalSqlParser.g:1719:1: ( rule__OperandFragment__Alternatives )
            {
             before(grammarAccess.getOperandFragmentAccess().getAlternatives()); 
            // InternalSqlParser.g:1720:1: ( rule__OperandFragment__Alternatives )
            // InternalSqlParser.g:1720:2: rule__OperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandFragment__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getOperandFragmentAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFragment"


    // $ANTLR start "entryRuleOperandFunction"
    // InternalSqlParser.g:1732:1: entryRuleOperandFunction : ruleOperandFunction EOF ;
    public final void entryRuleOperandFunction() throws RecognitionException {
        try {
            // InternalSqlParser.g:1733:1: ( ruleOperandFunction EOF )
            // InternalSqlParser.g:1734:1: ruleOperandFunction EOF
            {
             before(grammarAccess.getOperandFunctionRule()); 
            pushFollow(FOLLOW_1);
            ruleOperandFunction();

            state._fsp--;

             after(grammarAccess.getOperandFunctionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFunction"


    // $ANTLR start "ruleOperandFunction"
    // InternalSqlParser.g:1741:1: ruleOperandFunction : ( ( rule__OperandFunction__Group__0 ) ) ;
    public final void ruleOperandFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1745:5: ( ( ( rule__OperandFunction__Group__0 ) ) )
            // InternalSqlParser.g:1746:1: ( ( rule__OperandFunction__Group__0 ) )
            {
            // InternalSqlParser.g:1746:1: ( ( rule__OperandFunction__Group__0 ) )
            // InternalSqlParser.g:1747:1: ( rule__OperandFunction__Group__0 )
            {
             before(grammarAccess.getOperandFunctionAccess().getGroup()); 
            // InternalSqlParser.g:1748:1: ( rule__OperandFunction__Group__0 )
            // InternalSqlParser.g:1748:2: rule__OperandFunction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOperandFunctionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFunction"


    // $ANTLR start "entryRuleFunctionExtract"
    // InternalSqlParser.g:1760:1: entryRuleFunctionExtract : ruleFunctionExtract EOF ;
    public final void entryRuleFunctionExtract() throws RecognitionException {
        try {
            // InternalSqlParser.g:1761:1: ( ruleFunctionExtract EOF )
            // InternalSqlParser.g:1762:1: ruleFunctionExtract EOF
            {
             before(grammarAccess.getFunctionExtractRule()); 
            pushFollow(FOLLOW_1);
            ruleFunctionExtract();

            state._fsp--;

             after(grammarAccess.getFunctionExtractRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionExtract"


    // $ANTLR start "ruleFunctionExtract"
    // InternalSqlParser.g:1769:1: ruleFunctionExtract : ( ( rule__FunctionExtract__Group__0 ) ) ;
    public final void ruleFunctionExtract() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1773:5: ( ( ( rule__FunctionExtract__Group__0 ) ) )
            // InternalSqlParser.g:1774:1: ( ( rule__FunctionExtract__Group__0 ) )
            {
            // InternalSqlParser.g:1774:1: ( ( rule__FunctionExtract__Group__0 ) )
            // InternalSqlParser.g:1775:1: ( rule__FunctionExtract__Group__0 )
            {
             before(grammarAccess.getFunctionExtractAccess().getGroup()); 
            // InternalSqlParser.g:1776:1: ( rule__FunctionExtract__Group__0 )
            // InternalSqlParser.g:1776:2: rule__FunctionExtract__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFunctionExtractAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionExtract"


    // $ANTLR start "entryRuleFunctionAnalytical"
    // InternalSqlParser.g:1788:1: entryRuleFunctionAnalytical : ruleFunctionAnalytical EOF ;
    public final void entryRuleFunctionAnalytical() throws RecognitionException {
        try {
            // InternalSqlParser.g:1789:1: ( ruleFunctionAnalytical EOF )
            // InternalSqlParser.g:1790:1: ruleFunctionAnalytical EOF
            {
             before(grammarAccess.getFunctionAnalyticalRule()); 
            pushFollow(FOLLOW_1);
            ruleFunctionAnalytical();

            state._fsp--;

             after(grammarAccess.getFunctionAnalyticalRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionAnalytical"


    // $ANTLR start "ruleFunctionAnalytical"
    // InternalSqlParser.g:1797:1: ruleFunctionAnalytical : ( ( rule__FunctionAnalytical__Group__0 ) ) ;
    public final void ruleFunctionAnalytical() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1801:5: ( ( ( rule__FunctionAnalytical__Group__0 ) ) )
            // InternalSqlParser.g:1802:1: ( ( rule__FunctionAnalytical__Group__0 ) )
            {
            // InternalSqlParser.g:1802:1: ( ( rule__FunctionAnalytical__Group__0 ) )
            // InternalSqlParser.g:1803:1: ( rule__FunctionAnalytical__Group__0 )
            {
             before(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 
            // InternalSqlParser.g:1804:1: ( rule__FunctionAnalytical__Group__0 )
            // InternalSqlParser.g:1804:2: rule__FunctionAnalytical__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionAnalytical"


    // $ANTLR start "entryRuleAnalyticClause"
    // InternalSqlParser.g:1816:1: entryRuleAnalyticClause : ruleAnalyticClause EOF ;
    public final void entryRuleAnalyticClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:1817:1: ( ruleAnalyticClause EOF )
            // InternalSqlParser.g:1818:1: ruleAnalyticClause EOF
            {
             before(grammarAccess.getAnalyticClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleAnalyticClause();

            state._fsp--;

             after(grammarAccess.getAnalyticClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticClause"


    // $ANTLR start "ruleAnalyticClause"
    // InternalSqlParser.g:1825:1: ruleAnalyticClause : ( ( rule__AnalyticClause__Group__0 ) ) ;
    public final void ruleAnalyticClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1829:5: ( ( ( rule__AnalyticClause__Group__0 ) ) )
            // InternalSqlParser.g:1830:1: ( ( rule__AnalyticClause__Group__0 ) )
            {
            // InternalSqlParser.g:1830:1: ( ( rule__AnalyticClause__Group__0 ) )
            // InternalSqlParser.g:1831:1: ( rule__AnalyticClause__Group__0 )
            {
             before(grammarAccess.getAnalyticClauseAccess().getGroup()); 
            // InternalSqlParser.g:1832:1: ( rule__AnalyticClause__Group__0 )
            // InternalSqlParser.g:1832:2: rule__AnalyticClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticClause"


    // $ANTLR start "entryRuleWindowingClause"
    // InternalSqlParser.g:1844:1: entryRuleWindowingClause : ruleWindowingClause EOF ;
    public final void entryRuleWindowingClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:1845:1: ( ruleWindowingClause EOF )
            // InternalSqlParser.g:1846:1: ruleWindowingClause EOF
            {
             before(grammarAccess.getWindowingClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleWindowingClause();

            state._fsp--;

             after(grammarAccess.getWindowingClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClause"


    // $ANTLR start "ruleWindowingClause"
    // InternalSqlParser.g:1853:1: ruleWindowingClause : ( ( rule__WindowingClause__Group__0 ) ) ;
    public final void ruleWindowingClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1857:5: ( ( ( rule__WindowingClause__Group__0 ) ) )
            // InternalSqlParser.g:1858:1: ( ( rule__WindowingClause__Group__0 ) )
            {
            // InternalSqlParser.g:1858:1: ( ( rule__WindowingClause__Group__0 ) )
            // InternalSqlParser.g:1859:1: ( rule__WindowingClause__Group__0 )
            {
             before(grammarAccess.getWindowingClauseAccess().getGroup()); 
            // InternalSqlParser.g:1860:1: ( rule__WindowingClause__Group__0 )
            // InternalSqlParser.g:1860:2: rule__WindowingClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClause"


    // $ANTLR start "entryRuleWindowingClauseBetween"
    // InternalSqlParser.g:1872:1: entryRuleWindowingClauseBetween : ruleWindowingClauseBetween EOF ;
    public final void entryRuleWindowingClauseBetween() throws RecognitionException {
        try {
            // InternalSqlParser.g:1873:1: ( ruleWindowingClauseBetween EOF )
            // InternalSqlParser.g:1874:1: ruleWindowingClauseBetween EOF
            {
             before(grammarAccess.getWindowingClauseBetweenRule()); 
            pushFollow(FOLLOW_1);
            ruleWindowingClauseBetween();

            state._fsp--;

             after(grammarAccess.getWindowingClauseBetweenRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseBetween"


    // $ANTLR start "ruleWindowingClauseBetween"
    // InternalSqlParser.g:1881:1: ruleWindowingClauseBetween : ( ( rule__WindowingClauseBetween__Group__0 ) ) ;
    public final void ruleWindowingClauseBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1885:5: ( ( ( rule__WindowingClauseBetween__Group__0 ) ) )
            // InternalSqlParser.g:1886:1: ( ( rule__WindowingClauseBetween__Group__0 ) )
            {
            // InternalSqlParser.g:1886:1: ( ( rule__WindowingClauseBetween__Group__0 ) )
            // InternalSqlParser.g:1887:1: ( rule__WindowingClauseBetween__Group__0 )
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 
            // InternalSqlParser.g:1888:1: ( rule__WindowingClauseBetween__Group__0 )
            // InternalSqlParser.g:1888:2: rule__WindowingClauseBetween__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseBetween"


    // $ANTLR start "entryRuleWindowingClauseOperandFollowing"
    // InternalSqlParser.g:1900:1: entryRuleWindowingClauseOperandFollowing : ruleWindowingClauseOperandFollowing EOF ;
    public final void entryRuleWindowingClauseOperandFollowing() throws RecognitionException {
        try {
            // InternalSqlParser.g:1901:1: ( ruleWindowingClauseOperandFollowing EOF )
            // InternalSqlParser.g:1902:1: ruleWindowingClauseOperandFollowing EOF
            {
             before(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;

             after(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandFollowing"


    // $ANTLR start "ruleWindowingClauseOperandFollowing"
    // InternalSqlParser.g:1909:1: ruleWindowingClauseOperandFollowing : ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandFollowing() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1913:5: ( ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) )
            // InternalSqlParser.g:1914:1: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            {
            // InternalSqlParser.g:1914:1: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            // InternalSqlParser.g:1915:1: ( rule__WindowingClauseOperandFollowing__Group__0 )
            {
             before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 
            // InternalSqlParser.g:1916:1: ( rule__WindowingClauseOperandFollowing__Group__0 )
            // InternalSqlParser.g:1916:2: rule__WindowingClauseOperandFollowing__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandFollowing"


    // $ANTLR start "entryRuleWindowingClauseOperandPreceding"
    // InternalSqlParser.g:1928:1: entryRuleWindowingClauseOperandPreceding : ruleWindowingClauseOperandPreceding EOF ;
    public final void entryRuleWindowingClauseOperandPreceding() throws RecognitionException {
        try {
            // InternalSqlParser.g:1929:1: ( ruleWindowingClauseOperandPreceding EOF )
            // InternalSqlParser.g:1930:1: ruleWindowingClauseOperandPreceding EOF
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;

             after(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandPreceding"


    // $ANTLR start "ruleWindowingClauseOperandPreceding"
    // InternalSqlParser.g:1937:1: ruleWindowingClauseOperandPreceding : ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandPreceding() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1941:5: ( ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) )
            // InternalSqlParser.g:1942:1: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            {
            // InternalSqlParser.g:1942:1: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            // InternalSqlParser.g:1943:1: ( rule__WindowingClauseOperandPreceding__Group__0 )
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 
            // InternalSqlParser.g:1944:1: ( rule__WindowingClauseOperandPreceding__Group__0 )
            // InternalSqlParser.g:1944:2: rule__WindowingClauseOperandPreceding__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandPreceding"


    // $ANTLR start "entryRuleOrderByClause"
    // InternalSqlParser.g:1956:1: entryRuleOrderByClause : ruleOrderByClause EOF ;
    public final void entryRuleOrderByClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:1957:1: ( ruleOrderByClause EOF )
            // InternalSqlParser.g:1958:1: ruleOrderByClause EOF
            {
             before(grammarAccess.getOrderByClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleOrderByClause();

            state._fsp--;

             after(grammarAccess.getOrderByClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClause"


    // $ANTLR start "ruleOrderByClause"
    // InternalSqlParser.g:1965:1: ruleOrderByClause : ( ( rule__OrderByClause__Group__0 ) ) ;
    public final void ruleOrderByClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1969:5: ( ( ( rule__OrderByClause__Group__0 ) ) )
            // InternalSqlParser.g:1970:1: ( ( rule__OrderByClause__Group__0 ) )
            {
            // InternalSqlParser.g:1970:1: ( ( rule__OrderByClause__Group__0 ) )
            // InternalSqlParser.g:1971:1: ( rule__OrderByClause__Group__0 )
            {
             before(grammarAccess.getOrderByClauseAccess().getGroup()); 
            // InternalSqlParser.g:1972:1: ( rule__OrderByClause__Group__0 )
            // InternalSqlParser.g:1972:2: rule__OrderByClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClause"


    // $ANTLR start "entryRuleOrderByClauseArgs"
    // InternalSqlParser.g:1984:1: entryRuleOrderByClauseArgs : ruleOrderByClauseArgs EOF ;
    public final void entryRuleOrderByClauseArgs() throws RecognitionException {
        try {
            // InternalSqlParser.g:1985:1: ( ruleOrderByClauseArgs EOF )
            // InternalSqlParser.g:1986:1: ruleOrderByClauseArgs EOF
            {
             before(grammarAccess.getOrderByClauseArgsRule()); 
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArgs();

            state._fsp--;

             after(grammarAccess.getOrderByClauseArgsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArgs"


    // $ANTLR start "ruleOrderByClauseArgs"
    // InternalSqlParser.g:1993:1: ruleOrderByClauseArgs : ( ( rule__OrderByClauseArgs__Group__0 ) ) ;
    public final void ruleOrderByClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1997:5: ( ( ( rule__OrderByClauseArgs__Group__0 ) ) )
            // InternalSqlParser.g:1998:1: ( ( rule__OrderByClauseArgs__Group__0 ) )
            {
            // InternalSqlParser.g:1998:1: ( ( rule__OrderByClauseArgs__Group__0 ) )
            // InternalSqlParser.g:1999:1: ( rule__OrderByClauseArgs__Group__0 )
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 
            // InternalSqlParser.g:2000:1: ( rule__OrderByClauseArgs__Group__0 )
            // InternalSqlParser.g:2000:2: rule__OrderByClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArgs"


    // $ANTLR start "entryRuleOrderByClauseArg"
    // InternalSqlParser.g:2012:1: entryRuleOrderByClauseArg : ruleOrderByClauseArg EOF ;
    public final void entryRuleOrderByClauseArg() throws RecognitionException {
        try {
            // InternalSqlParser.g:2013:1: ( ruleOrderByClauseArg EOF )
            // InternalSqlParser.g:2014:1: ruleOrderByClauseArg EOF
            {
             before(grammarAccess.getOrderByClauseArgRule()); 
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArg();

            state._fsp--;

             after(grammarAccess.getOrderByClauseArgRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArg"


    // $ANTLR start "ruleOrderByClauseArg"
    // InternalSqlParser.g:2021:1: ruleOrderByClauseArg : ( ( rule__OrderByClauseArg__Group__0 ) ) ;
    public final void ruleOrderByClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2025:5: ( ( ( rule__OrderByClauseArg__Group__0 ) ) )
            // InternalSqlParser.g:2026:1: ( ( rule__OrderByClauseArg__Group__0 ) )
            {
            // InternalSqlParser.g:2026:1: ( ( rule__OrderByClauseArg__Group__0 ) )
            // InternalSqlParser.g:2027:1: ( rule__OrderByClauseArg__Group__0 )
            {
             before(grammarAccess.getOrderByClauseArgAccess().getGroup()); 
            // InternalSqlParser.g:2028:1: ( rule__OrderByClauseArg__Group__0 )
            // InternalSqlParser.g:2028:2: rule__OrderByClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseArgAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArg"


    // $ANTLR start "entryRuleQueryPartitionClause"
    // InternalSqlParser.g:2040:1: entryRuleQueryPartitionClause : ruleQueryPartitionClause EOF ;
    public final void entryRuleQueryPartitionClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:2041:1: ( ruleQueryPartitionClause EOF )
            // InternalSqlParser.g:2042:1: ruleQueryPartitionClause EOF
            {
             before(grammarAccess.getQueryPartitionClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleQueryPartitionClause();

            state._fsp--;

             after(grammarAccess.getQueryPartitionClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQueryPartitionClause"


    // $ANTLR start "ruleQueryPartitionClause"
    // InternalSqlParser.g:2049:1: ruleQueryPartitionClause : ( ( rule__QueryPartitionClause__Group__0 ) ) ;
    public final void ruleQueryPartitionClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2053:5: ( ( ( rule__QueryPartitionClause__Group__0 ) ) )
            // InternalSqlParser.g:2054:1: ( ( rule__QueryPartitionClause__Group__0 ) )
            {
            // InternalSqlParser.g:2054:1: ( ( rule__QueryPartitionClause__Group__0 ) )
            // InternalSqlParser.g:2055:1: ( rule__QueryPartitionClause__Group__0 )
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 
            // InternalSqlParser.g:2056:1: ( rule__QueryPartitionClause__Group__0 )
            // InternalSqlParser.g:2056:2: rule__QueryPartitionClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQueryPartitionClause"


    // $ANTLR start "entryRuleAnalyticExprArgs"
    // InternalSqlParser.g:2068:1: entryRuleAnalyticExprArgs : ruleAnalyticExprArgs EOF ;
    public final void entryRuleAnalyticExprArgs() throws RecognitionException {
        try {
            // InternalSqlParser.g:2069:1: ( ruleAnalyticExprArgs EOF )
            // InternalSqlParser.g:2070:1: ruleAnalyticExprArgs EOF
            {
             before(grammarAccess.getAnalyticExprArgsRule()); 
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArgs();

            state._fsp--;

             after(grammarAccess.getAnalyticExprArgsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArgs"


    // $ANTLR start "ruleAnalyticExprArgs"
    // InternalSqlParser.g:2077:1: ruleAnalyticExprArgs : ( ( rule__AnalyticExprArgs__Group__0 ) ) ;
    public final void ruleAnalyticExprArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2081:5: ( ( ( rule__AnalyticExprArgs__Group__0 ) ) )
            // InternalSqlParser.g:2082:1: ( ( rule__AnalyticExprArgs__Group__0 ) )
            {
            // InternalSqlParser.g:2082:1: ( ( rule__AnalyticExprArgs__Group__0 ) )
            // InternalSqlParser.g:2083:1: ( rule__AnalyticExprArgs__Group__0 )
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 
            // InternalSqlParser.g:2084:1: ( rule__AnalyticExprArgs__Group__0 )
            // InternalSqlParser.g:2084:2: rule__AnalyticExprArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArgs"


    // $ANTLR start "entryRuleAnalyticExprArg"
    // InternalSqlParser.g:2096:1: entryRuleAnalyticExprArg : ruleAnalyticExprArg EOF ;
    public final void entryRuleAnalyticExprArg() throws RecognitionException {
        try {
            // InternalSqlParser.g:2097:1: ( ruleAnalyticExprArg EOF )
            // InternalSqlParser.g:2098:1: ruleAnalyticExprArg EOF
            {
             before(grammarAccess.getAnalyticExprArgRule()); 
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArg();

            state._fsp--;

             after(grammarAccess.getAnalyticExprArgRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArg"


    // $ANTLR start "ruleAnalyticExprArg"
    // InternalSqlParser.g:2105:1: ruleAnalyticExprArg : ( ( rule__AnalyticExprArg__Group__0 ) ) ;
    public final void ruleAnalyticExprArg() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2109:5: ( ( ( rule__AnalyticExprArg__Group__0 ) ) )
            // InternalSqlParser.g:2110:1: ( ( rule__AnalyticExprArg__Group__0 ) )
            {
            // InternalSqlParser.g:2110:1: ( ( rule__AnalyticExprArg__Group__0 ) )
            // InternalSqlParser.g:2111:1: ( rule__AnalyticExprArg__Group__0 )
            {
             before(grammarAccess.getAnalyticExprArgAccess().getGroup()); 
            // InternalSqlParser.g:2112:1: ( rule__AnalyticExprArg__Group__0 )
            // InternalSqlParser.g:2112:2: rule__AnalyticExprArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticExprArgAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArg"


    // $ANTLR start "entryRuleOpFunctionArg"
    // InternalSqlParser.g:2124:1: entryRuleOpFunctionArg : ruleOpFunctionArg EOF ;
    public final void entryRuleOpFunctionArg() throws RecognitionException {
        try {
            // InternalSqlParser.g:2125:1: ( ruleOpFunctionArg EOF )
            // InternalSqlParser.g:2126:1: ruleOpFunctionArg EOF
            {
             before(grammarAccess.getOpFunctionArgRule()); 
            pushFollow(FOLLOW_1);
            ruleOpFunctionArg();

            state._fsp--;

             after(grammarAccess.getOpFunctionArgRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArg"


    // $ANTLR start "ruleOpFunctionArg"
    // InternalSqlParser.g:2133:1: ruleOpFunctionArg : ( ( rule__OpFunctionArg__Group__0 ) ) ;
    public final void ruleOpFunctionArg() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2137:5: ( ( ( rule__OpFunctionArg__Group__0 ) ) )
            // InternalSqlParser.g:2138:1: ( ( rule__OpFunctionArg__Group__0 ) )
            {
            // InternalSqlParser.g:2138:1: ( ( rule__OpFunctionArg__Group__0 ) )
            // InternalSqlParser.g:2139:1: ( rule__OpFunctionArg__Group__0 )
            {
             before(grammarAccess.getOpFunctionArgAccess().getGroup()); 
            // InternalSqlParser.g:2140:1: ( rule__OpFunctionArg__Group__0 )
            // InternalSqlParser.g:2140:2: rule__OpFunctionArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArg"


    // $ANTLR start "entryRuleOpFunctionArgOperand"
    // InternalSqlParser.g:2152:1: entryRuleOpFunctionArgOperand : ruleOpFunctionArgOperand EOF ;
    public final void entryRuleOpFunctionArgOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2153:1: ( ruleOpFunctionArgOperand EOF )
            // InternalSqlParser.g:2154:1: ruleOpFunctionArgOperand EOF
            {
             before(grammarAccess.getOpFunctionArgOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgOperand();

            state._fsp--;

             after(grammarAccess.getOpFunctionArgOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgOperand"


    // $ANTLR start "ruleOpFunctionArgOperand"
    // InternalSqlParser.g:2161:1: ruleOpFunctionArgOperand : ( ( rule__OpFunctionArgOperand__OpAssignment ) ) ;
    public final void ruleOpFunctionArgOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2165:5: ( ( ( rule__OpFunctionArgOperand__OpAssignment ) ) )
            // InternalSqlParser.g:2166:1: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            {
            // InternalSqlParser.g:2166:1: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            // InternalSqlParser.g:2167:1: ( rule__OpFunctionArgOperand__OpAssignment )
            {
             before(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 
            // InternalSqlParser.g:2168:1: ( rule__OpFunctionArgOperand__OpAssignment )
            // InternalSqlParser.g:2168:2: rule__OpFunctionArgOperand__OpAssignment
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAssignment();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgOperand"


    // $ANTLR start "entryRuleOpFunctionCast"
    // InternalSqlParser.g:2180:1: entryRuleOpFunctionCast : ruleOpFunctionCast EOF ;
    public final void entryRuleOpFunctionCast() throws RecognitionException {
        try {
            // InternalSqlParser.g:2181:1: ( ruleOpFunctionCast EOF )
            // InternalSqlParser.g:2182:1: ruleOpFunctionCast EOF
            {
             before(grammarAccess.getOpFunctionCastRule()); 
            pushFollow(FOLLOW_1);
            ruleOpFunctionCast();

            state._fsp--;

             after(grammarAccess.getOpFunctionCastRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionCast"


    // $ANTLR start "ruleOpFunctionCast"
    // InternalSqlParser.g:2189:1: ruleOpFunctionCast : ( ( rule__OpFunctionCast__Group__0 ) ) ;
    public final void ruleOpFunctionCast() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2193:5: ( ( ( rule__OpFunctionCast__Group__0 ) ) )
            // InternalSqlParser.g:2194:1: ( ( rule__OpFunctionCast__Group__0 ) )
            {
            // InternalSqlParser.g:2194:1: ( ( rule__OpFunctionCast__Group__0 ) )
            // InternalSqlParser.g:2195:1: ( rule__OpFunctionCast__Group__0 )
            {
             before(grammarAccess.getOpFunctionCastAccess().getGroup()); 
            // InternalSqlParser.g:2196:1: ( rule__OpFunctionCast__Group__0 )
            // InternalSqlParser.g:2196:2: rule__OpFunctionCast__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionCastAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionCast"


    // $ANTLR start "entryRuleOpFunctionArgAgregate"
    // InternalSqlParser.g:2208:1: entryRuleOpFunctionArgAgregate : ruleOpFunctionArgAgregate EOF ;
    public final void entryRuleOpFunctionArgAgregate() throws RecognitionException {
        try {
            // InternalSqlParser.g:2209:1: ( ruleOpFunctionArgAgregate EOF )
            // InternalSqlParser.g:2210:1: ruleOpFunctionArgAgregate EOF
            {
             before(grammarAccess.getOpFunctionArgAgregateRule()); 
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgAgregate();

            state._fsp--;

             after(grammarAccess.getOpFunctionArgAgregateRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgAgregate"


    // $ANTLR start "ruleOpFunctionArgAgregate"
    // InternalSqlParser.g:2217:1: ruleOpFunctionArgAgregate : ( ( rule__OpFunctionArgAgregate__Group__0 ) ) ;
    public final void ruleOpFunctionArgAgregate() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2221:5: ( ( ( rule__OpFunctionArgAgregate__Group__0 ) ) )
            // InternalSqlParser.g:2222:1: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            {
            // InternalSqlParser.g:2222:1: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            // InternalSqlParser.g:2223:1: ( rule__OpFunctionArgAgregate__Group__0 )
            {
             before(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 
            // InternalSqlParser.g:2224:1: ( rule__OpFunctionArgAgregate__Group__0 )
            // InternalSqlParser.g:2224:2: rule__OpFunctionArgAgregate__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgAgregate"


    // $ANTLR start "entryRuleXOperandFragment"
    // InternalSqlParser.g:2236:1: entryRuleXOperandFragment : ruleXOperandFragment EOF ;
    public final void entryRuleXOperandFragment() throws RecognitionException {
        try {
            // InternalSqlParser.g:2237:1: ( ruleXOperandFragment EOF )
            // InternalSqlParser.g:2238:1: ruleXOperandFragment EOF
            {
             before(grammarAccess.getXOperandFragmentRule()); 
            pushFollow(FOLLOW_1);
            ruleXOperandFragment();

            state._fsp--;

             after(grammarAccess.getXOperandFragmentRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXOperandFragment"


    // $ANTLR start "ruleXOperandFragment"
    // InternalSqlParser.g:2245:1: ruleXOperandFragment : ( ( rule__XOperandFragment__Alternatives ) ) ;
    public final void ruleXOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2249:5: ( ( ( rule__XOperandFragment__Alternatives ) ) )
            // InternalSqlParser.g:2250:1: ( ( rule__XOperandFragment__Alternatives ) )
            {
            // InternalSqlParser.g:2250:1: ( ( rule__XOperandFragment__Alternatives ) )
            // InternalSqlParser.g:2251:1: ( rule__XOperandFragment__Alternatives )
            {
             before(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 
            // InternalSqlParser.g:2252:1: ( rule__XOperandFragment__Alternatives )
            // InternalSqlParser.g:2252:2: rule__XOperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XOperandFragment__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXOperandFragment"


    // $ANTLR start "entryRuleParameterOperand"
    // InternalSqlParser.g:2264:1: entryRuleParameterOperand : ruleParameterOperand EOF ;
    public final void entryRuleParameterOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2265:1: ( ruleParameterOperand EOF )
            // InternalSqlParser.g:2266:1: ruleParameterOperand EOF
            {
             before(grammarAccess.getParameterOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleParameterOperand();

            state._fsp--;

             after(grammarAccess.getParameterOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterOperand"


    // $ANTLR start "ruleParameterOperand"
    // InternalSqlParser.g:2273:1: ruleParameterOperand : ( ( rule__ParameterOperand__PrmAssignment ) ) ;
    public final void ruleParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2277:5: ( ( ( rule__ParameterOperand__PrmAssignment ) ) )
            // InternalSqlParser.g:2278:1: ( ( rule__ParameterOperand__PrmAssignment ) )
            {
            // InternalSqlParser.g:2278:1: ( ( rule__ParameterOperand__PrmAssignment ) )
            // InternalSqlParser.g:2279:1: ( rule__ParameterOperand__PrmAssignment )
            {
             before(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 
            // InternalSqlParser.g:2280:1: ( rule__ParameterOperand__PrmAssignment )
            // InternalSqlParser.g:2280:2: rule__ParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ParameterOperand__PrmAssignment();

            state._fsp--;


            }

             after(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterOperand"


    // $ANTLR start "entryRuleExclamationParameterOperand"
    // InternalSqlParser.g:2292:1: entryRuleExclamationParameterOperand : ruleExclamationParameterOperand EOF ;
    public final void entryRuleExclamationParameterOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2293:1: ( ruleExclamationParameterOperand EOF )
            // InternalSqlParser.g:2294:1: ruleExclamationParameterOperand EOF
            {
             before(grammarAccess.getExclamationParameterOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleExclamationParameterOperand();

            state._fsp--;

             after(grammarAccess.getExclamationParameterOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclamationParameterOperand"


    // $ANTLR start "ruleExclamationParameterOperand"
    // InternalSqlParser.g:2301:1: ruleExclamationParameterOperand : ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) ;
    public final void ruleExclamationParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2305:5: ( ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) )
            // InternalSqlParser.g:2306:1: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            {
            // InternalSqlParser.g:2306:1: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            // InternalSqlParser.g:2307:1: ( rule__ExclamationParameterOperand__PrmAssignment )
            {
             before(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 
            // InternalSqlParser.g:2308:1: ( rule__ExclamationParameterOperand__PrmAssignment )
            // InternalSqlParser.g:2308:2: rule__ExclamationParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ExclamationParameterOperand__PrmAssignment();

            state._fsp--;


            }

             after(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclamationParameterOperand"


    // $ANTLR start "entryRuleColumnOperand"
    // InternalSqlParser.g:2320:1: entryRuleColumnOperand : ruleColumnOperand EOF ;
    public final void entryRuleColumnOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2321:1: ( ruleColumnOperand EOF )
            // InternalSqlParser.g:2322:1: ruleColumnOperand EOF
            {
             before(grammarAccess.getColumnOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleColumnOperand();

            state._fsp--;

             after(grammarAccess.getColumnOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOperand"


    // $ANTLR start "ruleColumnOperand"
    // InternalSqlParser.g:2329:1: ruleColumnOperand : ( ( rule__ColumnOperand__Group__0 ) ) ;
    public final void ruleColumnOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2333:5: ( ( ( rule__ColumnOperand__Group__0 ) ) )
            // InternalSqlParser.g:2334:1: ( ( rule__ColumnOperand__Group__0 ) )
            {
            // InternalSqlParser.g:2334:1: ( ( rule__ColumnOperand__Group__0 ) )
            // InternalSqlParser.g:2335:1: ( rule__ColumnOperand__Group__0 )
            {
             before(grammarAccess.getColumnOperandAccess().getGroup()); 
            // InternalSqlParser.g:2336:1: ( rule__ColumnOperand__Group__0 )
            // InternalSqlParser.g:2336:2: rule__ColumnOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getColumnOperandAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOperand"


    // $ANTLR start "entryRuleSubQueryOperand"
    // InternalSqlParser.g:2348:1: entryRuleSubQueryOperand : ruleSubQueryOperand EOF ;
    public final void entryRuleSubQueryOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2349:1: ( ruleSubQueryOperand EOF )
            // InternalSqlParser.g:2350:1: ruleSubQueryOperand EOF
            {
             before(grammarAccess.getSubQueryOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleSubQueryOperand();

            state._fsp--;

             after(grammarAccess.getSubQueryOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubQueryOperand"


    // $ANTLR start "ruleSubQueryOperand"
    // InternalSqlParser.g:2357:1: ruleSubQueryOperand : ( ( rule__SubQueryOperand__Group__0 ) ) ;
    public final void ruleSubQueryOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2361:5: ( ( ( rule__SubQueryOperand__Group__0 ) ) )
            // InternalSqlParser.g:2362:1: ( ( rule__SubQueryOperand__Group__0 ) )
            {
            // InternalSqlParser.g:2362:1: ( ( rule__SubQueryOperand__Group__0 ) )
            // InternalSqlParser.g:2363:1: ( rule__SubQueryOperand__Group__0 )
            {
             before(grammarAccess.getSubQueryOperandAccess().getGroup()); 
            // InternalSqlParser.g:2364:1: ( rule__SubQueryOperand__Group__0 )
            // InternalSqlParser.g:2364:2: rule__SubQueryOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSubQueryOperandAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubQueryOperand"


    // $ANTLR start "entryRuleScalarOperand"
    // InternalSqlParser.g:2376:1: entryRuleScalarOperand : ruleScalarOperand EOF ;
    public final void entryRuleScalarOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2377:1: ( ruleScalarOperand EOF )
            // InternalSqlParser.g:2378:1: ruleScalarOperand EOF
            {
             before(grammarAccess.getScalarOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleScalarOperand();

            state._fsp--;

             after(grammarAccess.getScalarOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarOperand"


    // $ANTLR start "ruleScalarOperand"
    // InternalSqlParser.g:2385:1: ruleScalarOperand : ( ( rule__ScalarOperand__Alternatives ) ) ;
    public final void ruleScalarOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2389:5: ( ( ( rule__ScalarOperand__Alternatives ) ) )
            // InternalSqlParser.g:2390:1: ( ( rule__ScalarOperand__Alternatives ) )
            {
            // InternalSqlParser.g:2390:1: ( ( rule__ScalarOperand__Alternatives ) )
            // InternalSqlParser.g:2391:1: ( rule__ScalarOperand__Alternatives )
            {
             before(grammarAccess.getScalarOperandAccess().getAlternatives()); 
            // InternalSqlParser.g:2392:1: ( rule__ScalarOperand__Alternatives )
            // InternalSqlParser.g:2392:2: rule__ScalarOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarOperand__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getScalarOperandAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarOperand"


    // $ANTLR start "entryRuleScalarNumberOperand"
    // InternalSqlParser.g:2404:1: entryRuleScalarNumberOperand : ruleScalarNumberOperand EOF ;
    public final void entryRuleScalarNumberOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2405:1: ( ruleScalarNumberOperand EOF )
            // InternalSqlParser.g:2406:1: ruleScalarNumberOperand EOF
            {
             before(grammarAccess.getScalarNumberOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleScalarNumberOperand();

            state._fsp--;

             after(grammarAccess.getScalarNumberOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarNumberOperand"


    // $ANTLR start "ruleScalarNumberOperand"
    // InternalSqlParser.g:2413:1: ruleScalarNumberOperand : ( ( rule__ScalarNumberOperand__Alternatives ) ) ;
    public final void ruleScalarNumberOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2417:5: ( ( ( rule__ScalarNumberOperand__Alternatives ) ) )
            // InternalSqlParser.g:2418:1: ( ( rule__ScalarNumberOperand__Alternatives ) )
            {
            // InternalSqlParser.g:2418:1: ( ( rule__ScalarNumberOperand__Alternatives ) )
            // InternalSqlParser.g:2419:1: ( rule__ScalarNumberOperand__Alternatives )
            {
             before(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 
            // InternalSqlParser.g:2420:1: ( rule__ScalarNumberOperand__Alternatives )
            // InternalSqlParser.g:2420:2: rule__ScalarNumberOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarNumberOperand__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarNumberOperand"


    // $ANTLR start "entryRuleSQLCASE"
    // InternalSqlParser.g:2432:1: entryRuleSQLCASE : ruleSQLCASE EOF ;
    public final void entryRuleSQLCASE() throws RecognitionException {
        try {
            // InternalSqlParser.g:2433:1: ( ruleSQLCASE EOF )
            // InternalSqlParser.g:2434:1: ruleSQLCASE EOF
            {
             before(grammarAccess.getSQLCASERule()); 
            pushFollow(FOLLOW_1);
            ruleSQLCASE();

            state._fsp--;

             after(grammarAccess.getSQLCASERule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCASE"


    // $ANTLR start "ruleSQLCASE"
    // InternalSqlParser.g:2441:1: ruleSQLCASE : ( ( rule__SQLCASE__Group__0 ) ) ;
    public final void ruleSQLCASE() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2445:5: ( ( ( rule__SQLCASE__Group__0 ) ) )
            // InternalSqlParser.g:2446:1: ( ( rule__SQLCASE__Group__0 ) )
            {
            // InternalSqlParser.g:2446:1: ( ( rule__SQLCASE__Group__0 ) )
            // InternalSqlParser.g:2447:1: ( rule__SQLCASE__Group__0 )
            {
             before(grammarAccess.getSQLCASEAccess().getGroup()); 
            // InternalSqlParser.g:2448:1: ( rule__SQLCASE__Group__0 )
            // InternalSqlParser.g:2448:2: rule__SQLCASE__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSQLCASEAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCASE"


    // $ANTLR start "entryRuleSQLCaseWhens"
    // InternalSqlParser.g:2460:1: entryRuleSQLCaseWhens : ruleSQLCaseWhens EOF ;
    public final void entryRuleSQLCaseWhens() throws RecognitionException {
        try {
            // InternalSqlParser.g:2461:1: ( ruleSQLCaseWhens EOF )
            // InternalSqlParser.g:2462:1: ruleSQLCaseWhens EOF
            {
             before(grammarAccess.getSQLCaseWhensRule()); 
            pushFollow(FOLLOW_1);
            ruleSQLCaseWhens();

            state._fsp--;

             after(grammarAccess.getSQLCaseWhensRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCaseWhens"


    // $ANTLR start "ruleSQLCaseWhens"
    // InternalSqlParser.g:2469:1: ruleSQLCaseWhens : ( ( rule__SQLCaseWhens__Group__0 ) ) ;
    public final void ruleSQLCaseWhens() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2473:5: ( ( ( rule__SQLCaseWhens__Group__0 ) ) )
            // InternalSqlParser.g:2474:1: ( ( rule__SQLCaseWhens__Group__0 ) )
            {
            // InternalSqlParser.g:2474:1: ( ( rule__SQLCaseWhens__Group__0 ) )
            // InternalSqlParser.g:2475:1: ( rule__SQLCaseWhens__Group__0 )
            {
             before(grammarAccess.getSQLCaseWhensAccess().getGroup()); 
            // InternalSqlParser.g:2476:1: ( rule__SQLCaseWhens__Group__0 )
            // InternalSqlParser.g:2476:2: rule__SQLCaseWhens__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSQLCaseWhensAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCaseWhens"


    // $ANTLR start "entryRuleSqlCaseWhen"
    // InternalSqlParser.g:2488:1: entryRuleSqlCaseWhen : ruleSqlCaseWhen EOF ;
    public final void entryRuleSqlCaseWhen() throws RecognitionException {
        try {
            // InternalSqlParser.g:2489:1: ( ruleSqlCaseWhen EOF )
            // InternalSqlParser.g:2490:1: ruleSqlCaseWhen EOF
            {
             before(grammarAccess.getSqlCaseWhenRule()); 
            pushFollow(FOLLOW_1);
            ruleSqlCaseWhen();

            state._fsp--;

             after(grammarAccess.getSqlCaseWhenRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSqlCaseWhen"


    // $ANTLR start "ruleSqlCaseWhen"
    // InternalSqlParser.g:2497:1: ruleSqlCaseWhen : ( ( rule__SqlCaseWhen__Group__0 ) ) ;
    public final void ruleSqlCaseWhen() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2501:5: ( ( ( rule__SqlCaseWhen__Group__0 ) ) )
            // InternalSqlParser.g:2502:1: ( ( rule__SqlCaseWhen__Group__0 ) )
            {
            // InternalSqlParser.g:2502:1: ( ( rule__SqlCaseWhen__Group__0 ) )
            // InternalSqlParser.g:2503:1: ( rule__SqlCaseWhen__Group__0 )
            {
             before(grammarAccess.getSqlCaseWhenAccess().getGroup()); 
            // InternalSqlParser.g:2504:1: ( rule__SqlCaseWhen__Group__0 )
            // InternalSqlParser.g:2504:2: rule__SqlCaseWhen__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSqlCaseWhenAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSqlCaseWhen"


    // $ANTLR start "entryRuleJoinType"
    // InternalSqlParser.g:2516:1: entryRuleJoinType : ruleJoinType EOF ;
    public final void entryRuleJoinType() throws RecognitionException {
        try {
            // InternalSqlParser.g:2517:1: ( ruleJoinType EOF )
            // InternalSqlParser.g:2518:1: ruleJoinType EOF
            {
             before(grammarAccess.getJoinTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleJoinType();

            state._fsp--;

             after(grammarAccess.getJoinTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinType"


    // $ANTLR start "ruleJoinType"
    // InternalSqlParser.g:2525:1: ruleJoinType : ( ( rule__JoinType__Group__0 ) ) ;
    public final void ruleJoinType() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2529:5: ( ( ( rule__JoinType__Group__0 ) ) )
            // InternalSqlParser.g:2530:1: ( ( rule__JoinType__Group__0 ) )
            {
            // InternalSqlParser.g:2530:1: ( ( rule__JoinType__Group__0 ) )
            // InternalSqlParser.g:2531:1: ( rule__JoinType__Group__0 )
            {
             before(grammarAccess.getJoinTypeAccess().getGroup()); 
            // InternalSqlParser.g:2532:1: ( rule__JoinType__Group__0 )
            // InternalSqlParser.g:2532:2: rule__JoinType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getJoinTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinType"


    // $ANTLR start "entryRuleDBID"
    // InternalSqlParser.g:2544:1: entryRuleDBID : ruleDBID EOF ;
    public final void entryRuleDBID() throws RecognitionException {
        try {
            // InternalSqlParser.g:2545:1: ( ruleDBID EOF )
            // InternalSqlParser.g:2546:1: ruleDBID EOF
            {
             before(grammarAccess.getDBIDRule()); 
            pushFollow(FOLLOW_1);
            ruleDBID();

            state._fsp--;

             after(grammarAccess.getDBIDRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDBID"


    // $ANTLR start "ruleDBID"
    // InternalSqlParser.g:2553:1: ruleDBID : ( ( rule__DBID__Alternatives ) ) ;
    public final void ruleDBID() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2557:5: ( ( ( rule__DBID__Alternatives ) ) )
            // InternalSqlParser.g:2558:1: ( ( rule__DBID__Alternatives ) )
            {
            // InternalSqlParser.g:2558:1: ( ( rule__DBID__Alternatives ) )
            // InternalSqlParser.g:2559:1: ( rule__DBID__Alternatives )
            {
             before(grammarAccess.getDBIDAccess().getAlternatives()); 
            // InternalSqlParser.g:2560:1: ( rule__DBID__Alternatives )
            // InternalSqlParser.g:2560:2: rule__DBID__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DBID__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getDBIDAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDBID"


    // $ANTLR start "entryRuleStringOperand"
    // InternalSqlParser.g:2572:1: entryRuleStringOperand : ruleStringOperand EOF ;
    public final void entryRuleStringOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2573:1: ( ruleStringOperand EOF )
            // InternalSqlParser.g:2574:1: ruleStringOperand EOF
            {
             before(grammarAccess.getStringOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleStringOperand();

            state._fsp--;

             after(grammarAccess.getStringOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringOperand"


    // $ANTLR start "ruleStringOperand"
    // InternalSqlParser.g:2581:1: ruleStringOperand : ( RULE_STRING_ ) ;
    public final void ruleStringOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2585:5: ( ( RULE_STRING_ ) )
            // InternalSqlParser.g:2586:1: ( RULE_STRING_ )
            {
            // InternalSqlParser.g:2586:1: ( RULE_STRING_ )
            // InternalSqlParser.g:2587:1: RULE_STRING_
            {
             before(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 
            match(input,RULE_STRING_,FOLLOW_2); 
             after(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringOperand"


    // $ANTLR start "entryRuleFNAME"
    // InternalSqlParser.g:2600:1: entryRuleFNAME : ruleFNAME EOF ;
    public final void entryRuleFNAME() throws RecognitionException {
        try {
            // InternalSqlParser.g:2601:1: ( ruleFNAME EOF )
            // InternalSqlParser.g:2602:1: ruleFNAME EOF
            {
             before(grammarAccess.getFNAMERule()); 
            pushFollow(FOLLOW_1);
            ruleFNAME();

            state._fsp--;

             after(grammarAccess.getFNAMERule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFNAME"


    // $ANTLR start "ruleFNAME"
    // InternalSqlParser.g:2609:1: ruleFNAME : ( ( rule__FNAME__Group__0 ) ) ;
    public final void ruleFNAME() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2613:5: ( ( ( rule__FNAME__Group__0 ) ) )
            // InternalSqlParser.g:2614:1: ( ( rule__FNAME__Group__0 ) )
            {
            // InternalSqlParser.g:2614:1: ( ( rule__FNAME__Group__0 ) )
            // InternalSqlParser.g:2615:1: ( rule__FNAME__Group__0 )
            {
             before(grammarAccess.getFNAMEAccess().getGroup()); 
            // InternalSqlParser.g:2616:1: ( rule__FNAME__Group__0 )
            // InternalSqlParser.g:2616:2: rule__FNAME__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFNAMEAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFNAME"


    // $ANTLR start "entryRuleIntegerValue"
    // InternalSqlParser.g:2628:1: entryRuleIntegerValue : ruleIntegerValue EOF ;
    public final void entryRuleIntegerValue() throws RecognitionException {
        try {
            // InternalSqlParser.g:2629:1: ( ruleIntegerValue EOF )
            // InternalSqlParser.g:2630:1: ruleIntegerValue EOF
            {
             before(grammarAccess.getIntegerValueRule()); 
            pushFollow(FOLLOW_1);
            ruleIntegerValue();

            state._fsp--;

             after(grammarAccess.getIntegerValueRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValue"


    // $ANTLR start "ruleIntegerValue"
    // InternalSqlParser.g:2637:1: ruleIntegerValue : ( ( rule__IntegerValue__IntegerAssignment ) ) ;
    public final void ruleIntegerValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2641:5: ( ( ( rule__IntegerValue__IntegerAssignment ) ) )
            // InternalSqlParser.g:2642:1: ( ( rule__IntegerValue__IntegerAssignment ) )
            {
            // InternalSqlParser.g:2642:1: ( ( rule__IntegerValue__IntegerAssignment ) )
            // InternalSqlParser.g:2643:1: ( rule__IntegerValue__IntegerAssignment )
            {
             before(grammarAccess.getIntegerValueAccess().getIntegerAssignment()); 
            // InternalSqlParser.g:2644:1: ( rule__IntegerValue__IntegerAssignment )
            // InternalSqlParser.g:2644:2: rule__IntegerValue__IntegerAssignment
            {
            pushFollow(FOLLOW_2);
            rule__IntegerValue__IntegerAssignment();

            state._fsp--;


            }

             after(grammarAccess.getIntegerValueAccess().getIntegerAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValue"


    // $ANTLR start "ruleEXTRACT_VALUES"
    // InternalSqlParser.g:2657:1: ruleEXTRACT_VALUES : ( ( rule__EXTRACT_VALUES__Alternatives ) ) ;
    public final void ruleEXTRACT_VALUES() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2661:1: ( ( ( rule__EXTRACT_VALUES__Alternatives ) ) )
            // InternalSqlParser.g:2662:1: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            {
            // InternalSqlParser.g:2662:1: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            // InternalSqlParser.g:2663:1: ( rule__EXTRACT_VALUES__Alternatives )
            {
             before(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 
            // InternalSqlParser.g:2664:1: ( rule__EXTRACT_VALUES__Alternatives )
            // InternalSqlParser.g:2664:2: rule__EXTRACT_VALUES__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EXTRACT_VALUES__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEXTRACT_VALUES"


    // $ANTLR start "ruleXFunction"
    // InternalSqlParser.g:2676:1: ruleXFunction : ( ( rule__XFunction__Alternatives ) ) ;
    public final void ruleXFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2680:1: ( ( ( rule__XFunction__Alternatives ) ) )
            // InternalSqlParser.g:2681:1: ( ( rule__XFunction__Alternatives ) )
            {
            // InternalSqlParser.g:2681:1: ( ( rule__XFunction__Alternatives ) )
            // InternalSqlParser.g:2682:1: ( rule__XFunction__Alternatives )
            {
             before(grammarAccess.getXFunctionAccess().getAlternatives()); 
            // InternalSqlParser.g:2683:1: ( rule__XFunction__Alternatives )
            // InternalSqlParser.g:2683:2: rule__XFunction__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XFunction__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getXFunctionAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXFunction"


    // $ANTLR start "rule__FetchFirst__RowAlternatives_1_0"
    // InternalSqlParser.g:2694:1: rule__FetchFirst__RowAlternatives_1_0 : ( ( ROW ) | ( ROWS ) );
    public final void rule__FetchFirst__RowAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2698:1: ( ( ROW ) | ( ROWS ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==ROW) ) {
                alt1=1;
            }
            else if ( (LA1_0==ROWS) ) {
                alt1=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalSqlParser.g:2699:1: ( ROW )
                    {
                    // InternalSqlParser.g:2699:1: ( ROW )
                    // InternalSqlParser.g:2700:1: ROW
                    {
                     before(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 
                    match(input,ROW,FOLLOW_2); 
                     after(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2707:6: ( ROWS )
                    {
                    // InternalSqlParser.g:2707:6: ( ROWS )
                    // InternalSqlParser.g:2708:1: ROWS
                    {
                     before(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 
                    match(input,ROWS,FOLLOW_2); 
                     after(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAlternatives_1_0"


    // $ANTLR start "rule__Limit__Alternatives"
    // InternalSqlParser.g:2720:1: rule__Limit__Alternatives : ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) );
    public final void rule__Limit__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2724:1: ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==ALL) ) {
                alt2=1;
            }
            else if ( (LA2_0==RULE_UNSIGNED) ) {
                alt2=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSqlParser.g:2725:1: ( ( rule__Limit__Group_0__0 ) )
                    {
                    // InternalSqlParser.g:2725:1: ( ( rule__Limit__Group_0__0 ) )
                    // InternalSqlParser.g:2726:1: ( rule__Limit__Group_0__0 )
                    {
                     before(grammarAccess.getLimitAccess().getGroup_0()); 
                    // InternalSqlParser.g:2727:1: ( rule__Limit__Group_0__0 )
                    // InternalSqlParser.g:2727:2: rule__Limit__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLimitAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2731:6: ( ( rule__Limit__Group_1__0 ) )
                    {
                    // InternalSqlParser.g:2731:6: ( ( rule__Limit__Group_1__0 ) )
                    // InternalSqlParser.g:2732:1: ( rule__Limit__Group_1__0 )
                    {
                     before(grammarAccess.getLimitAccess().getGroup_1()); 
                    // InternalSqlParser.g:2733:1: ( rule__Limit__Group_1__0 )
                    // InternalSqlParser.g:2733:2: rule__Limit__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLimitAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Alternatives"


    // $ANTLR start "rule__SelectSubSet__OpAlternatives_0_0"
    // InternalSqlParser.g:2742:1: rule__SelectSubSet__OpAlternatives_0_0 : ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) );
    public final void rule__SelectSubSet__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2746:1: ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) )
            int alt3=4;
            switch ( input.LA(1) ) {
            case UNION:
                {
                alt3=1;
                }
                break;
            case INTERSECT:
                {
                alt3=2;
                }
                break;
            case MINUS:
                {
                alt3=3;
                }
                break;
            case EXCEPT:
                {
                alt3=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalSqlParser.g:2747:1: ( UNION )
                    {
                    // InternalSqlParser.g:2747:1: ( UNION )
                    // InternalSqlParser.g:2748:1: UNION
                    {
                     before(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 
                    match(input,UNION,FOLLOW_2); 
                     after(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2755:6: ( INTERSECT )
                    {
                    // InternalSqlParser.g:2755:6: ( INTERSECT )
                    // InternalSqlParser.g:2756:1: INTERSECT
                    {
                     before(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 
                    match(input,INTERSECT,FOLLOW_2); 
                     after(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:2763:6: ( MINUS )
                    {
                    // InternalSqlParser.g:2763:6: ( MINUS )
                    // InternalSqlParser.g:2764:1: MINUS
                    {
                     before(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 
                    match(input,MINUS,FOLLOW_2); 
                     after(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:2771:6: ( EXCEPT )
                    {
                    // InternalSqlParser.g:2771:6: ( EXCEPT )
                    // InternalSqlParser.g:2772:1: EXCEPT
                    {
                     before(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 
                    match(input,EXCEPT,FOLLOW_2); 
                     after(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAlternatives_0_0"


    // $ANTLR start "rule__Select__Alternatives_2_1"
    // InternalSqlParser.g:2784:1: rule__Select__Alternatives_2_1 : ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) );
    public final void rule__Select__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2788:1: ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_INT) ) {
                alt4=1;
            }
            else if ( (LA4_0==RULE_SIGNED_DOUBLE) ) {
                alt4=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSqlParser.g:2789:1: ( RULE_INT )
                    {
                    // InternalSqlParser.g:2789:1: ( RULE_INT )
                    // InternalSqlParser.g:2790:1: RULE_INT
                    {
                     before(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 
                    match(input,RULE_INT,FOLLOW_2); 
                     after(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2795:6: ( RULE_SIGNED_DOUBLE )
                    {
                    // InternalSqlParser.g:2795:6: ( RULE_SIGNED_DOUBLE )
                    // InternalSqlParser.g:2796:1: RULE_SIGNED_DOUBLE
                    {
                     before(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 
                    match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); 
                     after(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Alternatives_2_1"


    // $ANTLR start "rule__ColumnOrAlias__Alternatives"
    // InternalSqlParser.g:2806:1: rule__ColumnOrAlias__Alternatives : ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) );
    public final void rule__ColumnOrAlias__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2810:1: ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) )
            int alt5=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA5_1 = input.LA(2);

                if ( (LA5_1==EOF||LA5_1==FROM||LA5_1==LeftParenthesisPlusSignRightParenthesis||LA5_1==AS||(LA5_1>=VerticalLineVerticalLine && LA5_1<=HyphenMinus)||LA5_1==Solidus||LA5_1==RULE_STAR||(LA5_1>=RULE_STRING && LA5_1<=RULE_ID)) ) {
                    alt5=1;
                }
                else if ( (LA5_1==FullStop) ) {
                    int LA5_6 = input.LA(3);

                    if ( ((LA5_6>=RULE_STRING && LA5_6<=RULE_ID)) ) {
                        alt5=1;
                    }
                    else if ( (LA5_6==RULE_STAR) ) {
                        alt5=3;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 6, input);

                        throw nvae;
                    }
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DBNAME:
                {
                int LA5_2 = input.LA(2);

                if ( (LA5_2==FullStop) ) {
                    int LA5_6 = input.LA(3);

                    if ( ((LA5_6>=RULE_STRING && LA5_6<=RULE_ID)) ) {
                        alt5=1;
                    }
                    else if ( (LA5_6==RULE_STAR) ) {
                        alt5=3;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA5_2==EOF||LA5_2==FROM||LA5_2==LeftParenthesisPlusSignRightParenthesis||LA5_2==AS||LA5_2==VerticalLineVerticalLine||(LA5_2>=RightParenthesis && LA5_2<=HyphenMinus)||LA5_2==Solidus||LA5_2==RULE_STAR||(LA5_2>=RULE_STRING && LA5_2<=RULE_ID)) ) {
                    alt5=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
                {
                int LA5_3 = input.LA(2);

                if ( (LA5_3==FullStop) ) {
                    int LA5_6 = input.LA(3);

                    if ( ((LA5_6>=RULE_STRING && LA5_6<=RULE_ID)) ) {
                        alt5=1;
                    }
                    else if ( (LA5_6==RULE_STAR) ) {
                        alt5=3;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA5_3==EOF||LA5_3==FROM||LA5_3==LeftParenthesisPlusSignRightParenthesis||LA5_3==AS||LA5_3==VerticalLineVerticalLine||(LA5_3>=RightParenthesis && LA5_3<=HyphenMinus)||LA5_3==Solidus||LA5_3==RULE_STAR||(LA5_3>=RULE_STRING && LA5_3<=RULE_ID)) ) {
                    alt5=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 3, input);

                    throw nvae;
                }
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt5=1;
                }
                break;
            case RULE_STAR:
                {
                alt5=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalSqlParser.g:2811:1: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    {
                    // InternalSqlParser.g:2811:1: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    // InternalSqlParser.g:2812:1: ( rule__ColumnOrAlias__Group_0__0 )
                    {
                     before(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 
                    // InternalSqlParser.g:2813:1: ( rule__ColumnOrAlias__Group_0__0 )
                    // InternalSqlParser.g:2813:2: rule__ColumnOrAlias__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2817:6: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    {
                    // InternalSqlParser.g:2817:6: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    // InternalSqlParser.g:2818:1: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    {
                     before(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 
                    // InternalSqlParser.g:2819:1: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    // InternalSqlParser.g:2819:2: rule__ColumnOrAlias__AllColsAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AllColsAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:2823:6: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    {
                    // InternalSqlParser.g:2823:6: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    // InternalSqlParser.g:2824:1: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    {
                     before(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 
                    // InternalSqlParser.g:2825:1: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    // InternalSqlParser.g:2825:2: rule__ColumnOrAlias__DbAllColsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__DbAllColsAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Alternatives"


    // $ANTLR start "rule__FromTableJoin__Alternatives_2"
    // InternalSqlParser.g:2834:1: rule__FromTableJoin__Alternatives_2 : ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) );
    public final void rule__FromTableJoin__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2838:1: ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==ON) ) {
                alt6=1;
            }
            else if ( (LA6_0==USING) ) {
                alt6=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSqlParser.g:2839:1: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    {
                    // InternalSqlParser.g:2839:1: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    // InternalSqlParser.g:2840:1: ( rule__FromTableJoin__Group_2_0__0 )
                    {
                     before(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 
                    // InternalSqlParser.g:2841:1: ( rule__FromTableJoin__Group_2_0__0 )
                    // InternalSqlParser.g:2841:2: rule__FromTableJoin__Group_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__Group_2_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2845:6: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:2845:6: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    // InternalSqlParser.g:2846:1: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    {
                     before(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 
                    // InternalSqlParser.g:2847:1: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    // InternalSqlParser.g:2847:2: rule__FromTableJoin__JoinCondAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__JoinCondAssignment_2_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Alternatives_2"


    // $ANTLR start "rule__TableOrAlias__Alternatives_0"
    // InternalSqlParser.g:2856:1: rule__TableOrAlias__Alternatives_0 : ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) );
    public final void rule__TableOrAlias__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2860:1: ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( ((LA7_0>=RULE_STRING && LA7_0<=RULE_ID)) ) {
                alt7=1;
            }
            else if ( (LA7_0==LeftParenthesis) ) {
                alt7=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalSqlParser.g:2861:1: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    {
                    // InternalSqlParser.g:2861:1: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    // InternalSqlParser.g:2862:1: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    {
                     before(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 
                    // InternalSqlParser.g:2863:1: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    // InternalSqlParser.g:2863:2: rule__TableOrAlias__TfullAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TfullAssignment_0_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2867:6: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    {
                    // InternalSqlParser.g:2867:6: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    // InternalSqlParser.g:2868:1: ( rule__TableOrAlias__SqAssignment_0_1 )
                    {
                     before(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 
                    // InternalSqlParser.g:2869:1: ( rule__TableOrAlias__SqAssignment_0_1 )
                    // InternalSqlParser.g:2869:2: rule__TableOrAlias__SqAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__SqAssignment_0_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_0"


    // $ANTLR start "rule__TableOrAlias__Alternatives_1"
    // InternalSqlParser.g:2878:1: rule__TableOrAlias__Alternatives_1 : ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) );
    public final void rule__TableOrAlias__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2882:1: ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==PIVOT) ) {
                alt8=1;
            }
            else if ( (LA8_0==UNPIVOT) ) {
                alt8=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSqlParser.g:2883:1: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    {
                    // InternalSqlParser.g:2883:1: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    // InternalSqlParser.g:2884:1: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    {
                     before(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 
                    // InternalSqlParser.g:2885:1: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    // InternalSqlParser.g:2885:2: rule__TableOrAlias__PivotAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__PivotAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2889:6: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    {
                    // InternalSqlParser.g:2889:6: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    // InternalSqlParser.g:2890:1: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    {
                     before(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 
                    // InternalSqlParser.g:2891:1: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    // InternalSqlParser.g:2891:2: rule__TableOrAlias__UnpivotAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__UnpivotAssignment_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_1"


    // $ANTLR start "rule__PivotInClause__Alternatives_2"
    // InternalSqlParser.g:2900:1: rule__PivotInClause__Alternatives_2 : ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) );
    public final void rule__PivotInClause__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2904:1: ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) )
            int alt9=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA9_1 = input.LA(2);

                if ( ((LA9_1>=RULE_STRING && LA9_1<=RULE_ID)) ) {
                    alt9=2;
                }
                else if ( (LA9_1==SELECT) ) {
                    alt9=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt9=2;
                }
                break;
            case ANY:
                {
                alt9=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalSqlParser.g:2905:1: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:2905:1: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    // InternalSqlParser.g:2906:1: ( rule__PivotInClause__SqAssignment_2_0 )
                    {
                     before(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 
                    // InternalSqlParser.g:2907:1: ( rule__PivotInClause__SqAssignment_2_0 )
                    // InternalSqlParser.g:2907:2: rule__PivotInClause__SqAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__SqAssignment_2_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2911:6: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:2911:6: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    // InternalSqlParser.g:2912:1: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    {
                     before(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 
                    // InternalSqlParser.g:2913:1: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    // InternalSqlParser.g:2913:2: rule__PivotInClause__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__ArgsAssignment_2_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:2917:6: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    {
                    // InternalSqlParser.g:2917:6: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    // InternalSqlParser.g:2918:1: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    {
                     before(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 
                    // InternalSqlParser.g:2919:1: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    // InternalSqlParser.g:2919:2: rule__PivotInClause__PinanyAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__PinanyAssignment_2_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Alternatives_2"


    // $ANTLR start "rule__UnpivotTable__Alternatives_1_0"
    // InternalSqlParser.g:2928:1: rule__UnpivotTable__Alternatives_1_0 : ( ( INCLUDE ) | ( EXCLUDE ) );
    public final void rule__UnpivotTable__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2932:1: ( ( INCLUDE ) | ( EXCLUDE ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==INCLUDE) ) {
                alt10=1;
            }
            else if ( (LA10_0==EXCLUDE) ) {
                alt10=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalSqlParser.g:2933:1: ( INCLUDE )
                    {
                    // InternalSqlParser.g:2933:1: ( INCLUDE )
                    // InternalSqlParser.g:2934:1: INCLUDE
                    {
                     before(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 
                    match(input,INCLUDE,FOLLOW_2); 
                     after(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2941:6: ( EXCLUDE )
                    {
                    // InternalSqlParser.g:2941:6: ( EXCLUDE )
                    // InternalSqlParser.g:2942:1: EXCLUDE
                    {
                     before(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 
                    match(input,EXCLUDE,FOLLOW_2); 
                     after(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Alternatives_1_0"


    // $ANTLR start "rule__PivotForClause__Alternatives_1"
    // InternalSqlParser.g:2954:1: rule__PivotForClause__Alternatives_1 : ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) );
    public final void rule__PivotForClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2958:1: ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( ((LA11_0>=RULE_STRING && LA11_0<=RULE_ID)) ) {
                alt11=1;
            }
            else if ( (LA11_0==LeftParenthesis) ) {
                alt11=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalSqlParser.g:2959:1: ( ruleColumnFull )
                    {
                    // InternalSqlParser.g:2959:1: ( ruleColumnFull )
                    // InternalSqlParser.g:2960:1: ruleColumnFull
                    {
                     before(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 
                    pushFollow(FOLLOW_2);
                    ruleColumnFull();

                    state._fsp--;

                     after(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2965:6: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    {
                    // InternalSqlParser.g:2965:6: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    // InternalSqlParser.g:2966:1: ( rule__PivotForClause__Group_1_1__0 )
                    {
                     before(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 
                    // InternalSqlParser.g:2967:1: ( rule__PivotForClause__Group_1_1__0 )
                    // InternalSqlParser.g:2967:2: rule__PivotForClause__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotForClause__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Alternatives_1"


    // $ANTLR start "rule__PivotColumns__Alternatives"
    // InternalSqlParser.g:2976:1: rule__PivotColumns__Alternatives : ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) );
    public final void rule__PivotColumns__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2980:1: ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( ((LA12_0>=RULE_STRING && LA12_0<=RULE_ID)) ) {
                alt12=1;
            }
            else if ( (LA12_0==LeftParenthesis) ) {
                alt12=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalSqlParser.g:2981:1: ( rulePivotCol )
                    {
                    // InternalSqlParser.g:2981:1: ( rulePivotCol )
                    // InternalSqlParser.g:2982:1: rulePivotCol
                    {
                     before(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    rulePivotCol();

                    state._fsp--;

                     after(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2987:6: ( ( rule__PivotColumns__Group_1__0 ) )
                    {
                    // InternalSqlParser.g:2987:6: ( ( rule__PivotColumns__Group_1__0 ) )
                    // InternalSqlParser.g:2988:1: ( rule__PivotColumns__Group_1__0 )
                    {
                     before(grammarAccess.getPivotColumnsAccess().getGroup_1()); 
                    // InternalSqlParser.g:2989:1: ( rule__PivotColumns__Group_1__0 )
                    // InternalSqlParser.g:2989:2: rule__PivotColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotColumns__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPivotColumnsAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Alternatives"


    // $ANTLR start "rule__OrderByColumnFull__Alternatives_0"
    // InternalSqlParser.g:2998:1: rule__OrderByColumnFull__Alternatives_0 : ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) );
    public final void rule__OrderByColumnFull__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3002:1: ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( ((LA13_0>=RULE_STRING && LA13_0<=RULE_ID)) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_UNSIGNED) ) {
                alt13=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalSqlParser.g:3003:1: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    {
                    // InternalSqlParser.g:3003:1: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    // InternalSqlParser.g:3004:1: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    {
                     before(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 
                    // InternalSqlParser.g:3005:1: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    // InternalSqlParser.g:3005:2: rule__OrderByColumnFull__ColOrderAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderAssignment_0_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3009:6: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    {
                    // InternalSqlParser.g:3009:6: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    // InternalSqlParser.g:3010:1: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    {
                     before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 
                    // InternalSqlParser.g:3011:1: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    // InternalSqlParser.g:3011:2: rule__OrderByColumnFull__ColOrderIntAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderIntAssignment_0_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Alternatives_0"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAlternatives_1_0"
    // InternalSqlParser.g:3020:1: rule__OrderByColumnFull__DirectionAlternatives_1_0 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByColumnFull__DirectionAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3024:1: ( ( ASC ) | ( DESC ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==ASC) ) {
                alt14=1;
            }
            else if ( (LA14_0==DESC) ) {
                alt14=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalSqlParser.g:3025:1: ( ASC )
                    {
                    // InternalSqlParser.g:3025:1: ( ASC )
                    // InternalSqlParser.g:3026:1: ASC
                    {
                     before(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 
                    match(input,ASC,FOLLOW_2); 
                     after(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3033:6: ( DESC )
                    {
                    // InternalSqlParser.g:3033:6: ( DESC )
                    // InternalSqlParser.g:3034:1: DESC
                    {
                     before(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 
                    match(input,DESC,FOLLOW_2); 
                     after(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAlternatives_1_0"


    // $ANTLR start "rule__GroupByColumnFull__Alternatives"
    // InternalSqlParser.g:3046:1: rule__GroupByColumnFull__Alternatives : ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) );
    public final void rule__GroupByColumnFull__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3050:1: ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) )
            int alt15=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA15_1 = input.LA(2);

                if ( (LA15_1==LeftParenthesis) ) {
                    alt15=2;
                }
                else if ( (LA15_1==EOF||LA15_1==FETCHFIRST||LA15_1==INTERSECT||LA15_1==ORDERBY||LA15_1==EXCEPT||LA15_1==HAVING||LA15_1==OFFSET||(LA15_1>=LIMIT && LA15_1<=MINUS)||LA15_1==UNION||LA15_1==RightParenthesis||LA15_1==Comma||LA15_1==FullStop) ) {
                    alt15=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
                {
                alt15=1;
                }
                break;
            case RULE_UNSIGNED:
                {
                alt15=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalSqlParser.g:3051:1: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    {
                    // InternalSqlParser.g:3051:1: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    // InternalSqlParser.g:3052:1: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    {
                     before(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 
                    // InternalSqlParser.g:3053:1: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    // InternalSqlParser.g:3053:2: rule__GroupByColumnFull__ColGrByAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__ColGrByAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3057:6: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3057:6: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    // InternalSqlParser.g:3058:1: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    {
                     before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 
                    // InternalSqlParser.g:3059:1: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    // InternalSqlParser.g:3059:2: rule__GroupByColumnFull__GbFunctionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GbFunctionAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3063:6: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3063:6: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    // InternalSqlParser.g:3064:1: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    {
                     before(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 
                    // InternalSqlParser.g:3065:1: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    // InternalSqlParser.g:3065:2: rule__GroupByColumnFull__GrByIntAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GrByIntAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__Alternatives"
    // InternalSqlParser.g:3074:1: rule__ExpressionFragmentSecond__Alternatives : ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) );
    public final void rule__ExpressionFragmentSecond__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3078:1: ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==AND||LA16_0==OR) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_JRNPARAM) ) {
                alt16=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSqlParser.g:3079:1: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    {
                    // InternalSqlParser.g:3079:1: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    // InternalSqlParser.g:3080:1: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    {
                     before(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 
                    // InternalSqlParser.g:3081:1: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    // InternalSqlParser.g:3081:2: rule__ExpressionFragmentSecond__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3085:6: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3085:6: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    // InternalSqlParser.g:3086:1: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    {
                     before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 
                    // InternalSqlParser.g:3087:1: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    // InternalSqlParser.g:3087:2: rule__ExpressionFragmentSecond__NotPrmAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__NotPrmAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"
    // InternalSqlParser.g:3096:1: rule__ExpressionFragmentSecond__CAlternatives_0_0_0 : ( ( AND ) | ( OR ) );
    public final void rule__ExpressionFragmentSecond__CAlternatives_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3100:1: ( ( AND ) | ( OR ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==AND) ) {
                alt17=1;
            }
            else if ( (LA17_0==OR) ) {
                alt17=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalSqlParser.g:3101:1: ( AND )
                    {
                    // InternalSqlParser.g:3101:1: ( AND )
                    // InternalSqlParser.g:3102:1: AND
                    {
                     before(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 
                    match(input,AND,FOLLOW_2); 
                     after(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3109:6: ( OR )
                    {
                    // InternalSqlParser.g:3109:6: ( OR )
                    // InternalSqlParser.g:3110:1: OR
                    {
                     before(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 
                    match(input,OR,FOLLOW_2); 
                     after(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"


    // $ANTLR start "rule__ExpressionFragment__Alternatives"
    // InternalSqlParser.g:3122:1: rule__ExpressionFragment__Alternatives : ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) );
    public final void rule__ExpressionFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3126:1: ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) )
            int alt18=6;
            switch ( input.LA(1) ) {
            case NOT:
            case NOT_1:
                {
                alt18=1;
                }
                break;
            case LeftParenthesis:
                {
                int LA18_2 = input.LA(2);

                if ( (LA18_2==SELECT) ) {
                    alt18=2;
                }
                else if ( (LA18_2==NOTEXISTS||LA18_2==EXTRACT||LA18_2==EXISTS||LA18_2==NOTIN_1||LA18_2==CAST||LA18_2==CASE||(LA18_2>=NOT && LA18_2<=NOT_1)||LA18_2==X||LA18_2==IN||LA18_2==LeftParenthesis||(LA18_2>=RULE_JRPARAM && LA18_2<=RULE_JRNPARAM)||(LA18_2>=RULE_UNSIGNED && LA18_2<=RULE_SIGNED_DOUBLE)||(LA18_2>=RULE_STRING_ && LA18_2<=RULE_ID)) ) {
                    alt18=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 18, 2, input);

                    throw nvae;
                }
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case RULE_JRPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt18=2;
                }
                break;
            case RULE_JRNPARAM:
                {
                int LA18_4 = input.LA(2);

                if ( (LA18_4==EOF||LA18_4==STRAIGHT_JOIN||LA18_4==FETCHFIRST||LA18_4==INTERSECT||LA18_4==GROUPBY||LA18_4==ORDERBY||LA18_4==NATURAL||LA18_4==EXCEPT||LA18_4==HAVING||LA18_4==OFFSET||LA18_4==CROSS||LA18_4==INNER||(LA18_4>=LIMIT && LA18_4<=MINUS)||(LA18_4>=RIGHT && LA18_4<=UNION)||LA18_4==WHERE||LA18_4==FULL||LA18_4==JOIN||LA18_4==LEFT||LA18_4==THEN||LA18_4==WHEN||LA18_4==AND||LA18_4==OR||LA18_4==RightParenthesis||LA18_4==Comma||LA18_4==RULE_JRNPARAM) ) {
                    alt18=4;
                }
                else if ( (LA18_4==ISNOTNULL||LA18_4==NOTBETWEEN||LA18_4==NOTEXISTS||LA18_4==NOTLIKE||LA18_4==BETWEEN||LA18_4==ISNULL||LA18_4==EXISTS||LA18_4==NOTIN_1||LA18_4==LIKE||LA18_4==ExclamationMarkEqualsSign||(LA18_4>=LessThanSignEqualsSign && LA18_4<=GreaterThanSignEqualsSign)||LA18_4==IN||(LA18_4>=CircumflexAccentEqualsSign && LA18_4<=VerticalLineVerticalLine)||LA18_4==PlusSign||LA18_4==HyphenMinus||(LA18_4>=Solidus && LA18_4<=GreaterThanSign)||LA18_4==RULE_STAR) ) {
                    alt18=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 18, 4, input);

                    throw nvae;
                }
                }
                break;
            case X:
                {
                alt18=3;
                }
                break;
            case NOTIN_1:
            case IN:
                {
                alt18=5;
                }
                break;
            case NOTEXISTS:
            case EXISTS:
                {
                alt18=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalSqlParser.g:3127:1: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    {
                    // InternalSqlParser.g:3127:1: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    // InternalSqlParser.g:3128:1: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 
                    // InternalSqlParser.g:3129:1: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    // InternalSqlParser.g:3129:2: rule__ExpressionFragment__ExpgroupAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpgroupAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3133:6: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3133:6: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    // InternalSqlParser.g:3134:1: ( rule__ExpressionFragment__ExpAssignment_1 )
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 
                    // InternalSqlParser.g:3135:1: ( rule__ExpressionFragment__ExpAssignment_1 )
                    // InternalSqlParser.g:3135:2: rule__ExpressionFragment__ExpAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3139:6: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3139:6: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    // InternalSqlParser.g:3140:1: ( rule__ExpressionFragment__XexpAssignment_2 )
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 
                    // InternalSqlParser.g:3141:1: ( rule__ExpressionFragment__XexpAssignment_2 )
                    // InternalSqlParser.g:3141:2: rule__ExpressionFragment__XexpAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__XexpAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3145:6: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    {
                    // InternalSqlParser.g:3145:6: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    // InternalSqlParser.g:3146:1: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 
                    // InternalSqlParser.g:3147:1: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    // InternalSqlParser.g:3147:2: rule__ExpressionFragment__NotPrmAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__NotPrmAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3151:6: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    {
                    // InternalSqlParser.g:3151:6: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    // InternalSqlParser.g:3152:1: ( rule__ExpressionFragment__InAssignment_4 )
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 
                    // InternalSqlParser.g:3153:1: ( rule__ExpressionFragment__InAssignment_4 )
                    // InternalSqlParser.g:3153:2: rule__ExpressionFragment__InAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__InAssignment_4();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:3157:6: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    {
                    // InternalSqlParser.g:3157:6: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    // InternalSqlParser.g:3158:1: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 
                    // InternalSqlParser.g:3159:1: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    // InternalSqlParser.g:3159:2: rule__ExpressionFragment__ExistsAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExistsAssignment_5();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__Alternatives"


    // $ANTLR start "rule__ExpressionFragment__XexpAlternatives_2_0"
    // InternalSqlParser.g:3168:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );
    public final void rule__ExpressionFragment__XexpAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3172:1: ( ( ruleXExpression ) | ( ruleXExpression_ ) )
            int alt19=2;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalSqlParser.g:3173:1: ( ruleXExpression )
                    {
                    // InternalSqlParser.g:3173:1: ( ruleXExpression )
                    // InternalSqlParser.g:3174:1: ruleXExpression
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;

                     after(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3179:6: ( ruleXExpression_ )
                    {
                    // InternalSqlParser.g:3179:6: ( ruleXExpression_ )
                    // InternalSqlParser.g:3180:1: ruleXExpression_
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 
                    pushFollow(FOLLOW_2);
                    ruleXExpression_();

                    state._fsp--;

                     after(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAlternatives_2_0"


    // $ANTLR start "rule__ExpressionGroup__IsnotAlternatives_1_0"
    // InternalSqlParser.g:3190:1: rule__ExpressionGroup__IsnotAlternatives_1_0 : ( ( NOT_1 ) | ( NOT ) );
    public final void rule__ExpressionGroup__IsnotAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3194:1: ( ( NOT_1 ) | ( NOT ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==NOT_1) ) {
                alt20=1;
            }
            else if ( (LA20_0==NOT) ) {
                alt20=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalSqlParser.g:3195:1: ( NOT_1 )
                    {
                    // InternalSqlParser.g:3195:1: ( NOT_1 )
                    // InternalSqlParser.g:3196:1: NOT_1
                    {
                     before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 
                    match(input,NOT_1,FOLLOW_2); 
                     after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3203:6: ( NOT )
                    {
                    // InternalSqlParser.g:3203:6: ( NOT )
                    // InternalSqlParser.g:3204:1: NOT
                    {
                     before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 
                    match(input,NOT,FOLLOW_2); 
                     after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAlternatives_1_0"


    // $ANTLR start "rule__Expression__Alternatives_1"
    // InternalSqlParser.g:3216:1: rule__Expression__Alternatives_1 : ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) );
    public final void rule__Expression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3220:1: ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) )
            int alt21=6;
            switch ( input.LA(1) ) {
            case ISNOTNULL:
            case ISNULL:
                {
                alt21=1;
                }
                break;
            case NOTIN_1:
            case IN:
                {
                alt21=2;
                }
                break;
            case NOTEXISTS:
            case EXISTS:
                {
                alt21=3;
                }
                break;
            case NOTBETWEEN:
            case BETWEEN:
                {
                alt21=4;
                }
                break;
            case NOTLIKE:
            case LIKE:
                {
                alt21=5;
                }
                break;
            case ExclamationMarkEqualsSign:
            case LessThanSignEqualsSign:
            case LessThanSignGreaterThanSign:
            case GreaterThanSignEqualsSign:
            case CircumflexAccentEqualsSign:
            case LessThanSign:
            case EqualsSign:
            case GreaterThanSign:
                {
                alt21=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalSqlParser.g:3221:1: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    {
                    // InternalSqlParser.g:3221:1: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    // InternalSqlParser.g:3222:1: ( rule__Expression__IsnullAssignment_1_0 )
                    {
                     before(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 
                    // InternalSqlParser.g:3223:1: ( rule__Expression__IsnullAssignment_1_0 )
                    // InternalSqlParser.g:3223:2: rule__Expression__IsnullAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__IsnullAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3227:6: ( ( rule__Expression__InAssignment_1_1 ) )
                    {
                    // InternalSqlParser.g:3227:6: ( ( rule__Expression__InAssignment_1_1 ) )
                    // InternalSqlParser.g:3228:1: ( rule__Expression__InAssignment_1_1 )
                    {
                     before(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 
                    // InternalSqlParser.g:3229:1: ( rule__Expression__InAssignment_1_1 )
                    // InternalSqlParser.g:3229:2: rule__Expression__InAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__InAssignment_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3233:6: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    {
                    // InternalSqlParser.g:3233:6: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    // InternalSqlParser.g:3234:1: ( rule__Expression__ExistsAssignment_1_2 )
                    {
                     before(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 
                    // InternalSqlParser.g:3235:1: ( rule__Expression__ExistsAssignment_1_2 )
                    // InternalSqlParser.g:3235:2: rule__Expression__ExistsAssignment_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__ExistsAssignment_1_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3239:6: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    {
                    // InternalSqlParser.g:3239:6: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    // InternalSqlParser.g:3240:1: ( rule__Expression__BetweenAssignment_1_3 )
                    {
                     before(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 
                    // InternalSqlParser.g:3241:1: ( rule__Expression__BetweenAssignment_1_3 )
                    // InternalSqlParser.g:3241:2: rule__Expression__BetweenAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__BetweenAssignment_1_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3245:6: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    {
                    // InternalSqlParser.g:3245:6: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    // InternalSqlParser.g:3246:1: ( rule__Expression__LikeAssignment_1_4 )
                    {
                     before(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 
                    // InternalSqlParser.g:3247:1: ( rule__Expression__LikeAssignment_1_4 )
                    // InternalSqlParser.g:3247:2: rule__Expression__LikeAssignment_1_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__LikeAssignment_1_4();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:3251:6: ( ( rule__Expression__CompAssignment_1_5 ) )
                    {
                    // InternalSqlParser.g:3251:6: ( ( rule__Expression__CompAssignment_1_5 ) )
                    // InternalSqlParser.g:3252:1: ( rule__Expression__CompAssignment_1_5 )
                    {
                     before(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 
                    // InternalSqlParser.g:3253:1: ( rule__Expression__CompAssignment_1_5 )
                    // InternalSqlParser.g:3253:2: rule__Expression__CompAssignment_1_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__CompAssignment_1_5();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Alternatives_1"


    // $ANTLR start "rule__Expression__IsnullAlternatives_1_0_0"
    // InternalSqlParser.g:3262:1: rule__Expression__IsnullAlternatives_1_0_0 : ( ( ISNULL ) | ( ISNOTNULL ) );
    public final void rule__Expression__IsnullAlternatives_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3266:1: ( ( ISNULL ) | ( ISNOTNULL ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==ISNULL) ) {
                alt22=1;
            }
            else if ( (LA22_0==ISNOTNULL) ) {
                alt22=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalSqlParser.g:3267:1: ( ISNULL )
                    {
                    // InternalSqlParser.g:3267:1: ( ISNULL )
                    // InternalSqlParser.g:3268:1: ISNULL
                    {
                     before(grammarAccess.getExpressionAccess().getIsnullISNULLKeyword_1_0_0_0()); 
                    match(input,ISNULL,FOLLOW_2); 
                     after(grammarAccess.getExpressionAccess().getIsnullISNULLKeyword_1_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3275:6: ( ISNOTNULL )
                    {
                    // InternalSqlParser.g:3275:6: ( ISNOTNULL )
                    // InternalSqlParser.g:3276:1: ISNOTNULL
                    {
                     before(grammarAccess.getExpressionAccess().getIsnullISNOTNULLKeyword_1_0_0_1()); 
                    match(input,ISNOTNULL,FOLLOW_2); 
                     after(grammarAccess.getExpressionAccess().getIsnullISNOTNULLKeyword_1_0_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__IsnullAlternatives_1_0_0"


    // $ANTLR start "rule__Comparison__OperatorAlternatives_0_0"
    // InternalSqlParser.g:3288:1: rule__Comparison__OperatorAlternatives_0_0 : ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) );
    public final void rule__Comparison__OperatorAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3292:1: ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) )
            int alt23=8;
            switch ( input.LA(1) ) {
            case GreaterThanSign:
                {
                alt23=1;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt23=2;
                }
                break;
            case LessThanSign:
                {
                alt23=3;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt23=4;
                }
                break;
            case EqualsSign:
                {
                alt23=5;
                }
                break;
            case LessThanSignGreaterThanSign:
                {
                alt23=6;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt23=7;
                }
                break;
            case CircumflexAccentEqualsSign:
                {
                alt23=8;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalSqlParser.g:3293:1: ( GreaterThanSign )
                    {
                    // InternalSqlParser.g:3293:1: ( GreaterThanSign )
                    // InternalSqlParser.g:3294:1: GreaterThanSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 
                    match(input,GreaterThanSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3301:6: ( GreaterThanSignEqualsSign )
                    {
                    // InternalSqlParser.g:3301:6: ( GreaterThanSignEqualsSign )
                    // InternalSqlParser.g:3302:1: GreaterThanSignEqualsSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3309:6: ( LessThanSign )
                    {
                    // InternalSqlParser.g:3309:6: ( LessThanSign )
                    // InternalSqlParser.g:3310:1: LessThanSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 
                    match(input,LessThanSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3317:6: ( LessThanSignEqualsSign )
                    {
                    // InternalSqlParser.g:3317:6: ( LessThanSignEqualsSign )
                    // InternalSqlParser.g:3318:1: LessThanSignEqualsSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 
                    match(input,LessThanSignEqualsSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3325:6: ( EqualsSign )
                    {
                    // InternalSqlParser.g:3325:6: ( EqualsSign )
                    // InternalSqlParser.g:3326:1: EqualsSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 
                    match(input,EqualsSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:3333:6: ( LessThanSignGreaterThanSign )
                    {
                    // InternalSqlParser.g:3333:6: ( LessThanSignGreaterThanSign )
                    // InternalSqlParser.g:3334:1: LessThanSignGreaterThanSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalSqlParser.g:3341:6: ( ExclamationMarkEqualsSign )
                    {
                    // InternalSqlParser.g:3341:6: ( ExclamationMarkEqualsSign )
                    // InternalSqlParser.g:3342:1: ExclamationMarkEqualsSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 
                    match(input,ExclamationMarkEqualsSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 

                    }


                    }
                    break;
                case 8 :
                    // InternalSqlParser.g:3349:6: ( CircumflexAccentEqualsSign )
                    {
                    // InternalSqlParser.g:3349:6: ( CircumflexAccentEqualsSign )
                    // InternalSqlParser.g:3350:1: CircumflexAccentEqualsSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 
                    match(input,CircumflexAccentEqualsSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAlternatives_0_0"


    // $ANTLR start "rule__Comparison__SubOperatorAlternatives_1_0"
    // InternalSqlParser.g:3362:1: rule__Comparison__SubOperatorAlternatives_1_0 : ( ( ANY ) | ( ALL ) | ( SOME ) );
    public final void rule__Comparison__SubOperatorAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3366:1: ( ( ANY ) | ( ALL ) | ( SOME ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case ANY:
                {
                alt24=1;
                }
                break;
            case ALL:
                {
                alt24=2;
                }
                break;
            case SOME:
                {
                alt24=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSqlParser.g:3367:1: ( ANY )
                    {
                    // InternalSqlParser.g:3367:1: ( ANY )
                    // InternalSqlParser.g:3368:1: ANY
                    {
                     before(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 
                    match(input,ANY,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3375:6: ( ALL )
                    {
                    // InternalSqlParser.g:3375:6: ( ALL )
                    // InternalSqlParser.g:3376:1: ALL
                    {
                     before(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 
                    match(input,ALL,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3383:6: ( SOME )
                    {
                    // InternalSqlParser.g:3383:6: ( SOME )
                    // InternalSqlParser.g:3384:1: SOME
                    {
                     before(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 
                    match(input,SOME,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAlternatives_1_0"


    // $ANTLR start "rule__Like__OpLikeAlternatives_0_0"
    // InternalSqlParser.g:3396:1: rule__Like__OpLikeAlternatives_0_0 : ( ( LIKE ) | ( NOTLIKE ) );
    public final void rule__Like__OpLikeAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3400:1: ( ( LIKE ) | ( NOTLIKE ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==LIKE) ) {
                alt25=1;
            }
            else if ( (LA25_0==NOTLIKE) ) {
                alt25=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalSqlParser.g:3401:1: ( LIKE )
                    {
                    // InternalSqlParser.g:3401:1: ( LIKE )
                    // InternalSqlParser.g:3402:1: LIKE
                    {
                     before(grammarAccess.getLikeAccess().getOpLikeLIKEKeyword_0_0_0()); 
                    match(input,LIKE,FOLLOW_2); 
                     after(grammarAccess.getLikeAccess().getOpLikeLIKEKeyword_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3409:6: ( NOTLIKE )
                    {
                    // InternalSqlParser.g:3409:6: ( NOTLIKE )
                    // InternalSqlParser.g:3410:1: NOTLIKE
                    {
                     before(grammarAccess.getLikeAccess().getOpLikeNOTLIKEKeyword_0_0_1()); 
                    match(input,NOTLIKE,FOLLOW_2); 
                     after(grammarAccess.getLikeAccess().getOpLikeNOTLIKEKeyword_0_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__OpLikeAlternatives_0_0"


    // $ANTLR start "rule__LikeOperand__Alternatives"
    // InternalSqlParser.g:3422:1: rule__LikeOperand__Alternatives : ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) );
    public final void rule__LikeOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3426:1: ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) )
            int alt26=4;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt26=1;
                }
                break;
            case RULE_ID:
                {
                alt26=2;
                }
                break;
            case CAST:
                {
                alt26=3;
                }
                break;
            case RULE_JRPARAM:
                {
                alt26=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalSqlParser.g:3427:1: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    {
                    // InternalSqlParser.g:3427:1: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    // InternalSqlParser.g:3428:1: ( rule__LikeOperand__Op2Assignment_0 )
                    {
                     before(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 
                    // InternalSqlParser.g:3429:1: ( rule__LikeOperand__Op2Assignment_0 )
                    // InternalSqlParser.g:3429:2: rule__LikeOperand__Op2Assignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Op2Assignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3433:6: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    {
                    // InternalSqlParser.g:3433:6: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    // InternalSqlParser.g:3434:1: ( rule__LikeOperand__Fop2Assignment_1 )
                    {
                     before(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 
                    // InternalSqlParser.g:3435:1: ( rule__LikeOperand__Fop2Assignment_1 )
                    // InternalSqlParser.g:3435:2: rule__LikeOperand__Fop2Assignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Fop2Assignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3439:6: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3439:6: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    // InternalSqlParser.g:3440:1: ( rule__LikeOperand__FcastAssignment_2 )
                    {
                     before(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 
                    // InternalSqlParser.g:3441:1: ( rule__LikeOperand__FcastAssignment_2 )
                    // InternalSqlParser.g:3441:2: rule__LikeOperand__FcastAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FcastAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3445:6: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    {
                    // InternalSqlParser.g:3445:6: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    // InternalSqlParser.g:3446:1: ( rule__LikeOperand__FparamAssignment_3 )
                    {
                     before(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 
                    // InternalSqlParser.g:3447:1: ( rule__LikeOperand__FparamAssignment_3 )
                    // InternalSqlParser.g:3447:2: rule__LikeOperand__FparamAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FparamAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Alternatives"


    // $ANTLR start "rule__Between__OpBetweenAlternatives_0_0"
    // InternalSqlParser.g:3456:1: rule__Between__OpBetweenAlternatives_0_0 : ( ( BETWEEN ) | ( NOTBETWEEN ) );
    public final void rule__Between__OpBetweenAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3460:1: ( ( BETWEEN ) | ( NOTBETWEEN ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==BETWEEN) ) {
                alt27=1;
            }
            else if ( (LA27_0==NOTBETWEEN) ) {
                alt27=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalSqlParser.g:3461:1: ( BETWEEN )
                    {
                    // InternalSqlParser.g:3461:1: ( BETWEEN )
                    // InternalSqlParser.g:3462:1: BETWEEN
                    {
                     before(grammarAccess.getBetweenAccess().getOpBetweenBETWEENKeyword_0_0_0()); 
                    match(input,BETWEEN,FOLLOW_2); 
                     after(grammarAccess.getBetweenAccess().getOpBetweenBETWEENKeyword_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3469:6: ( NOTBETWEEN )
                    {
                    // InternalSqlParser.g:3469:6: ( NOTBETWEEN )
                    // InternalSqlParser.g:3470:1: NOTBETWEEN
                    {
                     before(grammarAccess.getBetweenAccess().getOpBetweenNOTBETWEENKeyword_0_0_1()); 
                    match(input,NOTBETWEEN,FOLLOW_2); 
                     after(grammarAccess.getBetweenAccess().getOpBetweenNOTBETWEENKeyword_0_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__OpBetweenAlternatives_0_0"


    // $ANTLR start "rule__InOperator__OpAlternatives_1_0"
    // InternalSqlParser.g:3482:1: rule__InOperator__OpAlternatives_1_0 : ( ( NOTIN_1 ) | ( IN ) );
    public final void rule__InOperator__OpAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3486:1: ( ( NOTIN_1 ) | ( IN ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==NOTIN_1) ) {
                alt28=1;
            }
            else if ( (LA28_0==IN) ) {
                alt28=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalSqlParser.g:3487:1: ( NOTIN_1 )
                    {
                    // InternalSqlParser.g:3487:1: ( NOTIN_1 )
                    // InternalSqlParser.g:3488:1: NOTIN_1
                    {
                     before(grammarAccess.getInOperatorAccess().getOpNOTINKeyword_1_0_0()); 
                    match(input,NOTIN_1,FOLLOW_2); 
                     after(grammarAccess.getInOperatorAccess().getOpNOTINKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3495:6: ( IN )
                    {
                    // InternalSqlParser.g:3495:6: ( IN )
                    // InternalSqlParser.g:3496:1: IN
                    {
                     before(grammarAccess.getInOperatorAccess().getOpINKeyword_1_0_1()); 
                    match(input,IN,FOLLOW_2); 
                     after(grammarAccess.getInOperatorAccess().getOpINKeyword_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpAlternatives_1_0"


    // $ANTLR start "rule__InOperator__Alternatives_2"
    // InternalSqlParser.g:3508:1: rule__InOperator__Alternatives_2 : ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) );
    public final void rule__InOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3512:1: ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==LeftParenthesis) ) {
                int LA29_1 = input.LA(2);

                if ( (LA29_1==SELECT) ) {
                    alt29=1;
                }
                else if ( ((LA29_1>=RULE_SIGNED_DOUBLE && LA29_1<=RULE_STRING_)) ) {
                    alt29=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalSqlParser.g:3513:1: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:3513:1: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    // InternalSqlParser.g:3514:1: ( rule__InOperator__SubqueryAssignment_2_0 )
                    {
                     before(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 
                    // InternalSqlParser.g:3515:1: ( rule__InOperator__SubqueryAssignment_2_0 )
                    // InternalSqlParser.g:3515:2: rule__InOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__SubqueryAssignment_2_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3519:6: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:3519:6: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    // InternalSqlParser.g:3520:1: ( rule__InOperator__OpListAssignment_2_1 )
                    {
                     before(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 
                    // InternalSqlParser.g:3521:1: ( rule__InOperator__OpListAssignment_2_1 )
                    // InternalSqlParser.g:3521:2: rule__InOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__OpListAssignment_2_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Alternatives_2"


    // $ANTLR start "rule__ExistsOperator__OpAlternatives_1_0"
    // InternalSqlParser.g:3530:1: rule__ExistsOperator__OpAlternatives_1_0 : ( ( NOTEXISTS ) | ( EXISTS ) );
    public final void rule__ExistsOperator__OpAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3534:1: ( ( NOTEXISTS ) | ( EXISTS ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==NOTEXISTS) ) {
                alt30=1;
            }
            else if ( (LA30_0==EXISTS) ) {
                alt30=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalSqlParser.g:3535:1: ( NOTEXISTS )
                    {
                    // InternalSqlParser.g:3535:1: ( NOTEXISTS )
                    // InternalSqlParser.g:3536:1: NOTEXISTS
                    {
                     before(grammarAccess.getExistsOperatorAccess().getOpNOTEXISTSKeyword_1_0_0()); 
                    match(input,NOTEXISTS,FOLLOW_2); 
                     after(grammarAccess.getExistsOperatorAccess().getOpNOTEXISTSKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3543:6: ( EXISTS )
                    {
                    // InternalSqlParser.g:3543:6: ( EXISTS )
                    // InternalSqlParser.g:3544:1: EXISTS
                    {
                     before(grammarAccess.getExistsOperatorAccess().getOpEXISTSKeyword_1_0_1()); 
                    match(input,EXISTS,FOLLOW_2); 
                     after(grammarAccess.getExistsOperatorAccess().getOpEXISTSKeyword_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpAlternatives_1_0"


    // $ANTLR start "rule__ExistsOperator__Alternatives_2"
    // InternalSqlParser.g:3556:1: rule__ExistsOperator__Alternatives_2 : ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) );
    public final void rule__ExistsOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3560:1: ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==LeftParenthesis) ) {
                int LA31_1 = input.LA(2);

                if ( (LA31_1==SELECT) ) {
                    alt31=1;
                }
                else if ( ((LA31_1>=RULE_SIGNED_DOUBLE && LA31_1<=RULE_STRING_)) ) {
                    alt31=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalSqlParser.g:3561:1: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:3561:1: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    // InternalSqlParser.g:3562:1: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    {
                     before(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 
                    // InternalSqlParser.g:3563:1: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    // InternalSqlParser.g:3563:2: rule__ExistsOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__SubqueryAssignment_2_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3567:6: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:3567:6: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    // InternalSqlParser.g:3568:1: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    {
                     before(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 
                    // InternalSqlParser.g:3569:1: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    // InternalSqlParser.g:3569:2: rule__ExistsOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__OpListAssignment_2_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Alternatives_2"


    // $ANTLR start "rule__OperandGroup__Alternatives"
    // InternalSqlParser.g:3578:1: rule__OperandGroup__Alternatives : ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) );
    public final void rule__OperandGroup__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3582:1: ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==EXTRACT||LA32_0==CAST||LA32_0==CASE||(LA32_0>=RULE_JRPARAM && LA32_0<=RULE_JRNPARAM)||(LA32_0>=RULE_UNSIGNED && LA32_0<=RULE_SIGNED_DOUBLE)||(LA32_0>=RULE_STRING_ && LA32_0<=RULE_ID)) ) {
                alt32=1;
            }
            else if ( (LA32_0==LeftParenthesis) ) {
                int LA32_2 = input.LA(2);

                if ( (LA32_2==EXTRACT||LA32_2==CAST||LA32_2==CASE||LA32_2==LeftParenthesis||(LA32_2>=RULE_JRPARAM && LA32_2<=RULE_JRNPARAM)||(LA32_2>=RULE_UNSIGNED && LA32_2<=RULE_SIGNED_DOUBLE)||(LA32_2>=RULE_STRING_ && LA32_2<=RULE_ID)) ) {
                    alt32=2;
                }
                else if ( (LA32_2==SELECT) ) {
                    alt32=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 2, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalSqlParser.g:3583:1: ( ruleOperand )
                    {
                    // InternalSqlParser.g:3583:1: ( ruleOperand )
                    // InternalSqlParser.g:3584:1: ruleOperand
                    {
                     before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;

                     after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3589:6: ( ( rule__OperandGroup__Group_1__0 ) )
                    {
                    // InternalSqlParser.g:3589:6: ( ( rule__OperandGroup__Group_1__0 ) )
                    // InternalSqlParser.g:3590:1: ( rule__OperandGroup__Group_1__0 )
                    {
                     before(grammarAccess.getOperandGroupAccess().getGroup_1()); 
                    // InternalSqlParser.g:3591:1: ( rule__OperandGroup__Group_1__0 )
                    // InternalSqlParser.g:3591:2: rule__OperandGroup__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandGroup__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandGroupAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Alternatives"


    // $ANTLR start "rule__Operand__Alternatives_1_0"
    // InternalSqlParser.g:3600:1: rule__Operand__Alternatives_1_0 : ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) );
    public final void rule__Operand__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3604:1: ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) )
            int alt33=5;
            switch ( input.LA(1) ) {
            case PlusSign:
                {
                alt33=1;
                }
                break;
            case HyphenMinus:
                {
                alt33=2;
                }
                break;
            case VerticalLineVerticalLine:
                {
                alt33=3;
                }
                break;
            case RULE_STAR:
                {
                alt33=4;
                }
                break;
            case Solidus:
                {
                alt33=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalSqlParser.g:3605:1: ( ( rule__Operand__Group_1_0_0__0 ) )
                    {
                    // InternalSqlParser.g:3605:1: ( ( rule__Operand__Group_1_0_0__0 ) )
                    // InternalSqlParser.g:3606:1: ( rule__Operand__Group_1_0_0__0 )
                    {
                     before(grammarAccess.getOperandAccess().getGroup_1_0_0()); 
                    // InternalSqlParser.g:3607:1: ( rule__Operand__Group_1_0_0__0 )
                    // InternalSqlParser.g:3607:2: rule__Operand__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandAccess().getGroup_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3611:6: ( ( rule__Operand__Group_1_0_1__0 ) )
                    {
                    // InternalSqlParser.g:3611:6: ( ( rule__Operand__Group_1_0_1__0 ) )
                    // InternalSqlParser.g:3612:1: ( rule__Operand__Group_1_0_1__0 )
                    {
                     before(grammarAccess.getOperandAccess().getGroup_1_0_1()); 
                    // InternalSqlParser.g:3613:1: ( rule__Operand__Group_1_0_1__0 )
                    // InternalSqlParser.g:3613:2: rule__Operand__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandAccess().getGroup_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3617:6: ( ( rule__Operand__Group_1_0_2__0 ) )
                    {
                    // InternalSqlParser.g:3617:6: ( ( rule__Operand__Group_1_0_2__0 ) )
                    // InternalSqlParser.g:3618:1: ( rule__Operand__Group_1_0_2__0 )
                    {
                     before(grammarAccess.getOperandAccess().getGroup_1_0_2()); 
                    // InternalSqlParser.g:3619:1: ( rule__Operand__Group_1_0_2__0 )
                    // InternalSqlParser.g:3619:2: rule__Operand__Group_1_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandAccess().getGroup_1_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3623:6: ( ( rule__Operand__Group_1_0_3__0 ) )
                    {
                    // InternalSqlParser.g:3623:6: ( ( rule__Operand__Group_1_0_3__0 ) )
                    // InternalSqlParser.g:3624:1: ( rule__Operand__Group_1_0_3__0 )
                    {
                     before(grammarAccess.getOperandAccess().getGroup_1_0_3()); 
                    // InternalSqlParser.g:3625:1: ( rule__Operand__Group_1_0_3__0 )
                    // InternalSqlParser.g:3625:2: rule__Operand__Group_1_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandAccess().getGroup_1_0_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3629:6: ( ( rule__Operand__Group_1_0_4__0 ) )
                    {
                    // InternalSqlParser.g:3629:6: ( ( rule__Operand__Group_1_0_4__0 ) )
                    // InternalSqlParser.g:3630:1: ( rule__Operand__Group_1_0_4__0 )
                    {
                     before(grammarAccess.getOperandAccess().getGroup_1_0_4()); 
                    // InternalSqlParser.g:3631:1: ( rule__Operand__Group_1_0_4__0 )
                    // InternalSqlParser.g:3631:2: rule__Operand__Group_1_0_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandAccess().getGroup_1_0_4()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Alternatives_1_0"


    // $ANTLR start "rule__OperandFragment__Alternatives"
    // InternalSqlParser.g:3640:1: rule__OperandFragment__Alternatives : ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) );
    public final void rule__OperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3644:1: ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) )
            int alt34=7;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==LeftParenthesis) ) {
                    alt34=6;
                }
                else if ( (LA34_1==EOF||LA34_1==ORDERSIBLINGSBY||LA34_1==STRAIGHT_JOIN||LA34_1==FETCHFIRST||LA34_1==ISNOTNULL||LA34_1==NOTBETWEEN||LA34_1==NOTEXISTS||(LA34_1>=KW_FOLLOWING && LA34_1<=PRECEDING)||(LA34_1>=GROUPBY && LA34_1<=NOTLIKE)||LA34_1==ORDERBY||LA34_1==BETWEEN||(LA34_1>=ISNULL && LA34_1<=NATURAL)||(LA34_1>=EXCEPT && LA34_1<=HAVING)||(LA34_1>=NOTIN_1 && LA34_1<=OFFSET)||LA34_1==CROSS||LA34_1==INNER||(LA34_1>=LIMIT && LA34_1<=MINUS)||LA34_1==NULLS||(LA34_1>=RANGE && LA34_1<=UNION)||LA34_1==WHERE||(LA34_1>=DESC && LA34_1<=FULL)||LA34_1==JOIN||LA34_1==LEFT||LA34_1==LIKE||LA34_1==ROWS||LA34_1==THEN||LA34_1==WHEN||LA34_1==LeftParenthesisPlusSignRightParenthesis||LA34_1==AND||LA34_1==ASC||LA34_1==END||LA34_1==ExclamationMarkEqualsSign||(LA34_1>=LessThanSignEqualsSign && LA34_1<=IN)||(LA34_1>=OR && LA34_1<=VerticalLineVerticalLine)||(LA34_1>=RightParenthesis && LA34_1<=GreaterThanSign)||(LA34_1>=VerticalLine && LA34_1<=RightCurlyBracket)||(LA34_1>=RULE_JRNPARAM && LA34_1<=RULE_STAR)||(LA34_1>=RULE_STRING && LA34_1<=RULE_ID)) ) {
                    alt34=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
                {
                alt34=1;
                }
                break;
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt34=2;
                }
                break;
            case LeftParenthesis:
                {
                alt34=3;
                }
                break;
            case CAST:
                {
                alt34=4;
                }
                break;
            case EXTRACT:
                {
                alt34=5;
                }
                break;
            case CASE:
                {
                alt34=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalSqlParser.g:3645:1: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    {
                    // InternalSqlParser.g:3645:1: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    // InternalSqlParser.g:3646:1: ( rule__OperandFragment__ColumnAssignment_0 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
                    // InternalSqlParser.g:3647:1: ( rule__OperandFragment__ColumnAssignment_0 )
                    // InternalSqlParser.g:3647:2: rule__OperandFragment__ColumnAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__ColumnAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3651:6: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3651:6: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    // InternalSqlParser.g:3652:1: ( rule__OperandFragment__XopAssignment_1 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 
                    // InternalSqlParser.g:3653:1: ( rule__OperandFragment__XopAssignment_1 )
                    // InternalSqlParser.g:3653:2: rule__OperandFragment__XopAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__XopAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3657:6: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3657:6: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    // InternalSqlParser.g:3658:1: ( rule__OperandFragment__SubqAssignment_2 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 
                    // InternalSqlParser.g:3659:1: ( rule__OperandFragment__SubqAssignment_2 )
                    // InternalSqlParser.g:3659:2: rule__OperandFragment__SubqAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SubqAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3663:6: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    {
                    // InternalSqlParser.g:3663:6: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    // InternalSqlParser.g:3664:1: ( rule__OperandFragment__FcastAssignment_3 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 
                    // InternalSqlParser.g:3665:1: ( rule__OperandFragment__FcastAssignment_3 )
                    // InternalSqlParser.g:3665:2: rule__OperandFragment__FcastAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FcastAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3669:6: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    {
                    // InternalSqlParser.g:3669:6: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    // InternalSqlParser.g:3670:1: ( rule__OperandFragment__FextAssignment_4 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 
                    // InternalSqlParser.g:3671:1: ( rule__OperandFragment__FextAssignment_4 )
                    // InternalSqlParser.g:3671:2: rule__OperandFragment__FextAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FextAssignment_4();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:3675:6: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    {
                    // InternalSqlParser.g:3675:6: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    // InternalSqlParser.g:3676:1: ( rule__OperandFragment__FuncAssignment_5 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
                    // InternalSqlParser.g:3677:1: ( rule__OperandFragment__FuncAssignment_5 )
                    // InternalSqlParser.g:3677:2: rule__OperandFragment__FuncAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FuncAssignment_5();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalSqlParser.g:3681:6: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    {
                    // InternalSqlParser.g:3681:6: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    // InternalSqlParser.g:3682:1: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 
                    // InternalSqlParser.g:3683:1: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    // InternalSqlParser.g:3683:2: rule__OperandFragment__SqlcaseAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SqlcaseAssignment_6();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__Alternatives"


    // $ANTLR start "rule__OperandFunction__Alternatives_2"
    // InternalSqlParser.g:3692:1: rule__OperandFunction__Alternatives_2 : ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) );
    public final void rule__OperandFunction__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3696:1: ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_STAR) ) {
                alt35=1;
            }
            else if ( (LA35_0==DISTINCT||LA35_0==EXTRACT||LA35_0==CAST||LA35_0==CASE||LA35_0==ALL||LA35_0==LeftParenthesis||(LA35_0>=RULE_JRPARAM && LA35_0<=RULE_JRNPARAM)||(LA35_0>=RULE_UNSIGNED && LA35_0<=RULE_SIGNED_DOUBLE)||(LA35_0>=RULE_STRING_ && LA35_0<=RULE_ID)) ) {
                alt35=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalSqlParser.g:3697:1: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:3697:1: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    // InternalSqlParser.g:3698:1: ( rule__OperandFunction__StarAssignment_2_0 )
                    {
                     before(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 
                    // InternalSqlParser.g:3699:1: ( rule__OperandFunction__StarAssignment_2_0 )
                    // InternalSqlParser.g:3699:2: rule__OperandFunction__StarAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__StarAssignment_2_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3703:6: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:3703:6: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    // InternalSqlParser.g:3704:1: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    {
                     before(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 
                    // InternalSqlParser.g:3705:1: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    // InternalSqlParser.g:3705:2: rule__OperandFunction__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__ArgsAssignment_2_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Alternatives_2"


    // $ANTLR start "rule__WindowingClause__Alternatives_0"
    // InternalSqlParser.g:3714:1: rule__WindowingClause__Alternatives_0 : ( ( ROWS ) | ( RANGE ) );
    public final void rule__WindowingClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3718:1: ( ( ROWS ) | ( RANGE ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==ROWS) ) {
                alt36=1;
            }
            else if ( (LA36_0==RANGE) ) {
                alt36=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalSqlParser.g:3719:1: ( ROWS )
                    {
                    // InternalSqlParser.g:3719:1: ( ROWS )
                    // InternalSqlParser.g:3720:1: ROWS
                    {
                     before(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 
                    match(input,ROWS,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3727:6: ( RANGE )
                    {
                    // InternalSqlParser.g:3727:6: ( RANGE )
                    // InternalSqlParser.g:3728:1: RANGE
                    {
                     before(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 
                    match(input,RANGE,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_0"


    // $ANTLR start "rule__WindowingClause__Alternatives_1"
    // InternalSqlParser.g:3740:1: rule__WindowingClause__Alternatives_1 : ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) );
    public final void rule__WindowingClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3744:1: ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==BETWEEN) ) {
                alt37=1;
            }
            else if ( (LA37_0==UNBOUNDEDPRECEDING||LA37_0==CURRENTROW||LA37_0==EXTRACT||LA37_0==CAST||LA37_0==CASE||LA37_0==LeftParenthesis||(LA37_0>=RULE_JRPARAM && LA37_0<=RULE_JRNPARAM)||(LA37_0>=RULE_UNSIGNED && LA37_0<=RULE_SIGNED_DOUBLE)||(LA37_0>=RULE_STRING_ && LA37_0<=RULE_ID)) ) {
                alt37=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalSqlParser.g:3745:1: ( ruleWindowingClauseBetween )
                    {
                    // InternalSqlParser.g:3745:1: ( ruleWindowingClauseBetween )
                    // InternalSqlParser.g:3746:1: ruleWindowingClauseBetween
                    {
                     before(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseBetween();

                    state._fsp--;

                     after(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3751:6: ( ruleWindowingClauseOperandPreceding )
                    {
                    // InternalSqlParser.g:3751:6: ( ruleWindowingClauseOperandPreceding )
                    // InternalSqlParser.g:3752:1: ruleWindowingClauseOperandPreceding
                    {
                     before(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseOperandPreceding();

                    state._fsp--;

                     after(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1"
    // InternalSqlParser.g:3762:1: rule__WindowingClauseOperandFollowing__Alternatives_1 : ( ( UNBOUNDEDFOLLOWING ) | ( CURRENTROW ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3766:1: ( ( UNBOUNDEDFOLLOWING ) | ( CURRENTROW ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) )
            int alt38=3;
            switch ( input.LA(1) ) {
            case UNBOUNDEDFOLLOWING:
                {
                alt38=1;
                }
                break;
            case CURRENTROW:
                {
                alt38=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt38=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalSqlParser.g:3767:1: ( UNBOUNDEDFOLLOWING )
                    {
                    // InternalSqlParser.g:3767:1: ( UNBOUNDEDFOLLOWING )
                    // InternalSqlParser.g:3768:1: UNBOUNDEDFOLLOWING
                    {
                     before(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDFOLLOWINGKeyword_1_0()); 
                    match(input,UNBOUNDEDFOLLOWING,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDFOLLOWINGKeyword_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3775:6: ( CURRENTROW )
                    {
                    // InternalSqlParser.g:3775:6: ( CURRENTROW )
                    // InternalSqlParser.g:3776:1: CURRENTROW
                    {
                     before(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTROWKeyword_1_1()); 
                    match(input,CURRENTROW,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTROWKeyword_1_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3783:6: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    {
                    // InternalSqlParser.g:3783:6: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    // InternalSqlParser.g:3784:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    {
                     before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 
                    // InternalSqlParser.g:3785:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    // InternalSqlParser.g:3785:2: rule__WindowingClauseOperandFollowing__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"
    // InternalSqlParser.g:3794:1: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3798:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==PRECEDING) ) {
                alt39=1;
            }
            else if ( (LA39_0==KW_FOLLOWING) ) {
                alt39=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalSqlParser.g:3799:1: ( PRECEDING )
                    {
                    // InternalSqlParser.g:3799:1: ( PRECEDING )
                    // InternalSqlParser.g:3800:1: PRECEDING
                    {
                     before(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    match(input,PRECEDING,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3807:6: ( KW_FOLLOWING )
                    {
                    // InternalSqlParser.g:3807:6: ( KW_FOLLOWING )
                    // InternalSqlParser.g:3808:1: KW_FOLLOWING
                    {
                     before(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    match(input,KW_FOLLOWING,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1"
    // InternalSqlParser.g:3820:1: rule__WindowingClauseOperandPreceding__Alternatives_1 : ( ( UNBOUNDEDPRECEDING ) | ( CURRENTROW ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3824:1: ( ( UNBOUNDEDPRECEDING ) | ( CURRENTROW ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) )
            int alt40=3;
            switch ( input.LA(1) ) {
            case UNBOUNDEDPRECEDING:
                {
                alt40=1;
                }
                break;
            case CURRENTROW:
                {
                alt40=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt40=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // InternalSqlParser.g:3825:1: ( UNBOUNDEDPRECEDING )
                    {
                    // InternalSqlParser.g:3825:1: ( UNBOUNDEDPRECEDING )
                    // InternalSqlParser.g:3826:1: UNBOUNDEDPRECEDING
                    {
                     before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDPRECEDINGKeyword_1_0()); 
                    match(input,UNBOUNDEDPRECEDING,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDPRECEDINGKeyword_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3833:6: ( CURRENTROW )
                    {
                    // InternalSqlParser.g:3833:6: ( CURRENTROW )
                    // InternalSqlParser.g:3834:1: CURRENTROW
                    {
                     before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTROWKeyword_1_1()); 
                    match(input,CURRENTROW,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTROWKeyword_1_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3841:6: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    {
                    // InternalSqlParser.g:3841:6: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    // InternalSqlParser.g:3842:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    {
                     before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 
                    // InternalSqlParser.g:3843:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    // InternalSqlParser.g:3843:2: rule__WindowingClauseOperandPreceding__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"
    // InternalSqlParser.g:3852:1: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3856:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==PRECEDING) ) {
                alt41=1;
            }
            else if ( (LA41_0==KW_FOLLOWING) ) {
                alt41=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalSqlParser.g:3857:1: ( PRECEDING )
                    {
                    // InternalSqlParser.g:3857:1: ( PRECEDING )
                    // InternalSqlParser.g:3858:1: PRECEDING
                    {
                     before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    match(input,PRECEDING,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3865:6: ( KW_FOLLOWING )
                    {
                    // InternalSqlParser.g:3865:6: ( KW_FOLLOWING )
                    // InternalSqlParser.g:3866:1: KW_FOLLOWING
                    {
                     before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    match(input,KW_FOLLOWING,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"


    // $ANTLR start "rule__OrderByClause__Alternatives_0"
    // InternalSqlParser.g:3878:1: rule__OrderByClause__Alternatives_0 : ( ( ORDERBY ) | ( ORDERSIBLINGSBY ) );
    public final void rule__OrderByClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3882:1: ( ( ORDERBY ) | ( ORDERSIBLINGSBY ) )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==ORDERBY) ) {
                alt42=1;
            }
            else if ( (LA42_0==ORDERSIBLINGSBY) ) {
                alt42=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalSqlParser.g:3883:1: ( ORDERBY )
                    {
                    // InternalSqlParser.g:3883:1: ( ORDERBY )
                    // InternalSqlParser.g:3884:1: ORDERBY
                    {
                     before(grammarAccess.getOrderByClauseAccess().getORDERBYKeyword_0_0()); 
                    match(input,ORDERBY,FOLLOW_2); 
                     after(grammarAccess.getOrderByClauseAccess().getORDERBYKeyword_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3891:6: ( ORDERSIBLINGSBY )
                    {
                    // InternalSqlParser.g:3891:6: ( ORDERSIBLINGSBY )
                    // InternalSqlParser.g:3892:1: ORDERSIBLINGSBY
                    {
                     before(grammarAccess.getOrderByClauseAccess().getORDERSIBLINGSBYKeyword_0_1()); 
                    match(input,ORDERSIBLINGSBY,FOLLOW_2); 
                     after(grammarAccess.getOrderByClauseAccess().getORDERSIBLINGSBYKeyword_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Alternatives_0"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_1"
    // InternalSqlParser.g:3904:1: rule__OrderByClauseArg__Alternatives_1 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByClauseArg__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3908:1: ( ( ASC ) | ( DESC ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==ASC) ) {
                alt43=1;
            }
            else if ( (LA43_0==DESC) ) {
                alt43=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalSqlParser.g:3909:1: ( ASC )
                    {
                    // InternalSqlParser.g:3909:1: ( ASC )
                    // InternalSqlParser.g:3910:1: ASC
                    {
                     before(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 
                    match(input,ASC,FOLLOW_2); 
                     after(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3917:6: ( DESC )
                    {
                    // InternalSqlParser.g:3917:6: ( DESC )
                    // InternalSqlParser.g:3918:1: DESC
                    {
                     before(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 
                    match(input,DESC,FOLLOW_2); 
                     after(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_1"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_2_1"
    // InternalSqlParser.g:3930:1: rule__OrderByClauseArg__Alternatives_2_1 : ( ( FIRST ) | ( LAST ) );
    public final void rule__OrderByClauseArg__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3934:1: ( ( FIRST ) | ( LAST ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==FIRST) ) {
                alt44=1;
            }
            else if ( (LA44_0==LAST) ) {
                alt44=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalSqlParser.g:3935:1: ( FIRST )
                    {
                    // InternalSqlParser.g:3935:1: ( FIRST )
                    // InternalSqlParser.g:3936:1: FIRST
                    {
                     before(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 
                    match(input,FIRST,FOLLOW_2); 
                     after(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3943:6: ( LAST )
                    {
                    // InternalSqlParser.g:3943:6: ( LAST )
                    // InternalSqlParser.g:3944:1: LAST
                    {
                     before(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 
                    match(input,LAST,FOLLOW_2); 
                     after(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_2_1"


    // $ANTLR start "rule__QueryPartitionClause__Alternatives_1"
    // InternalSqlParser.g:3956:1: rule__QueryPartitionClause__Alternatives_1 : ( ( ( rule__QueryPartitionClause__ArgsAssignment_1_0 ) ) | ( ( rule__QueryPartitionClause__Group_1_1__0 ) ) );
    public final void rule__QueryPartitionClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3960:1: ( ( ( rule__QueryPartitionClause__ArgsAssignment_1_0 ) ) | ( ( rule__QueryPartitionClause__Group_1_1__0 ) ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==EXTRACT||LA45_0==CAST||LA45_0==CASE||(LA45_0>=RULE_JRPARAM && LA45_0<=RULE_JRNPARAM)||(LA45_0>=RULE_UNSIGNED && LA45_0<=RULE_SIGNED_DOUBLE)||(LA45_0>=RULE_STRING_ && LA45_0<=RULE_ID)) ) {
                alt45=1;
            }
            else if ( (LA45_0==LeftParenthesis) ) {
                int LA45_2 = input.LA(2);

                if ( (LA45_2==EXTRACT||LA45_2==CAST||LA45_2==CASE||LA45_2==LeftParenthesis||(LA45_2>=RULE_JRPARAM && LA45_2<=RULE_JRNPARAM)||(LA45_2>=RULE_UNSIGNED && LA45_2<=RULE_SIGNED_DOUBLE)||(LA45_2>=RULE_STRING_ && LA45_2<=RULE_ID)) ) {
                    alt45=2;
                }
                else if ( (LA45_2==SELECT) ) {
                    alt45=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 2, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalSqlParser.g:3961:1: ( ( rule__QueryPartitionClause__ArgsAssignment_1_0 ) )
                    {
                    // InternalSqlParser.g:3961:1: ( ( rule__QueryPartitionClause__ArgsAssignment_1_0 ) )
                    // InternalSqlParser.g:3962:1: ( rule__QueryPartitionClause__ArgsAssignment_1_0 )
                    {
                     before(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_1_0()); 
                    // InternalSqlParser.g:3963:1: ( rule__QueryPartitionClause__ArgsAssignment_1_0 )
                    // InternalSqlParser.g:3963:2: rule__QueryPartitionClause__ArgsAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__ArgsAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3967:6: ( ( rule__QueryPartitionClause__Group_1_1__0 ) )
                    {
                    // InternalSqlParser.g:3967:6: ( ( rule__QueryPartitionClause__Group_1_1__0 ) )
                    // InternalSqlParser.g:3968:1: ( rule__QueryPartitionClause__Group_1_1__0 )
                    {
                     before(grammarAccess.getQueryPartitionClauseAccess().getGroup_1_1()); 
                    // InternalSqlParser.g:3969:1: ( rule__QueryPartitionClause__Group_1_1__0 )
                    // InternalSqlParser.g:3969:2: rule__QueryPartitionClause__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getQueryPartitionClauseAccess().getGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Alternatives_1"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAlternatives_0"
    // InternalSqlParser.g:3978:1: rule__OpFunctionArgOperand__OpAlternatives_0 : ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) );
    public final void rule__OpFunctionArgOperand__OpAlternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3982:1: ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==DISTINCT||LA46_0==ALL) ) {
                alt46=1;
            }
            else if ( (LA46_0==EXTRACT||LA46_0==CAST||LA46_0==CASE||LA46_0==LeftParenthesis||(LA46_0>=RULE_JRPARAM && LA46_0<=RULE_JRNPARAM)||(LA46_0>=RULE_UNSIGNED && LA46_0<=RULE_SIGNED_DOUBLE)||(LA46_0>=RULE_STRING_ && LA46_0<=RULE_ID)) ) {
                alt46=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalSqlParser.g:3983:1: ( ruleOpFunctionArgAgregate )
                    {
                    // InternalSqlParser.g:3983:1: ( ruleOpFunctionArgAgregate )
                    // InternalSqlParser.g:3984:1: ruleOpFunctionArgAgregate
                    {
                     before(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 
                    pushFollow(FOLLOW_2);
                    ruleOpFunctionArgAgregate();

                    state._fsp--;

                     after(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3989:6: ( ruleOperand )
                    {
                    // InternalSqlParser.g:3989:6: ( ruleOperand )
                    // InternalSqlParser.g:3990:1: ruleOperand
                    {
                     before(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;

                     after(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAlternatives_0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Alternatives_0"
    // InternalSqlParser.g:4000:1: rule__OpFunctionArgAgregate__Alternatives_0 : ( ( ALL ) | ( DISTINCT ) );
    public final void rule__OpFunctionArgAgregate__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4004:1: ( ( ALL ) | ( DISTINCT ) )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==ALL) ) {
                alt47=1;
            }
            else if ( (LA47_0==DISTINCT) ) {
                alt47=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalSqlParser.g:4005:1: ( ALL )
                    {
                    // InternalSqlParser.g:4005:1: ( ALL )
                    // InternalSqlParser.g:4006:1: ALL
                    {
                     before(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 
                    match(input,ALL,FOLLOW_2); 
                     after(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4013:6: ( DISTINCT )
                    {
                    // InternalSqlParser.g:4013:6: ( DISTINCT )
                    // InternalSqlParser.g:4014:1: DISTINCT
                    {
                     before(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 
                    match(input,DISTINCT,FOLLOW_2); 
                     after(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Alternatives_0"


    // $ANTLR start "rule__XOperandFragment__Alternatives"
    // InternalSqlParser.g:4026:1: rule__XOperandFragment__Alternatives : ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) );
    public final void rule__XOperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4030:1: ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) )
            int alt48=3;
            switch ( input.LA(1) ) {
            case RULE_JRPARAM:
                {
                alt48=1;
                }
                break;
            case RULE_JRNPARAM:
                {
                alt48=2;
                }
                break;
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt48=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // InternalSqlParser.g:4031:1: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    {
                    // InternalSqlParser.g:4031:1: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    // InternalSqlParser.g:4032:1: ( rule__XOperandFragment__ParamAssignment_0 )
                    {
                     before(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 
                    // InternalSqlParser.g:4033:1: ( rule__XOperandFragment__ParamAssignment_0 )
                    // InternalSqlParser.g:4033:2: rule__XOperandFragment__ParamAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ParamAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4037:6: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    {
                    // InternalSqlParser.g:4037:6: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    // InternalSqlParser.g:4038:1: ( rule__XOperandFragment__EparamAssignment_1 )
                    {
                     before(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 
                    // InternalSqlParser.g:4039:1: ( rule__XOperandFragment__EparamAssignment_1 )
                    // InternalSqlParser.g:4039:2: rule__XOperandFragment__EparamAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__EparamAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4043:6: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    {
                    // InternalSqlParser.g:4043:6: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    // InternalSqlParser.g:4044:1: ( rule__XOperandFragment__ScalarAssignment_2 )
                    {
                     before(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 
                    // InternalSqlParser.g:4045:1: ( rule__XOperandFragment__ScalarAssignment_2 )
                    // InternalSqlParser.g:4045:2: rule__XOperandFragment__ScalarAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ScalarAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__Alternatives"


    // $ANTLR start "rule__ScalarOperand__Alternatives"
    // InternalSqlParser.g:4054:1: rule__ScalarOperand__Alternatives : ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) );
    public final void rule__ScalarOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4058:1: ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) )
            int alt49=5;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt49=1;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt49=2;
                }
                break;
            case RULE_DATE:
                {
                alt49=3;
                }
                break;
            case RULE_TIME:
                {
                alt49=4;
                }
                break;
            case RULE_TIMESTAMP:
                {
                alt49=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // InternalSqlParser.g:4059:1: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    {
                    // InternalSqlParser.g:4059:1: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    // InternalSqlParser.g:4060:1: ( rule__ScalarOperand__SostrAssignment_0 )
                    {
                     before(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 
                    // InternalSqlParser.g:4061:1: ( rule__ScalarOperand__SostrAssignment_0 )
                    // InternalSqlParser.g:4061:2: rule__ScalarOperand__SostrAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SostrAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4065:6: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    {
                    // InternalSqlParser.g:4065:6: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    // InternalSqlParser.g:4066:1: ( rule__ScalarOperand__SodblAssignment_1 )
                    {
                     before(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 
                    // InternalSqlParser.g:4067:1: ( rule__ScalarOperand__SodblAssignment_1 )
                    // InternalSqlParser.g:4067:2: rule__ScalarOperand__SodblAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodblAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4071:6: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    {
                    // InternalSqlParser.g:4071:6: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    // InternalSqlParser.g:4072:1: ( rule__ScalarOperand__SodateAssignment_2 )
                    {
                     before(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 
                    // InternalSqlParser.g:4073:1: ( rule__ScalarOperand__SodateAssignment_2 )
                    // InternalSqlParser.g:4073:2: rule__ScalarOperand__SodateAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodateAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4077:6: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    {
                    // InternalSqlParser.g:4077:6: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    // InternalSqlParser.g:4078:1: ( rule__ScalarOperand__SotimeAssignment_3 )
                    {
                     before(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 
                    // InternalSqlParser.g:4079:1: ( rule__ScalarOperand__SotimeAssignment_3 )
                    // InternalSqlParser.g:4079:2: rule__ScalarOperand__SotimeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SotimeAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:4083:6: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    {
                    // InternalSqlParser.g:4083:6: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    // InternalSqlParser.g:4084:1: ( rule__ScalarOperand__SodtAssignment_4 )
                    {
                     before(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 
                    // InternalSqlParser.g:4085:1: ( rule__ScalarOperand__SodtAssignment_4 )
                    // InternalSqlParser.g:4085:2: rule__ScalarOperand__SodtAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodtAssignment_4();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__Alternatives"


    // $ANTLR start "rule__ScalarNumberOperand__Alternatives"
    // InternalSqlParser.g:4094:1: rule__ScalarNumberOperand__Alternatives : ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) );
    public final void rule__ScalarNumberOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4098:1: ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) )
            int alt50=4;
            switch ( input.LA(1) ) {
            case RULE_UNSIGNED:
                {
                alt50=1;
                }
                break;
            case RULE_INT:
                {
                alt50=2;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt50=3;
                }
                break;
            case RULE_STRING_:
                {
                alt50=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalSqlParser.g:4099:1: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    {
                    // InternalSqlParser.g:4099:1: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    // InternalSqlParser.g:4100:1: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    {
                     before(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 
                    // InternalSqlParser.g:4101:1: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    // InternalSqlParser.g:4101:2: rule__ScalarNumberOperand__SoUIntAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SoUIntAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4105:6: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    {
                    // InternalSqlParser.g:4105:6: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    // InternalSqlParser.g:4106:1: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    {
                     before(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 
                    // InternalSqlParser.g:4107:1: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    // InternalSqlParser.g:4107:2: rule__ScalarNumberOperand__SointAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SointAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4111:6: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    {
                    // InternalSqlParser.g:4111:6: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    // InternalSqlParser.g:4112:1: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    {
                     before(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 
                    // InternalSqlParser.g:4113:1: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    // InternalSqlParser.g:4113:2: rule__ScalarNumberOperand__SodblAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SodblAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4117:6: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    {
                    // InternalSqlParser.g:4117:6: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    // InternalSqlParser.g:4118:1: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    {
                     before(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 
                    // InternalSqlParser.g:4119:1: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    // InternalSqlParser.g:4119:2: rule__ScalarNumberOperand__SostrAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SostrAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__Alternatives"


    // $ANTLR start "rule__JoinType__Alternatives_1"
    // InternalSqlParser.g:4128:1: rule__JoinType__Alternatives_1 : ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) );
    public final void rule__JoinType__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4132:1: ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) )
            int alt51=4;
            switch ( input.LA(1) ) {
            case INNER:
                {
                alt51=1;
                }
                break;
            case RIGHT:
            case FULL:
            case LEFT:
                {
                alt51=2;
                }
                break;
            case CROSS:
                {
                alt51=3;
                }
                break;
            case STRAIGHT_JOIN:
                {
                alt51=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }

            switch (alt51) {
                case 1 :
                    // InternalSqlParser.g:4133:1: ( INNER )
                    {
                    // InternalSqlParser.g:4133:1: ( INNER )
                    // InternalSqlParser.g:4134:1: INNER
                    {
                     before(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 
                    match(input,INNER,FOLLOW_2); 
                     after(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4141:6: ( ( rule__JoinType__Group_1_1__0 ) )
                    {
                    // InternalSqlParser.g:4141:6: ( ( rule__JoinType__Group_1_1__0 ) )
                    // InternalSqlParser.g:4142:1: ( rule__JoinType__Group_1_1__0 )
                    {
                     before(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 
                    // InternalSqlParser.g:4143:1: ( rule__JoinType__Group_1_1__0 )
                    // InternalSqlParser.g:4143:2: rule__JoinType__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4147:6: ( CROSS )
                    {
                    // InternalSqlParser.g:4147:6: ( CROSS )
                    // InternalSqlParser.g:4148:1: CROSS
                    {
                     before(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 
                    match(input,CROSS,FOLLOW_2); 
                     after(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4155:6: ( STRAIGHT_JOIN )
                    {
                    // InternalSqlParser.g:4155:6: ( STRAIGHT_JOIN )
                    // InternalSqlParser.g:4156:1: STRAIGHT_JOIN
                    {
                     before(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 
                    match(input,STRAIGHT_JOIN,FOLLOW_2); 
                     after(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1"


    // $ANTLR start "rule__JoinType__Alternatives_1_1_0"
    // InternalSqlParser.g:4168:1: rule__JoinType__Alternatives_1_1_0 : ( ( LEFT ) | ( RIGHT ) | ( FULL ) );
    public final void rule__JoinType__Alternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4172:1: ( ( LEFT ) | ( RIGHT ) | ( FULL ) )
            int alt52=3;
            switch ( input.LA(1) ) {
            case LEFT:
                {
                alt52=1;
                }
                break;
            case RIGHT:
                {
                alt52=2;
                }
                break;
            case FULL:
                {
                alt52=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalSqlParser.g:4173:1: ( LEFT )
                    {
                    // InternalSqlParser.g:4173:1: ( LEFT )
                    // InternalSqlParser.g:4174:1: LEFT
                    {
                     before(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 
                    match(input,LEFT,FOLLOW_2); 
                     after(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4181:6: ( RIGHT )
                    {
                    // InternalSqlParser.g:4181:6: ( RIGHT )
                    // InternalSqlParser.g:4182:1: RIGHT
                    {
                     before(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 
                    match(input,RIGHT,FOLLOW_2); 
                     after(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4189:6: ( FULL )
                    {
                    // InternalSqlParser.g:4189:6: ( FULL )
                    // InternalSqlParser.g:4190:1: FULL
                    {
                     before(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 
                    match(input,FULL,FOLLOW_2); 
                     after(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1_1_0"


    // $ANTLR start "rule__DBID__Alternatives"
    // InternalSqlParser.g:4202:1: rule__DBID__Alternatives : ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) );
    public final void rule__DBID__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4206:1: ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) )
            int alt53=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt53=1;
                }
                break;
            case RULE_DBNAME:
                {
                alt53=2;
                }
                break;
            case RULE_STRING:
                {
                alt53=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalSqlParser.g:4207:1: ( RULE_ID )
                    {
                    // InternalSqlParser.g:4207:1: ( RULE_ID )
                    // InternalSqlParser.g:4208:1: RULE_ID
                    {
                     before(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 
                    match(input,RULE_ID,FOLLOW_2); 
                     after(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4213:6: ( RULE_DBNAME )
                    {
                    // InternalSqlParser.g:4213:6: ( RULE_DBNAME )
                    // InternalSqlParser.g:4214:1: RULE_DBNAME
                    {
                     before(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 
                    match(input,RULE_DBNAME,FOLLOW_2); 
                     after(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4219:6: ( RULE_STRING )
                    {
                    // InternalSqlParser.g:4219:6: ( RULE_STRING )
                    // InternalSqlParser.g:4220:1: RULE_STRING
                    {
                     before(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 
                    match(input,RULE_STRING,FOLLOW_2); 
                     after(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DBID__Alternatives"


    // $ANTLR start "rule__EXTRACT_VALUES__Alternatives"
    // InternalSqlParser.g:4230:1: rule__EXTRACT_VALUES__Alternatives : ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) );
    public final void rule__EXTRACT_VALUES__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4234:1: ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) )
            int alt54=20;
            switch ( input.LA(1) ) {
            case MICROSECOND:
                {
                alt54=1;
                }
                break;
            case SECOND:
                {
                alt54=2;
                }
                break;
            case MINUTE:
                {
                alt54=3;
                }
                break;
            case HOUR:
                {
                alt54=4;
                }
                break;
            case DAY:
                {
                alt54=5;
                }
                break;
            case WEEK:
                {
                alt54=6;
                }
                break;
            case MONTH:
                {
                alt54=7;
                }
                break;
            case QUARTER:
                {
                alt54=8;
                }
                break;
            case YEAR:
                {
                alt54=9;
                }
                break;
            case SECOND_MICROSECOND:
                {
                alt54=10;
                }
                break;
            case MINUTE_MICROSECOND:
                {
                alt54=11;
                }
                break;
            case MINUTE_SECOND:
                {
                alt54=12;
                }
                break;
            case HOUR_MICROSECOND:
                {
                alt54=13;
                }
                break;
            case HOUR_SECOND:
                {
                alt54=14;
                }
                break;
            case HOUR_MINUTE:
                {
                alt54=15;
                }
                break;
            case DAY_MICROSECOND:
                {
                alt54=16;
                }
                break;
            case DAY_SECOND:
                {
                alt54=17;
                }
                break;
            case DAY_MINUTE:
                {
                alt54=18;
                }
                break;
            case DAY_HOUR:
                {
                alt54=19;
                }
                break;
            case YEAR_MONTH:
                {
                alt54=20;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }

            switch (alt54) {
                case 1 :
                    // InternalSqlParser.g:4235:1: ( ( MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4235:1: ( ( MICROSECOND ) )
                    // InternalSqlParser.g:4236:1: ( MICROSECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 
                    // InternalSqlParser.g:4237:1: ( MICROSECOND )
                    // InternalSqlParser.g:4237:3: MICROSECOND
                    {
                    match(input,MICROSECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4242:6: ( ( SECOND ) )
                    {
                    // InternalSqlParser.g:4242:6: ( ( SECOND ) )
                    // InternalSqlParser.g:4243:1: ( SECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 
                    // InternalSqlParser.g:4244:1: ( SECOND )
                    // InternalSqlParser.g:4244:3: SECOND
                    {
                    match(input,SECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4249:6: ( ( MINUTE ) )
                    {
                    // InternalSqlParser.g:4249:6: ( ( MINUTE ) )
                    // InternalSqlParser.g:4250:1: ( MINUTE )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 
                    // InternalSqlParser.g:4251:1: ( MINUTE )
                    // InternalSqlParser.g:4251:3: MINUTE
                    {
                    match(input,MINUTE,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4256:6: ( ( HOUR ) )
                    {
                    // InternalSqlParser.g:4256:6: ( ( HOUR ) )
                    // InternalSqlParser.g:4257:1: ( HOUR )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 
                    // InternalSqlParser.g:4258:1: ( HOUR )
                    // InternalSqlParser.g:4258:3: HOUR
                    {
                    match(input,HOUR,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:4263:6: ( ( DAY ) )
                    {
                    // InternalSqlParser.g:4263:6: ( ( DAY ) )
                    // InternalSqlParser.g:4264:1: ( DAY )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 
                    // InternalSqlParser.g:4265:1: ( DAY )
                    // InternalSqlParser.g:4265:3: DAY
                    {
                    match(input,DAY,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:4270:6: ( ( WEEK ) )
                    {
                    // InternalSqlParser.g:4270:6: ( ( WEEK ) )
                    // InternalSqlParser.g:4271:1: ( WEEK )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 
                    // InternalSqlParser.g:4272:1: ( WEEK )
                    // InternalSqlParser.g:4272:3: WEEK
                    {
                    match(input,WEEK,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalSqlParser.g:4277:6: ( ( MONTH ) )
                    {
                    // InternalSqlParser.g:4277:6: ( ( MONTH ) )
                    // InternalSqlParser.g:4278:1: ( MONTH )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 
                    // InternalSqlParser.g:4279:1: ( MONTH )
                    // InternalSqlParser.g:4279:3: MONTH
                    {
                    match(input,MONTH,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 

                    }


                    }
                    break;
                case 8 :
                    // InternalSqlParser.g:4284:6: ( ( QUARTER ) )
                    {
                    // InternalSqlParser.g:4284:6: ( ( QUARTER ) )
                    // InternalSqlParser.g:4285:1: ( QUARTER )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 
                    // InternalSqlParser.g:4286:1: ( QUARTER )
                    // InternalSqlParser.g:4286:3: QUARTER
                    {
                    match(input,QUARTER,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 

                    }


                    }
                    break;
                case 9 :
                    // InternalSqlParser.g:4291:6: ( ( YEAR ) )
                    {
                    // InternalSqlParser.g:4291:6: ( ( YEAR ) )
                    // InternalSqlParser.g:4292:1: ( YEAR )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 
                    // InternalSqlParser.g:4293:1: ( YEAR )
                    // InternalSqlParser.g:4293:3: YEAR
                    {
                    match(input,YEAR,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 

                    }


                    }
                    break;
                case 10 :
                    // InternalSqlParser.g:4298:6: ( ( SECOND_MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4298:6: ( ( SECOND_MICROSECOND ) )
                    // InternalSqlParser.g:4299:1: ( SECOND_MICROSECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 
                    // InternalSqlParser.g:4300:1: ( SECOND_MICROSECOND )
                    // InternalSqlParser.g:4300:3: SECOND_MICROSECOND
                    {
                    match(input,SECOND_MICROSECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 

                    }


                    }
                    break;
                case 11 :
                    // InternalSqlParser.g:4305:6: ( ( MINUTE_MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4305:6: ( ( MINUTE_MICROSECOND ) )
                    // InternalSqlParser.g:4306:1: ( MINUTE_MICROSECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 
                    // InternalSqlParser.g:4307:1: ( MINUTE_MICROSECOND )
                    // InternalSqlParser.g:4307:3: MINUTE_MICROSECOND
                    {
                    match(input,MINUTE_MICROSECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 

                    }


                    }
                    break;
                case 12 :
                    // InternalSqlParser.g:4312:6: ( ( MINUTE_SECOND ) )
                    {
                    // InternalSqlParser.g:4312:6: ( ( MINUTE_SECOND ) )
                    // InternalSqlParser.g:4313:1: ( MINUTE_SECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 
                    // InternalSqlParser.g:4314:1: ( MINUTE_SECOND )
                    // InternalSqlParser.g:4314:3: MINUTE_SECOND
                    {
                    match(input,MINUTE_SECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 

                    }


                    }
                    break;
                case 13 :
                    // InternalSqlParser.g:4319:6: ( ( HOUR_MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4319:6: ( ( HOUR_MICROSECOND ) )
                    // InternalSqlParser.g:4320:1: ( HOUR_MICROSECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 
                    // InternalSqlParser.g:4321:1: ( HOUR_MICROSECOND )
                    // InternalSqlParser.g:4321:3: HOUR_MICROSECOND
                    {
                    match(input,HOUR_MICROSECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 

                    }


                    }
                    break;
                case 14 :
                    // InternalSqlParser.g:4326:6: ( ( HOUR_SECOND ) )
                    {
                    // InternalSqlParser.g:4326:6: ( ( HOUR_SECOND ) )
                    // InternalSqlParser.g:4327:1: ( HOUR_SECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 
                    // InternalSqlParser.g:4328:1: ( HOUR_SECOND )
                    // InternalSqlParser.g:4328:3: HOUR_SECOND
                    {
                    match(input,HOUR_SECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 

                    }


                    }
                    break;
                case 15 :
                    // InternalSqlParser.g:4333:6: ( ( HOUR_MINUTE ) )
                    {
                    // InternalSqlParser.g:4333:6: ( ( HOUR_MINUTE ) )
                    // InternalSqlParser.g:4334:1: ( HOUR_MINUTE )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 
                    // InternalSqlParser.g:4335:1: ( HOUR_MINUTE )
                    // InternalSqlParser.g:4335:3: HOUR_MINUTE
                    {
                    match(input,HOUR_MINUTE,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 

                    }


                    }
                    break;
                case 16 :
                    // InternalSqlParser.g:4340:6: ( ( DAY_MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4340:6: ( ( DAY_MICROSECOND ) )
                    // InternalSqlParser.g:4341:1: ( DAY_MICROSECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 
                    // InternalSqlParser.g:4342:1: ( DAY_MICROSECOND )
                    // InternalSqlParser.g:4342:3: DAY_MICROSECOND
                    {
                    match(input,DAY_MICROSECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 

                    }


                    }
                    break;
                case 17 :
                    // InternalSqlParser.g:4347:6: ( ( DAY_SECOND ) )
                    {
                    // InternalSqlParser.g:4347:6: ( ( DAY_SECOND ) )
                    // InternalSqlParser.g:4348:1: ( DAY_SECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 
                    // InternalSqlParser.g:4349:1: ( DAY_SECOND )
                    // InternalSqlParser.g:4349:3: DAY_SECOND
                    {
                    match(input,DAY_SECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 

                    }


                    }
                    break;
                case 18 :
                    // InternalSqlParser.g:4354:6: ( ( DAY_MINUTE ) )
                    {
                    // InternalSqlParser.g:4354:6: ( ( DAY_MINUTE ) )
                    // InternalSqlParser.g:4355:1: ( DAY_MINUTE )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 
                    // InternalSqlParser.g:4356:1: ( DAY_MINUTE )
                    // InternalSqlParser.g:4356:3: DAY_MINUTE
                    {
                    match(input,DAY_MINUTE,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 

                    }


                    }
                    break;
                case 19 :
                    // InternalSqlParser.g:4361:6: ( ( DAY_HOUR ) )
                    {
                    // InternalSqlParser.g:4361:6: ( ( DAY_HOUR ) )
                    // InternalSqlParser.g:4362:1: ( DAY_HOUR )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 
                    // InternalSqlParser.g:4363:1: ( DAY_HOUR )
                    // InternalSqlParser.g:4363:3: DAY_HOUR
                    {
                    match(input,DAY_HOUR,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 

                    }


                    }
                    break;
                case 20 :
                    // InternalSqlParser.g:4368:6: ( ( YEAR_MONTH ) )
                    {
                    // InternalSqlParser.g:4368:6: ( ( YEAR_MONTH ) )
                    // InternalSqlParser.g:4369:1: ( YEAR_MONTH )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 
                    // InternalSqlParser.g:4370:1: ( YEAR_MONTH )
                    // InternalSqlParser.g:4370:3: YEAR_MONTH
                    {
                    match(input,YEAR_MONTH,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EXTRACT_VALUES__Alternatives"


    // $ANTLR start "rule__XFunction__Alternatives"
    // InternalSqlParser.g:4380:1: rule__XFunction__Alternatives : ( ( ( IN ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( GREATER ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( BETWEEN ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) | ( ( BETWEEN_1 ) ) );
    public final void rule__XFunction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4384:1: ( ( ( IN ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( GREATER ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( BETWEEN ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) | ( ( BETWEEN_1 ) ) )
            int alt55=12;
            switch ( input.LA(1) ) {
            case IN:
                {
                alt55=1;
                }
                break;
            case NOTIN:
                {
                alt55=2;
                }
                break;
            case EQUAL:
                {
                alt55=3;
                }
                break;
            case NOTEQUAL:
                {
                alt55=4;
                }
                break;
            case LESS:
                {
                alt55=5;
                }
                break;
            case GREATER:
                {
                alt55=6;
                }
                break;
            case LESS_1:
                {
                alt55=7;
                }
                break;
            case GREATER_1:
                {
                alt55=8;
                }
                break;
            case BETWEEN:
                {
                alt55=9;
                }
                break;
            case BETWEEN_3:
                {
                alt55=10;
                }
                break;
            case BETWEEN_2:
                {
                alt55=11;
                }
                break;
            case BETWEEN_1:
                {
                alt55=12;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }

            switch (alt55) {
                case 1 :
                    // InternalSqlParser.g:4385:1: ( ( IN ) )
                    {
                    // InternalSqlParser.g:4385:1: ( ( IN ) )
                    // InternalSqlParser.g:4386:1: ( IN )
                    {
                     before(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 
                    // InternalSqlParser.g:4387:1: ( IN )
                    // InternalSqlParser.g:4387:3: IN
                    {
                    match(input,IN,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4392:6: ( ( NOTIN ) )
                    {
                    // InternalSqlParser.g:4392:6: ( ( NOTIN ) )
                    // InternalSqlParser.g:4393:1: ( NOTIN )
                    {
                     before(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 
                    // InternalSqlParser.g:4394:1: ( NOTIN )
                    // InternalSqlParser.g:4394:3: NOTIN
                    {
                    match(input,NOTIN,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4399:6: ( ( EQUAL ) )
                    {
                    // InternalSqlParser.g:4399:6: ( ( EQUAL ) )
                    // InternalSqlParser.g:4400:1: ( EQUAL )
                    {
                     before(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 
                    // InternalSqlParser.g:4401:1: ( EQUAL )
                    // InternalSqlParser.g:4401:3: EQUAL
                    {
                    match(input,EQUAL,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4406:6: ( ( NOTEQUAL ) )
                    {
                    // InternalSqlParser.g:4406:6: ( ( NOTEQUAL ) )
                    // InternalSqlParser.g:4407:1: ( NOTEQUAL )
                    {
                     before(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 
                    // InternalSqlParser.g:4408:1: ( NOTEQUAL )
                    // InternalSqlParser.g:4408:3: NOTEQUAL
                    {
                    match(input,NOTEQUAL,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:4413:6: ( ( LESS ) )
                    {
                    // InternalSqlParser.g:4413:6: ( ( LESS ) )
                    // InternalSqlParser.g:4414:1: ( LESS )
                    {
                     before(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 
                    // InternalSqlParser.g:4415:1: ( LESS )
                    // InternalSqlParser.g:4415:3: LESS
                    {
                    match(input,LESS,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:4420:6: ( ( GREATER ) )
                    {
                    // InternalSqlParser.g:4420:6: ( ( GREATER ) )
                    // InternalSqlParser.g:4421:1: ( GREATER )
                    {
                     before(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_5()); 
                    // InternalSqlParser.g:4422:1: ( GREATER )
                    // InternalSqlParser.g:4422:3: GREATER
                    {
                    match(input,GREATER,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalSqlParser.g:4427:6: ( ( LESS_1 ) )
                    {
                    // InternalSqlParser.g:4427:6: ( ( LESS_1 ) )
                    // InternalSqlParser.g:4428:1: ( LESS_1 )
                    {
                     before(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_6()); 
                    // InternalSqlParser.g:4429:1: ( LESS_1 )
                    // InternalSqlParser.g:4429:3: LESS_1
                    {
                    match(input,LESS_1,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_6()); 

                    }


                    }
                    break;
                case 8 :
                    // InternalSqlParser.g:4434:6: ( ( GREATER_1 ) )
                    {
                    // InternalSqlParser.g:4434:6: ( ( GREATER_1 ) )
                    // InternalSqlParser.g:4435:1: ( GREATER_1 )
                    {
                     before(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_7()); 
                    // InternalSqlParser.g:4436:1: ( GREATER_1 )
                    // InternalSqlParser.g:4436:3: GREATER_1
                    {
                    match(input,GREATER_1,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_7()); 

                    }


                    }
                    break;
                case 9 :
                    // InternalSqlParser.g:4441:6: ( ( BETWEEN ) )
                    {
                    // InternalSqlParser.g:4441:6: ( ( BETWEEN ) )
                    // InternalSqlParser.g:4442:1: ( BETWEEN )
                    {
                     before(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 
                    // InternalSqlParser.g:4443:1: ( BETWEEN )
                    // InternalSqlParser.g:4443:3: BETWEEN
                    {
                    match(input,BETWEEN,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 

                    }


                    }
                    break;
                case 10 :
                    // InternalSqlParser.g:4448:6: ( ( BETWEEN_3 ) )
                    {
                    // InternalSqlParser.g:4448:6: ( ( BETWEEN_3 ) )
                    // InternalSqlParser.g:4449:1: ( BETWEEN_3 )
                    {
                     before(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 
                    // InternalSqlParser.g:4450:1: ( BETWEEN_3 )
                    // InternalSqlParser.g:4450:3: BETWEEN_3
                    {
                    match(input,BETWEEN_3,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 

                    }


                    }
                    break;
                case 11 :
                    // InternalSqlParser.g:4455:6: ( ( BETWEEN_2 ) )
                    {
                    // InternalSqlParser.g:4455:6: ( ( BETWEEN_2 ) )
                    // InternalSqlParser.g:4456:1: ( BETWEEN_2 )
                    {
                     before(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 
                    // InternalSqlParser.g:4457:1: ( BETWEEN_2 )
                    // InternalSqlParser.g:4457:3: BETWEEN_2
                    {
                    match(input,BETWEEN_2,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 

                    }


                    }
                    break;
                case 12 :
                    // InternalSqlParser.g:4462:6: ( ( BETWEEN_1 ) )
                    {
                    // InternalSqlParser.g:4462:6: ( ( BETWEEN_1 ) )
                    // InternalSqlParser.g:4463:1: ( BETWEEN_1 )
                    {
                     before(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 
                    // InternalSqlParser.g:4464:1: ( BETWEEN_1 )
                    // InternalSqlParser.g:4464:3: BETWEEN_1
                    {
                    match(input,BETWEEN_1,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XFunction__Alternatives"


    // $ANTLR start "rule__Model__Group__0"
    // InternalSqlParser.g:4476:1: rule__Model__Group__0 : rule__Model__Group__0__Impl rule__Model__Group__1 ;
    public final void rule__Model__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4480:1: ( rule__Model__Group__0__Impl rule__Model__Group__1 )
            // InternalSqlParser.g:4481:2: rule__Model__Group__0__Impl rule__Model__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Model__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Model__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__0"


    // $ANTLR start "rule__Model__Group__0__Impl"
    // InternalSqlParser.g:4488:1: rule__Model__Group__0__Impl : ( ( RULE_JRNPARAM )? ) ;
    public final void rule__Model__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4492:1: ( ( ( RULE_JRNPARAM )? ) )
            // InternalSqlParser.g:4493:1: ( ( RULE_JRNPARAM )? )
            {
            // InternalSqlParser.g:4493:1: ( ( RULE_JRNPARAM )? )
            // InternalSqlParser.g:4494:1: ( RULE_JRNPARAM )?
            {
             before(grammarAccess.getModelAccess().getJRNPARAMTerminalRuleCall_0()); 
            // InternalSqlParser.g:4495:1: ( RULE_JRNPARAM )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_JRNPARAM) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalSqlParser.g:4495:3: RULE_JRNPARAM
                    {
                    match(input,RULE_JRNPARAM,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getModelAccess().getJRNPARAMTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__0__Impl"


    // $ANTLR start "rule__Model__Group__1"
    // InternalSqlParser.g:4505:1: rule__Model__Group__1 : rule__Model__Group__1__Impl ;
    public final void rule__Model__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4509:1: ( rule__Model__Group__1__Impl )
            // InternalSqlParser.g:4510:2: rule__Model__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Model__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__1"


    // $ANTLR start "rule__Model__Group__1__Impl"
    // InternalSqlParser.g:4516:1: rule__Model__Group__1__Impl : ( ( rule__Model__QueryAssignment_1 ) ) ;
    public final void rule__Model__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4520:1: ( ( ( rule__Model__QueryAssignment_1 ) ) )
            // InternalSqlParser.g:4521:1: ( ( rule__Model__QueryAssignment_1 ) )
            {
            // InternalSqlParser.g:4521:1: ( ( rule__Model__QueryAssignment_1 ) )
            // InternalSqlParser.g:4522:1: ( rule__Model__QueryAssignment_1 )
            {
             before(grammarAccess.getModelAccess().getQueryAssignment_1()); 
            // InternalSqlParser.g:4523:1: ( rule__Model__QueryAssignment_1 )
            // InternalSqlParser.g:4523:2: rule__Model__QueryAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Model__QueryAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getModelAccess().getQueryAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__1__Impl"


    // $ANTLR start "rule__FetchFirst__Group__0"
    // InternalSqlParser.g:4537:1: rule__FetchFirst__Group__0 : rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 ;
    public final void rule__FetchFirst__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4541:1: ( rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 )
            // InternalSqlParser.g:4542:2: rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__FetchFirst__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0"


    // $ANTLR start "rule__FetchFirst__Group__0__Impl"
    // InternalSqlParser.g:4549:1: rule__FetchFirst__Group__0__Impl : ( ( rule__FetchFirst__FetchFirstAssignment_0 )? ) ;
    public final void rule__FetchFirst__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4553:1: ( ( ( rule__FetchFirst__FetchFirstAssignment_0 )? ) )
            // InternalSqlParser.g:4554:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 )? )
            {
            // InternalSqlParser.g:4554:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 )? )
            // InternalSqlParser.g:4555:1: ( rule__FetchFirst__FetchFirstAssignment_0 )?
            {
             before(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 
            // InternalSqlParser.g:4556:1: ( rule__FetchFirst__FetchFirstAssignment_0 )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==RULE_INT) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalSqlParser.g:4556:2: rule__FetchFirst__FetchFirstAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FetchFirst__FetchFirstAssignment_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0__Impl"


    // $ANTLR start "rule__FetchFirst__Group__1"
    // InternalSqlParser.g:4566:1: rule__FetchFirst__Group__1 : rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 ;
    public final void rule__FetchFirst__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4570:1: ( rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 )
            // InternalSqlParser.g:4571:2: rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__FetchFirst__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1"


    // $ANTLR start "rule__FetchFirst__Group__1__Impl"
    // InternalSqlParser.g:4578:1: rule__FetchFirst__Group__1__Impl : ( ( rule__FetchFirst__RowAssignment_1 ) ) ;
    public final void rule__FetchFirst__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4582:1: ( ( ( rule__FetchFirst__RowAssignment_1 ) ) )
            // InternalSqlParser.g:4583:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            {
            // InternalSqlParser.g:4583:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            // InternalSqlParser.g:4584:1: ( rule__FetchFirst__RowAssignment_1 )
            {
             before(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 
            // InternalSqlParser.g:4585:1: ( rule__FetchFirst__RowAssignment_1 )
            // InternalSqlParser.g:4585:2: rule__FetchFirst__RowAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1__Impl"


    // $ANTLR start "rule__FetchFirst__Group__2"
    // InternalSqlParser.g:4595:1: rule__FetchFirst__Group__2 : rule__FetchFirst__Group__2__Impl ;
    public final void rule__FetchFirst__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4599:1: ( rule__FetchFirst__Group__2__Impl )
            // InternalSqlParser.g:4600:2: rule__FetchFirst__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2"


    // $ANTLR start "rule__FetchFirst__Group__2__Impl"
    // InternalSqlParser.g:4606:1: rule__FetchFirst__Group__2__Impl : ( ONLY ) ;
    public final void rule__FetchFirst__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4610:1: ( ( ONLY ) )
            // InternalSqlParser.g:4611:1: ( ONLY )
            {
            // InternalSqlParser.g:4611:1: ( ONLY )
            // InternalSqlParser.g:4612:1: ONLY
            {
             before(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 
            match(input,ONLY,FOLLOW_2); 
             after(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2__Impl"


    // $ANTLR start "rule__Limit__Group_0__0"
    // InternalSqlParser.g:4631:1: rule__Limit__Group_0__0 : rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 ;
    public final void rule__Limit__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4635:1: ( rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 )
            // InternalSqlParser.g:4636:2: rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1
            {
            pushFollow(FOLLOW_6);
            rule__Limit__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0"


    // $ANTLR start "rule__Limit__Group_0__0__Impl"
    // InternalSqlParser.g:4643:1: rule__Limit__Group_0__0__Impl : ( () ) ;
    public final void rule__Limit__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4647:1: ( ( () ) )
            // InternalSqlParser.g:4648:1: ( () )
            {
            // InternalSqlParser.g:4648:1: ( () )
            // InternalSqlParser.g:4649:1: ()
            {
             before(grammarAccess.getLimitAccess().getLimitAction_0_0()); 
            // InternalSqlParser.g:4650:1: ()
            // InternalSqlParser.g:4652:1: 
            {
            }

             after(grammarAccess.getLimitAccess().getLimitAction_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0__Impl"


    // $ANTLR start "rule__Limit__Group_0__1"
    // InternalSqlParser.g:4662:1: rule__Limit__Group_0__1 : rule__Limit__Group_0__1__Impl ;
    public final void rule__Limit__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4666:1: ( rule__Limit__Group_0__1__Impl )
            // InternalSqlParser.g:4667:2: rule__Limit__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1"


    // $ANTLR start "rule__Limit__Group_0__1__Impl"
    // InternalSqlParser.g:4673:1: rule__Limit__Group_0__1__Impl : ( ALL ) ;
    public final void rule__Limit__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4677:1: ( ( ALL ) )
            // InternalSqlParser.g:4678:1: ( ALL )
            {
            // InternalSqlParser.g:4678:1: ( ALL )
            // InternalSqlParser.g:4679:1: ALL
            {
             before(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 
            match(input,ALL,FOLLOW_2); 
             after(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1__Impl"


    // $ANTLR start "rule__Limit__Group_1__0"
    // InternalSqlParser.g:4696:1: rule__Limit__Group_1__0 : rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 ;
    public final void rule__Limit__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4700:1: ( rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 )
            // InternalSqlParser.g:4701:2: rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Limit__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0"


    // $ANTLR start "rule__Limit__Group_1__0__Impl"
    // InternalSqlParser.g:4708:1: rule__Limit__Group_1__0__Impl : ( ( rule__Limit__L1Assignment_1_0 ) ) ;
    public final void rule__Limit__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4712:1: ( ( ( rule__Limit__L1Assignment_1_0 ) ) )
            // InternalSqlParser.g:4713:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            {
            // InternalSqlParser.g:4713:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            // InternalSqlParser.g:4714:1: ( rule__Limit__L1Assignment_1_0 )
            {
             before(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 
            // InternalSqlParser.g:4715:1: ( rule__Limit__L1Assignment_1_0 )
            // InternalSqlParser.g:4715:2: rule__Limit__L1Assignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L1Assignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1__1"
    // InternalSqlParser.g:4725:1: rule__Limit__Group_1__1 : rule__Limit__Group_1__1__Impl ;
    public final void rule__Limit__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4729:1: ( rule__Limit__Group_1__1__Impl )
            // InternalSqlParser.g:4730:2: rule__Limit__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1"


    // $ANTLR start "rule__Limit__Group_1__1__Impl"
    // InternalSqlParser.g:4736:1: rule__Limit__Group_1__1__Impl : ( ( rule__Limit__Group_1_1__0 )? ) ;
    public final void rule__Limit__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4740:1: ( ( ( rule__Limit__Group_1_1__0 )? ) )
            // InternalSqlParser.g:4741:1: ( ( rule__Limit__Group_1_1__0 )? )
            {
            // InternalSqlParser.g:4741:1: ( ( rule__Limit__Group_1_1__0 )? )
            // InternalSqlParser.g:4742:1: ( rule__Limit__Group_1_1__0 )?
            {
             before(grammarAccess.getLimitAccess().getGroup_1_1()); 
            // InternalSqlParser.g:4743:1: ( rule__Limit__Group_1_1__0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==Comma) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalSqlParser.g:4743:2: rule__Limit__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLimitAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__0"
    // InternalSqlParser.g:4757:1: rule__Limit__Group_1_1__0 : rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 ;
    public final void rule__Limit__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4761:1: ( rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 )
            // InternalSqlParser.g:4762:2: rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1
            {
            pushFollow(FOLLOW_8);
            rule__Limit__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0"


    // $ANTLR start "rule__Limit__Group_1_1__0__Impl"
    // InternalSqlParser.g:4769:1: rule__Limit__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Limit__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4773:1: ( ( Comma ) )
            // InternalSqlParser.g:4774:1: ( Comma )
            {
            // InternalSqlParser.g:4774:1: ( Comma )
            // InternalSqlParser.g:4775:1: Comma
            {
             before(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__1"
    // InternalSqlParser.g:4788:1: rule__Limit__Group_1_1__1 : rule__Limit__Group_1_1__1__Impl ;
    public final void rule__Limit__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4792:1: ( rule__Limit__Group_1_1__1__Impl )
            // InternalSqlParser.g:4793:2: rule__Limit__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1"


    // $ANTLR start "rule__Limit__Group_1_1__1__Impl"
    // InternalSqlParser.g:4799:1: rule__Limit__Group_1_1__1__Impl : ( ( rule__Limit__L2Assignment_1_1_1 ) ) ;
    public final void rule__Limit__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4803:1: ( ( ( rule__Limit__L2Assignment_1_1_1 ) ) )
            // InternalSqlParser.g:4804:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            {
            // InternalSqlParser.g:4804:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            // InternalSqlParser.g:4805:1: ( rule__Limit__L2Assignment_1_1_1 )
            {
             before(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 
            // InternalSqlParser.g:4806:1: ( rule__Limit__L2Assignment_1_1_1 )
            // InternalSqlParser.g:4806:2: rule__Limit__L2Assignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L2Assignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1__Impl"


    // $ANTLR start "rule__SelectQuery__Group__0"
    // InternalSqlParser.g:4820:1: rule__SelectQuery__Group__0 : rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 ;
    public final void rule__SelectQuery__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4824:1: ( rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 )
            // InternalSqlParser.g:4825:2: rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__SelectQuery__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0"


    // $ANTLR start "rule__SelectQuery__Group__0__Impl"
    // InternalSqlParser.g:4832:1: rule__SelectQuery__Group__0__Impl : ( ruleSelect ) ;
    public final void rule__SelectQuery__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4836:1: ( ( ruleSelect ) )
            // InternalSqlParser.g:4837:1: ( ruleSelect )
            {
            // InternalSqlParser.g:4837:1: ( ruleSelect )
            // InternalSqlParser.g:4838:1: ruleSelect
            {
             before(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;

             after(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0__Impl"


    // $ANTLR start "rule__SelectQuery__Group__1"
    // InternalSqlParser.g:4849:1: rule__SelectQuery__Group__1 : rule__SelectQuery__Group__1__Impl ;
    public final void rule__SelectQuery__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4853:1: ( rule__SelectQuery__Group__1__Impl )
            // InternalSqlParser.g:4854:2: rule__SelectQuery__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1"


    // $ANTLR start "rule__SelectQuery__Group__1__Impl"
    // InternalSqlParser.g:4860:1: rule__SelectQuery__Group__1__Impl : ( ( rule__SelectQuery__OpAssignment_1 )* ) ;
    public final void rule__SelectQuery__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4864:1: ( ( ( rule__SelectQuery__OpAssignment_1 )* ) )
            // InternalSqlParser.g:4865:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            {
            // InternalSqlParser.g:4865:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            // InternalSqlParser.g:4866:1: ( rule__SelectQuery__OpAssignment_1 )*
            {
             before(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 
            // InternalSqlParser.g:4867:1: ( rule__SelectQuery__OpAssignment_1 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==INTERSECT||LA59_0==EXCEPT||LA59_0==MINUS||LA59_0==UNION) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalSqlParser.g:4867:2: rule__SelectQuery__OpAssignment_1
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__SelectQuery__OpAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

             after(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__0"
    // InternalSqlParser.g:4881:1: rule__SelectSubSet__Group__0 : rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 ;
    public final void rule__SelectSubSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4885:1: ( rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 )
            // InternalSqlParser.g:4886:2: rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__SelectSubSet__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0"


    // $ANTLR start "rule__SelectSubSet__Group__0__Impl"
    // InternalSqlParser.g:4893:1: rule__SelectSubSet__Group__0__Impl : ( ( rule__SelectSubSet__OpAssignment_0 ) ) ;
    public final void rule__SelectSubSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4897:1: ( ( ( rule__SelectSubSet__OpAssignment_0 ) ) )
            // InternalSqlParser.g:4898:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            {
            // InternalSqlParser.g:4898:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            // InternalSqlParser.g:4899:1: ( rule__SelectSubSet__OpAssignment_0 )
            {
             before(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 
            // InternalSqlParser.g:4900:1: ( rule__SelectSubSet__OpAssignment_0 )
            // InternalSqlParser.g:4900:2: rule__SelectSubSet__OpAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__1"
    // InternalSqlParser.g:4910:1: rule__SelectSubSet__Group__1 : rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 ;
    public final void rule__SelectSubSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4914:1: ( rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 )
            // InternalSqlParser.g:4915:2: rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__SelectSubSet__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1"


    // $ANTLR start "rule__SelectSubSet__Group__1__Impl"
    // InternalSqlParser.g:4922:1: rule__SelectSubSet__Group__1__Impl : ( ( rule__SelectSubSet__AllAssignment_1 )? ) ;
    public final void rule__SelectSubSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4926:1: ( ( ( rule__SelectSubSet__AllAssignment_1 )? ) )
            // InternalSqlParser.g:4927:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            {
            // InternalSqlParser.g:4927:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            // InternalSqlParser.g:4928:1: ( rule__SelectSubSet__AllAssignment_1 )?
            {
             before(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 
            // InternalSqlParser.g:4929:1: ( rule__SelectSubSet__AllAssignment_1 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==ALL) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalSqlParser.g:4929:2: rule__SelectSubSet__AllAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SelectSubSet__AllAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__2"
    // InternalSqlParser.g:4939:1: rule__SelectSubSet__Group__2 : rule__SelectSubSet__Group__2__Impl ;
    public final void rule__SelectSubSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4943:1: ( rule__SelectSubSet__Group__2__Impl )
            // InternalSqlParser.g:4944:2: rule__SelectSubSet__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2"


    // $ANTLR start "rule__SelectSubSet__Group__2__Impl"
    // InternalSqlParser.g:4950:1: rule__SelectSubSet__Group__2__Impl : ( ( rule__SelectSubSet__QueryAssignment_2 ) ) ;
    public final void rule__SelectSubSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4954:1: ( ( ( rule__SelectSubSet__QueryAssignment_2 ) ) )
            // InternalSqlParser.g:4955:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            {
            // InternalSqlParser.g:4955:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            // InternalSqlParser.g:4956:1: ( rule__SelectSubSet__QueryAssignment_2 )
            {
             before(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 
            // InternalSqlParser.g:4957:1: ( rule__SelectSubSet__QueryAssignment_2 )
            // InternalSqlParser.g:4957:2: rule__SelectSubSet__QueryAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__QueryAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__0"
    // InternalSqlParser.g:4973:1: rule__Select__Group__0 : rule__Select__Group__0__Impl rule__Select__Group__1 ;
    public final void rule__Select__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4977:1: ( rule__Select__Group__0__Impl rule__Select__Group__1 )
            // InternalSqlParser.g:4978:2: rule__Select__Group__0__Impl rule__Select__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__Select__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0"


    // $ANTLR start "rule__Select__Group__0__Impl"
    // InternalSqlParser.g:4985:1: rule__Select__Group__0__Impl : ( ( rule__Select__SelectAssignment_0 ) ) ;
    public final void rule__Select__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4989:1: ( ( ( rule__Select__SelectAssignment_0 ) ) )
            // InternalSqlParser.g:4990:1: ( ( rule__Select__SelectAssignment_0 ) )
            {
            // InternalSqlParser.g:4990:1: ( ( rule__Select__SelectAssignment_0 ) )
            // InternalSqlParser.g:4991:1: ( rule__Select__SelectAssignment_0 )
            {
             before(grammarAccess.getSelectAccess().getSelectAssignment_0()); 
            // InternalSqlParser.g:4992:1: ( rule__Select__SelectAssignment_0 )
            // InternalSqlParser.g:4992:2: rule__Select__SelectAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Select__SelectAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getSelectAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0__Impl"


    // $ANTLR start "rule__Select__Group__1"
    // InternalSqlParser.g:5002:1: rule__Select__Group__1 : rule__Select__Group__1__Impl rule__Select__Group__2 ;
    public final void rule__Select__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5006:1: ( rule__Select__Group__1__Impl rule__Select__Group__2 )
            // InternalSqlParser.g:5007:2: rule__Select__Group__1__Impl rule__Select__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__Select__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1"


    // $ANTLR start "rule__Select__Group__1__Impl"
    // InternalSqlParser.g:5014:1: rule__Select__Group__1__Impl : ( ( DISTINCT )? ) ;
    public final void rule__Select__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5018:1: ( ( ( DISTINCT )? ) )
            // InternalSqlParser.g:5019:1: ( ( DISTINCT )? )
            {
            // InternalSqlParser.g:5019:1: ( ( DISTINCT )? )
            // InternalSqlParser.g:5020:1: ( DISTINCT )?
            {
             before(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 
            // InternalSqlParser.g:5021:1: ( DISTINCT )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==DISTINCT) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSqlParser.g:5022:2: DISTINCT
                    {
                    match(input,DISTINCT,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1__Impl"


    // $ANTLR start "rule__Select__Group__2"
    // InternalSqlParser.g:5033:1: rule__Select__Group__2 : rule__Select__Group__2__Impl rule__Select__Group__3 ;
    public final void rule__Select__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5037:1: ( rule__Select__Group__2__Impl rule__Select__Group__3 )
            // InternalSqlParser.g:5038:2: rule__Select__Group__2__Impl rule__Select__Group__3
            {
            pushFollow(FOLLOW_12);
            rule__Select__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2"


    // $ANTLR start "rule__Select__Group__2__Impl"
    // InternalSqlParser.g:5045:1: rule__Select__Group__2__Impl : ( ( rule__Select__Group_2__0 )? ) ;
    public final void rule__Select__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5049:1: ( ( ( rule__Select__Group_2__0 )? ) )
            // InternalSqlParser.g:5050:1: ( ( rule__Select__Group_2__0 )? )
            {
            // InternalSqlParser.g:5050:1: ( ( rule__Select__Group_2__0 )? )
            // InternalSqlParser.g:5051:1: ( rule__Select__Group_2__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_2()); 
            // InternalSqlParser.g:5052:1: ( rule__Select__Group_2__0 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==TOP) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalSqlParser.g:5052:2: rule__Select__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__3"
    // InternalSqlParser.g:5062:1: rule__Select__Group__3 : rule__Select__Group__3__Impl rule__Select__Group__4 ;
    public final void rule__Select__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5066:1: ( rule__Select__Group__3__Impl rule__Select__Group__4 )
            // InternalSqlParser.g:5067:2: rule__Select__Group__3__Impl rule__Select__Group__4
            {
            pushFollow(FOLLOW_13);
            rule__Select__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3"


    // $ANTLR start "rule__Select__Group__3__Impl"
    // InternalSqlParser.g:5074:1: rule__Select__Group__3__Impl : ( ( rule__Select__ColsAssignment_3 ) ) ;
    public final void rule__Select__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5078:1: ( ( ( rule__Select__ColsAssignment_3 ) ) )
            // InternalSqlParser.g:5079:1: ( ( rule__Select__ColsAssignment_3 ) )
            {
            // InternalSqlParser.g:5079:1: ( ( rule__Select__ColsAssignment_3 ) )
            // InternalSqlParser.g:5080:1: ( rule__Select__ColsAssignment_3 )
            {
             before(grammarAccess.getSelectAccess().getColsAssignment_3()); 
            // InternalSqlParser.g:5081:1: ( rule__Select__ColsAssignment_3 )
            // InternalSqlParser.g:5081:2: rule__Select__ColsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Select__ColsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getColsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3__Impl"


    // $ANTLR start "rule__Select__Group__4"
    // InternalSqlParser.g:5091:1: rule__Select__Group__4 : rule__Select__Group__4__Impl rule__Select__Group__5 ;
    public final void rule__Select__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5095:1: ( rule__Select__Group__4__Impl rule__Select__Group__5 )
            // InternalSqlParser.g:5096:2: rule__Select__Group__4__Impl rule__Select__Group__5
            {
            pushFollow(FOLLOW_14);
            rule__Select__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4"


    // $ANTLR start "rule__Select__Group__4__Impl"
    // InternalSqlParser.g:5103:1: rule__Select__Group__4__Impl : ( FROM ) ;
    public final void rule__Select__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5107:1: ( ( FROM ) )
            // InternalSqlParser.g:5108:1: ( FROM )
            {
            // InternalSqlParser.g:5108:1: ( FROM )
            // InternalSqlParser.g:5109:1: FROM
            {
             before(grammarAccess.getSelectAccess().getFROMKeyword_4()); 
            match(input,FROM,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getFROMKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4__Impl"


    // $ANTLR start "rule__Select__Group__5"
    // InternalSqlParser.g:5122:1: rule__Select__Group__5 : rule__Select__Group__5__Impl rule__Select__Group__6 ;
    public final void rule__Select__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5126:1: ( rule__Select__Group__5__Impl rule__Select__Group__6 )
            // InternalSqlParser.g:5127:2: rule__Select__Group__5__Impl rule__Select__Group__6
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5"


    // $ANTLR start "rule__Select__Group__5__Impl"
    // InternalSqlParser.g:5134:1: rule__Select__Group__5__Impl : ( ( rule__Select__TblAssignment_5 ) ) ;
    public final void rule__Select__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5138:1: ( ( ( rule__Select__TblAssignment_5 ) ) )
            // InternalSqlParser.g:5139:1: ( ( rule__Select__TblAssignment_5 ) )
            {
            // InternalSqlParser.g:5139:1: ( ( rule__Select__TblAssignment_5 ) )
            // InternalSqlParser.g:5140:1: ( rule__Select__TblAssignment_5 )
            {
             before(grammarAccess.getSelectAccess().getTblAssignment_5()); 
            // InternalSqlParser.g:5141:1: ( rule__Select__TblAssignment_5 )
            // InternalSqlParser.g:5141:2: rule__Select__TblAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__Select__TblAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getTblAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5__Impl"


    // $ANTLR start "rule__Select__Group__6"
    // InternalSqlParser.g:5151:1: rule__Select__Group__6 : rule__Select__Group__6__Impl rule__Select__Group__7 ;
    public final void rule__Select__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5155:1: ( rule__Select__Group__6__Impl rule__Select__Group__7 )
            // InternalSqlParser.g:5156:2: rule__Select__Group__6__Impl rule__Select__Group__7
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6"


    // $ANTLR start "rule__Select__Group__6__Impl"
    // InternalSqlParser.g:5163:1: rule__Select__Group__6__Impl : ( ( rule__Select__Group_6__0 )? ) ;
    public final void rule__Select__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5167:1: ( ( ( rule__Select__Group_6__0 )? ) )
            // InternalSqlParser.g:5168:1: ( ( rule__Select__Group_6__0 )? )
            {
            // InternalSqlParser.g:5168:1: ( ( rule__Select__Group_6__0 )? )
            // InternalSqlParser.g:5169:1: ( rule__Select__Group_6__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_6()); 
            // InternalSqlParser.g:5170:1: ( rule__Select__Group_6__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==WHERE) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalSqlParser.g:5170:2: rule__Select__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_6__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6__Impl"


    // $ANTLR start "rule__Select__Group__7"
    // InternalSqlParser.g:5180:1: rule__Select__Group__7 : rule__Select__Group__7__Impl rule__Select__Group__8 ;
    public final void rule__Select__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5184:1: ( rule__Select__Group__7__Impl rule__Select__Group__8 )
            // InternalSqlParser.g:5185:2: rule__Select__Group__7__Impl rule__Select__Group__8
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__7__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__8();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7"


    // $ANTLR start "rule__Select__Group__7__Impl"
    // InternalSqlParser.g:5192:1: rule__Select__Group__7__Impl : ( ( rule__Select__Group_7__0 )? ) ;
    public final void rule__Select__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5196:1: ( ( ( rule__Select__Group_7__0 )? ) )
            // InternalSqlParser.g:5197:1: ( ( rule__Select__Group_7__0 )? )
            {
            // InternalSqlParser.g:5197:1: ( ( rule__Select__Group_7__0 )? )
            // InternalSqlParser.g:5198:1: ( rule__Select__Group_7__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_7()); 
            // InternalSqlParser.g:5199:1: ( rule__Select__Group_7__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==GROUPBY) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSqlParser.g:5199:2: rule__Select__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_7__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7__Impl"


    // $ANTLR start "rule__Select__Group__8"
    // InternalSqlParser.g:5209:1: rule__Select__Group__8 : rule__Select__Group__8__Impl rule__Select__Group__9 ;
    public final void rule__Select__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5213:1: ( rule__Select__Group__8__Impl rule__Select__Group__9 )
            // InternalSqlParser.g:5214:2: rule__Select__Group__8__Impl rule__Select__Group__9
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__8__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__9();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8"


    // $ANTLR start "rule__Select__Group__8__Impl"
    // InternalSqlParser.g:5221:1: rule__Select__Group__8__Impl : ( ( rule__Select__Group_8__0 )? ) ;
    public final void rule__Select__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5225:1: ( ( ( rule__Select__Group_8__0 )? ) )
            // InternalSqlParser.g:5226:1: ( ( rule__Select__Group_8__0 )? )
            {
            // InternalSqlParser.g:5226:1: ( ( rule__Select__Group_8__0 )? )
            // InternalSqlParser.g:5227:1: ( rule__Select__Group_8__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_8()); 
            // InternalSqlParser.g:5228:1: ( rule__Select__Group_8__0 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==HAVING) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalSqlParser.g:5228:2: rule__Select__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_8__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_8()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8__Impl"


    // $ANTLR start "rule__Select__Group__9"
    // InternalSqlParser.g:5238:1: rule__Select__Group__9 : rule__Select__Group__9__Impl rule__Select__Group__10 ;
    public final void rule__Select__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5242:1: ( rule__Select__Group__9__Impl rule__Select__Group__10 )
            // InternalSqlParser.g:5243:2: rule__Select__Group__9__Impl rule__Select__Group__10
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__9__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__10();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9"


    // $ANTLR start "rule__Select__Group__9__Impl"
    // InternalSqlParser.g:5250:1: rule__Select__Group__9__Impl : ( ( rule__Select__Group_9__0 )? ) ;
    public final void rule__Select__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5254:1: ( ( ( rule__Select__Group_9__0 )? ) )
            // InternalSqlParser.g:5255:1: ( ( rule__Select__Group_9__0 )? )
            {
            // InternalSqlParser.g:5255:1: ( ( rule__Select__Group_9__0 )? )
            // InternalSqlParser.g:5256:1: ( rule__Select__Group_9__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_9()); 
            // InternalSqlParser.g:5257:1: ( rule__Select__Group_9__0 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==ORDERBY) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSqlParser.g:5257:2: rule__Select__Group_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_9__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_9()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9__Impl"


    // $ANTLR start "rule__Select__Group__10"
    // InternalSqlParser.g:5267:1: rule__Select__Group__10 : rule__Select__Group__10__Impl rule__Select__Group__11 ;
    public final void rule__Select__Group__10() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5271:1: ( rule__Select__Group__10__Impl rule__Select__Group__11 )
            // InternalSqlParser.g:5272:2: rule__Select__Group__10__Impl rule__Select__Group__11
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__10__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__11();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10"


    // $ANTLR start "rule__Select__Group__10__Impl"
    // InternalSqlParser.g:5279:1: rule__Select__Group__10__Impl : ( ( rule__Select__Group_10__0 )? ) ;
    public final void rule__Select__Group__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5283:1: ( ( ( rule__Select__Group_10__0 )? ) )
            // InternalSqlParser.g:5284:1: ( ( rule__Select__Group_10__0 )? )
            {
            // InternalSqlParser.g:5284:1: ( ( rule__Select__Group_10__0 )? )
            // InternalSqlParser.g:5285:1: ( rule__Select__Group_10__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_10()); 
            // InternalSqlParser.g:5286:1: ( rule__Select__Group_10__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==LIMIT) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSqlParser.g:5286:2: rule__Select__Group_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_10__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_10()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10__Impl"


    // $ANTLR start "rule__Select__Group__11"
    // InternalSqlParser.g:5296:1: rule__Select__Group__11 : rule__Select__Group__11__Impl rule__Select__Group__12 ;
    public final void rule__Select__Group__11() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5300:1: ( rule__Select__Group__11__Impl rule__Select__Group__12 )
            // InternalSqlParser.g:5301:2: rule__Select__Group__11__Impl rule__Select__Group__12
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__11__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__12();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11"


    // $ANTLR start "rule__Select__Group__11__Impl"
    // InternalSqlParser.g:5308:1: rule__Select__Group__11__Impl : ( ( rule__Select__Group_11__0 )? ) ;
    public final void rule__Select__Group__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5312:1: ( ( ( rule__Select__Group_11__0 )? ) )
            // InternalSqlParser.g:5313:1: ( ( rule__Select__Group_11__0 )? )
            {
            // InternalSqlParser.g:5313:1: ( ( rule__Select__Group_11__0 )? )
            // InternalSqlParser.g:5314:1: ( rule__Select__Group_11__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_11()); 
            // InternalSqlParser.g:5315:1: ( rule__Select__Group_11__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==OFFSET) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSqlParser.g:5315:2: rule__Select__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_11__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_11()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11__Impl"


    // $ANTLR start "rule__Select__Group__12"
    // InternalSqlParser.g:5325:1: rule__Select__Group__12 : rule__Select__Group__12__Impl ;
    public final void rule__Select__Group__12() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5329:1: ( rule__Select__Group__12__Impl )
            // InternalSqlParser.g:5330:2: rule__Select__Group__12__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__12__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12"


    // $ANTLR start "rule__Select__Group__12__Impl"
    // InternalSqlParser.g:5336:1: rule__Select__Group__12__Impl : ( ( rule__Select__Group_12__0 )? ) ;
    public final void rule__Select__Group__12__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5340:1: ( ( ( rule__Select__Group_12__0 )? ) )
            // InternalSqlParser.g:5341:1: ( ( rule__Select__Group_12__0 )? )
            {
            // InternalSqlParser.g:5341:1: ( ( rule__Select__Group_12__0 )? )
            // InternalSqlParser.g:5342:1: ( rule__Select__Group_12__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_12()); 
            // InternalSqlParser.g:5343:1: ( rule__Select__Group_12__0 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==FETCHFIRST) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalSqlParser.g:5343:2: rule__Select__Group_12__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_12__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_12()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12__Impl"


    // $ANTLR start "rule__Select__Group_2__0"
    // InternalSqlParser.g:5379:1: rule__Select__Group_2__0 : rule__Select__Group_2__0__Impl rule__Select__Group_2__1 ;
    public final void rule__Select__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5383:1: ( rule__Select__Group_2__0__Impl rule__Select__Group_2__1 )
            // InternalSqlParser.g:5384:2: rule__Select__Group_2__0__Impl rule__Select__Group_2__1
            {
            pushFollow(FOLLOW_16);
            rule__Select__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0"


    // $ANTLR start "rule__Select__Group_2__0__Impl"
    // InternalSqlParser.g:5391:1: rule__Select__Group_2__0__Impl : ( TOP ) ;
    public final void rule__Select__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5395:1: ( ( TOP ) )
            // InternalSqlParser.g:5396:1: ( TOP )
            {
            // InternalSqlParser.g:5396:1: ( TOP )
            // InternalSqlParser.g:5397:1: TOP
            {
             before(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 
            match(input,TOP,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0__Impl"


    // $ANTLR start "rule__Select__Group_2__1"
    // InternalSqlParser.g:5410:1: rule__Select__Group_2__1 : rule__Select__Group_2__1__Impl rule__Select__Group_2__2 ;
    public final void rule__Select__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5414:1: ( rule__Select__Group_2__1__Impl rule__Select__Group_2__2 )
            // InternalSqlParser.g:5415:2: rule__Select__Group_2__1__Impl rule__Select__Group_2__2
            {
            pushFollow(FOLLOW_17);
            rule__Select__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1"


    // $ANTLR start "rule__Select__Group_2__1__Impl"
    // InternalSqlParser.g:5422:1: rule__Select__Group_2__1__Impl : ( ( rule__Select__Alternatives_2_1 ) ) ;
    public final void rule__Select__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5426:1: ( ( ( rule__Select__Alternatives_2_1 ) ) )
            // InternalSqlParser.g:5427:1: ( ( rule__Select__Alternatives_2_1 ) )
            {
            // InternalSqlParser.g:5427:1: ( ( rule__Select__Alternatives_2_1 ) )
            // InternalSqlParser.g:5428:1: ( rule__Select__Alternatives_2_1 )
            {
             before(grammarAccess.getSelectAccess().getAlternatives_2_1()); 
            // InternalSqlParser.g:5429:1: ( rule__Select__Alternatives_2_1 )
            // InternalSqlParser.g:5429:2: rule__Select__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__Alternatives_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getAlternatives_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1__Impl"


    // $ANTLR start "rule__Select__Group_2__2"
    // InternalSqlParser.g:5439:1: rule__Select__Group_2__2 : rule__Select__Group_2__2__Impl rule__Select__Group_2__3 ;
    public final void rule__Select__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5443:1: ( rule__Select__Group_2__2__Impl rule__Select__Group_2__3 )
            // InternalSqlParser.g:5444:2: rule__Select__Group_2__2__Impl rule__Select__Group_2__3
            {
            pushFollow(FOLLOW_17);
            rule__Select__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2"


    // $ANTLR start "rule__Select__Group_2__2__Impl"
    // InternalSqlParser.g:5451:1: rule__Select__Group_2__2__Impl : ( ( PERCENT )? ) ;
    public final void rule__Select__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5455:1: ( ( ( PERCENT )? ) )
            // InternalSqlParser.g:5456:1: ( ( PERCENT )? )
            {
            // InternalSqlParser.g:5456:1: ( ( PERCENT )? )
            // InternalSqlParser.g:5457:1: ( PERCENT )?
            {
             before(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 
            // InternalSqlParser.g:5458:1: ( PERCENT )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==PERCENT) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSqlParser.g:5459:2: PERCENT
                    {
                    match(input,PERCENT,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2__Impl"


    // $ANTLR start "rule__Select__Group_2__3"
    // InternalSqlParser.g:5470:1: rule__Select__Group_2__3 : rule__Select__Group_2__3__Impl ;
    public final void rule__Select__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5474:1: ( rule__Select__Group_2__3__Impl )
            // InternalSqlParser.g:5475:2: rule__Select__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3"


    // $ANTLR start "rule__Select__Group_2__3__Impl"
    // InternalSqlParser.g:5481:1: rule__Select__Group_2__3__Impl : ( ( WITHTIES )? ) ;
    public final void rule__Select__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5485:1: ( ( ( WITHTIES )? ) )
            // InternalSqlParser.g:5486:1: ( ( WITHTIES )? )
            {
            // InternalSqlParser.g:5486:1: ( ( WITHTIES )? )
            // InternalSqlParser.g:5487:1: ( WITHTIES )?
            {
             before(grammarAccess.getSelectAccess().getWITHTIESKeyword_2_3()); 
            // InternalSqlParser.g:5488:1: ( WITHTIES )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==WITHTIES) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSqlParser.g:5489:2: WITHTIES
                    {
                    match(input,WITHTIES,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getWITHTIESKeyword_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3__Impl"


    // $ANTLR start "rule__Select__Group_6__0"
    // InternalSqlParser.g:5508:1: rule__Select__Group_6__0 : rule__Select__Group_6__0__Impl rule__Select__Group_6__1 ;
    public final void rule__Select__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5512:1: ( rule__Select__Group_6__0__Impl rule__Select__Group_6__1 )
            // InternalSqlParser.g:5513:2: rule__Select__Group_6__0__Impl rule__Select__Group_6__1
            {
            pushFollow(FOLLOW_18);
            rule__Select__Group_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0"


    // $ANTLR start "rule__Select__Group_6__0__Impl"
    // InternalSqlParser.g:5520:1: rule__Select__Group_6__0__Impl : ( WHERE ) ;
    public final void rule__Select__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5524:1: ( ( WHERE ) )
            // InternalSqlParser.g:5525:1: ( WHERE )
            {
            // InternalSqlParser.g:5525:1: ( WHERE )
            // InternalSqlParser.g:5526:1: WHERE
            {
             before(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 
            match(input,WHERE,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0__Impl"


    // $ANTLR start "rule__Select__Group_6__1"
    // InternalSqlParser.g:5539:1: rule__Select__Group_6__1 : rule__Select__Group_6__1__Impl ;
    public final void rule__Select__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5543:1: ( rule__Select__Group_6__1__Impl )
            // InternalSqlParser.g:5544:2: rule__Select__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1"


    // $ANTLR start "rule__Select__Group_6__1__Impl"
    // InternalSqlParser.g:5550:1: rule__Select__Group_6__1__Impl : ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) ;
    public final void rule__Select__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5554:1: ( ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) )
            // InternalSqlParser.g:5555:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            {
            // InternalSqlParser.g:5555:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            // InternalSqlParser.g:5556:1: ( rule__Select__WhereExpressionAssignment_6_1 )
            {
             before(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 
            // InternalSqlParser.g:5557:1: ( rule__Select__WhereExpressionAssignment_6_1 )
            // InternalSqlParser.g:5557:2: rule__Select__WhereExpressionAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__WhereExpressionAssignment_6_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1__Impl"


    // $ANTLR start "rule__Select__Group_7__0"
    // InternalSqlParser.g:5571:1: rule__Select__Group_7__0 : rule__Select__Group_7__0__Impl rule__Select__Group_7__1 ;
    public final void rule__Select__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5575:1: ( rule__Select__Group_7__0__Impl rule__Select__Group_7__1 )
            // InternalSqlParser.g:5576:2: rule__Select__Group_7__0__Impl rule__Select__Group_7__1
            {
            pushFollow(FOLLOW_19);
            rule__Select__Group_7__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_7__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0"


    // $ANTLR start "rule__Select__Group_7__0__Impl"
    // InternalSqlParser.g:5583:1: rule__Select__Group_7__0__Impl : ( GROUPBY ) ;
    public final void rule__Select__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5587:1: ( ( GROUPBY ) )
            // InternalSqlParser.g:5588:1: ( GROUPBY )
            {
            // InternalSqlParser.g:5588:1: ( GROUPBY )
            // InternalSqlParser.g:5589:1: GROUPBY
            {
             before(grammarAccess.getSelectAccess().getGROUPBYKeyword_7_0()); 
            match(input,GROUPBY,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getGROUPBYKeyword_7_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0__Impl"


    // $ANTLR start "rule__Select__Group_7__1"
    // InternalSqlParser.g:5602:1: rule__Select__Group_7__1 : rule__Select__Group_7__1__Impl ;
    public final void rule__Select__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5606:1: ( rule__Select__Group_7__1__Impl )
            // InternalSqlParser.g:5607:2: rule__Select__Group_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1"


    // $ANTLR start "rule__Select__Group_7__1__Impl"
    // InternalSqlParser.g:5613:1: rule__Select__Group_7__1__Impl : ( ( rule__Select__GroupByEntryAssignment_7_1 ) ) ;
    public final void rule__Select__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5617:1: ( ( ( rule__Select__GroupByEntryAssignment_7_1 ) ) )
            // InternalSqlParser.g:5618:1: ( ( rule__Select__GroupByEntryAssignment_7_1 ) )
            {
            // InternalSqlParser.g:5618:1: ( ( rule__Select__GroupByEntryAssignment_7_1 ) )
            // InternalSqlParser.g:5619:1: ( rule__Select__GroupByEntryAssignment_7_1 )
            {
             before(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_1()); 
            // InternalSqlParser.g:5620:1: ( rule__Select__GroupByEntryAssignment_7_1 )
            // InternalSqlParser.g:5620:2: rule__Select__GroupByEntryAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__GroupByEntryAssignment_7_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1__Impl"


    // $ANTLR start "rule__Select__Group_8__0"
    // InternalSqlParser.g:5634:1: rule__Select__Group_8__0 : rule__Select__Group_8__0__Impl rule__Select__Group_8__1 ;
    public final void rule__Select__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5638:1: ( rule__Select__Group_8__0__Impl rule__Select__Group_8__1 )
            // InternalSqlParser.g:5639:2: rule__Select__Group_8__0__Impl rule__Select__Group_8__1
            {
            pushFollow(FOLLOW_18);
            rule__Select__Group_8__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0"


    // $ANTLR start "rule__Select__Group_8__0__Impl"
    // InternalSqlParser.g:5646:1: rule__Select__Group_8__0__Impl : ( HAVING ) ;
    public final void rule__Select__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5650:1: ( ( HAVING ) )
            // InternalSqlParser.g:5651:1: ( HAVING )
            {
            // InternalSqlParser.g:5651:1: ( HAVING )
            // InternalSqlParser.g:5652:1: HAVING
            {
             before(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 
            match(input,HAVING,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0__Impl"


    // $ANTLR start "rule__Select__Group_8__1"
    // InternalSqlParser.g:5665:1: rule__Select__Group_8__1 : rule__Select__Group_8__1__Impl ;
    public final void rule__Select__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5669:1: ( rule__Select__Group_8__1__Impl )
            // InternalSqlParser.g:5670:2: rule__Select__Group_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1"


    // $ANTLR start "rule__Select__Group_8__1__Impl"
    // InternalSqlParser.g:5676:1: rule__Select__Group_8__1__Impl : ( ( rule__Select__HavingEntryAssignment_8_1 ) ) ;
    public final void rule__Select__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5680:1: ( ( ( rule__Select__HavingEntryAssignment_8_1 ) ) )
            // InternalSqlParser.g:5681:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            {
            // InternalSqlParser.g:5681:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            // InternalSqlParser.g:5682:1: ( rule__Select__HavingEntryAssignment_8_1 )
            {
             before(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 
            // InternalSqlParser.g:5683:1: ( rule__Select__HavingEntryAssignment_8_1 )
            // InternalSqlParser.g:5683:2: rule__Select__HavingEntryAssignment_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__HavingEntryAssignment_8_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1__Impl"


    // $ANTLR start "rule__Select__Group_9__0"
    // InternalSqlParser.g:5697:1: rule__Select__Group_9__0 : rule__Select__Group_9__0__Impl rule__Select__Group_9__1 ;
    public final void rule__Select__Group_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5701:1: ( rule__Select__Group_9__0__Impl rule__Select__Group_9__1 )
            // InternalSqlParser.g:5702:2: rule__Select__Group_9__0__Impl rule__Select__Group_9__1
            {
            pushFollow(FOLLOW_19);
            rule__Select__Group_9__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_9__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0"


    // $ANTLR start "rule__Select__Group_9__0__Impl"
    // InternalSqlParser.g:5709:1: rule__Select__Group_9__0__Impl : ( ORDERBY ) ;
    public final void rule__Select__Group_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5713:1: ( ( ORDERBY ) )
            // InternalSqlParser.g:5714:1: ( ORDERBY )
            {
            // InternalSqlParser.g:5714:1: ( ORDERBY )
            // InternalSqlParser.g:5715:1: ORDERBY
            {
             before(grammarAccess.getSelectAccess().getORDERBYKeyword_9_0()); 
            match(input,ORDERBY,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getORDERBYKeyword_9_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0__Impl"


    // $ANTLR start "rule__Select__Group_9__1"
    // InternalSqlParser.g:5728:1: rule__Select__Group_9__1 : rule__Select__Group_9__1__Impl ;
    public final void rule__Select__Group_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5732:1: ( rule__Select__Group_9__1__Impl )
            // InternalSqlParser.g:5733:2: rule__Select__Group_9__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1"


    // $ANTLR start "rule__Select__Group_9__1__Impl"
    // InternalSqlParser.g:5739:1: rule__Select__Group_9__1__Impl : ( ( rule__Select__OrderByEntryAssignment_9_1 ) ) ;
    public final void rule__Select__Group_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5743:1: ( ( ( rule__Select__OrderByEntryAssignment_9_1 ) ) )
            // InternalSqlParser.g:5744:1: ( ( rule__Select__OrderByEntryAssignment_9_1 ) )
            {
            // InternalSqlParser.g:5744:1: ( ( rule__Select__OrderByEntryAssignment_9_1 ) )
            // InternalSqlParser.g:5745:1: ( rule__Select__OrderByEntryAssignment_9_1 )
            {
             before(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_1()); 
            // InternalSqlParser.g:5746:1: ( rule__Select__OrderByEntryAssignment_9_1 )
            // InternalSqlParser.g:5746:2: rule__Select__OrderByEntryAssignment_9_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__OrderByEntryAssignment_9_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1__Impl"


    // $ANTLR start "rule__Select__Group_10__0"
    // InternalSqlParser.g:5760:1: rule__Select__Group_10__0 : rule__Select__Group_10__0__Impl rule__Select__Group_10__1 ;
    public final void rule__Select__Group_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5764:1: ( rule__Select__Group_10__0__Impl rule__Select__Group_10__1 )
            // InternalSqlParser.g:5765:2: rule__Select__Group_10__0__Impl rule__Select__Group_10__1
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group_10__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0"


    // $ANTLR start "rule__Select__Group_10__0__Impl"
    // InternalSqlParser.g:5772:1: rule__Select__Group_10__0__Impl : ( LIMIT ) ;
    public final void rule__Select__Group_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5776:1: ( ( LIMIT ) )
            // InternalSqlParser.g:5777:1: ( LIMIT )
            {
            // InternalSqlParser.g:5777:1: ( LIMIT )
            // InternalSqlParser.g:5778:1: LIMIT
            {
             before(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 
            match(input,LIMIT,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0__Impl"


    // $ANTLR start "rule__Select__Group_10__1"
    // InternalSqlParser.g:5791:1: rule__Select__Group_10__1 : rule__Select__Group_10__1__Impl ;
    public final void rule__Select__Group_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5795:1: ( rule__Select__Group_10__1__Impl )
            // InternalSqlParser.g:5796:2: rule__Select__Group_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1"


    // $ANTLR start "rule__Select__Group_10__1__Impl"
    // InternalSqlParser.g:5802:1: rule__Select__Group_10__1__Impl : ( ( rule__Select__LimAssignment_10_1 ) ) ;
    public final void rule__Select__Group_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5806:1: ( ( ( rule__Select__LimAssignment_10_1 ) ) )
            // InternalSqlParser.g:5807:1: ( ( rule__Select__LimAssignment_10_1 ) )
            {
            // InternalSqlParser.g:5807:1: ( ( rule__Select__LimAssignment_10_1 ) )
            // InternalSqlParser.g:5808:1: ( rule__Select__LimAssignment_10_1 )
            {
             before(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 
            // InternalSqlParser.g:5809:1: ( rule__Select__LimAssignment_10_1 )
            // InternalSqlParser.g:5809:2: rule__Select__LimAssignment_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__LimAssignment_10_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1__Impl"


    // $ANTLR start "rule__Select__Group_11__0"
    // InternalSqlParser.g:5823:1: rule__Select__Group_11__0 : rule__Select__Group_11__0__Impl rule__Select__Group_11__1 ;
    public final void rule__Select__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5827:1: ( rule__Select__Group_11__0__Impl rule__Select__Group_11__1 )
            // InternalSqlParser.g:5828:2: rule__Select__Group_11__0__Impl rule__Select__Group_11__1
            {
            pushFollow(FOLLOW_21);
            rule__Select__Group_11__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0"


    // $ANTLR start "rule__Select__Group_11__0__Impl"
    // InternalSqlParser.g:5835:1: rule__Select__Group_11__0__Impl : ( OFFSET ) ;
    public final void rule__Select__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5839:1: ( ( OFFSET ) )
            // InternalSqlParser.g:5840:1: ( OFFSET )
            {
            // InternalSqlParser.g:5840:1: ( OFFSET )
            // InternalSqlParser.g:5841:1: OFFSET
            {
             before(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 
            match(input,OFFSET,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0__Impl"


    // $ANTLR start "rule__Select__Group_11__1"
    // InternalSqlParser.g:5854:1: rule__Select__Group_11__1 : rule__Select__Group_11__1__Impl ;
    public final void rule__Select__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5858:1: ( rule__Select__Group_11__1__Impl )
            // InternalSqlParser.g:5859:2: rule__Select__Group_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1"


    // $ANTLR start "rule__Select__Group_11__1__Impl"
    // InternalSqlParser.g:5865:1: rule__Select__Group_11__1__Impl : ( ( rule__Select__OffsetAssignment_11_1 ) ) ;
    public final void rule__Select__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5869:1: ( ( ( rule__Select__OffsetAssignment_11_1 ) ) )
            // InternalSqlParser.g:5870:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            {
            // InternalSqlParser.g:5870:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            // InternalSqlParser.g:5871:1: ( rule__Select__OffsetAssignment_11_1 )
            {
             before(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 
            // InternalSqlParser.g:5872:1: ( rule__Select__OffsetAssignment_11_1 )
            // InternalSqlParser.g:5872:2: rule__Select__OffsetAssignment_11_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__OffsetAssignment_11_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1__Impl"


    // $ANTLR start "rule__Select__Group_12__0"
    // InternalSqlParser.g:5886:1: rule__Select__Group_12__0 : rule__Select__Group_12__0__Impl rule__Select__Group_12__1 ;
    public final void rule__Select__Group_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5890:1: ( rule__Select__Group_12__0__Impl rule__Select__Group_12__1 )
            // InternalSqlParser.g:5891:2: rule__Select__Group_12__0__Impl rule__Select__Group_12__1
            {
            pushFollow(FOLLOW_22);
            rule__Select__Group_12__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_12__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0"


    // $ANTLR start "rule__Select__Group_12__0__Impl"
    // InternalSqlParser.g:5898:1: rule__Select__Group_12__0__Impl : ( FETCHFIRST ) ;
    public final void rule__Select__Group_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5902:1: ( ( FETCHFIRST ) )
            // InternalSqlParser.g:5903:1: ( FETCHFIRST )
            {
            // InternalSqlParser.g:5903:1: ( FETCHFIRST )
            // InternalSqlParser.g:5904:1: FETCHFIRST
            {
             before(grammarAccess.getSelectAccess().getFETCHFIRSTKeyword_12_0()); 
            match(input,FETCHFIRST,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getFETCHFIRSTKeyword_12_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0__Impl"


    // $ANTLR start "rule__Select__Group_12__1"
    // InternalSqlParser.g:5917:1: rule__Select__Group_12__1 : rule__Select__Group_12__1__Impl ;
    public final void rule__Select__Group_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5921:1: ( rule__Select__Group_12__1__Impl )
            // InternalSqlParser.g:5922:2: rule__Select__Group_12__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1"


    // $ANTLR start "rule__Select__Group_12__1__Impl"
    // InternalSqlParser.g:5928:1: rule__Select__Group_12__1__Impl : ( ( rule__Select__FetchFirstAssignment_12_1 ) ) ;
    public final void rule__Select__Group_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5932:1: ( ( ( rule__Select__FetchFirstAssignment_12_1 ) ) )
            // InternalSqlParser.g:5933:1: ( ( rule__Select__FetchFirstAssignment_12_1 ) )
            {
            // InternalSqlParser.g:5933:1: ( ( rule__Select__FetchFirstAssignment_12_1 ) )
            // InternalSqlParser.g:5934:1: ( rule__Select__FetchFirstAssignment_12_1 )
            {
             before(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_1()); 
            // InternalSqlParser.g:5935:1: ( rule__Select__FetchFirstAssignment_12_1 )
            // InternalSqlParser.g:5935:2: rule__Select__FetchFirstAssignment_12_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__FetchFirstAssignment_12_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1__Impl"


    // $ANTLR start "rule__Columns__Group__0"
    // InternalSqlParser.g:5949:1: rule__Columns__Group__0 : rule__Columns__Group__0__Impl rule__Columns__Group__1 ;
    public final void rule__Columns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5953:1: ( rule__Columns__Group__0__Impl rule__Columns__Group__1 )
            // InternalSqlParser.g:5954:2: rule__Columns__Group__0__Impl rule__Columns__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Columns__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Columns__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0"


    // $ANTLR start "rule__Columns__Group__0__Impl"
    // InternalSqlParser.g:5961:1: rule__Columns__Group__0__Impl : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5965:1: ( ( ruleColumnOrAlias ) )
            // InternalSqlParser.g:5966:1: ( ruleColumnOrAlias )
            {
            // InternalSqlParser.g:5966:1: ( ruleColumnOrAlias )
            // InternalSqlParser.g:5967:1: ruleColumnOrAlias
            {
             before(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;

             after(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0__Impl"


    // $ANTLR start "rule__Columns__Group__1"
    // InternalSqlParser.g:5978:1: rule__Columns__Group__1 : rule__Columns__Group__1__Impl ;
    public final void rule__Columns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5982:1: ( rule__Columns__Group__1__Impl )
            // InternalSqlParser.g:5983:2: rule__Columns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1"


    // $ANTLR start "rule__Columns__Group__1__Impl"
    // InternalSqlParser.g:5989:1: rule__Columns__Group__1__Impl : ( ( rule__Columns__Group_1__0 )? ) ;
    public final void rule__Columns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5993:1: ( ( ( rule__Columns__Group_1__0 )? ) )
            // InternalSqlParser.g:5994:1: ( ( rule__Columns__Group_1__0 )? )
            {
            // InternalSqlParser.g:5994:1: ( ( rule__Columns__Group_1__0 )? )
            // InternalSqlParser.g:5995:1: ( rule__Columns__Group_1__0 )?
            {
             before(grammarAccess.getColumnsAccess().getGroup_1()); 
            // InternalSqlParser.g:5996:1: ( rule__Columns__Group_1__0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==Comma) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSqlParser.g:5996:2: rule__Columns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Columns__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getColumnsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1__Impl"


    // $ANTLR start "rule__Columns__Group_1__0"
    // InternalSqlParser.g:6010:1: rule__Columns__Group_1__0 : rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 ;
    public final void rule__Columns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6014:1: ( rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 )
            // InternalSqlParser.g:6015:2: rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Columns__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0"


    // $ANTLR start "rule__Columns__Group_1__0__Impl"
    // InternalSqlParser.g:6022:1: rule__Columns__Group_1__0__Impl : ( () ) ;
    public final void rule__Columns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6026:1: ( ( () ) )
            // InternalSqlParser.g:6027:1: ( () )
            {
            // InternalSqlParser.g:6027:1: ( () )
            // InternalSqlParser.g:6028:1: ()
            {
             before(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 
            // InternalSqlParser.g:6029:1: ()
            // InternalSqlParser.g:6031:1: 
            {
            }

             after(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1__1"
    // InternalSqlParser.g:6041:1: rule__Columns__Group_1__1 : rule__Columns__Group_1__1__Impl ;
    public final void rule__Columns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6045:1: ( rule__Columns__Group_1__1__Impl )
            // InternalSqlParser.g:6046:2: rule__Columns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1"


    // $ANTLR start "rule__Columns__Group_1__1__Impl"
    // InternalSqlParser.g:6052:1: rule__Columns__Group_1__1__Impl : ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) ;
    public final void rule__Columns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6056:1: ( ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:6057:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:6057:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            // InternalSqlParser.g:6058:1: ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:6058:1: ( ( rule__Columns__Group_1_1__0 ) )
            // InternalSqlParser.g:6059:1: ( rule__Columns__Group_1_1__0 )
            {
             before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:6060:1: ( rule__Columns__Group_1_1__0 )
            // InternalSqlParser.g:6060:2: rule__Columns__Group_1_1__0
            {
            pushFollow(FOLLOW_23);
            rule__Columns__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getColumnsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:6063:1: ( ( rule__Columns__Group_1_1__0 )* )
            // InternalSqlParser.g:6064:1: ( rule__Columns__Group_1_1__0 )*
            {
             before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:6065:1: ( rule__Columns__Group_1_1__0 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==Comma) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalSqlParser.g:6065:2: rule__Columns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__Columns__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

             after(grammarAccess.getColumnsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__0"
    // InternalSqlParser.g:6080:1: rule__Columns__Group_1_1__0 : rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 ;
    public final void rule__Columns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6084:1: ( rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 )
            // InternalSqlParser.g:6085:2: rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Columns__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0"


    // $ANTLR start "rule__Columns__Group_1_1__0__Impl"
    // InternalSqlParser.g:6092:1: rule__Columns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Columns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6096:1: ( ( Comma ) )
            // InternalSqlParser.g:6097:1: ( Comma )
            {
            // InternalSqlParser.g:6097:1: ( Comma )
            // InternalSqlParser.g:6098:1: Comma
            {
             before(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__1"
    // InternalSqlParser.g:6111:1: rule__Columns__Group_1_1__1 : rule__Columns__Group_1_1__1__Impl ;
    public final void rule__Columns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6115:1: ( rule__Columns__Group_1_1__1__Impl )
            // InternalSqlParser.g:6116:2: rule__Columns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1"


    // $ANTLR start "rule__Columns__Group_1_1__1__Impl"
    // InternalSqlParser.g:6122:1: rule__Columns__Group_1_1__1__Impl : ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Columns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6126:1: ( ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:6127:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:6127:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:6128:1: ( rule__Columns__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:6129:1: ( rule__Columns__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:6129:2: rule__Columns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Columns__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0"
    // InternalSqlParser.g:6143:1: rule__ColumnOrAlias__Group_0__0 : rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 ;
    public final void rule__ColumnOrAlias__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6147:1: ( rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 )
            // InternalSqlParser.g:6148:2: rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1
            {
            pushFollow(FOLLOW_24);
            rule__ColumnOrAlias__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0__Impl"
    // InternalSqlParser.g:6155:1: rule__ColumnOrAlias__Group_0__0__Impl : ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) ;
    public final void rule__ColumnOrAlias__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6159:1: ( ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) )
            // InternalSqlParser.g:6160:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            {
            // InternalSqlParser.g:6160:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            // InternalSqlParser.g:6161:1: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            {
             before(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 
            // InternalSqlParser.g:6162:1: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            // InternalSqlParser.g:6162:2: rule__ColumnOrAlias__CeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__CeAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1"
    // InternalSqlParser.g:6172:1: rule__ColumnOrAlias__Group_0__1 : rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 ;
    public final void rule__ColumnOrAlias__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6176:1: ( rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 )
            // InternalSqlParser.g:6177:2: rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2
            {
            pushFollow(FOLLOW_24);
            rule__ColumnOrAlias__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1__Impl"
    // InternalSqlParser.g:6184:1: rule__ColumnOrAlias__Group_0__1__Impl : ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6188:1: ( ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) )
            // InternalSqlParser.g:6189:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            {
            // InternalSqlParser.g:6189:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            // InternalSqlParser.g:6190:1: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            {
             before(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 
            // InternalSqlParser.g:6191:1: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==AS) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalSqlParser.g:6191:2: rule__ColumnOrAlias__AliasAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AliasAssignment_0_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2"
    // InternalSqlParser.g:6201:1: rule__ColumnOrAlias__Group_0__2 : rule__ColumnOrAlias__Group_0__2__Impl ;
    public final void rule__ColumnOrAlias__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6205:1: ( rule__ColumnOrAlias__Group_0__2__Impl )
            // InternalSqlParser.g:6206:2: rule__ColumnOrAlias__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2__Impl"
    // InternalSqlParser.g:6212:1: rule__ColumnOrAlias__Group_0__2__Impl : ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6216:1: ( ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) )
            // InternalSqlParser.g:6217:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            {
            // InternalSqlParser.g:6217:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            // InternalSqlParser.g:6218:1: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            {
             before(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 
            // InternalSqlParser.g:6219:1: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( ((LA75_0>=RULE_STRING && LA75_0<=RULE_ID)) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalSqlParser.g:6219:2: rule__ColumnOrAlias__ColAliasAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__ColAliasAssignment_0_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2__Impl"


    // $ANTLR start "rule__ColumnFull__Group__0"
    // InternalSqlParser.g:6235:1: rule__ColumnFull__Group__0 : rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 ;
    public final void rule__ColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6239:1: ( rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 )
            // InternalSqlParser.g:6240:2: rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__ColumnFull__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0"


    // $ANTLR start "rule__ColumnFull__Group__0__Impl"
    // InternalSqlParser.g:6247:1: rule__ColumnFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6251:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:6252:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:6252:1: ( ruleDbObjectName )
            // InternalSqlParser.g:6253:1: ruleDbObjectName
            {
             before(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group__1"
    // InternalSqlParser.g:6264:1: rule__ColumnFull__Group__1 : rule__ColumnFull__Group__1__Impl ;
    public final void rule__ColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6268:1: ( rule__ColumnFull__Group__1__Impl )
            // InternalSqlParser.g:6269:2: rule__ColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1"


    // $ANTLR start "rule__ColumnFull__Group__1__Impl"
    // InternalSqlParser.g:6275:1: rule__ColumnFull__Group__1__Impl : ( ( rule__ColumnFull__Group_1__0 )? ) ;
    public final void rule__ColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6279:1: ( ( ( rule__ColumnFull__Group_1__0 )? ) )
            // InternalSqlParser.g:6280:1: ( ( rule__ColumnFull__Group_1__0 )? )
            {
            // InternalSqlParser.g:6280:1: ( ( rule__ColumnFull__Group_1__0 )? )
            // InternalSqlParser.g:6281:1: ( rule__ColumnFull__Group_1__0 )?
            {
             before(grammarAccess.getColumnFullAccess().getGroup_1()); 
            // InternalSqlParser.g:6282:1: ( rule__ColumnFull__Group_1__0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==FullStop) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSqlParser.g:6282:2: rule__ColumnFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnFull__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getColumnFullAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__0"
    // InternalSqlParser.g:6296:1: rule__ColumnFull__Group_1__0 : rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 ;
    public final void rule__ColumnFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6300:1: ( rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 )
            // InternalSqlParser.g:6301:2: rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__ColumnFull__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1__0__Impl"
    // InternalSqlParser.g:6308:1: rule__ColumnFull__Group_1__0__Impl : ( () ) ;
    public final void rule__ColumnFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6312:1: ( ( () ) )
            // InternalSqlParser.g:6313:1: ( () )
            {
            // InternalSqlParser.g:6313:1: ( () )
            // InternalSqlParser.g:6314:1: ()
            {
             before(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 
            // InternalSqlParser.g:6315:1: ()
            // InternalSqlParser.g:6317:1: 
            {
            }

             after(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__1"
    // InternalSqlParser.g:6327:1: rule__ColumnFull__Group_1__1 : rule__ColumnFull__Group_1__1__Impl ;
    public final void rule__ColumnFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6331:1: ( rule__ColumnFull__Group_1__1__Impl )
            // InternalSqlParser.g:6332:2: rule__ColumnFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1__1__Impl"
    // InternalSqlParser.g:6338:1: rule__ColumnFull__Group_1__1__Impl : ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) ;
    public final void rule__ColumnFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6342:1: ( ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:6343:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:6343:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            // InternalSqlParser.g:6344:1: ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:6344:1: ( ( rule__ColumnFull__Group_1_1__0 ) )
            // InternalSqlParser.g:6345:1: ( rule__ColumnFull__Group_1_1__0 )
            {
             before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            // InternalSqlParser.g:6346:1: ( rule__ColumnFull__Group_1_1__0 )
            // InternalSqlParser.g:6346:2: rule__ColumnFull__Group_1_1__0
            {
            pushFollow(FOLLOW_26);
            rule__ColumnFull__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:6349:1: ( ( rule__ColumnFull__Group_1_1__0 )* )
            // InternalSqlParser.g:6350:1: ( rule__ColumnFull__Group_1_1__0 )*
            {
             before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            // InternalSqlParser.g:6351:1: ( rule__ColumnFull__Group_1_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==FullStop) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalSqlParser.g:6351:2: rule__ColumnFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_26);
            	    rule__ColumnFull__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

             after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0"
    // InternalSqlParser.g:6366:1: rule__ColumnFull__Group_1_1__0 : rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 ;
    public final void rule__ColumnFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6370:1: ( rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 )
            // InternalSqlParser.g:6371:2: rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1
            {
            pushFollow(FOLLOW_27);
            rule__ColumnFull__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0__Impl"
    // InternalSqlParser.g:6378:1: rule__ColumnFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__ColumnFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6382:1: ( ( FullStop ) )
            // InternalSqlParser.g:6383:1: ( FullStop )
            {
            // InternalSqlParser.g:6383:1: ( FullStop )
            // InternalSqlParser.g:6384:1: FullStop
            {
             before(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 
            match(input,FullStop,FOLLOW_2); 
             after(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1"
    // InternalSqlParser.g:6397:1: rule__ColumnFull__Group_1_1__1 : rule__ColumnFull__Group_1_1__1__Impl ;
    public final void rule__ColumnFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6401:1: ( rule__ColumnFull__Group_1_1__1__Impl )
            // InternalSqlParser.g:6402:2: rule__ColumnFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1__Impl"
    // InternalSqlParser.g:6408:1: rule__ColumnFull__Group_1_1__1__Impl : ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__ColumnFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6412:1: ( ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:6413:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:6413:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:6414:1: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:6415:1: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:6415:2: rule__ColumnFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__Tables__Group__0"
    // InternalSqlParser.g:6429:1: rule__Tables__Group__0 : rule__Tables__Group__0__Impl rule__Tables__Group__1 ;
    public final void rule__Tables__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6433:1: ( rule__Tables__Group__0__Impl rule__Tables__Group__1 )
            // InternalSqlParser.g:6434:2: rule__Tables__Group__0__Impl rule__Tables__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Tables__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Tables__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0"


    // $ANTLR start "rule__Tables__Group__0__Impl"
    // InternalSqlParser.g:6441:1: rule__Tables__Group__0__Impl : ( ruleFromTable ) ;
    public final void rule__Tables__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6445:1: ( ( ruleFromTable ) )
            // InternalSqlParser.g:6446:1: ( ruleFromTable )
            {
            // InternalSqlParser.g:6446:1: ( ruleFromTable )
            // InternalSqlParser.g:6447:1: ruleFromTable
            {
             before(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;

             after(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0__Impl"


    // $ANTLR start "rule__Tables__Group__1"
    // InternalSqlParser.g:6458:1: rule__Tables__Group__1 : rule__Tables__Group__1__Impl ;
    public final void rule__Tables__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6462:1: ( rule__Tables__Group__1__Impl )
            // InternalSqlParser.g:6463:2: rule__Tables__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1"


    // $ANTLR start "rule__Tables__Group__1__Impl"
    // InternalSqlParser.g:6469:1: rule__Tables__Group__1__Impl : ( ( rule__Tables__Group_1__0 )? ) ;
    public final void rule__Tables__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6473:1: ( ( ( rule__Tables__Group_1__0 )? ) )
            // InternalSqlParser.g:6474:1: ( ( rule__Tables__Group_1__0 )? )
            {
            // InternalSqlParser.g:6474:1: ( ( rule__Tables__Group_1__0 )? )
            // InternalSqlParser.g:6475:1: ( rule__Tables__Group_1__0 )?
            {
             before(grammarAccess.getTablesAccess().getGroup_1()); 
            // InternalSqlParser.g:6476:1: ( rule__Tables__Group_1__0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==Comma) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalSqlParser.g:6476:2: rule__Tables__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Tables__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getTablesAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1__Impl"


    // $ANTLR start "rule__Tables__Group_1__0"
    // InternalSqlParser.g:6490:1: rule__Tables__Group_1__0 : rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 ;
    public final void rule__Tables__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6494:1: ( rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 )
            // InternalSqlParser.g:6495:2: rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Tables__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0"


    // $ANTLR start "rule__Tables__Group_1__0__Impl"
    // InternalSqlParser.g:6502:1: rule__Tables__Group_1__0__Impl : ( () ) ;
    public final void rule__Tables__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6506:1: ( ( () ) )
            // InternalSqlParser.g:6507:1: ( () )
            {
            // InternalSqlParser.g:6507:1: ( () )
            // InternalSqlParser.g:6508:1: ()
            {
             before(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 
            // InternalSqlParser.g:6509:1: ()
            // InternalSqlParser.g:6511:1: 
            {
            }

             after(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1__1"
    // InternalSqlParser.g:6521:1: rule__Tables__Group_1__1 : rule__Tables__Group_1__1__Impl ;
    public final void rule__Tables__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6525:1: ( rule__Tables__Group_1__1__Impl )
            // InternalSqlParser.g:6526:2: rule__Tables__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1"


    // $ANTLR start "rule__Tables__Group_1__1__Impl"
    // InternalSqlParser.g:6532:1: rule__Tables__Group_1__1__Impl : ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) ;
    public final void rule__Tables__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6536:1: ( ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:6537:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:6537:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            // InternalSqlParser.g:6538:1: ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:6538:1: ( ( rule__Tables__Group_1_1__0 ) )
            // InternalSqlParser.g:6539:1: ( rule__Tables__Group_1_1__0 )
            {
             before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            // InternalSqlParser.g:6540:1: ( rule__Tables__Group_1_1__0 )
            // InternalSqlParser.g:6540:2: rule__Tables__Group_1_1__0
            {
            pushFollow(FOLLOW_23);
            rule__Tables__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getTablesAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:6543:1: ( ( rule__Tables__Group_1_1__0 )* )
            // InternalSqlParser.g:6544:1: ( rule__Tables__Group_1_1__0 )*
            {
             before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            // InternalSqlParser.g:6545:1: ( rule__Tables__Group_1_1__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==Comma) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalSqlParser.g:6545:2: rule__Tables__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__Tables__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

             after(grammarAccess.getTablesAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__0"
    // InternalSqlParser.g:6560:1: rule__Tables__Group_1_1__0 : rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 ;
    public final void rule__Tables__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6564:1: ( rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 )
            // InternalSqlParser.g:6565:2: rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1
            {
            pushFollow(FOLLOW_14);
            rule__Tables__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0"


    // $ANTLR start "rule__Tables__Group_1_1__0__Impl"
    // InternalSqlParser.g:6572:1: rule__Tables__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Tables__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6576:1: ( ( Comma ) )
            // InternalSqlParser.g:6577:1: ( Comma )
            {
            // InternalSqlParser.g:6577:1: ( Comma )
            // InternalSqlParser.g:6578:1: Comma
            {
             before(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__1"
    // InternalSqlParser.g:6591:1: rule__Tables__Group_1_1__1 : rule__Tables__Group_1_1__1__Impl ;
    public final void rule__Tables__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6595:1: ( rule__Tables__Group_1_1__1__Impl )
            // InternalSqlParser.g:6596:2: rule__Tables__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1"


    // $ANTLR start "rule__Tables__Group_1_1__1__Impl"
    // InternalSqlParser.g:6602:1: rule__Tables__Group_1_1__1__Impl : ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Tables__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6606:1: ( ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:6607:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:6607:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:6608:1: ( rule__Tables__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:6609:1: ( rule__Tables__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:6609:2: rule__Tables__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Tables__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1__Impl"


    // $ANTLR start "rule__FromTable__Group__0"
    // InternalSqlParser.g:6623:1: rule__FromTable__Group__0 : rule__FromTable__Group__0__Impl rule__FromTable__Group__1 ;
    public final void rule__FromTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6627:1: ( rule__FromTable__Group__0__Impl rule__FromTable__Group__1 )
            // InternalSqlParser.g:6628:2: rule__FromTable__Group__0__Impl rule__FromTable__Group__1
            {
            pushFollow(FOLLOW_28);
            rule__FromTable__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0"


    // $ANTLR start "rule__FromTable__Group__0__Impl"
    // InternalSqlParser.g:6635:1: rule__FromTable__Group__0__Impl : ( ( rule__FromTable__TableAssignment_0 ) ) ;
    public final void rule__FromTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6639:1: ( ( ( rule__FromTable__TableAssignment_0 ) ) )
            // InternalSqlParser.g:6640:1: ( ( rule__FromTable__TableAssignment_0 ) )
            {
            // InternalSqlParser.g:6640:1: ( ( rule__FromTable__TableAssignment_0 ) )
            // InternalSqlParser.g:6641:1: ( rule__FromTable__TableAssignment_0 )
            {
             before(grammarAccess.getFromTableAccess().getTableAssignment_0()); 
            // InternalSqlParser.g:6642:1: ( rule__FromTable__TableAssignment_0 )
            // InternalSqlParser.g:6642:2: rule__FromTable__TableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__TableAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getFromTableAccess().getTableAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0__Impl"


    // $ANTLR start "rule__FromTable__Group__1"
    // InternalSqlParser.g:6652:1: rule__FromTable__Group__1 : rule__FromTable__Group__1__Impl ;
    public final void rule__FromTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6656:1: ( rule__FromTable__Group__1__Impl )
            // InternalSqlParser.g:6657:2: rule__FromTable__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1"


    // $ANTLR start "rule__FromTable__Group__1__Impl"
    // InternalSqlParser.g:6663:1: rule__FromTable__Group__1__Impl : ( ( rule__FromTable__FjoinAssignment_1 )* ) ;
    public final void rule__FromTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6667:1: ( ( ( rule__FromTable__FjoinAssignment_1 )* ) )
            // InternalSqlParser.g:6668:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            {
            // InternalSqlParser.g:6668:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            // InternalSqlParser.g:6669:1: ( rule__FromTable__FjoinAssignment_1 )*
            {
             before(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 
            // InternalSqlParser.g:6670:1: ( rule__FromTable__FjoinAssignment_1 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==STRAIGHT_JOIN||LA80_0==NATURAL||LA80_0==CROSS||LA80_0==INNER||LA80_0==RIGHT||LA80_0==FULL||LA80_0==JOIN||LA80_0==LEFT) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalSqlParser.g:6670:2: rule__FromTable__FjoinAssignment_1
            	    {
            	    pushFollow(FOLLOW_29);
            	    rule__FromTable__FjoinAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

             after(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__0"
    // InternalSqlParser.g:6684:1: rule__FromTableJoin__Group__0 : rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 ;
    public final void rule__FromTableJoin__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6688:1: ( rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 )
            // InternalSqlParser.g:6689:2: rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__FromTableJoin__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0"


    // $ANTLR start "rule__FromTableJoin__Group__0__Impl"
    // InternalSqlParser.g:6696:1: rule__FromTableJoin__Group__0__Impl : ( ( rule__FromTableJoin__JoinAssignment_0 ) ) ;
    public final void rule__FromTableJoin__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6700:1: ( ( ( rule__FromTableJoin__JoinAssignment_0 ) ) )
            // InternalSqlParser.g:6701:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            {
            // InternalSqlParser.g:6701:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            // InternalSqlParser.g:6702:1: ( rule__FromTableJoin__JoinAssignment_0 )
            {
             before(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 
            // InternalSqlParser.g:6703:1: ( rule__FromTableJoin__JoinAssignment_0 )
            // InternalSqlParser.g:6703:2: rule__FromTableJoin__JoinAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__1"
    // InternalSqlParser.g:6713:1: rule__FromTableJoin__Group__1 : rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 ;
    public final void rule__FromTableJoin__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6717:1: ( rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 )
            // InternalSqlParser.g:6718:2: rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__FromTableJoin__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1"


    // $ANTLR start "rule__FromTableJoin__Group__1__Impl"
    // InternalSqlParser.g:6725:1: rule__FromTableJoin__Group__1__Impl : ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) ;
    public final void rule__FromTableJoin__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6729:1: ( ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) )
            // InternalSqlParser.g:6730:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            {
            // InternalSqlParser.g:6730:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            // InternalSqlParser.g:6731:1: ( rule__FromTableJoin__OnTableAssignment_1 )
            {
             before(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 
            // InternalSqlParser.g:6732:1: ( rule__FromTableJoin__OnTableAssignment_1 )
            // InternalSqlParser.g:6732:2: rule__FromTableJoin__OnTableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__OnTableAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__2"
    // InternalSqlParser.g:6742:1: rule__FromTableJoin__Group__2 : rule__FromTableJoin__Group__2__Impl ;
    public final void rule__FromTableJoin__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6746:1: ( rule__FromTableJoin__Group__2__Impl )
            // InternalSqlParser.g:6747:2: rule__FromTableJoin__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2"


    // $ANTLR start "rule__FromTableJoin__Group__2__Impl"
    // InternalSqlParser.g:6753:1: rule__FromTableJoin__Group__2__Impl : ( ( rule__FromTableJoin__Alternatives_2 ) ) ;
    public final void rule__FromTableJoin__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6757:1: ( ( ( rule__FromTableJoin__Alternatives_2 ) ) )
            // InternalSqlParser.g:6758:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            {
            // InternalSqlParser.g:6758:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            // InternalSqlParser.g:6759:1: ( rule__FromTableJoin__Alternatives_2 )
            {
             before(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 
            // InternalSqlParser.g:6760:1: ( rule__FromTableJoin__Alternatives_2 )
            // InternalSqlParser.g:6760:2: rule__FromTableJoin__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Alternatives_2();

            state._fsp--;


            }

             after(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0"
    // InternalSqlParser.g:6776:1: rule__FromTableJoin__Group_2_0__0 : rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 ;
    public final void rule__FromTableJoin__Group_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6780:1: ( rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 )
            // InternalSqlParser.g:6781:2: rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1
            {
            pushFollow(FOLLOW_18);
            rule__FromTableJoin__Group_2_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0__Impl"
    // InternalSqlParser.g:6788:1: rule__FromTableJoin__Group_2_0__0__Impl : ( ON ) ;
    public final void rule__FromTableJoin__Group_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6792:1: ( ( ON ) )
            // InternalSqlParser.g:6793:1: ( ON )
            {
            // InternalSqlParser.g:6793:1: ( ON )
            // InternalSqlParser.g:6794:1: ON
            {
             before(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 
            match(input,ON,FOLLOW_2); 
             after(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1"
    // InternalSqlParser.g:6807:1: rule__FromTableJoin__Group_2_0__1 : rule__FromTableJoin__Group_2_0__1__Impl ;
    public final void rule__FromTableJoin__Group_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6811:1: ( rule__FromTableJoin__Group_2_0__1__Impl )
            // InternalSqlParser.g:6812:2: rule__FromTableJoin__Group_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1__Impl"
    // InternalSqlParser.g:6818:1: rule__FromTableJoin__Group_2_0__1__Impl : ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) ;
    public final void rule__FromTableJoin__Group_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6822:1: ( ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) )
            // InternalSqlParser.g:6823:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            {
            // InternalSqlParser.g:6823:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            // InternalSqlParser.g:6824:1: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            {
             before(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 
            // InternalSqlParser.g:6825:1: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            // InternalSqlParser.g:6825:2: rule__FromTableJoin__JoinExprAssignment_2_0_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinExprAssignment_2_0_1();

            state._fsp--;


            }

             after(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__0"
    // InternalSqlParser.g:6839:1: rule__JoinCondition__Group__0 : rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 ;
    public final void rule__JoinCondition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6843:1: ( rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 )
            // InternalSqlParser.g:6844:2: rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__JoinCondition__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0"


    // $ANTLR start "rule__JoinCondition__Group__0__Impl"
    // InternalSqlParser.g:6851:1: rule__JoinCondition__Group__0__Impl : ( USING ) ;
    public final void rule__JoinCondition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6855:1: ( ( USING ) )
            // InternalSqlParser.g:6856:1: ( USING )
            {
            // InternalSqlParser.g:6856:1: ( USING )
            // InternalSqlParser.g:6857:1: USING
            {
             before(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 
            match(input,USING,FOLLOW_2); 
             after(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0__Impl"


    // $ANTLR start "rule__JoinCondition__Group__1"
    // InternalSqlParser.g:6870:1: rule__JoinCondition__Group__1 : rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 ;
    public final void rule__JoinCondition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6874:1: ( rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 )
            // InternalSqlParser.g:6875:2: rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__JoinCondition__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1"


    // $ANTLR start "rule__JoinCondition__Group__1__Impl"
    // InternalSqlParser.g:6882:1: rule__JoinCondition__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__JoinCondition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6886:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:6887:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:6887:1: ( LeftParenthesis )
            // InternalSqlParser.g:6888:1: LeftParenthesis
            {
             before(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__2"
    // InternalSqlParser.g:6901:1: rule__JoinCondition__Group__2 : rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 ;
    public final void rule__JoinCondition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6905:1: ( rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 )
            // InternalSqlParser.g:6906:2: rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__JoinCondition__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2"


    // $ANTLR start "rule__JoinCondition__Group__2__Impl"
    // InternalSqlParser.g:6913:1: rule__JoinCondition__Group__2__Impl : ( ( rule__JoinCondition__UseColsAssignment_2 ) ) ;
    public final void rule__JoinCondition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6917:1: ( ( ( rule__JoinCondition__UseColsAssignment_2 ) ) )
            // InternalSqlParser.g:6918:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            {
            // InternalSqlParser.g:6918:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            // InternalSqlParser.g:6919:1: ( rule__JoinCondition__UseColsAssignment_2 )
            {
             before(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 
            // InternalSqlParser.g:6920:1: ( rule__JoinCondition__UseColsAssignment_2 )
            // InternalSqlParser.g:6920:2: rule__JoinCondition__UseColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__UseColsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2__Impl"


    // $ANTLR start "rule__JoinCondition__Group__3"
    // InternalSqlParser.g:6930:1: rule__JoinCondition__Group__3 : rule__JoinCondition__Group__3__Impl ;
    public final void rule__JoinCondition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6934:1: ( rule__JoinCondition__Group__3__Impl )
            // InternalSqlParser.g:6935:2: rule__JoinCondition__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3"


    // $ANTLR start "rule__JoinCondition__Group__3__Impl"
    // InternalSqlParser.g:6941:1: rule__JoinCondition__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__JoinCondition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6945:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:6946:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:6946:1: ( RightParenthesis )
            // InternalSqlParser.g:6947:1: RightParenthesis
            {
             before(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3__Impl"


    // $ANTLR start "rule__UsingCols__Group__0"
    // InternalSqlParser.g:6968:1: rule__UsingCols__Group__0 : rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 ;
    public final void rule__UsingCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6972:1: ( rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 )
            // InternalSqlParser.g:6973:2: rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__UsingCols__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0"


    // $ANTLR start "rule__UsingCols__Group__0__Impl"
    // InternalSqlParser.g:6980:1: rule__UsingCols__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6984:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:6985:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:6985:1: ( ruleDbObjectName )
            // InternalSqlParser.g:6986:1: ruleDbObjectName
            {
             before(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0__Impl"


    // $ANTLR start "rule__UsingCols__Group__1"
    // InternalSqlParser.g:6997:1: rule__UsingCols__Group__1 : rule__UsingCols__Group__1__Impl ;
    public final void rule__UsingCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7001:1: ( rule__UsingCols__Group__1__Impl )
            // InternalSqlParser.g:7002:2: rule__UsingCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1"


    // $ANTLR start "rule__UsingCols__Group__1__Impl"
    // InternalSqlParser.g:7008:1: rule__UsingCols__Group__1__Impl : ( ( rule__UsingCols__Group_1__0 )? ) ;
    public final void rule__UsingCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7012:1: ( ( ( rule__UsingCols__Group_1__0 )? ) )
            // InternalSqlParser.g:7013:1: ( ( rule__UsingCols__Group_1__0 )? )
            {
            // InternalSqlParser.g:7013:1: ( ( rule__UsingCols__Group_1__0 )? )
            // InternalSqlParser.g:7014:1: ( rule__UsingCols__Group_1__0 )?
            {
             before(grammarAccess.getUsingColsAccess().getGroup_1()); 
            // InternalSqlParser.g:7015:1: ( rule__UsingCols__Group_1__0 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==Comma) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSqlParser.g:7015:2: rule__UsingCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UsingCols__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getUsingColsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__0"
    // InternalSqlParser.g:7029:1: rule__UsingCols__Group_1__0 : rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 ;
    public final void rule__UsingCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7033:1: ( rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 )
            // InternalSqlParser.g:7034:2: rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__UsingCols__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0"


    // $ANTLR start "rule__UsingCols__Group_1__0__Impl"
    // InternalSqlParser.g:7041:1: rule__UsingCols__Group_1__0__Impl : ( () ) ;
    public final void rule__UsingCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7045:1: ( ( () ) )
            // InternalSqlParser.g:7046:1: ( () )
            {
            // InternalSqlParser.g:7046:1: ( () )
            // InternalSqlParser.g:7047:1: ()
            {
             before(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 
            // InternalSqlParser.g:7048:1: ()
            // InternalSqlParser.g:7050:1: 
            {
            }

             after(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__1"
    // InternalSqlParser.g:7060:1: rule__UsingCols__Group_1__1 : rule__UsingCols__Group_1__1__Impl ;
    public final void rule__UsingCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7064:1: ( rule__UsingCols__Group_1__1__Impl )
            // InternalSqlParser.g:7065:2: rule__UsingCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1"


    // $ANTLR start "rule__UsingCols__Group_1__1__Impl"
    // InternalSqlParser.g:7071:1: rule__UsingCols__Group_1__1__Impl : ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) ;
    public final void rule__UsingCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7075:1: ( ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:7076:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:7076:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            // InternalSqlParser.g:7077:1: ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:7077:1: ( ( rule__UsingCols__Group_1_1__0 ) )
            // InternalSqlParser.g:7078:1: ( rule__UsingCols__Group_1_1__0 )
            {
             before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:7079:1: ( rule__UsingCols__Group_1_1__0 )
            // InternalSqlParser.g:7079:2: rule__UsingCols__Group_1_1__0
            {
            pushFollow(FOLLOW_23);
            rule__UsingCols__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:7082:1: ( ( rule__UsingCols__Group_1_1__0 )* )
            // InternalSqlParser.g:7083:1: ( rule__UsingCols__Group_1_1__0 )*
            {
             before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:7084:1: ( rule__UsingCols__Group_1_1__0 )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==Comma) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalSqlParser.g:7084:2: rule__UsingCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__UsingCols__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

             after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__0"
    // InternalSqlParser.g:7099:1: rule__UsingCols__Group_1_1__0 : rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 ;
    public final void rule__UsingCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7103:1: ( rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 )
            // InternalSqlParser.g:7104:2: rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1
            {
            pushFollow(FOLLOW_27);
            rule__UsingCols__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0"


    // $ANTLR start "rule__UsingCols__Group_1_1__0__Impl"
    // InternalSqlParser.g:7111:1: rule__UsingCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UsingCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7115:1: ( ( Comma ) )
            // InternalSqlParser.g:7116:1: ( Comma )
            {
            // InternalSqlParser.g:7116:1: ( Comma )
            // InternalSqlParser.g:7117:1: Comma
            {
             before(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__1"
    // InternalSqlParser.g:7130:1: rule__UsingCols__Group_1_1__1 : rule__UsingCols__Group_1_1__1__Impl ;
    public final void rule__UsingCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7134:1: ( rule__UsingCols__Group_1_1__1__Impl )
            // InternalSqlParser.g:7135:2: rule__UsingCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1"


    // $ANTLR start "rule__UsingCols__Group_1_1__1__Impl"
    // InternalSqlParser.g:7141:1: rule__UsingCols__Group_1_1__1__Impl : ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UsingCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7145:1: ( ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:7146:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:7146:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:7147:1: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:7148:1: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:7148:2: rule__UsingCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__0"
    // InternalSqlParser.g:7162:1: rule__TableOrAlias__Group__0 : rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 ;
    public final void rule__TableOrAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7166:1: ( rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 )
            // InternalSqlParser.g:7167:2: rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__TableOrAlias__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0"


    // $ANTLR start "rule__TableOrAlias__Group__0__Impl"
    // InternalSqlParser.g:7174:1: rule__TableOrAlias__Group__0__Impl : ( ( rule__TableOrAlias__Alternatives_0 ) ) ;
    public final void rule__TableOrAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7178:1: ( ( ( rule__TableOrAlias__Alternatives_0 ) ) )
            // InternalSqlParser.g:7179:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            {
            // InternalSqlParser.g:7179:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            // InternalSqlParser.g:7180:1: ( rule__TableOrAlias__Alternatives_0 )
            {
             before(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 
            // InternalSqlParser.g:7181:1: ( rule__TableOrAlias__Alternatives_0 )
            // InternalSqlParser.g:7181:2: rule__TableOrAlias__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Alternatives_0();

            state._fsp--;


            }

             after(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__1"
    // InternalSqlParser.g:7191:1: rule__TableOrAlias__Group__1 : rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 ;
    public final void rule__TableOrAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7195:1: ( rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 )
            // InternalSqlParser.g:7196:2: rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__TableOrAlias__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1"


    // $ANTLR start "rule__TableOrAlias__Group__1__Impl"
    // InternalSqlParser.g:7203:1: rule__TableOrAlias__Group__1__Impl : ( ( rule__TableOrAlias__Alternatives_1 )? ) ;
    public final void rule__TableOrAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7207:1: ( ( ( rule__TableOrAlias__Alternatives_1 )? ) )
            // InternalSqlParser.g:7208:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            {
            // InternalSqlParser.g:7208:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            // InternalSqlParser.g:7209:1: ( rule__TableOrAlias__Alternatives_1 )?
            {
             before(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 
            // InternalSqlParser.g:7210:1: ( rule__TableOrAlias__Alternatives_1 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==UNPIVOT||LA83_0==PIVOT) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSqlParser.g:7210:2: rule__TableOrAlias__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__2"
    // InternalSqlParser.g:7220:1: rule__TableOrAlias__Group__2 : rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 ;
    public final void rule__TableOrAlias__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7224:1: ( rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 )
            // InternalSqlParser.g:7225:2: rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__TableOrAlias__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2"


    // $ANTLR start "rule__TableOrAlias__Group__2__Impl"
    // InternalSqlParser.g:7232:1: rule__TableOrAlias__Group__2__Impl : ( ( rule__TableOrAlias__AliasAssignment_2 )? ) ;
    public final void rule__TableOrAlias__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7236:1: ( ( ( rule__TableOrAlias__AliasAssignment_2 )? ) )
            // InternalSqlParser.g:7237:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            {
            // InternalSqlParser.g:7237:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            // InternalSqlParser.g:7238:1: ( rule__TableOrAlias__AliasAssignment_2 )?
            {
             before(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 
            // InternalSqlParser.g:7239:1: ( rule__TableOrAlias__AliasAssignment_2 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==AS) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSqlParser.g:7239:2: rule__TableOrAlias__AliasAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__AliasAssignment_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__3"
    // InternalSqlParser.g:7249:1: rule__TableOrAlias__Group__3 : rule__TableOrAlias__Group__3__Impl ;
    public final void rule__TableOrAlias__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7253:1: ( rule__TableOrAlias__Group__3__Impl )
            // InternalSqlParser.g:7254:2: rule__TableOrAlias__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3"


    // $ANTLR start "rule__TableOrAlias__Group__3__Impl"
    // InternalSqlParser.g:7260:1: rule__TableOrAlias__Group__3__Impl : ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) ;
    public final void rule__TableOrAlias__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7264:1: ( ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) )
            // InternalSqlParser.g:7265:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            {
            // InternalSqlParser.g:7265:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            // InternalSqlParser.g:7266:1: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            {
             before(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 
            // InternalSqlParser.g:7267:1: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( ((LA85_0>=RULE_STRING && LA85_0<=RULE_ID)) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSqlParser.g:7267:2: rule__TableOrAlias__TblAliasAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TblAliasAssignment_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3__Impl"


    // $ANTLR start "rule__PivotTable__Group__0"
    // InternalSqlParser.g:7285:1: rule__PivotTable__Group__0 : rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 ;
    public final void rule__PivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7289:1: ( rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 )
            // InternalSqlParser.g:7290:2: rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__PivotTable__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0"


    // $ANTLR start "rule__PivotTable__Group__0__Impl"
    // InternalSqlParser.g:7297:1: rule__PivotTable__Group__0__Impl : ( PIVOT ) ;
    public final void rule__PivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7301:1: ( ( PIVOT ) )
            // InternalSqlParser.g:7302:1: ( PIVOT )
            {
            // InternalSqlParser.g:7302:1: ( PIVOT )
            // InternalSqlParser.g:7303:1: PIVOT
            {
             before(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 
            match(input,PIVOT,FOLLOW_2); 
             after(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0__Impl"


    // $ANTLR start "rule__PivotTable__Group__1"
    // InternalSqlParser.g:7316:1: rule__PivotTable__Group__1 : rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 ;
    public final void rule__PivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7320:1: ( rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 )
            // InternalSqlParser.g:7321:2: rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__PivotTable__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1"


    // $ANTLR start "rule__PivotTable__Group__1__Impl"
    // InternalSqlParser.g:7328:1: rule__PivotTable__Group__1__Impl : ( ( XML )? ) ;
    public final void rule__PivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7332:1: ( ( ( XML )? ) )
            // InternalSqlParser.g:7333:1: ( ( XML )? )
            {
            // InternalSqlParser.g:7333:1: ( ( XML )? )
            // InternalSqlParser.g:7334:1: ( XML )?
            {
             before(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 
            // InternalSqlParser.g:7335:1: ( XML )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==XML) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalSqlParser.g:7336:2: XML
                    {
                    match(input,XML,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__2"
    // InternalSqlParser.g:7347:1: rule__PivotTable__Group__2 : rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 ;
    public final void rule__PivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7351:1: ( rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 )
            // InternalSqlParser.g:7352:2: rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__PivotTable__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2"


    // $ANTLR start "rule__PivotTable__Group__2__Impl"
    // InternalSqlParser.g:7359:1: rule__PivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7363:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:7364:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:7364:1: ( LeftParenthesis )
            // InternalSqlParser.g:7365:1: LeftParenthesis
            {
             before(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2__Impl"


    // $ANTLR start "rule__PivotTable__Group__3"
    // InternalSqlParser.g:7378:1: rule__PivotTable__Group__3 : rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 ;
    public final void rule__PivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7382:1: ( rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 )
            // InternalSqlParser.g:7383:2: rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4
            {
            pushFollow(FOLLOW_36);
            rule__PivotTable__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3"


    // $ANTLR start "rule__PivotTable__Group__3__Impl"
    // InternalSqlParser.g:7390:1: rule__PivotTable__Group__3__Impl : ( ( rule__PivotTable__PfunAssignment_3 ) ) ;
    public final void rule__PivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7394:1: ( ( ( rule__PivotTable__PfunAssignment_3 ) ) )
            // InternalSqlParser.g:7395:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            {
            // InternalSqlParser.g:7395:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            // InternalSqlParser.g:7396:1: ( rule__PivotTable__PfunAssignment_3 )
            {
             before(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 
            // InternalSqlParser.g:7397:1: ( rule__PivotTable__PfunAssignment_3 )
            // InternalSqlParser.g:7397:2: rule__PivotTable__PfunAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PfunAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3__Impl"


    // $ANTLR start "rule__PivotTable__Group__4"
    // InternalSqlParser.g:7407:1: rule__PivotTable__Group__4 : rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 ;
    public final void rule__PivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7411:1: ( rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 )
            // InternalSqlParser.g:7412:2: rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5
            {
            pushFollow(FOLLOW_37);
            rule__PivotTable__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4"


    // $ANTLR start "rule__PivotTable__Group__4__Impl"
    // InternalSqlParser.g:7419:1: rule__PivotTable__Group__4__Impl : ( ( rule__PivotTable__PforAssignment_4 ) ) ;
    public final void rule__PivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7423:1: ( ( ( rule__PivotTable__PforAssignment_4 ) ) )
            // InternalSqlParser.g:7424:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            {
            // InternalSqlParser.g:7424:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            // InternalSqlParser.g:7425:1: ( rule__PivotTable__PforAssignment_4 )
            {
             before(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 
            // InternalSqlParser.g:7426:1: ( rule__PivotTable__PforAssignment_4 )
            // InternalSqlParser.g:7426:2: rule__PivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PforAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4__Impl"


    // $ANTLR start "rule__PivotTable__Group__5"
    // InternalSqlParser.g:7436:1: rule__PivotTable__Group__5 : rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 ;
    public final void rule__PivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7440:1: ( rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 )
            // InternalSqlParser.g:7441:2: rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6
            {
            pushFollow(FOLLOW_32);
            rule__PivotTable__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5"


    // $ANTLR start "rule__PivotTable__Group__5__Impl"
    // InternalSqlParser.g:7448:1: rule__PivotTable__Group__5__Impl : ( ( rule__PivotTable__PinAssignment_5 ) ) ;
    public final void rule__PivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7452:1: ( ( ( rule__PivotTable__PinAssignment_5 ) ) )
            // InternalSqlParser.g:7453:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            {
            // InternalSqlParser.g:7453:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            // InternalSqlParser.g:7454:1: ( rule__PivotTable__PinAssignment_5 )
            {
             before(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 
            // InternalSqlParser.g:7455:1: ( rule__PivotTable__PinAssignment_5 )
            // InternalSqlParser.g:7455:2: rule__PivotTable__PinAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PinAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5__Impl"


    // $ANTLR start "rule__PivotTable__Group__6"
    // InternalSqlParser.g:7465:1: rule__PivotTable__Group__6 : rule__PivotTable__Group__6__Impl ;
    public final void rule__PivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7469:1: ( rule__PivotTable__Group__6__Impl )
            // InternalSqlParser.g:7470:2: rule__PivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6"


    // $ANTLR start "rule__PivotTable__Group__6__Impl"
    // InternalSqlParser.g:7476:1: rule__PivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__PivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7480:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:7481:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:7481:1: ( RightParenthesis )
            // InternalSqlParser.g:7482:1: RightParenthesis
            {
             before(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6__Impl"


    // $ANTLR start "rule__PivotInClause__Group__0"
    // InternalSqlParser.g:7510:1: rule__PivotInClause__Group__0 : rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 ;
    public final void rule__PivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7514:1: ( rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 )
            // InternalSqlParser.g:7515:2: rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__PivotInClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0"


    // $ANTLR start "rule__PivotInClause__Group__0__Impl"
    // InternalSqlParser.g:7522:1: rule__PivotInClause__Group__0__Impl : ( IN ) ;
    public final void rule__PivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7526:1: ( ( IN ) )
            // InternalSqlParser.g:7527:1: ( IN )
            {
            // InternalSqlParser.g:7527:1: ( IN )
            // InternalSqlParser.g:7528:1: IN
            {
             before(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 
            match(input,IN,FOLLOW_2); 
             after(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0__Impl"


    // $ANTLR start "rule__PivotInClause__Group__1"
    // InternalSqlParser.g:7541:1: rule__PivotInClause__Group__1 : rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 ;
    public final void rule__PivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7545:1: ( rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 )
            // InternalSqlParser.g:7546:2: rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2
            {
            pushFollow(FOLLOW_38);
            rule__PivotInClause__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1"


    // $ANTLR start "rule__PivotInClause__Group__1__Impl"
    // InternalSqlParser.g:7553:1: rule__PivotInClause__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7557:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:7558:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:7558:1: ( LeftParenthesis )
            // InternalSqlParser.g:7559:1: LeftParenthesis
            {
             before(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1__Impl"


    // $ANTLR start "rule__PivotInClause__Group__2"
    // InternalSqlParser.g:7572:1: rule__PivotInClause__Group__2 : rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 ;
    public final void rule__PivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7576:1: ( rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 )
            // InternalSqlParser.g:7577:2: rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__PivotInClause__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2"


    // $ANTLR start "rule__PivotInClause__Group__2__Impl"
    // InternalSqlParser.g:7584:1: rule__PivotInClause__Group__2__Impl : ( ( rule__PivotInClause__Alternatives_2 ) ) ;
    public final void rule__PivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7588:1: ( ( ( rule__PivotInClause__Alternatives_2 ) ) )
            // InternalSqlParser.g:7589:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            {
            // InternalSqlParser.g:7589:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            // InternalSqlParser.g:7590:1: ( rule__PivotInClause__Alternatives_2 )
            {
             before(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 
            // InternalSqlParser.g:7591:1: ( rule__PivotInClause__Alternatives_2 )
            // InternalSqlParser.g:7591:2: rule__PivotInClause__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Alternatives_2();

            state._fsp--;


            }

             after(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2__Impl"


    // $ANTLR start "rule__PivotInClause__Group__3"
    // InternalSqlParser.g:7601:1: rule__PivotInClause__Group__3 : rule__PivotInClause__Group__3__Impl ;
    public final void rule__PivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7605:1: ( rule__PivotInClause__Group__3__Impl )
            // InternalSqlParser.g:7606:2: rule__PivotInClause__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3"


    // $ANTLR start "rule__PivotInClause__Group__3__Impl"
    // InternalSqlParser.g:7612:1: rule__PivotInClause__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__PivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7616:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:7617:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:7617:1: ( RightParenthesis )
            // InternalSqlParser.g:7618:1: RightParenthesis
            {
             before(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__0"
    // InternalSqlParser.g:7639:1: rule__PivotInClauseAny__Group__0 : rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 ;
    public final void rule__PivotInClauseAny__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7643:1: ( rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 )
            // InternalSqlParser.g:7644:2: rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__PivotInClauseAny__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0"


    // $ANTLR start "rule__PivotInClauseAny__Group__0__Impl"
    // InternalSqlParser.g:7651:1: rule__PivotInClauseAny__Group__0__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7655:1: ( ( ANY ) )
            // InternalSqlParser.g:7656:1: ( ANY )
            {
            // InternalSqlParser.g:7656:1: ( ANY )
            // InternalSqlParser.g:7657:1: ANY
            {
             before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 
            match(input,ANY,FOLLOW_2); 
             after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__1"
    // InternalSqlParser.g:7670:1: rule__PivotInClauseAny__Group__1 : rule__PivotInClauseAny__Group__1__Impl ;
    public final void rule__PivotInClauseAny__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7674:1: ( rule__PivotInClauseAny__Group__1__Impl )
            // InternalSqlParser.g:7675:2: rule__PivotInClauseAny__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1"


    // $ANTLR start "rule__PivotInClauseAny__Group__1__Impl"
    // InternalSqlParser.g:7681:1: rule__PivotInClauseAny__Group__1__Impl : ( ( rule__PivotInClauseAny__Group_1__0 )* ) ;
    public final void rule__PivotInClauseAny__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7685:1: ( ( ( rule__PivotInClauseAny__Group_1__0 )* ) )
            // InternalSqlParser.g:7686:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            {
            // InternalSqlParser.g:7686:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            // InternalSqlParser.g:7687:1: ( rule__PivotInClauseAny__Group_1__0 )*
            {
             before(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 
            // InternalSqlParser.g:7688:1: ( rule__PivotInClauseAny__Group_1__0 )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==Comma) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalSqlParser.g:7688:2: rule__PivotInClauseAny__Group_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__PivotInClauseAny__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

             after(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0"
    // InternalSqlParser.g:7702:1: rule__PivotInClauseAny__Group_1__0 : rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 ;
    public final void rule__PivotInClauseAny__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7706:1: ( rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 )
            // InternalSqlParser.g:7707:2: rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1
            {
            pushFollow(FOLLOW_39);
            rule__PivotInClauseAny__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0__Impl"
    // InternalSqlParser.g:7714:1: rule__PivotInClauseAny__Group_1__0__Impl : ( Comma ) ;
    public final void rule__PivotInClauseAny__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7718:1: ( ( Comma ) )
            // InternalSqlParser.g:7719:1: ( Comma )
            {
            // InternalSqlParser.g:7719:1: ( Comma )
            // InternalSqlParser.g:7720:1: Comma
            {
             before(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1"
    // InternalSqlParser.g:7733:1: rule__PivotInClauseAny__Group_1__1 : rule__PivotInClauseAny__Group_1__1__Impl ;
    public final void rule__PivotInClauseAny__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7737:1: ( rule__PivotInClauseAny__Group_1__1__Impl )
            // InternalSqlParser.g:7738:2: rule__PivotInClauseAny__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1__Impl"
    // InternalSqlParser.g:7744:1: rule__PivotInClauseAny__Group_1__1__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7748:1: ( ( ANY ) )
            // InternalSqlParser.g:7749:1: ( ANY )
            {
            // InternalSqlParser.g:7749:1: ( ANY )
            // InternalSqlParser.g:7750:1: ANY
            {
             before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 
            match(input,ANY,FOLLOW_2); 
             after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__0"
    // InternalSqlParser.g:7767:1: rule__UnpivotTable__Group__0 : rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 ;
    public final void rule__UnpivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7771:1: ( rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 )
            // InternalSqlParser.g:7772:2: rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__UnpivotTable__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0"


    // $ANTLR start "rule__UnpivotTable__Group__0__Impl"
    // InternalSqlParser.g:7779:1: rule__UnpivotTable__Group__0__Impl : ( UNPIVOT ) ;
    public final void rule__UnpivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7783:1: ( ( UNPIVOT ) )
            // InternalSqlParser.g:7784:1: ( UNPIVOT )
            {
            // InternalSqlParser.g:7784:1: ( UNPIVOT )
            // InternalSqlParser.g:7785:1: UNPIVOT
            {
             before(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 
            match(input,UNPIVOT,FOLLOW_2); 
             after(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__1"
    // InternalSqlParser.g:7798:1: rule__UnpivotTable__Group__1 : rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 ;
    public final void rule__UnpivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7802:1: ( rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 )
            // InternalSqlParser.g:7803:2: rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2
            {
            pushFollow(FOLLOW_40);
            rule__UnpivotTable__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1"


    // $ANTLR start "rule__UnpivotTable__Group__1__Impl"
    // InternalSqlParser.g:7810:1: rule__UnpivotTable__Group__1__Impl : ( ( rule__UnpivotTable__Group_1__0 )? ) ;
    public final void rule__UnpivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7814:1: ( ( ( rule__UnpivotTable__Group_1__0 )? ) )
            // InternalSqlParser.g:7815:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            {
            // InternalSqlParser.g:7815:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            // InternalSqlParser.g:7816:1: ( rule__UnpivotTable__Group_1__0 )?
            {
             before(grammarAccess.getUnpivotTableAccess().getGroup_1()); 
            // InternalSqlParser.g:7817:1: ( rule__UnpivotTable__Group_1__0 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==EXCLUDE||LA88_0==INCLUDE) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalSqlParser.g:7817:2: rule__UnpivotTable__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotTable__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getUnpivotTableAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__2"
    // InternalSqlParser.g:7827:1: rule__UnpivotTable__Group__2 : rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 ;
    public final void rule__UnpivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7831:1: ( rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 )
            // InternalSqlParser.g:7832:2: rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__UnpivotTable__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2"


    // $ANTLR start "rule__UnpivotTable__Group__2__Impl"
    // InternalSqlParser.g:7839:1: rule__UnpivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7843:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:7844:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:7844:1: ( LeftParenthesis )
            // InternalSqlParser.g:7845:1: LeftParenthesis
            {
             before(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__3"
    // InternalSqlParser.g:7858:1: rule__UnpivotTable__Group__3 : rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 ;
    public final void rule__UnpivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7862:1: ( rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 )
            // InternalSqlParser.g:7863:2: rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4
            {
            pushFollow(FOLLOW_36);
            rule__UnpivotTable__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3"


    // $ANTLR start "rule__UnpivotTable__Group__3__Impl"
    // InternalSqlParser.g:7870:1: rule__UnpivotTable__Group__3__Impl : ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) ;
    public final void rule__UnpivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7874:1: ( ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) )
            // InternalSqlParser.g:7875:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            {
            // InternalSqlParser.g:7875:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            // InternalSqlParser.g:7876:1: ( rule__UnpivotTable__PcolsAssignment_3 )
            {
             before(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 
            // InternalSqlParser.g:7877:1: ( rule__UnpivotTable__PcolsAssignment_3 )
            // InternalSqlParser.g:7877:2: rule__UnpivotTable__PcolsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PcolsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__4"
    // InternalSqlParser.g:7887:1: rule__UnpivotTable__Group__4 : rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 ;
    public final void rule__UnpivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7891:1: ( rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 )
            // InternalSqlParser.g:7892:2: rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5
            {
            pushFollow(FOLLOW_37);
            rule__UnpivotTable__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4"


    // $ANTLR start "rule__UnpivotTable__Group__4__Impl"
    // InternalSqlParser.g:7899:1: rule__UnpivotTable__Group__4__Impl : ( ( rule__UnpivotTable__PforAssignment_4 ) ) ;
    public final void rule__UnpivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7903:1: ( ( ( rule__UnpivotTable__PforAssignment_4 ) ) )
            // InternalSqlParser.g:7904:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            {
            // InternalSqlParser.g:7904:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            // InternalSqlParser.g:7905:1: ( rule__UnpivotTable__PforAssignment_4 )
            {
             before(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 
            // InternalSqlParser.g:7906:1: ( rule__UnpivotTable__PforAssignment_4 )
            // InternalSqlParser.g:7906:2: rule__UnpivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PforAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__5"
    // InternalSqlParser.g:7916:1: rule__UnpivotTable__Group__5 : rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 ;
    public final void rule__UnpivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7920:1: ( rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 )
            // InternalSqlParser.g:7921:2: rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6
            {
            pushFollow(FOLLOW_32);
            rule__UnpivotTable__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5"


    // $ANTLR start "rule__UnpivotTable__Group__5__Impl"
    // InternalSqlParser.g:7928:1: rule__UnpivotTable__Group__5__Impl : ( ( rule__UnpivotTable__InopAssignment_5 ) ) ;
    public final void rule__UnpivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7932:1: ( ( ( rule__UnpivotTable__InopAssignment_5 ) ) )
            // InternalSqlParser.g:7933:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            {
            // InternalSqlParser.g:7933:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            // InternalSqlParser.g:7934:1: ( rule__UnpivotTable__InopAssignment_5 )
            {
             before(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 
            // InternalSqlParser.g:7935:1: ( rule__UnpivotTable__InopAssignment_5 )
            // InternalSqlParser.g:7935:2: rule__UnpivotTable__InopAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__InopAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__6"
    // InternalSqlParser.g:7945:1: rule__UnpivotTable__Group__6 : rule__UnpivotTable__Group__6__Impl ;
    public final void rule__UnpivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7949:1: ( rule__UnpivotTable__Group__6__Impl )
            // InternalSqlParser.g:7950:2: rule__UnpivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6"


    // $ANTLR start "rule__UnpivotTable__Group__6__Impl"
    // InternalSqlParser.g:7956:1: rule__UnpivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7960:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:7961:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:7961:1: ( RightParenthesis )
            // InternalSqlParser.g:7962:1: RightParenthesis
            {
             before(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__0"
    // InternalSqlParser.g:7989:1: rule__UnpivotTable__Group_1__0 : rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 ;
    public final void rule__UnpivotTable__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7993:1: ( rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 )
            // InternalSqlParser.g:7994:2: rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1
            {
            pushFollow(FOLLOW_41);
            rule__UnpivotTable__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0"


    // $ANTLR start "rule__UnpivotTable__Group_1__0__Impl"
    // InternalSqlParser.g:8001:1: rule__UnpivotTable__Group_1__0__Impl : ( ( rule__UnpivotTable__Alternatives_1_0 ) ) ;
    public final void rule__UnpivotTable__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8005:1: ( ( ( rule__UnpivotTable__Alternatives_1_0 ) ) )
            // InternalSqlParser.g:8006:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            {
            // InternalSqlParser.g:8006:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            // InternalSqlParser.g:8007:1: ( rule__UnpivotTable__Alternatives_1_0 )
            {
             before(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 
            // InternalSqlParser.g:8008:1: ( rule__UnpivotTable__Alternatives_1_0 )
            // InternalSqlParser.g:8008:2: rule__UnpivotTable__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Alternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__1"
    // InternalSqlParser.g:8018:1: rule__UnpivotTable__Group_1__1 : rule__UnpivotTable__Group_1__1__Impl ;
    public final void rule__UnpivotTable__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8022:1: ( rule__UnpivotTable__Group_1__1__Impl )
            // InternalSqlParser.g:8023:2: rule__UnpivotTable__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1"


    // $ANTLR start "rule__UnpivotTable__Group_1__1__Impl"
    // InternalSqlParser.g:8029:1: rule__UnpivotTable__Group_1__1__Impl : ( NULLS ) ;
    public final void rule__UnpivotTable__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8033:1: ( ( NULLS ) )
            // InternalSqlParser.g:8034:1: ( NULLS )
            {
            // InternalSqlParser.g:8034:1: ( NULLS )
            // InternalSqlParser.g:8035:1: NULLS
            {
             before(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 
            match(input,NULLS,FOLLOW_2); 
             after(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__0"
    // InternalSqlParser.g:8052:1: rule__UnpivotInClause__Group__0 : rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 ;
    public final void rule__UnpivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8056:1: ( rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 )
            // InternalSqlParser.g:8057:2: rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__UnpivotInClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0"


    // $ANTLR start "rule__UnpivotInClause__Group__0__Impl"
    // InternalSqlParser.g:8064:1: rule__UnpivotInClause__Group__0__Impl : ( () ) ;
    public final void rule__UnpivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8068:1: ( ( () ) )
            // InternalSqlParser.g:8069:1: ( () )
            {
            // InternalSqlParser.g:8069:1: ( () )
            // InternalSqlParser.g:8070:1: ()
            {
             before(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 
            // InternalSqlParser.g:8071:1: ()
            // InternalSqlParser.g:8073:1: 
            {
            }

             after(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__1"
    // InternalSqlParser.g:8083:1: rule__UnpivotInClause__Group__1 : rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 ;
    public final void rule__UnpivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8087:1: ( rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 )
            // InternalSqlParser.g:8088:2: rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__UnpivotInClause__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1"


    // $ANTLR start "rule__UnpivotInClause__Group__1__Impl"
    // InternalSqlParser.g:8095:1: rule__UnpivotInClause__Group__1__Impl : ( ( rule__UnpivotInClause__OpAssignment_1 ) ) ;
    public final void rule__UnpivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8099:1: ( ( ( rule__UnpivotInClause__OpAssignment_1 ) ) )
            // InternalSqlParser.g:8100:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            {
            // InternalSqlParser.g:8100:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            // InternalSqlParser.g:8101:1: ( rule__UnpivotInClause__OpAssignment_1 )
            {
             before(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 
            // InternalSqlParser.g:8102:1: ( rule__UnpivotInClause__OpAssignment_1 )
            // InternalSqlParser.g:8102:2: rule__UnpivotInClause__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__OpAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__2"
    // InternalSqlParser.g:8112:1: rule__UnpivotInClause__Group__2 : rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 ;
    public final void rule__UnpivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8116:1: ( rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 )
            // InternalSqlParser.g:8117:2: rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__UnpivotInClause__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2"


    // $ANTLR start "rule__UnpivotInClause__Group__2__Impl"
    // InternalSqlParser.g:8124:1: rule__UnpivotInClause__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8128:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:8129:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:8129:1: ( LeftParenthesis )
            // InternalSqlParser.g:8130:1: LeftParenthesis
            {
             before(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__3"
    // InternalSqlParser.g:8143:1: rule__UnpivotInClause__Group__3 : rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 ;
    public final void rule__UnpivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8147:1: ( rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 )
            // InternalSqlParser.g:8148:2: rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4
            {
            pushFollow(FOLLOW_32);
            rule__UnpivotInClause__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3"


    // $ANTLR start "rule__UnpivotInClause__Group__3__Impl"
    // InternalSqlParser.g:8155:1: rule__UnpivotInClause__Group__3__Impl : ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) ;
    public final void rule__UnpivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8159:1: ( ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) )
            // InternalSqlParser.g:8160:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            {
            // InternalSqlParser.g:8160:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            // InternalSqlParser.g:8161:1: ( rule__UnpivotInClause__ArgsAssignment_3 )
            {
             before(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 
            // InternalSqlParser.g:8162:1: ( rule__UnpivotInClause__ArgsAssignment_3 )
            // InternalSqlParser.g:8162:2: rule__UnpivotInClause__ArgsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__ArgsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__4"
    // InternalSqlParser.g:8172:1: rule__UnpivotInClause__Group__4 : rule__UnpivotInClause__Group__4__Impl ;
    public final void rule__UnpivotInClause__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8176:1: ( rule__UnpivotInClause__Group__4__Impl )
            // InternalSqlParser.g:8177:2: rule__UnpivotInClause__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4"


    // $ANTLR start "rule__UnpivotInClause__Group__4__Impl"
    // InternalSqlParser.g:8183:1: rule__UnpivotInClause__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotInClause__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8187:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:8188:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:8188:1: ( RightParenthesis )
            // InternalSqlParser.g:8189:1: RightParenthesis
            {
             before(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0"
    // InternalSqlParser.g:8212:1: rule__UnpivotInClauseArgs__Group__0 : rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 ;
    public final void rule__UnpivotInClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8216:1: ( rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 )
            // InternalSqlParser.g:8217:2: rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__UnpivotInClauseArgs__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0__Impl"
    // InternalSqlParser.g:8224:1: rule__UnpivotInClauseArgs__Group__0__Impl : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8228:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSqlParser.g:8229:1: ( ruleUnpivotInClauseArg )
            {
            // InternalSqlParser.g:8229:1: ( ruleUnpivotInClauseArg )
            // InternalSqlParser.g:8230:1: ruleUnpivotInClauseArg
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1"
    // InternalSqlParser.g:8241:1: rule__UnpivotInClauseArgs__Group__1 : rule__UnpivotInClauseArgs__Group__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8245:1: ( rule__UnpivotInClauseArgs__Group__1__Impl )
            // InternalSqlParser.g:8246:2: rule__UnpivotInClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1__Impl"
    // InternalSqlParser.g:8252:1: rule__UnpivotInClauseArgs__Group__1__Impl : ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8256:1: ( ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) )
            // InternalSqlParser.g:8257:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            {
            // InternalSqlParser.g:8257:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            // InternalSqlParser.g:8258:1: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 
            // InternalSqlParser.g:8259:1: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==Comma) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalSqlParser.g:8259:2: rule__UnpivotInClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArgs__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0"
    // InternalSqlParser.g:8273:1: rule__UnpivotInClauseArgs__Group_1__0 : rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8277:1: ( rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 )
            // InternalSqlParser.g:8278:2: rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__UnpivotInClauseArgs__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0__Impl"
    // InternalSqlParser.g:8285:1: rule__UnpivotInClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8289:1: ( ( () ) )
            // InternalSqlParser.g:8290:1: ( () )
            {
            // InternalSqlParser.g:8290:1: ( () )
            // InternalSqlParser.g:8291:1: ()
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 
            // InternalSqlParser.g:8292:1: ()
            // InternalSqlParser.g:8294:1: 
            {
            }

             after(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1"
    // InternalSqlParser.g:8304:1: rule__UnpivotInClauseArgs__Group_1__1 : rule__UnpivotInClauseArgs__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8308:1: ( rule__UnpivotInClauseArgs__Group_1__1__Impl )
            // InternalSqlParser.g:8309:2: rule__UnpivotInClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1__Impl"
    // InternalSqlParser.g:8315:1: rule__UnpivotInClauseArgs__Group_1__1__Impl : ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8319:1: ( ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:8320:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:8320:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            // InternalSqlParser.g:8321:1: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:8321:1: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) )
            // InternalSqlParser.g:8322:1: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:8323:1: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            // InternalSqlParser.g:8323:2: rule__UnpivotInClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_23);
            rule__UnpivotInClauseArgs__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:8326:1: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            // InternalSqlParser.g:8327:1: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:8328:1: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==Comma) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalSqlParser.g:8328:2: rule__UnpivotInClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__UnpivotInClauseArgs__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

             after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0"
    // InternalSqlParser.g:8343:1: rule__UnpivotInClauseArgs__Group_1_1__0 : rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8347:1: ( rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 )
            // InternalSqlParser.g:8348:2: rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_14);
            rule__UnpivotInClauseArgs__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"
    // InternalSqlParser.g:8355:1: rule__UnpivotInClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8359:1: ( ( Comma ) )
            // InternalSqlParser.g:8360:1: ( Comma )
            {
            // InternalSqlParser.g:8360:1: ( Comma )
            // InternalSqlParser.g:8361:1: Comma
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1"
    // InternalSqlParser.g:8374:1: rule__UnpivotInClauseArgs__Group_1_1__1 : rule__UnpivotInClauseArgs__Group_1_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8378:1: ( rule__UnpivotInClauseArgs__Group_1_1__1__Impl )
            // InternalSqlParser.g:8379:2: rule__UnpivotInClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"
    // InternalSqlParser.g:8385:1: rule__UnpivotInClauseArgs__Group_1_1__1__Impl : ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8389:1: ( ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:8390:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:8390:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:8391:1: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:8392:1: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:8392:2: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0"
    // InternalSqlParser.g:8406:1: rule__UnpivotInClauseArg__Group__0 : rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 ;
    public final void rule__UnpivotInClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8410:1: ( rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 )
            // InternalSqlParser.g:8411:2: rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__UnpivotInClauseArg__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0__Impl"
    // InternalSqlParser.g:8418:1: rule__UnpivotInClauseArg__Group__0__Impl : ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) ;
    public final void rule__UnpivotInClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8422:1: ( ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) )
            // InternalSqlParser.g:8423:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            {
            // InternalSqlParser.g:8423:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            // InternalSqlParser.g:8424:1: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 
            // InternalSqlParser.g:8425:1: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            // InternalSqlParser.g:8425:2: rule__UnpivotInClauseArg__PcolsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__PcolsAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1"
    // InternalSqlParser.g:8435:1: rule__UnpivotInClauseArg__Group__1 : rule__UnpivotInClauseArg__Group__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8439:1: ( rule__UnpivotInClauseArg__Group__1__Impl )
            // InternalSqlParser.g:8440:2: rule__UnpivotInClauseArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1__Impl"
    // InternalSqlParser.g:8446:1: rule__UnpivotInClauseArg__Group__1__Impl : ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8450:1: ( ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) )
            // InternalSqlParser.g:8451:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            {
            // InternalSqlParser.g:8451:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            // InternalSqlParser.g:8452:1: ( rule__UnpivotInClauseArg__Group_1__0 )?
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 
            // InternalSqlParser.g:8453:1: ( rule__UnpivotInClauseArg__Group_1__0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==AS) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalSqlParser.g:8453:2: rule__UnpivotInClauseArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArg__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0"
    // InternalSqlParser.g:8467:1: rule__UnpivotInClauseArg__Group_1__0 : rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 ;
    public final void rule__UnpivotInClauseArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8471:1: ( rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 )
            // InternalSqlParser.g:8472:2: rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__UnpivotInClauseArg__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0__Impl"
    // InternalSqlParser.g:8479:1: rule__UnpivotInClauseArg__Group_1__0__Impl : ( AS ) ;
    public final void rule__UnpivotInClauseArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8483:1: ( ( AS ) )
            // InternalSqlParser.g:8484:1: ( AS )
            {
            // InternalSqlParser.g:8484:1: ( AS )
            // InternalSqlParser.g:8485:1: AS
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 
            match(input,AS,FOLLOW_2); 
             after(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1"
    // InternalSqlParser.g:8498:1: rule__UnpivotInClauseArg__Group_1__1 : rule__UnpivotInClauseArg__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8502:1: ( rule__UnpivotInClauseArg__Group_1__1__Impl )
            // InternalSqlParser.g:8503:2: rule__UnpivotInClauseArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1__Impl"
    // InternalSqlParser.g:8509:1: rule__UnpivotInClauseArg__Group_1__1__Impl : ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) ;
    public final void rule__UnpivotInClauseArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8513:1: ( ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) )
            // InternalSqlParser.g:8514:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            {
            // InternalSqlParser.g:8514:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            // InternalSqlParser.g:8515:1: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 
            // InternalSqlParser.g:8516:1: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            // InternalSqlParser.g:8516:2: rule__UnpivotInClauseArg__CfulsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__CfulsAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group__0"
    // InternalSqlParser.g:8530:1: rule__PivotForClause__Group__0 : rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 ;
    public final void rule__PivotForClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8534:1: ( rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 )
            // InternalSqlParser.g:8535:2: rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__PivotForClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0"


    // $ANTLR start "rule__PivotForClause__Group__0__Impl"
    // InternalSqlParser.g:8542:1: rule__PivotForClause__Group__0__Impl : ( FOR ) ;
    public final void rule__PivotForClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8546:1: ( ( FOR ) )
            // InternalSqlParser.g:8547:1: ( FOR )
            {
            // InternalSqlParser.g:8547:1: ( FOR )
            // InternalSqlParser.g:8548:1: FOR
            {
             before(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 
            match(input,FOR,FOLLOW_2); 
             after(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group__1"
    // InternalSqlParser.g:8561:1: rule__PivotForClause__Group__1 : rule__PivotForClause__Group__1__Impl ;
    public final void rule__PivotForClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8565:1: ( rule__PivotForClause__Group__1__Impl )
            // InternalSqlParser.g:8566:2: rule__PivotForClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1"


    // $ANTLR start "rule__PivotForClause__Group__1__Impl"
    // InternalSqlParser.g:8572:1: rule__PivotForClause__Group__1__Impl : ( ( rule__PivotForClause__Alternatives_1 ) ) ;
    public final void rule__PivotForClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8576:1: ( ( ( rule__PivotForClause__Alternatives_1 ) ) )
            // InternalSqlParser.g:8577:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            {
            // InternalSqlParser.g:8577:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            // InternalSqlParser.g:8578:1: ( rule__PivotForClause__Alternatives_1 )
            {
             before(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 
            // InternalSqlParser.g:8579:1: ( rule__PivotForClause__Alternatives_1 )
            // InternalSqlParser.g:8579:2: rule__PivotForClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0"
    // InternalSqlParser.g:8593:1: rule__PivotForClause__Group_1_1__0 : rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 ;
    public final void rule__PivotForClause__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8597:1: ( rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 )
            // InternalSqlParser.g:8598:2: rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1
            {
            pushFollow(FOLLOW_12);
            rule__PivotForClause__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0__Impl"
    // InternalSqlParser.g:8605:1: rule__PivotForClause__Group_1_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8609:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:8610:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:8610:1: ( LeftParenthesis )
            // InternalSqlParser.g:8611:1: LeftParenthesis
            {
             before(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1"
    // InternalSqlParser.g:8624:1: rule__PivotForClause__Group_1_1__1 : rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 ;
    public final void rule__PivotForClause__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8628:1: ( rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 )
            // InternalSqlParser.g:8629:2: rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2
            {
            pushFollow(FOLLOW_32);
            rule__PivotForClause__Group_1_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1__Impl"
    // InternalSqlParser.g:8636:1: rule__PivotForClause__Group_1_1__1__Impl : ( ruleColumns ) ;
    public final void rule__PivotForClause__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8640:1: ( ( ruleColumns ) )
            // InternalSqlParser.g:8641:1: ( ruleColumns )
            {
            // InternalSqlParser.g:8641:1: ( ruleColumns )
            // InternalSqlParser.g:8642:1: ruleColumns
            {
             before(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;

             after(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2"
    // InternalSqlParser.g:8653:1: rule__PivotForClause__Group_1_1__2 : rule__PivotForClause__Group_1_1__2__Impl ;
    public final void rule__PivotForClause__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8657:1: ( rule__PivotForClause__Group_1_1__2__Impl )
            // InternalSqlParser.g:8658:2: rule__PivotForClause__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2__Impl"
    // InternalSqlParser.g:8664:1: rule__PivotForClause__Group_1_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8668:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:8669:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:8669:1: ( RightParenthesis )
            // InternalSqlParser.g:8670:1: RightParenthesis
            {
             before(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__0"
    // InternalSqlParser.g:8689:1: rule__PivotColumns__Group_1__0 : rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 ;
    public final void rule__PivotColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8693:1: ( rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 )
            // InternalSqlParser.g:8694:2: rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1
            {
            pushFollow(FOLLOW_27);
            rule__PivotColumns__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0"


    // $ANTLR start "rule__PivotColumns__Group_1__0__Impl"
    // InternalSqlParser.g:8701:1: rule__PivotColumns__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8705:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:8706:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:8706:1: ( LeftParenthesis )
            // InternalSqlParser.g:8707:1: LeftParenthesis
            {
             before(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__1"
    // InternalSqlParser.g:8720:1: rule__PivotColumns__Group_1__1 : rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 ;
    public final void rule__PivotColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8724:1: ( rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 )
            // InternalSqlParser.g:8725:2: rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__PivotColumns__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1"


    // $ANTLR start "rule__PivotColumns__Group_1__1__Impl"
    // InternalSqlParser.g:8732:1: rule__PivotColumns__Group_1__1__Impl : ( rulePivotCols ) ;
    public final void rule__PivotColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8736:1: ( ( rulePivotCols ) )
            // InternalSqlParser.g:8737:1: ( rulePivotCols )
            {
            // InternalSqlParser.g:8737:1: ( rulePivotCols )
            // InternalSqlParser.g:8738:1: rulePivotCols
            {
             before(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 
            pushFollow(FOLLOW_2);
            rulePivotCols();

            state._fsp--;

             after(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__2"
    // InternalSqlParser.g:8749:1: rule__PivotColumns__Group_1__2 : rule__PivotColumns__Group_1__2__Impl ;
    public final void rule__PivotColumns__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8753:1: ( rule__PivotColumns__Group_1__2__Impl )
            // InternalSqlParser.g:8754:2: rule__PivotColumns__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2"


    // $ANTLR start "rule__PivotColumns__Group_1__2__Impl"
    // InternalSqlParser.g:8760:1: rule__PivotColumns__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotColumns__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8764:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:8765:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:8765:1: ( RightParenthesis )
            // InternalSqlParser.g:8766:1: RightParenthesis
            {
             before(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2__Impl"


    // $ANTLR start "rule__PivotCols__Group__0"
    // InternalSqlParser.g:8785:1: rule__PivotCols__Group__0 : rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 ;
    public final void rule__PivotCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8789:1: ( rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 )
            // InternalSqlParser.g:8790:2: rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__PivotCols__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0"


    // $ANTLR start "rule__PivotCols__Group__0__Impl"
    // InternalSqlParser.g:8797:1: rule__PivotCols__Group__0__Impl : ( rulePivotCol ) ;
    public final void rule__PivotCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8801:1: ( ( rulePivotCol ) )
            // InternalSqlParser.g:8802:1: ( rulePivotCol )
            {
            // InternalSqlParser.g:8802:1: ( rulePivotCol )
            // InternalSqlParser.g:8803:1: rulePivotCol
            {
             before(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;

             after(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0__Impl"


    // $ANTLR start "rule__PivotCols__Group__1"
    // InternalSqlParser.g:8814:1: rule__PivotCols__Group__1 : rule__PivotCols__Group__1__Impl ;
    public final void rule__PivotCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8818:1: ( rule__PivotCols__Group__1__Impl )
            // InternalSqlParser.g:8819:2: rule__PivotCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1"


    // $ANTLR start "rule__PivotCols__Group__1__Impl"
    // InternalSqlParser.g:8825:1: rule__PivotCols__Group__1__Impl : ( ( rule__PivotCols__Group_1__0 )? ) ;
    public final void rule__PivotCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8829:1: ( ( ( rule__PivotCols__Group_1__0 )? ) )
            // InternalSqlParser.g:8830:1: ( ( rule__PivotCols__Group_1__0 )? )
            {
            // InternalSqlParser.g:8830:1: ( ( rule__PivotCols__Group_1__0 )? )
            // InternalSqlParser.g:8831:1: ( rule__PivotCols__Group_1__0 )?
            {
             before(grammarAccess.getPivotColsAccess().getGroup_1()); 
            // InternalSqlParser.g:8832:1: ( rule__PivotCols__Group_1__0 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==Comma) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalSqlParser.g:8832:2: rule__PivotCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCols__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPivotColsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__0"
    // InternalSqlParser.g:8846:1: rule__PivotCols__Group_1__0 : rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 ;
    public final void rule__PivotCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8850:1: ( rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 )
            // InternalSqlParser.g:8851:2: rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__PivotCols__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0"


    // $ANTLR start "rule__PivotCols__Group_1__0__Impl"
    // InternalSqlParser.g:8858:1: rule__PivotCols__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8862:1: ( ( () ) )
            // InternalSqlParser.g:8863:1: ( () )
            {
            // InternalSqlParser.g:8863:1: ( () )
            // InternalSqlParser.g:8864:1: ()
            {
             before(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 
            // InternalSqlParser.g:8865:1: ()
            // InternalSqlParser.g:8867:1: 
            {
            }

             after(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__1"
    // InternalSqlParser.g:8877:1: rule__PivotCols__Group_1__1 : rule__PivotCols__Group_1__1__Impl ;
    public final void rule__PivotCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8881:1: ( rule__PivotCols__Group_1__1__Impl )
            // InternalSqlParser.g:8882:2: rule__PivotCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1"


    // $ANTLR start "rule__PivotCols__Group_1__1__Impl"
    // InternalSqlParser.g:8888:1: rule__PivotCols__Group_1__1__Impl : ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8892:1: ( ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:8893:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:8893:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            // InternalSqlParser.g:8894:1: ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:8894:1: ( ( rule__PivotCols__Group_1_1__0 ) )
            // InternalSqlParser.g:8895:1: ( rule__PivotCols__Group_1_1__0 )
            {
             before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:8896:1: ( rule__PivotCols__Group_1_1__0 )
            // InternalSqlParser.g:8896:2: rule__PivotCols__Group_1_1__0
            {
            pushFollow(FOLLOW_23);
            rule__PivotCols__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:8899:1: ( ( rule__PivotCols__Group_1_1__0 )* )
            // InternalSqlParser.g:8900:1: ( rule__PivotCols__Group_1_1__0 )*
            {
             before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:8901:1: ( rule__PivotCols__Group_1_1__0 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==Comma) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalSqlParser.g:8901:2: rule__PivotCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__PivotCols__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

             after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__0"
    // InternalSqlParser.g:8916:1: rule__PivotCols__Group_1_1__0 : rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 ;
    public final void rule__PivotCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8920:1: ( rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 )
            // InternalSqlParser.g:8921:2: rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1
            {
            pushFollow(FOLLOW_27);
            rule__PivotCols__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0"


    // $ANTLR start "rule__PivotCols__Group_1_1__0__Impl"
    // InternalSqlParser.g:8928:1: rule__PivotCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__PivotCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8932:1: ( ( Comma ) )
            // InternalSqlParser.g:8933:1: ( Comma )
            {
            // InternalSqlParser.g:8933:1: ( Comma )
            // InternalSqlParser.g:8934:1: Comma
            {
             before(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__1"
    // InternalSqlParser.g:8947:1: rule__PivotCols__Group_1_1__1 : rule__PivotCols__Group_1_1__1__Impl ;
    public final void rule__PivotCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8951:1: ( rule__PivotCols__Group_1_1__1__Impl )
            // InternalSqlParser.g:8952:2: rule__PivotCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1"


    // $ANTLR start "rule__PivotCols__Group_1_1__1__Impl"
    // InternalSqlParser.g:8958:1: rule__PivotCols__Group_1_1__1__Impl : ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8962:1: ( ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:8963:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:8963:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:8964:1: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:8965:1: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:8965:2: rule__PivotCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group__0"
    // InternalSqlParser.g:8979:1: rule__PivotCol__Group__0 : rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 ;
    public final void rule__PivotCol__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8983:1: ( rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 )
            // InternalSqlParser.g:8984:2: rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__PivotCol__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0"


    // $ANTLR start "rule__PivotCol__Group__0__Impl"
    // InternalSqlParser.g:8991:1: rule__PivotCol__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8995:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:8996:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:8996:1: ( ruleDbObjectName )
            // InternalSqlParser.g:8997:1: ruleDbObjectName
            {
             before(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0__Impl"


    // $ANTLR start "rule__PivotCol__Group__1"
    // InternalSqlParser.g:9008:1: rule__PivotCol__Group__1 : rule__PivotCol__Group__1__Impl ;
    public final void rule__PivotCol__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9012:1: ( rule__PivotCol__Group__1__Impl )
            // InternalSqlParser.g:9013:2: rule__PivotCol__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1"


    // $ANTLR start "rule__PivotCol__Group__1__Impl"
    // InternalSqlParser.g:9019:1: rule__PivotCol__Group__1__Impl : ( ( rule__PivotCol__Group_1__0 )? ) ;
    public final void rule__PivotCol__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9023:1: ( ( ( rule__PivotCol__Group_1__0 )? ) )
            // InternalSqlParser.g:9024:1: ( ( rule__PivotCol__Group_1__0 )? )
            {
            // InternalSqlParser.g:9024:1: ( ( rule__PivotCol__Group_1__0 )? )
            // InternalSqlParser.g:9025:1: ( rule__PivotCol__Group_1__0 )?
            {
             before(grammarAccess.getPivotColAccess().getGroup_1()); 
            // InternalSqlParser.g:9026:1: ( rule__PivotCol__Group_1__0 )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==FullStop) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalSqlParser.g:9026:2: rule__PivotCol__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCol__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPivotColAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__0"
    // InternalSqlParser.g:9040:1: rule__PivotCol__Group_1__0 : rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 ;
    public final void rule__PivotCol__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9044:1: ( rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 )
            // InternalSqlParser.g:9045:2: rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__PivotCol__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0"


    // $ANTLR start "rule__PivotCol__Group_1__0__Impl"
    // InternalSqlParser.g:9052:1: rule__PivotCol__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCol__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9056:1: ( ( () ) )
            // InternalSqlParser.g:9057:1: ( () )
            {
            // InternalSqlParser.g:9057:1: ( () )
            // InternalSqlParser.g:9058:1: ()
            {
             before(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 
            // InternalSqlParser.g:9059:1: ()
            // InternalSqlParser.g:9061:1: 
            {
            }

             after(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__1"
    // InternalSqlParser.g:9071:1: rule__PivotCol__Group_1__1 : rule__PivotCol__Group_1__1__Impl ;
    public final void rule__PivotCol__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9075:1: ( rule__PivotCol__Group_1__1__Impl )
            // InternalSqlParser.g:9076:2: rule__PivotCol__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1"


    // $ANTLR start "rule__PivotCol__Group_1__1__Impl"
    // InternalSqlParser.g:9082:1: rule__PivotCol__Group_1__1__Impl : ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCol__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9086:1: ( ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:9087:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:9087:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            // InternalSqlParser.g:9088:1: ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:9088:1: ( ( rule__PivotCol__Group_1_1__0 ) )
            // InternalSqlParser.g:9089:1: ( rule__PivotCol__Group_1_1__0 )
            {
             before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            // InternalSqlParser.g:9090:1: ( rule__PivotCol__Group_1_1__0 )
            // InternalSqlParser.g:9090:2: rule__PivotCol__Group_1_1__0
            {
            pushFollow(FOLLOW_26);
            rule__PivotCol__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotColAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:9093:1: ( ( rule__PivotCol__Group_1_1__0 )* )
            // InternalSqlParser.g:9094:1: ( rule__PivotCol__Group_1_1__0 )*
            {
             before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            // InternalSqlParser.g:9095:1: ( rule__PivotCol__Group_1_1__0 )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==FullStop) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalSqlParser.g:9095:2: rule__PivotCol__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_26);
            	    rule__PivotCol__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

             after(grammarAccess.getPivotColAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__0"
    // InternalSqlParser.g:9110:1: rule__PivotCol__Group_1_1__0 : rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 ;
    public final void rule__PivotCol__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9114:1: ( rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 )
            // InternalSqlParser.g:9115:2: rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1
            {
            pushFollow(FOLLOW_27);
            rule__PivotCol__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0"


    // $ANTLR start "rule__PivotCol__Group_1_1__0__Impl"
    // InternalSqlParser.g:9122:1: rule__PivotCol__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__PivotCol__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9126:1: ( ( FullStop ) )
            // InternalSqlParser.g:9127:1: ( FullStop )
            {
            // InternalSqlParser.g:9127:1: ( FullStop )
            // InternalSqlParser.g:9128:1: FullStop
            {
             before(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 
            match(input,FullStop,FOLLOW_2); 
             after(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__1"
    // InternalSqlParser.g:9141:1: rule__PivotCol__Group_1_1__1 : rule__PivotCol__Group_1_1__1__Impl ;
    public final void rule__PivotCol__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9145:1: ( rule__PivotCol__Group_1_1__1__Impl )
            // InternalSqlParser.g:9146:2: rule__PivotCol__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1"


    // $ANTLR start "rule__PivotCol__Group_1_1__1__Impl"
    // InternalSqlParser.g:9152:1: rule__PivotCol__Group_1_1__1__Impl : ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCol__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9156:1: ( ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:9157:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:9157:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:9158:1: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:9159:1: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:9159:2: rule__PivotCol__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group__0"
    // InternalSqlParser.g:9173:1: rule__TableFull__Group__0 : rule__TableFull__Group__0__Impl rule__TableFull__Group__1 ;
    public final void rule__TableFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9177:1: ( rule__TableFull__Group__0__Impl rule__TableFull__Group__1 )
            // InternalSqlParser.g:9178:2: rule__TableFull__Group__0__Impl rule__TableFull__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__TableFull__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0"


    // $ANTLR start "rule__TableFull__Group__0__Impl"
    // InternalSqlParser.g:9185:1: rule__TableFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__TableFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9189:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:9190:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:9190:1: ( ruleDbObjectName )
            // InternalSqlParser.g:9191:1: ruleDbObjectName
            {
             before(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0__Impl"


    // $ANTLR start "rule__TableFull__Group__1"
    // InternalSqlParser.g:9202:1: rule__TableFull__Group__1 : rule__TableFull__Group__1__Impl ;
    public final void rule__TableFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9206:1: ( rule__TableFull__Group__1__Impl )
            // InternalSqlParser.g:9207:2: rule__TableFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1"


    // $ANTLR start "rule__TableFull__Group__1__Impl"
    // InternalSqlParser.g:9213:1: rule__TableFull__Group__1__Impl : ( ( rule__TableFull__Group_1__0 )? ) ;
    public final void rule__TableFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9217:1: ( ( ( rule__TableFull__Group_1__0 )? ) )
            // InternalSqlParser.g:9218:1: ( ( rule__TableFull__Group_1__0 )? )
            {
            // InternalSqlParser.g:9218:1: ( ( rule__TableFull__Group_1__0 )? )
            // InternalSqlParser.g:9219:1: ( rule__TableFull__Group_1__0 )?
            {
             before(grammarAccess.getTableFullAccess().getGroup_1()); 
            // InternalSqlParser.g:9220:1: ( rule__TableFull__Group_1__0 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==FullStop) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalSqlParser.g:9220:2: rule__TableFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableFull__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getTableFullAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1__0"
    // InternalSqlParser.g:9234:1: rule__TableFull__Group_1__0 : rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 ;
    public final void rule__TableFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9238:1: ( rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 )
            // InternalSqlParser.g:9239:2: rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__TableFull__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0"


    // $ANTLR start "rule__TableFull__Group_1__0__Impl"
    // InternalSqlParser.g:9246:1: rule__TableFull__Group_1__0__Impl : ( () ) ;
    public final void rule__TableFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9250:1: ( ( () ) )
            // InternalSqlParser.g:9251:1: ( () )
            {
            // InternalSqlParser.g:9251:1: ( () )
            // InternalSqlParser.g:9252:1: ()
            {
             before(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 
            // InternalSqlParser.g:9253:1: ()
            // InternalSqlParser.g:9255:1: 
            {
            }

             after(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1__1"
    // InternalSqlParser.g:9265:1: rule__TableFull__Group_1__1 : rule__TableFull__Group_1__1__Impl ;
    public final void rule__TableFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9269:1: ( rule__TableFull__Group_1__1__Impl )
            // InternalSqlParser.g:9270:2: rule__TableFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1"


    // $ANTLR start "rule__TableFull__Group_1__1__Impl"
    // InternalSqlParser.g:9276:1: rule__TableFull__Group_1__1__Impl : ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) ;
    public final void rule__TableFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9280:1: ( ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:9281:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:9281:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            // InternalSqlParser.g:9282:1: ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:9282:1: ( ( rule__TableFull__Group_1_1__0 ) )
            // InternalSqlParser.g:9283:1: ( rule__TableFull__Group_1_1__0 )
            {
             before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            // InternalSqlParser.g:9284:1: ( rule__TableFull__Group_1_1__0 )
            // InternalSqlParser.g:9284:2: rule__TableFull__Group_1_1__0
            {
            pushFollow(FOLLOW_26);
            rule__TableFull__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getTableFullAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:9287:1: ( ( rule__TableFull__Group_1_1__0 )* )
            // InternalSqlParser.g:9288:1: ( rule__TableFull__Group_1_1__0 )*
            {
             before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            // InternalSqlParser.g:9289:1: ( rule__TableFull__Group_1_1__0 )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==FullStop) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalSqlParser.g:9289:2: rule__TableFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_26);
            	    rule__TableFull__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

             after(grammarAccess.getTableFullAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__0"
    // InternalSqlParser.g:9304:1: rule__TableFull__Group_1_1__0 : rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 ;
    public final void rule__TableFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9308:1: ( rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 )
            // InternalSqlParser.g:9309:2: rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1
            {
            pushFollow(FOLLOW_27);
            rule__TableFull__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0"


    // $ANTLR start "rule__TableFull__Group_1_1__0__Impl"
    // InternalSqlParser.g:9316:1: rule__TableFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__TableFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9320:1: ( ( FullStop ) )
            // InternalSqlParser.g:9321:1: ( FullStop )
            {
            // InternalSqlParser.g:9321:1: ( FullStop )
            // InternalSqlParser.g:9322:1: FullStop
            {
             before(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 
            match(input,FullStop,FOLLOW_2); 
             after(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__1"
    // InternalSqlParser.g:9335:1: rule__TableFull__Group_1_1__1 : rule__TableFull__Group_1_1__1__Impl ;
    public final void rule__TableFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9339:1: ( rule__TableFull__Group_1_1__1__Impl )
            // InternalSqlParser.g:9340:2: rule__TableFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1"


    // $ANTLR start "rule__TableFull__Group_1_1__1__Impl"
    // InternalSqlParser.g:9346:1: rule__TableFull__Group_1_1__1__Impl : ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__TableFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9350:1: ( ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:9351:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:9351:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:9352:1: ( rule__TableFull__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:9353:1: ( rule__TableFull__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:9353:2: rule__TableFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__0"
    // InternalSqlParser.g:9367:1: rule__DbObjectNameAll__Group__0 : rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 ;
    public final void rule__DbObjectNameAll__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9371:1: ( rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 )
            // InternalSqlParser.g:9372:2: rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__DbObjectNameAll__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0"


    // $ANTLR start "rule__DbObjectNameAll__Group__0__Impl"
    // InternalSqlParser.g:9379:1: rule__DbObjectNameAll__Group__0__Impl : ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) ;
    public final void rule__DbObjectNameAll__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9383:1: ( ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) )
            // InternalSqlParser.g:9384:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            {
            // InternalSqlParser.g:9384:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            // InternalSqlParser.g:9385:1: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            {
             before(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 
            // InternalSqlParser.g:9386:1: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            // InternalSqlParser.g:9386:2: rule__DbObjectNameAll__DbnameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__DbnameAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__1"
    // InternalSqlParser.g:9396:1: rule__DbObjectNameAll__Group__1 : rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 ;
    public final void rule__DbObjectNameAll__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9400:1: ( rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 )
            // InternalSqlParser.g:9401:2: rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2
            {
            pushFollow(FOLLOW_43);
            rule__DbObjectNameAll__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1"


    // $ANTLR start "rule__DbObjectNameAll__Group__1__Impl"
    // InternalSqlParser.g:9408:1: rule__DbObjectNameAll__Group__1__Impl : ( FullStop ) ;
    public final void rule__DbObjectNameAll__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9412:1: ( ( FullStop ) )
            // InternalSqlParser.g:9413:1: ( FullStop )
            {
            // InternalSqlParser.g:9413:1: ( FullStop )
            // InternalSqlParser.g:9414:1: FullStop
            {
             before(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 
            match(input,FullStop,FOLLOW_2); 
             after(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__2"
    // InternalSqlParser.g:9427:1: rule__DbObjectNameAll__Group__2 : rule__DbObjectNameAll__Group__2__Impl ;
    public final void rule__DbObjectNameAll__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9431:1: ( rule__DbObjectNameAll__Group__2__Impl )
            // InternalSqlParser.g:9432:2: rule__DbObjectNameAll__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2"


    // $ANTLR start "rule__DbObjectNameAll__Group__2__Impl"
    // InternalSqlParser.g:9438:1: rule__DbObjectNameAll__Group__2__Impl : ( RULE_STAR ) ;
    public final void rule__DbObjectNameAll__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9442:1: ( ( RULE_STAR ) )
            // InternalSqlParser.g:9443:1: ( RULE_STAR )
            {
            // InternalSqlParser.g:9443:1: ( RULE_STAR )
            // InternalSqlParser.g:9444:1: RULE_STAR
            {
             before(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 
            match(input,RULE_STAR,FOLLOW_2); 
             after(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__0"
    // InternalSqlParser.g:9461:1: rule__OrderByColumns__Group__0 : rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 ;
    public final void rule__OrderByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9465:1: ( rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 )
            // InternalSqlParser.g:9466:2: rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__OrderByColumns__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0"


    // $ANTLR start "rule__OrderByColumns__Group__0__Impl"
    // InternalSqlParser.g:9473:1: rule__OrderByColumns__Group__0__Impl : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9477:1: ( ( ruleOrderByColumnFull ) )
            // InternalSqlParser.g:9478:1: ( ruleOrderByColumnFull )
            {
            // InternalSqlParser.g:9478:1: ( ruleOrderByColumnFull )
            // InternalSqlParser.g:9479:1: ruleOrderByColumnFull
            {
             before(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;

             after(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__1"
    // InternalSqlParser.g:9490:1: rule__OrderByColumns__Group__1 : rule__OrderByColumns__Group__1__Impl ;
    public final void rule__OrderByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9494:1: ( rule__OrderByColumns__Group__1__Impl )
            // InternalSqlParser.g:9495:2: rule__OrderByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1"


    // $ANTLR start "rule__OrderByColumns__Group__1__Impl"
    // InternalSqlParser.g:9501:1: rule__OrderByColumns__Group__1__Impl : ( ( rule__OrderByColumns__Group_1__0 )? ) ;
    public final void rule__OrderByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9505:1: ( ( ( rule__OrderByColumns__Group_1__0 )? ) )
            // InternalSqlParser.g:9506:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            {
            // InternalSqlParser.g:9506:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            // InternalSqlParser.g:9507:1: ( rule__OrderByColumns__Group_1__0 )?
            {
             before(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 
            // InternalSqlParser.g:9508:1: ( rule__OrderByColumns__Group_1__0 )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==Comma) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalSqlParser.g:9508:2: rule__OrderByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumns__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__0"
    // InternalSqlParser.g:9522:1: rule__OrderByColumns__Group_1__0 : rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 ;
    public final void rule__OrderByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9526:1: ( rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 )
            // InternalSqlParser.g:9527:2: rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__OrderByColumns__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1__0__Impl"
    // InternalSqlParser.g:9534:1: rule__OrderByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9538:1: ( ( () ) )
            // InternalSqlParser.g:9539:1: ( () )
            {
            // InternalSqlParser.g:9539:1: ( () )
            // InternalSqlParser.g:9540:1: ()
            {
             before(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 
            // InternalSqlParser.g:9541:1: ()
            // InternalSqlParser.g:9543:1: 
            {
            }

             after(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__1"
    // InternalSqlParser.g:9553:1: rule__OrderByColumns__Group_1__1 : rule__OrderByColumns__Group_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9557:1: ( rule__OrderByColumns__Group_1__1__Impl )
            // InternalSqlParser.g:9558:2: rule__OrderByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1__1__Impl"
    // InternalSqlParser.g:9564:1: rule__OrderByColumns__Group_1__1__Impl : ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9568:1: ( ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:9569:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:9569:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            // InternalSqlParser.g:9570:1: ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:9570:1: ( ( rule__OrderByColumns__Group_1_1__0 ) )
            // InternalSqlParser.g:9571:1: ( rule__OrderByColumns__Group_1_1__0 )
            {
             before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:9572:1: ( rule__OrderByColumns__Group_1_1__0 )
            // InternalSqlParser.g:9572:2: rule__OrderByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_23);
            rule__OrderByColumns__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:9575:1: ( ( rule__OrderByColumns__Group_1_1__0 )* )
            // InternalSqlParser.g:9576:1: ( rule__OrderByColumns__Group_1_1__0 )*
            {
             before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:9577:1: ( rule__OrderByColumns__Group_1_1__0 )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==Comma) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalSqlParser.g:9577:2: rule__OrderByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__OrderByColumns__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

             after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0"
    // InternalSqlParser.g:9592:1: rule__OrderByColumns__Group_1_1__0 : rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 ;
    public final void rule__OrderByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9596:1: ( rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 )
            // InternalSqlParser.g:9597:2: rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_19);
            rule__OrderByColumns__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0__Impl"
    // InternalSqlParser.g:9604:1: rule__OrderByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9608:1: ( ( Comma ) )
            // InternalSqlParser.g:9609:1: ( Comma )
            {
            // InternalSqlParser.g:9609:1: ( Comma )
            // InternalSqlParser.g:9610:1: Comma
            {
             before(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1"
    // InternalSqlParser.g:9623:1: rule__OrderByColumns__Group_1_1__1 : rule__OrderByColumns__Group_1_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9627:1: ( rule__OrderByColumns__Group_1_1__1__Impl )
            // InternalSqlParser.g:9628:2: rule__OrderByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1__Impl"
    // InternalSqlParser.g:9634:1: rule__OrderByColumns__Group_1_1__1__Impl : ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9638:1: ( ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:9639:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:9639:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:9640:1: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:9641:1: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:9641:2: rule__OrderByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__0"
    // InternalSqlParser.g:9655:1: rule__OrderByColumnFull__Group__0 : rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 ;
    public final void rule__OrderByColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9659:1: ( rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 )
            // InternalSqlParser.g:9660:2: rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1
            {
            pushFollow(FOLLOW_44);
            rule__OrderByColumnFull__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0"


    // $ANTLR start "rule__OrderByColumnFull__Group__0__Impl"
    // InternalSqlParser.g:9667:1: rule__OrderByColumnFull__Group__0__Impl : ( ( rule__OrderByColumnFull__Alternatives_0 ) ) ;
    public final void rule__OrderByColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9671:1: ( ( ( rule__OrderByColumnFull__Alternatives_0 ) ) )
            // InternalSqlParser.g:9672:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            {
            // InternalSqlParser.g:9672:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            // InternalSqlParser.g:9673:1: ( rule__OrderByColumnFull__Alternatives_0 )
            {
             before(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 
            // InternalSqlParser.g:9674:1: ( rule__OrderByColumnFull__Alternatives_0 )
            // InternalSqlParser.g:9674:2: rule__OrderByColumnFull__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Alternatives_0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__1"
    // InternalSqlParser.g:9684:1: rule__OrderByColumnFull__Group__1 : rule__OrderByColumnFull__Group__1__Impl ;
    public final void rule__OrderByColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9688:1: ( rule__OrderByColumnFull__Group__1__Impl )
            // InternalSqlParser.g:9689:2: rule__OrderByColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1"


    // $ANTLR start "rule__OrderByColumnFull__Group__1__Impl"
    // InternalSqlParser.g:9695:1: rule__OrderByColumnFull__Group__1__Impl : ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) ;
    public final void rule__OrderByColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9699:1: ( ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) )
            // InternalSqlParser.g:9700:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            {
            // InternalSqlParser.g:9700:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            // InternalSqlParser.g:9701:1: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            {
             before(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 
            // InternalSqlParser.g:9702:1: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==DESC||LA100_0==ASC) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalSqlParser.g:9702:2: rule__OrderByColumnFull__DirectionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__DirectionAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__0"
    // InternalSqlParser.g:9716:1: rule__GroupByColumns__Group__0 : rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 ;
    public final void rule__GroupByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9720:1: ( rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 )
            // InternalSqlParser.g:9721:2: rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__GroupByColumns__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0"


    // $ANTLR start "rule__GroupByColumns__Group__0__Impl"
    // InternalSqlParser.g:9728:1: rule__GroupByColumns__Group__0__Impl : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9732:1: ( ( ruleGroupByColumnFull ) )
            // InternalSqlParser.g:9733:1: ( ruleGroupByColumnFull )
            {
            // InternalSqlParser.g:9733:1: ( ruleGroupByColumnFull )
            // InternalSqlParser.g:9734:1: ruleGroupByColumnFull
            {
             before(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;

             after(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__1"
    // InternalSqlParser.g:9745:1: rule__GroupByColumns__Group__1 : rule__GroupByColumns__Group__1__Impl ;
    public final void rule__GroupByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9749:1: ( rule__GroupByColumns__Group__1__Impl )
            // InternalSqlParser.g:9750:2: rule__GroupByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1"


    // $ANTLR start "rule__GroupByColumns__Group__1__Impl"
    // InternalSqlParser.g:9756:1: rule__GroupByColumns__Group__1__Impl : ( ( rule__GroupByColumns__Group_1__0 )? ) ;
    public final void rule__GroupByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9760:1: ( ( ( rule__GroupByColumns__Group_1__0 )? ) )
            // InternalSqlParser.g:9761:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            {
            // InternalSqlParser.g:9761:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            // InternalSqlParser.g:9762:1: ( rule__GroupByColumns__Group_1__0 )?
            {
             before(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 
            // InternalSqlParser.g:9763:1: ( rule__GroupByColumns__Group_1__0 )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==Comma) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalSqlParser.g:9763:2: rule__GroupByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumns__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__0"
    // InternalSqlParser.g:9777:1: rule__GroupByColumns__Group_1__0 : rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 ;
    public final void rule__GroupByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9781:1: ( rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 )
            // InternalSqlParser.g:9782:2: rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__GroupByColumns__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1__0__Impl"
    // InternalSqlParser.g:9789:1: rule__GroupByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__GroupByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9793:1: ( ( () ) )
            // InternalSqlParser.g:9794:1: ( () )
            {
            // InternalSqlParser.g:9794:1: ( () )
            // InternalSqlParser.g:9795:1: ()
            {
             before(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 
            // InternalSqlParser.g:9796:1: ()
            // InternalSqlParser.g:9798:1: 
            {
            }

             after(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__1"
    // InternalSqlParser.g:9808:1: rule__GroupByColumns__Group_1__1 : rule__GroupByColumns__Group_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9812:1: ( rule__GroupByColumns__Group_1__1__Impl )
            // InternalSqlParser.g:9813:2: rule__GroupByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1__1__Impl"
    // InternalSqlParser.g:9819:1: rule__GroupByColumns__Group_1__1__Impl : ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__GroupByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9823:1: ( ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:9824:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:9824:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            // InternalSqlParser.g:9825:1: ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:9825:1: ( ( rule__GroupByColumns__Group_1_1__0 ) )
            // InternalSqlParser.g:9826:1: ( rule__GroupByColumns__Group_1_1__0 )
            {
             before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:9827:1: ( rule__GroupByColumns__Group_1_1__0 )
            // InternalSqlParser.g:9827:2: rule__GroupByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_23);
            rule__GroupByColumns__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:9830:1: ( ( rule__GroupByColumns__Group_1_1__0 )* )
            // InternalSqlParser.g:9831:1: ( rule__GroupByColumns__Group_1_1__0 )*
            {
             before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:9832:1: ( rule__GroupByColumns__Group_1_1__0 )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==Comma) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalSqlParser.g:9832:2: rule__GroupByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__GroupByColumns__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

             after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0"
    // InternalSqlParser.g:9847:1: rule__GroupByColumns__Group_1_1__0 : rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 ;
    public final void rule__GroupByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9851:1: ( rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 )
            // InternalSqlParser.g:9852:2: rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_19);
            rule__GroupByColumns__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0__Impl"
    // InternalSqlParser.g:9859:1: rule__GroupByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__GroupByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9863:1: ( ( Comma ) )
            // InternalSqlParser.g:9864:1: ( Comma )
            {
            // InternalSqlParser.g:9864:1: ( Comma )
            // InternalSqlParser.g:9865:1: Comma
            {
             before(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1"
    // InternalSqlParser.g:9878:1: rule__GroupByColumns__Group_1_1__1 : rule__GroupByColumns__Group_1_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9882:1: ( rule__GroupByColumns__Group_1_1__1__Impl )
            // InternalSqlParser.g:9883:2: rule__GroupByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1__Impl"
    // InternalSqlParser.g:9889:1: rule__GroupByColumns__Group_1_1__1__Impl : ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__GroupByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9893:1: ( ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:9894:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:9894:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:9895:1: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:9896:1: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:9896:2: rule__GroupByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__FullExpression__Group__0"
    // InternalSqlParser.g:9910:1: rule__FullExpression__Group__0 : rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 ;
    public final void rule__FullExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9914:1: ( rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 )
            // InternalSqlParser.g:9915:2: rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__FullExpression__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0"


    // $ANTLR start "rule__FullExpression__Group__0__Impl"
    // InternalSqlParser.g:9922:1: rule__FullExpression__Group__0__Impl : ( ruleExpressionFragment ) ;
    public final void rule__FullExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9926:1: ( ( ruleExpressionFragment ) )
            // InternalSqlParser.g:9927:1: ( ruleExpressionFragment )
            {
            // InternalSqlParser.g:9927:1: ( ruleExpressionFragment )
            // InternalSqlParser.g:9928:1: ruleExpressionFragment
            {
             before(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;

             after(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0__Impl"


    // $ANTLR start "rule__FullExpression__Group__1"
    // InternalSqlParser.g:9939:1: rule__FullExpression__Group__1 : rule__FullExpression__Group__1__Impl ;
    public final void rule__FullExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9943:1: ( rule__FullExpression__Group__1__Impl )
            // InternalSqlParser.g:9944:2: rule__FullExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1"


    // $ANTLR start "rule__FullExpression__Group__1__Impl"
    // InternalSqlParser.g:9950:1: rule__FullExpression__Group__1__Impl : ( ( rule__FullExpression__Group_1__0 )? ) ;
    public final void rule__FullExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9954:1: ( ( ( rule__FullExpression__Group_1__0 )? ) )
            // InternalSqlParser.g:9955:1: ( ( rule__FullExpression__Group_1__0 )? )
            {
            // InternalSqlParser.g:9955:1: ( ( rule__FullExpression__Group_1__0 )? )
            // InternalSqlParser.g:9956:1: ( rule__FullExpression__Group_1__0 )?
            {
             before(grammarAccess.getFullExpressionAccess().getGroup_1()); 
            // InternalSqlParser.g:9957:1: ( rule__FullExpression__Group_1__0 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==AND||LA103_0==OR||LA103_0==RULE_JRNPARAM) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalSqlParser.g:9957:2: rule__FullExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FullExpression__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFullExpressionAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__0"
    // InternalSqlParser.g:9971:1: rule__FullExpression__Group_1__0 : rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 ;
    public final void rule__FullExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9975:1: ( rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 )
            // InternalSqlParser.g:9976:2: rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1
            {
            pushFollow(FOLLOW_45);
            rule__FullExpression__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0"


    // $ANTLR start "rule__FullExpression__Group_1__0__Impl"
    // InternalSqlParser.g:9983:1: rule__FullExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__FullExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9987:1: ( ( () ) )
            // InternalSqlParser.g:9988:1: ( () )
            {
            // InternalSqlParser.g:9988:1: ( () )
            // InternalSqlParser.g:9989:1: ()
            {
             before(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 
            // InternalSqlParser.g:9990:1: ()
            // InternalSqlParser.g:9992:1: 
            {
            }

             after(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__1"
    // InternalSqlParser.g:10002:1: rule__FullExpression__Group_1__1 : rule__FullExpression__Group_1__1__Impl ;
    public final void rule__FullExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10006:1: ( rule__FullExpression__Group_1__1__Impl )
            // InternalSqlParser.g:10007:2: rule__FullExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1"


    // $ANTLR start "rule__FullExpression__Group_1__1__Impl"
    // InternalSqlParser.g:10013:1: rule__FullExpression__Group_1__1__Impl : ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__FullExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10017:1: ( ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) )
            // InternalSqlParser.g:10018:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            {
            // InternalSqlParser.g:10018:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            // InternalSqlParser.g:10019:1: ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            {
            // InternalSqlParser.g:10019:1: ( ( rule__FullExpression__EntriesAssignment_1_1 ) )
            // InternalSqlParser.g:10020:1: ( rule__FullExpression__EntriesAssignment_1_1 )
            {
             before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            // InternalSqlParser.g:10021:1: ( rule__FullExpression__EntriesAssignment_1_1 )
            // InternalSqlParser.g:10021:2: rule__FullExpression__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_46);
            rule__FullExpression__EntriesAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 

            }

            // InternalSqlParser.g:10024:1: ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            // InternalSqlParser.g:10025:1: ( rule__FullExpression__EntriesAssignment_1_1 )*
            {
             before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            // InternalSqlParser.g:10026:1: ( rule__FullExpression__EntriesAssignment_1_1 )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==AND||LA104_0==OR||LA104_0==RULE_JRNPARAM) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // InternalSqlParser.g:10026:2: rule__FullExpression__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__FullExpression__EntriesAssignment_1_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);

             after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0"
    // InternalSqlParser.g:10041:1: rule__ExpressionFragmentSecond__Group_0__0 : rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 ;
    public final void rule__ExpressionFragmentSecond__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10045:1: ( rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 )
            // InternalSqlParser.g:10046:2: rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1
            {
            pushFollow(FOLLOW_18);
            rule__ExpressionFragmentSecond__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0__Impl"
    // InternalSqlParser.g:10053:1: rule__ExpressionFragmentSecond__Group_0__0__Impl : ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10057:1: ( ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) )
            // InternalSqlParser.g:10058:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            {
            // InternalSqlParser.g:10058:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            // InternalSqlParser.g:10059:1: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            {
             before(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 
            // InternalSqlParser.g:10060:1: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            // InternalSqlParser.g:10060:2: rule__ExpressionFragmentSecond__CAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1"
    // InternalSqlParser.g:10070:1: rule__ExpressionFragmentSecond__Group_0__1 : rule__ExpressionFragmentSecond__Group_0__1__Impl ;
    public final void rule__ExpressionFragmentSecond__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10074:1: ( rule__ExpressionFragmentSecond__Group_0__1__Impl )
            // InternalSqlParser.g:10075:2: rule__ExpressionFragmentSecond__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1__Impl"
    // InternalSqlParser.g:10081:1: rule__ExpressionFragmentSecond__Group_0__1__Impl : ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10085:1: ( ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) )
            // InternalSqlParser.g:10086:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            {
            // InternalSqlParser.g:10086:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            // InternalSqlParser.g:10087:1: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            {
             before(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 
            // InternalSqlParser.g:10088:1: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            // InternalSqlParser.g:10088:2: rule__ExpressionFragmentSecond__EfragAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__EfragAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__0"
    // InternalSqlParser.g:10102:1: rule__ExpressionGroup__Group__0 : rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 ;
    public final void rule__ExpressionGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10106:1: ( rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 )
            // InternalSqlParser.g:10107:2: rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__ExpressionGroup__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0"


    // $ANTLR start "rule__ExpressionGroup__Group__0__Impl"
    // InternalSqlParser.g:10114:1: rule__ExpressionGroup__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10118:1: ( ( () ) )
            // InternalSqlParser.g:10119:1: ( () )
            {
            // InternalSqlParser.g:10119:1: ( () )
            // InternalSqlParser.g:10120:1: ()
            {
             before(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 
            // InternalSqlParser.g:10121:1: ()
            // InternalSqlParser.g:10123:1: 
            {
            }

             after(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__1"
    // InternalSqlParser.g:10133:1: rule__ExpressionGroup__Group__1 : rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 ;
    public final void rule__ExpressionGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10137:1: ( rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 )
            // InternalSqlParser.g:10138:2: rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2
            {
            pushFollow(FOLLOW_47);
            rule__ExpressionGroup__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1"


    // $ANTLR start "rule__ExpressionGroup__Group__1__Impl"
    // InternalSqlParser.g:10145:1: rule__ExpressionGroup__Group__1__Impl : ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) ;
    public final void rule__ExpressionGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10149:1: ( ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) )
            // InternalSqlParser.g:10150:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            {
            // InternalSqlParser.g:10150:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            // InternalSqlParser.g:10151:1: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            {
             before(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 
            // InternalSqlParser.g:10152:1: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( ((LA105_0>=NOT && LA105_0<=NOT_1)) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalSqlParser.g:10152:2: rule__ExpressionGroup__IsnotAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionGroup__IsnotAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__2"
    // InternalSqlParser.g:10162:1: rule__ExpressionGroup__Group__2 : rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 ;
    public final void rule__ExpressionGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10166:1: ( rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 )
            // InternalSqlParser.g:10167:2: rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__ExpressionGroup__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2"


    // $ANTLR start "rule__ExpressionGroup__Group__2__Impl"
    // InternalSqlParser.g:10174:1: rule__ExpressionGroup__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__ExpressionGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10178:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:10179:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:10179:1: ( LeftParenthesis )
            // InternalSqlParser.g:10180:1: LeftParenthesis
            {
             before(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__3"
    // InternalSqlParser.g:10193:1: rule__ExpressionGroup__Group__3 : rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 ;
    public final void rule__ExpressionGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10197:1: ( rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 )
            // InternalSqlParser.g:10198:2: rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4
            {
            pushFollow(FOLLOW_32);
            rule__ExpressionGroup__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3"


    // $ANTLR start "rule__ExpressionGroup__Group__3__Impl"
    // InternalSqlParser.g:10205:1: rule__ExpressionGroup__Group__3__Impl : ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) ;
    public final void rule__ExpressionGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10209:1: ( ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) )
            // InternalSqlParser.g:10210:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            {
            // InternalSqlParser.g:10210:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            // InternalSqlParser.g:10211:1: ( rule__ExpressionGroup__ExprAssignment_3 )
            {
             before(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 
            // InternalSqlParser.g:10212:1: ( rule__ExpressionGroup__ExprAssignment_3 )
            // InternalSqlParser.g:10212:2: rule__ExpressionGroup__ExprAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__ExprAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__4"
    // InternalSqlParser.g:10222:1: rule__ExpressionGroup__Group__4 : rule__ExpressionGroup__Group__4__Impl ;
    public final void rule__ExpressionGroup__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10226:1: ( rule__ExpressionGroup__Group__4__Impl )
            // InternalSqlParser.g:10227:2: rule__ExpressionGroup__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4"


    // $ANTLR start "rule__ExpressionGroup__Group__4__Impl"
    // InternalSqlParser.g:10233:1: rule__ExpressionGroup__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__ExpressionGroup__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10237:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:10238:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:10238:1: ( RightParenthesis )
            // InternalSqlParser.g:10239:1: RightParenthesis
            {
             before(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__0"
    // InternalSqlParser.g:10262:1: rule__XExpression__Group__0 : rule__XExpression__Group__0__Impl rule__XExpression__Group__1 ;
    public final void rule__XExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10266:1: ( rule__XExpression__Group__0__Impl rule__XExpression__Group__1 )
            // InternalSqlParser.g:10267:2: rule__XExpression__Group__0__Impl rule__XExpression__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__XExpression__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0"


    // $ANTLR start "rule__XExpression__Group__0__Impl"
    // InternalSqlParser.g:10274:1: rule__XExpression__Group__0__Impl : ( X ) ;
    public final void rule__XExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10278:1: ( ( X ) )
            // InternalSqlParser.g:10279:1: ( X )
            {
            // InternalSqlParser.g:10279:1: ( X )
            // InternalSqlParser.g:10280:1: X
            {
             before(grammarAccess.getXExpressionAccess().getXKeyword_0()); 
            match(input,X,FOLLOW_2); 
             after(grammarAccess.getXExpressionAccess().getXKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0__Impl"


    // $ANTLR start "rule__XExpression__Group__1"
    // InternalSqlParser.g:10293:1: rule__XExpression__Group__1 : rule__XExpression__Group__1__Impl rule__XExpression__Group__2 ;
    public final void rule__XExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10297:1: ( rule__XExpression__Group__1__Impl rule__XExpression__Group__2 )
            // InternalSqlParser.g:10298:2: rule__XExpression__Group__1__Impl rule__XExpression__Group__2
            {
            pushFollow(FOLLOW_48);
            rule__XExpression__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1"


    // $ANTLR start "rule__XExpression__Group__1__Impl"
    // InternalSqlParser.g:10305:1: rule__XExpression__Group__1__Impl : ( () ) ;
    public final void rule__XExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10309:1: ( ( () ) )
            // InternalSqlParser.g:10310:1: ( () )
            {
            // InternalSqlParser.g:10310:1: ( () )
            // InternalSqlParser.g:10311:1: ()
            {
             before(grammarAccess.getXExpressionAccess().getXExprAction_1()); 
            // InternalSqlParser.g:10312:1: ()
            // InternalSqlParser.g:10314:1: 
            {
            }

             after(grammarAccess.getXExpressionAccess().getXExprAction_1()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1__Impl"


    // $ANTLR start "rule__XExpression__Group__2"
    // InternalSqlParser.g:10324:1: rule__XExpression__Group__2 : rule__XExpression__Group__2__Impl rule__XExpression__Group__3 ;
    public final void rule__XExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10328:1: ( rule__XExpression__Group__2__Impl rule__XExpression__Group__3 )
            // InternalSqlParser.g:10329:2: rule__XExpression__Group__2__Impl rule__XExpression__Group__3
            {
            pushFollow(FOLLOW_49);
            rule__XExpression__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2"


    // $ANTLR start "rule__XExpression__Group__2__Impl"
    // InternalSqlParser.g:10336:1: rule__XExpression__Group__2__Impl : ( LeftCurlyBracket ) ;
    public final void rule__XExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10340:1: ( ( LeftCurlyBracket ) )
            // InternalSqlParser.g:10341:1: ( LeftCurlyBracket )
            {
            // InternalSqlParser.g:10341:1: ( LeftCurlyBracket )
            // InternalSqlParser.g:10342:1: LeftCurlyBracket
            {
             before(grammarAccess.getXExpressionAccess().getLeftCurlyBracketKeyword_2()); 
            match(input,LeftCurlyBracket,FOLLOW_2); 
             after(grammarAccess.getXExpressionAccess().getLeftCurlyBracketKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2__Impl"


    // $ANTLR start "rule__XExpression__Group__3"
    // InternalSqlParser.g:10355:1: rule__XExpression__Group__3 : rule__XExpression__Group__3__Impl rule__XExpression__Group__4 ;
    public final void rule__XExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10359:1: ( rule__XExpression__Group__3__Impl rule__XExpression__Group__4 )
            // InternalSqlParser.g:10360:2: rule__XExpression__Group__3__Impl rule__XExpression__Group__4
            {
            pushFollow(FOLLOW_7);
            rule__XExpression__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3"


    // $ANTLR start "rule__XExpression__Group__3__Impl"
    // InternalSqlParser.g:10367:1: rule__XExpression__Group__3__Impl : ( ( rule__XExpression__XfAssignment_3 ) ) ;
    public final void rule__XExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10371:1: ( ( ( rule__XExpression__XfAssignment_3 ) ) )
            // InternalSqlParser.g:10372:1: ( ( rule__XExpression__XfAssignment_3 ) )
            {
            // InternalSqlParser.g:10372:1: ( ( rule__XExpression__XfAssignment_3 ) )
            // InternalSqlParser.g:10373:1: ( rule__XExpression__XfAssignment_3 )
            {
             before(grammarAccess.getXExpressionAccess().getXfAssignment_3()); 
            // InternalSqlParser.g:10374:1: ( rule__XExpression__XfAssignment_3 )
            // InternalSqlParser.g:10374:2: rule__XExpression__XfAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__XfAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionAccess().getXfAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3__Impl"


    // $ANTLR start "rule__XExpression__Group__4"
    // InternalSqlParser.g:10384:1: rule__XExpression__Group__4 : rule__XExpression__Group__4__Impl rule__XExpression__Group__5 ;
    public final void rule__XExpression__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10388:1: ( rule__XExpression__Group__4__Impl rule__XExpression__Group__5 )
            // InternalSqlParser.g:10389:2: rule__XExpression__Group__4__Impl rule__XExpression__Group__5
            {
            pushFollow(FOLLOW_50);
            rule__XExpression__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4"


    // $ANTLR start "rule__XExpression__Group__4__Impl"
    // InternalSqlParser.g:10396:1: rule__XExpression__Group__4__Impl : ( Comma ) ;
    public final void rule__XExpression__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10400:1: ( ( Comma ) )
            // InternalSqlParser.g:10401:1: ( Comma )
            {
            // InternalSqlParser.g:10401:1: ( Comma )
            // InternalSqlParser.g:10402:1: Comma
            {
             before(grammarAccess.getXExpressionAccess().getCommaKeyword_4()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getXExpressionAccess().getCommaKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__5"
    // InternalSqlParser.g:10415:1: rule__XExpression__Group__5 : rule__XExpression__Group__5__Impl rule__XExpression__Group__6 ;
    public final void rule__XExpression__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10419:1: ( rule__XExpression__Group__5__Impl rule__XExpression__Group__6 )
            // InternalSqlParser.g:10420:2: rule__XExpression__Group__5__Impl rule__XExpression__Group__6
            {
            pushFollow(FOLLOW_51);
            rule__XExpression__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5"


    // $ANTLR start "rule__XExpression__Group__5__Impl"
    // InternalSqlParser.g:10427:1: rule__XExpression__Group__5__Impl : ( ( rule__XExpression__ColAssignment_5 ) ) ;
    public final void rule__XExpression__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10431:1: ( ( ( rule__XExpression__ColAssignment_5 ) ) )
            // InternalSqlParser.g:10432:1: ( ( rule__XExpression__ColAssignment_5 ) )
            {
            // InternalSqlParser.g:10432:1: ( ( rule__XExpression__ColAssignment_5 ) )
            // InternalSqlParser.g:10433:1: ( rule__XExpression__ColAssignment_5 )
            {
             before(grammarAccess.getXExpressionAccess().getColAssignment_5()); 
            // InternalSqlParser.g:10434:1: ( rule__XExpression__ColAssignment_5 )
            // InternalSqlParser.g:10434:2: rule__XExpression__ColAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__ColAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionAccess().getColAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5__Impl"


    // $ANTLR start "rule__XExpression__Group__6"
    // InternalSqlParser.g:10444:1: rule__XExpression__Group__6 : rule__XExpression__Group__6__Impl rule__XExpression__Group__7 ;
    public final void rule__XExpression__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10448:1: ( rule__XExpression__Group__6__Impl rule__XExpression__Group__7 )
            // InternalSqlParser.g:10449:2: rule__XExpression__Group__6__Impl rule__XExpression__Group__7
            {
            pushFollow(FOLLOW_51);
            rule__XExpression__Group__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6"


    // $ANTLR start "rule__XExpression__Group__6__Impl"
    // InternalSqlParser.g:10456:1: rule__XExpression__Group__6__Impl : ( ( rule__XExpression__Group_6__0 )? ) ;
    public final void rule__XExpression__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10460:1: ( ( ( rule__XExpression__Group_6__0 )? ) )
            // InternalSqlParser.g:10461:1: ( ( rule__XExpression__Group_6__0 )? )
            {
            // InternalSqlParser.g:10461:1: ( ( rule__XExpression__Group_6__0 )? )
            // InternalSqlParser.g:10462:1: ( rule__XExpression__Group_6__0 )?
            {
             before(grammarAccess.getXExpressionAccess().getGroup_6()); 
            // InternalSqlParser.g:10463:1: ( rule__XExpression__Group_6__0 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==Comma) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSqlParser.g:10463:2: rule__XExpression__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression__Group_6__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getXExpressionAccess().getGroup_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6__Impl"


    // $ANTLR start "rule__XExpression__Group__7"
    // InternalSqlParser.g:10473:1: rule__XExpression__Group__7 : rule__XExpression__Group__7__Impl ;
    public final void rule__XExpression__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10477:1: ( rule__XExpression__Group__7__Impl )
            // InternalSqlParser.g:10478:2: rule__XExpression__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__7__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__7"


    // $ANTLR start "rule__XExpression__Group__7__Impl"
    // InternalSqlParser.g:10484:1: rule__XExpression__Group__7__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10488:1: ( ( RightCurlyBracket ) )
            // InternalSqlParser.g:10489:1: ( RightCurlyBracket )
            {
            // InternalSqlParser.g:10489:1: ( RightCurlyBracket )
            // InternalSqlParser.g:10490:1: RightCurlyBracket
            {
             before(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_7()); 
            match(input,RightCurlyBracket,FOLLOW_2); 
             after(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__7__Impl"


    // $ANTLR start "rule__XExpression__Group_6__0"
    // InternalSqlParser.g:10519:1: rule__XExpression__Group_6__0 : rule__XExpression__Group_6__0__Impl rule__XExpression__Group_6__1 ;
    public final void rule__XExpression__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10523:1: ( rule__XExpression__Group_6__0__Impl rule__XExpression__Group_6__1 )
            // InternalSqlParser.g:10524:2: rule__XExpression__Group_6__0__Impl rule__XExpression__Group_6__1
            {
            pushFollow(FOLLOW_35);
            rule__XExpression__Group_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_6__0"


    // $ANTLR start "rule__XExpression__Group_6__0__Impl"
    // InternalSqlParser.g:10531:1: rule__XExpression__Group_6__0__Impl : ( Comma ) ;
    public final void rule__XExpression__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10535:1: ( ( Comma ) )
            // InternalSqlParser.g:10536:1: ( Comma )
            {
            // InternalSqlParser.g:10536:1: ( Comma )
            // InternalSqlParser.g:10537:1: Comma
            {
             before(grammarAccess.getXExpressionAccess().getCommaKeyword_6_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getXExpressionAccess().getCommaKeyword_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_6__0__Impl"


    // $ANTLR start "rule__XExpression__Group_6__1"
    // InternalSqlParser.g:10550:1: rule__XExpression__Group_6__1 : rule__XExpression__Group_6__1__Impl ;
    public final void rule__XExpression__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10554:1: ( rule__XExpression__Group_6__1__Impl )
            // InternalSqlParser.g:10555:2: rule__XExpression__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_6__1"


    // $ANTLR start "rule__XExpression__Group_6__1__Impl"
    // InternalSqlParser.g:10561:1: rule__XExpression__Group_6__1__Impl : ( ( rule__XExpression__PrmAssignment_6_1 ) ) ;
    public final void rule__XExpression__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10565:1: ( ( ( rule__XExpression__PrmAssignment_6_1 ) ) )
            // InternalSqlParser.g:10566:1: ( ( rule__XExpression__PrmAssignment_6_1 ) )
            {
            // InternalSqlParser.g:10566:1: ( ( rule__XExpression__PrmAssignment_6_1 ) )
            // InternalSqlParser.g:10567:1: ( rule__XExpression__PrmAssignment_6_1 )
            {
             before(grammarAccess.getXExpressionAccess().getPrmAssignment_6_1()); 
            // InternalSqlParser.g:10568:1: ( rule__XExpression__PrmAssignment_6_1 )
            // InternalSqlParser.g:10568:2: rule__XExpression__PrmAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__PrmAssignment_6_1();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionAccess().getPrmAssignment_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_6__1__Impl"


    // $ANTLR start "rule__XExpression___Group__0"
    // InternalSqlParser.g:10582:1: rule__XExpression___Group__0 : rule__XExpression___Group__0__Impl rule__XExpression___Group__1 ;
    public final void rule__XExpression___Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10586:1: ( rule__XExpression___Group__0__Impl rule__XExpression___Group__1 )
            // InternalSqlParser.g:10587:2: rule__XExpression___Group__0__Impl rule__XExpression___Group__1
            {
            pushFollow(FOLLOW_48);
            rule__XExpression___Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0"


    // $ANTLR start "rule__XExpression___Group__0__Impl"
    // InternalSqlParser.g:10594:1: rule__XExpression___Group__0__Impl : ( X ) ;
    public final void rule__XExpression___Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10598:1: ( ( X ) )
            // InternalSqlParser.g:10599:1: ( X )
            {
            // InternalSqlParser.g:10599:1: ( X )
            // InternalSqlParser.g:10600:1: X
            {
             before(grammarAccess.getXExpression_Access().getXKeyword_0()); 
            match(input,X,FOLLOW_2); 
             after(grammarAccess.getXExpression_Access().getXKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0__Impl"


    // $ANTLR start "rule__XExpression___Group__1"
    // InternalSqlParser.g:10613:1: rule__XExpression___Group__1 : rule__XExpression___Group__1__Impl rule__XExpression___Group__2 ;
    public final void rule__XExpression___Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10617:1: ( rule__XExpression___Group__1__Impl rule__XExpression___Group__2 )
            // InternalSqlParser.g:10618:2: rule__XExpression___Group__1__Impl rule__XExpression___Group__2
            {
            pushFollow(FOLLOW_48);
            rule__XExpression___Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1"


    // $ANTLR start "rule__XExpression___Group__1__Impl"
    // InternalSqlParser.g:10625:1: rule__XExpression___Group__1__Impl : ( () ) ;
    public final void rule__XExpression___Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10629:1: ( ( () ) )
            // InternalSqlParser.g:10630:1: ( () )
            {
            // InternalSqlParser.g:10630:1: ( () )
            // InternalSqlParser.g:10631:1: ()
            {
             before(grammarAccess.getXExpression_Access().getXExprAction_1()); 
            // InternalSqlParser.g:10632:1: ()
            // InternalSqlParser.g:10634:1: 
            {
            }

             after(grammarAccess.getXExpression_Access().getXExprAction_1()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1__Impl"


    // $ANTLR start "rule__XExpression___Group__2"
    // InternalSqlParser.g:10644:1: rule__XExpression___Group__2 : rule__XExpression___Group__2__Impl rule__XExpression___Group__3 ;
    public final void rule__XExpression___Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10648:1: ( rule__XExpression___Group__2__Impl rule__XExpression___Group__3 )
            // InternalSqlParser.g:10649:2: rule__XExpression___Group__2__Impl rule__XExpression___Group__3
            {
            pushFollow(FOLLOW_49);
            rule__XExpression___Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2"


    // $ANTLR start "rule__XExpression___Group__2__Impl"
    // InternalSqlParser.g:10656:1: rule__XExpression___Group__2__Impl : ( LeftCurlyBracket ) ;
    public final void rule__XExpression___Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10660:1: ( ( LeftCurlyBracket ) )
            // InternalSqlParser.g:10661:1: ( LeftCurlyBracket )
            {
            // InternalSqlParser.g:10661:1: ( LeftCurlyBracket )
            // InternalSqlParser.g:10662:1: LeftCurlyBracket
            {
             before(grammarAccess.getXExpression_Access().getLeftCurlyBracketKeyword_2()); 
            match(input,LeftCurlyBracket,FOLLOW_2); 
             after(grammarAccess.getXExpression_Access().getLeftCurlyBracketKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2__Impl"


    // $ANTLR start "rule__XExpression___Group__3"
    // InternalSqlParser.g:10675:1: rule__XExpression___Group__3 : rule__XExpression___Group__3__Impl rule__XExpression___Group__4 ;
    public final void rule__XExpression___Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10679:1: ( rule__XExpression___Group__3__Impl rule__XExpression___Group__4 )
            // InternalSqlParser.g:10680:2: rule__XExpression___Group__3__Impl rule__XExpression___Group__4
            {
            pushFollow(FOLLOW_52);
            rule__XExpression___Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3"


    // $ANTLR start "rule__XExpression___Group__3__Impl"
    // InternalSqlParser.g:10687:1: rule__XExpression___Group__3__Impl : ( ( rule__XExpression___XfAssignment_3 ) ) ;
    public final void rule__XExpression___Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10691:1: ( ( ( rule__XExpression___XfAssignment_3 ) ) )
            // InternalSqlParser.g:10692:1: ( ( rule__XExpression___XfAssignment_3 ) )
            {
            // InternalSqlParser.g:10692:1: ( ( rule__XExpression___XfAssignment_3 ) )
            // InternalSqlParser.g:10693:1: ( rule__XExpression___XfAssignment_3 )
            {
             before(grammarAccess.getXExpression_Access().getXfAssignment_3()); 
            // InternalSqlParser.g:10694:1: ( rule__XExpression___XfAssignment_3 )
            // InternalSqlParser.g:10694:2: rule__XExpression___XfAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___XfAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getXExpression_Access().getXfAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3__Impl"


    // $ANTLR start "rule__XExpression___Group__4"
    // InternalSqlParser.g:10704:1: rule__XExpression___Group__4 : rule__XExpression___Group__4__Impl rule__XExpression___Group__5 ;
    public final void rule__XExpression___Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10708:1: ( rule__XExpression___Group__4__Impl rule__XExpression___Group__5 )
            // InternalSqlParser.g:10709:2: rule__XExpression___Group__4__Impl rule__XExpression___Group__5
            {
            pushFollow(FOLLOW_50);
            rule__XExpression___Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4"


    // $ANTLR start "rule__XExpression___Group__4__Impl"
    // InternalSqlParser.g:10716:1: rule__XExpression___Group__4__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10720:1: ( ( VerticalLine ) )
            // InternalSqlParser.g:10721:1: ( VerticalLine )
            {
            // InternalSqlParser.g:10721:1: ( VerticalLine )
            // InternalSqlParser.g:10722:1: VerticalLine
            {
             before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_4()); 
            match(input,VerticalLine,FOLLOW_2); 
             after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4__Impl"


    // $ANTLR start "rule__XExpression___Group__5"
    // InternalSqlParser.g:10735:1: rule__XExpression___Group__5 : rule__XExpression___Group__5__Impl rule__XExpression___Group__6 ;
    public final void rule__XExpression___Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10739:1: ( rule__XExpression___Group__5__Impl rule__XExpression___Group__6 )
            // InternalSqlParser.g:10740:2: rule__XExpression___Group__5__Impl rule__XExpression___Group__6
            {
            pushFollow(FOLLOW_53);
            rule__XExpression___Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5"


    // $ANTLR start "rule__XExpression___Group__5__Impl"
    // InternalSqlParser.g:10747:1: rule__XExpression___Group__5__Impl : ( ( rule__XExpression___ColAssignment_5 ) ) ;
    public final void rule__XExpression___Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10751:1: ( ( ( rule__XExpression___ColAssignment_5 ) ) )
            // InternalSqlParser.g:10752:1: ( ( rule__XExpression___ColAssignment_5 ) )
            {
            // InternalSqlParser.g:10752:1: ( ( rule__XExpression___ColAssignment_5 ) )
            // InternalSqlParser.g:10753:1: ( rule__XExpression___ColAssignment_5 )
            {
             before(grammarAccess.getXExpression_Access().getColAssignment_5()); 
            // InternalSqlParser.g:10754:1: ( rule__XExpression___ColAssignment_5 )
            // InternalSqlParser.g:10754:2: rule__XExpression___ColAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___ColAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getXExpression_Access().getColAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5__Impl"


    // $ANTLR start "rule__XExpression___Group__6"
    // InternalSqlParser.g:10764:1: rule__XExpression___Group__6 : rule__XExpression___Group__6__Impl rule__XExpression___Group__7 ;
    public final void rule__XExpression___Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10768:1: ( rule__XExpression___Group__6__Impl rule__XExpression___Group__7 )
            // InternalSqlParser.g:10769:2: rule__XExpression___Group__6__Impl rule__XExpression___Group__7
            {
            pushFollow(FOLLOW_53);
            rule__XExpression___Group__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6"


    // $ANTLR start "rule__XExpression___Group__6__Impl"
    // InternalSqlParser.g:10776:1: rule__XExpression___Group__6__Impl : ( ( rule__XExpression___Group_6__0 )? ) ;
    public final void rule__XExpression___Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10780:1: ( ( ( rule__XExpression___Group_6__0 )? ) )
            // InternalSqlParser.g:10781:1: ( ( rule__XExpression___Group_6__0 )? )
            {
            // InternalSqlParser.g:10781:1: ( ( rule__XExpression___Group_6__0 )? )
            // InternalSqlParser.g:10782:1: ( rule__XExpression___Group_6__0 )?
            {
             before(grammarAccess.getXExpression_Access().getGroup_6()); 
            // InternalSqlParser.g:10783:1: ( rule__XExpression___Group_6__0 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==VerticalLine) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalSqlParser.g:10783:2: rule__XExpression___Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression___Group_6__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getXExpression_Access().getGroup_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6__Impl"


    // $ANTLR start "rule__XExpression___Group__7"
    // InternalSqlParser.g:10793:1: rule__XExpression___Group__7 : rule__XExpression___Group__7__Impl ;
    public final void rule__XExpression___Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10797:1: ( rule__XExpression___Group__7__Impl )
            // InternalSqlParser.g:10798:2: rule__XExpression___Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__7__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__7"


    // $ANTLR start "rule__XExpression___Group__7__Impl"
    // InternalSqlParser.g:10804:1: rule__XExpression___Group__7__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression___Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10808:1: ( ( RightCurlyBracket ) )
            // InternalSqlParser.g:10809:1: ( RightCurlyBracket )
            {
            // InternalSqlParser.g:10809:1: ( RightCurlyBracket )
            // InternalSqlParser.g:10810:1: RightCurlyBracket
            {
             before(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_7()); 
            match(input,RightCurlyBracket,FOLLOW_2); 
             after(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__7__Impl"


    // $ANTLR start "rule__XExpression___Group_6__0"
    // InternalSqlParser.g:10839:1: rule__XExpression___Group_6__0 : rule__XExpression___Group_6__0__Impl rule__XExpression___Group_6__1 ;
    public final void rule__XExpression___Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10843:1: ( rule__XExpression___Group_6__0__Impl rule__XExpression___Group_6__1 )
            // InternalSqlParser.g:10844:2: rule__XExpression___Group_6__0__Impl rule__XExpression___Group_6__1
            {
            pushFollow(FOLLOW_35);
            rule__XExpression___Group_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_6__0"


    // $ANTLR start "rule__XExpression___Group_6__0__Impl"
    // InternalSqlParser.g:10851:1: rule__XExpression___Group_6__0__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10855:1: ( ( VerticalLine ) )
            // InternalSqlParser.g:10856:1: ( VerticalLine )
            {
            // InternalSqlParser.g:10856:1: ( VerticalLine )
            // InternalSqlParser.g:10857:1: VerticalLine
            {
             before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_6_0()); 
            match(input,VerticalLine,FOLLOW_2); 
             after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_6__0__Impl"


    // $ANTLR start "rule__XExpression___Group_6__1"
    // InternalSqlParser.g:10870:1: rule__XExpression___Group_6__1 : rule__XExpression___Group_6__1__Impl ;
    public final void rule__XExpression___Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10874:1: ( rule__XExpression___Group_6__1__Impl )
            // InternalSqlParser.g:10875:2: rule__XExpression___Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_6__1"


    // $ANTLR start "rule__XExpression___Group_6__1__Impl"
    // InternalSqlParser.g:10881:1: rule__XExpression___Group_6__1__Impl : ( ( rule__XExpression___PrmAssignment_6_1 ) ) ;
    public final void rule__XExpression___Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10885:1: ( ( ( rule__XExpression___PrmAssignment_6_1 ) ) )
            // InternalSqlParser.g:10886:1: ( ( rule__XExpression___PrmAssignment_6_1 ) )
            {
            // InternalSqlParser.g:10886:1: ( ( rule__XExpression___PrmAssignment_6_1 ) )
            // InternalSqlParser.g:10887:1: ( rule__XExpression___PrmAssignment_6_1 )
            {
             before(grammarAccess.getXExpression_Access().getPrmAssignment_6_1()); 
            // InternalSqlParser.g:10888:1: ( rule__XExpression___PrmAssignment_6_1 )
            // InternalSqlParser.g:10888:2: rule__XExpression___PrmAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___PrmAssignment_6_1();

            state._fsp--;


            }

             after(grammarAccess.getXExpression_Access().getPrmAssignment_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_6__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__0"
    // InternalSqlParser.g:10902:1: rule__XExpressionParams__Group__0 : rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 ;
    public final void rule__XExpressionParams__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10906:1: ( rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 )
            // InternalSqlParser.g:10907:2: rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__XExpressionParams__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0"


    // $ANTLR start "rule__XExpressionParams__Group__0__Impl"
    // InternalSqlParser.g:10914:1: rule__XExpressionParams__Group__0__Impl : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10918:1: ( ( ruleJRParameter ) )
            // InternalSqlParser.g:10919:1: ( ruleJRParameter )
            {
            // InternalSqlParser.g:10919:1: ( ruleJRParameter )
            // InternalSqlParser.g:10920:1: ruleJRParameter
            {
             before(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;

             after(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__1"
    // InternalSqlParser.g:10931:1: rule__XExpressionParams__Group__1 : rule__XExpressionParams__Group__1__Impl ;
    public final void rule__XExpressionParams__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10935:1: ( rule__XExpressionParams__Group__1__Impl )
            // InternalSqlParser.g:10936:2: rule__XExpressionParams__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1"


    // $ANTLR start "rule__XExpressionParams__Group__1__Impl"
    // InternalSqlParser.g:10942:1: rule__XExpressionParams__Group__1__Impl : ( ( rule__XExpressionParams__Group_1__0 )? ) ;
    public final void rule__XExpressionParams__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10946:1: ( ( ( rule__XExpressionParams__Group_1__0 )? ) )
            // InternalSqlParser.g:10947:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            {
            // InternalSqlParser.g:10947:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            // InternalSqlParser.g:10948:1: ( rule__XExpressionParams__Group_1__0 )?
            {
             before(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 
            // InternalSqlParser.g:10949:1: ( rule__XExpressionParams__Group_1__0 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==Comma) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSqlParser.g:10949:2: rule__XExpressionParams__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpressionParams__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__0"
    // InternalSqlParser.g:10963:1: rule__XExpressionParams__Group_1__0 : rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 ;
    public final void rule__XExpressionParams__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10967:1: ( rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 )
            // InternalSqlParser.g:10968:2: rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__XExpressionParams__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1__0__Impl"
    // InternalSqlParser.g:10975:1: rule__XExpressionParams__Group_1__0__Impl : ( () ) ;
    public final void rule__XExpressionParams__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10979:1: ( ( () ) )
            // InternalSqlParser.g:10980:1: ( () )
            {
            // InternalSqlParser.g:10980:1: ( () )
            // InternalSqlParser.g:10981:1: ()
            {
             before(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 
            // InternalSqlParser.g:10982:1: ()
            // InternalSqlParser.g:10984:1: 
            {
            }

             after(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__1"
    // InternalSqlParser.g:10994:1: rule__XExpressionParams__Group_1__1 : rule__XExpressionParams__Group_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10998:1: ( rule__XExpressionParams__Group_1__1__Impl )
            // InternalSqlParser.g:10999:2: rule__XExpressionParams__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1__1__Impl"
    // InternalSqlParser.g:11005:1: rule__XExpressionParams__Group_1__1__Impl : ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) ;
    public final void rule__XExpressionParams__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11009:1: ( ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:11010:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:11010:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            // InternalSqlParser.g:11011:1: ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:11011:1: ( ( rule__XExpressionParams__Group_1_1__0 ) )
            // InternalSqlParser.g:11012:1: ( rule__XExpressionParams__Group_1_1__0 )
            {
             before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:11013:1: ( rule__XExpressionParams__Group_1_1__0 )
            // InternalSqlParser.g:11013:2: rule__XExpressionParams__Group_1_1__0
            {
            pushFollow(FOLLOW_23);
            rule__XExpressionParams__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:11016:1: ( ( rule__XExpressionParams__Group_1_1__0 )* )
            // InternalSqlParser.g:11017:1: ( rule__XExpressionParams__Group_1_1__0 )*
            {
             before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:11018:1: ( rule__XExpressionParams__Group_1_1__0 )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==Comma) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalSqlParser.g:11018:2: rule__XExpressionParams__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__XExpressionParams__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

             after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0"
    // InternalSqlParser.g:11033:1: rule__XExpressionParams__Group_1_1__0 : rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 ;
    public final void rule__XExpressionParams__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11037:1: ( rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 )
            // InternalSqlParser.g:11038:2: rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1
            {
            pushFollow(FOLLOW_35);
            rule__XExpressionParams__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0__Impl"
    // InternalSqlParser.g:11045:1: rule__XExpressionParams__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__XExpressionParams__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11049:1: ( ( Comma ) )
            // InternalSqlParser.g:11050:1: ( Comma )
            {
            // InternalSqlParser.g:11050:1: ( Comma )
            // InternalSqlParser.g:11051:1: Comma
            {
             before(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1"
    // InternalSqlParser.g:11064:1: rule__XExpressionParams__Group_1_1__1 : rule__XExpressionParams__Group_1_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11068:1: ( rule__XExpressionParams__Group_1_1__1__Impl )
            // InternalSqlParser.g:11069:2: rule__XExpressionParams__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1__Impl"
    // InternalSqlParser.g:11075:1: rule__XExpressionParams__Group_1_1__1__Impl : ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__XExpressionParams__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11079:1: ( ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:11080:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:11080:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:11081:1: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:11082:1: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:11082:2: rule__XExpressionParams__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1__Impl"


    // $ANTLR start "rule__Expression__Group__0"
    // InternalSqlParser.g:11096:1: rule__Expression__Group__0 : rule__Expression__Group__0__Impl rule__Expression__Group__1 ;
    public final void rule__Expression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11100:1: ( rule__Expression__Group__0__Impl rule__Expression__Group__1 )
            // InternalSqlParser.g:11101:2: rule__Expression__Group__0__Impl rule__Expression__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__Expression__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Expression__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0"


    // $ANTLR start "rule__Expression__Group__0__Impl"
    // InternalSqlParser.g:11108:1: rule__Expression__Group__0__Impl : ( ( rule__Expression__Op1Assignment_0 ) ) ;
    public final void rule__Expression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11112:1: ( ( ( rule__Expression__Op1Assignment_0 ) ) )
            // InternalSqlParser.g:11113:1: ( ( rule__Expression__Op1Assignment_0 ) )
            {
            // InternalSqlParser.g:11113:1: ( ( rule__Expression__Op1Assignment_0 ) )
            // InternalSqlParser.g:11114:1: ( rule__Expression__Op1Assignment_0 )
            {
             before(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 
            // InternalSqlParser.g:11115:1: ( rule__Expression__Op1Assignment_0 )
            // InternalSqlParser.g:11115:2: rule__Expression__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Op1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0__Impl"


    // $ANTLR start "rule__Expression__Group__1"
    // InternalSqlParser.g:11125:1: rule__Expression__Group__1 : rule__Expression__Group__1__Impl ;
    public final void rule__Expression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11129:1: ( rule__Expression__Group__1__Impl )
            // InternalSqlParser.g:11130:2: rule__Expression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1"


    // $ANTLR start "rule__Expression__Group__1__Impl"
    // InternalSqlParser.g:11136:1: rule__Expression__Group__1__Impl : ( ( rule__Expression__Alternatives_1 ) ) ;
    public final void rule__Expression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11140:1: ( ( ( rule__Expression__Alternatives_1 ) ) )
            // InternalSqlParser.g:11141:1: ( ( rule__Expression__Alternatives_1 ) )
            {
            // InternalSqlParser.g:11141:1: ( ( rule__Expression__Alternatives_1 ) )
            // InternalSqlParser.g:11142:1: ( rule__Expression__Alternatives_1 )
            {
             before(grammarAccess.getExpressionAccess().getAlternatives_1()); 
            // InternalSqlParser.g:11143:1: ( rule__Expression__Alternatives_1 )
            // InternalSqlParser.g:11143:2: rule__Expression__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getExpressionAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalSqlParser.g:11157:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11161:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalSqlParser.g:11162:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__Comparison__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalSqlParser.g:11169:1: rule__Comparison__Group__0__Impl : ( ( rule__Comparison__OperatorAssignment_0 ) ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11173:1: ( ( ( rule__Comparison__OperatorAssignment_0 ) ) )
            // InternalSqlParser.g:11174:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            {
            // InternalSqlParser.g:11174:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            // InternalSqlParser.g:11175:1: ( rule__Comparison__OperatorAssignment_0 )
            {
             before(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 
            // InternalSqlParser.g:11176:1: ( rule__Comparison__OperatorAssignment_0 )
            // InternalSqlParser.g:11176:2: rule__Comparison__OperatorAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalSqlParser.g:11186:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl rule__Comparison__Group__2 ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11190:1: ( rule__Comparison__Group__1__Impl rule__Comparison__Group__2 )
            // InternalSqlParser.g:11191:2: rule__Comparison__Group__1__Impl rule__Comparison__Group__2
            {
            pushFollow(FOLLOW_55);
            rule__Comparison__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalSqlParser.g:11198:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__SubOperatorAssignment_1 )? ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11202:1: ( ( ( rule__Comparison__SubOperatorAssignment_1 )? ) )
            // InternalSqlParser.g:11203:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            {
            // InternalSqlParser.g:11203:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            // InternalSqlParser.g:11204:1: ( rule__Comparison__SubOperatorAssignment_1 )?
            {
             before(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 
            // InternalSqlParser.g:11205:1: ( rule__Comparison__SubOperatorAssignment_1 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==SOME||LA110_0==ALL||LA110_0==ANY) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalSqlParser.g:11205:2: rule__Comparison__SubOperatorAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Comparison__SubOperatorAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group__2"
    // InternalSqlParser.g:11215:1: rule__Comparison__Group__2 : rule__Comparison__Group__2__Impl ;
    public final void rule__Comparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11219:1: ( rule__Comparison__Group__2__Impl )
            // InternalSqlParser.g:11220:2: rule__Comparison__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2"


    // $ANTLR start "rule__Comparison__Group__2__Impl"
    // InternalSqlParser.g:11226:1: rule__Comparison__Group__2__Impl : ( ( rule__Comparison__Op2Assignment_2 ) ) ;
    public final void rule__Comparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11230:1: ( ( ( rule__Comparison__Op2Assignment_2 ) ) )
            // InternalSqlParser.g:11231:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            {
            // InternalSqlParser.g:11231:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            // InternalSqlParser.g:11232:1: ( rule__Comparison__Op2Assignment_2 )
            {
             before(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 
            // InternalSqlParser.g:11233:1: ( rule__Comparison__Op2Assignment_2 )
            // InternalSqlParser.g:11233:2: rule__Comparison__Op2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Op2Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2__Impl"


    // $ANTLR start "rule__Like__Group__0"
    // InternalSqlParser.g:11249:1: rule__Like__Group__0 : rule__Like__Group__0__Impl rule__Like__Group__1 ;
    public final void rule__Like__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11253:1: ( rule__Like__Group__0__Impl rule__Like__Group__1 )
            // InternalSqlParser.g:11254:2: rule__Like__Group__0__Impl rule__Like__Group__1
            {
            pushFollow(FOLLOW_56);
            rule__Like__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Like__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0"


    // $ANTLR start "rule__Like__Group__0__Impl"
    // InternalSqlParser.g:11261:1: rule__Like__Group__0__Impl : ( ( rule__Like__OpLikeAssignment_0 ) ) ;
    public final void rule__Like__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11265:1: ( ( ( rule__Like__OpLikeAssignment_0 ) ) )
            // InternalSqlParser.g:11266:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            {
            // InternalSqlParser.g:11266:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            // InternalSqlParser.g:11267:1: ( rule__Like__OpLikeAssignment_0 )
            {
             before(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 
            // InternalSqlParser.g:11268:1: ( rule__Like__OpLikeAssignment_0 )
            // InternalSqlParser.g:11268:2: rule__Like__OpLikeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Like__OpLikeAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0__Impl"


    // $ANTLR start "rule__Like__Group__1"
    // InternalSqlParser.g:11278:1: rule__Like__Group__1 : rule__Like__Group__1__Impl ;
    public final void rule__Like__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11282:1: ( rule__Like__Group__1__Impl )
            // InternalSqlParser.g:11283:2: rule__Like__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1"


    // $ANTLR start "rule__Like__Group__1__Impl"
    // InternalSqlParser.g:11289:1: rule__Like__Group__1__Impl : ( ( rule__Like__Op2Assignment_1 ) ) ;
    public final void rule__Like__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11293:1: ( ( ( rule__Like__Op2Assignment_1 ) ) )
            // InternalSqlParser.g:11294:1: ( ( rule__Like__Op2Assignment_1 ) )
            {
            // InternalSqlParser.g:11294:1: ( ( rule__Like__Op2Assignment_1 ) )
            // InternalSqlParser.g:11295:1: ( rule__Like__Op2Assignment_1 )
            {
             before(grammarAccess.getLikeAccess().getOp2Assignment_1()); 
            // InternalSqlParser.g:11296:1: ( rule__Like__Op2Assignment_1 )
            // InternalSqlParser.g:11296:2: rule__Like__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Like__Op2Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLikeAccess().getOp2Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__0"
    // InternalSqlParser.g:11310:1: rule__Between__Group__0 : rule__Between__Group__0__Impl rule__Between__Group__1 ;
    public final void rule__Between__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11314:1: ( rule__Between__Group__0__Impl rule__Between__Group__1 )
            // InternalSqlParser.g:11315:2: rule__Between__Group__0__Impl rule__Between__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__Between__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Between__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0"


    // $ANTLR start "rule__Between__Group__0__Impl"
    // InternalSqlParser.g:11322:1: rule__Between__Group__0__Impl : ( ( rule__Between__OpBetweenAssignment_0 ) ) ;
    public final void rule__Between__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11326:1: ( ( ( rule__Between__OpBetweenAssignment_0 ) ) )
            // InternalSqlParser.g:11327:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            {
            // InternalSqlParser.g:11327:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            // InternalSqlParser.g:11328:1: ( rule__Between__OpBetweenAssignment_0 )
            {
             before(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 
            // InternalSqlParser.g:11329:1: ( rule__Between__OpBetweenAssignment_0 )
            // InternalSqlParser.g:11329:2: rule__Between__OpBetweenAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Between__OpBetweenAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0__Impl"


    // $ANTLR start "rule__Between__Group__1"
    // InternalSqlParser.g:11339:1: rule__Between__Group__1 : rule__Between__Group__1__Impl rule__Between__Group__2 ;
    public final void rule__Between__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11343:1: ( rule__Between__Group__1__Impl rule__Between__Group__2 )
            // InternalSqlParser.g:11344:2: rule__Between__Group__1__Impl rule__Between__Group__2
            {
            pushFollow(FOLLOW_57);
            rule__Between__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Between__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1"


    // $ANTLR start "rule__Between__Group__1__Impl"
    // InternalSqlParser.g:11351:1: rule__Between__Group__1__Impl : ( ( rule__Between__Op2Assignment_1 ) ) ;
    public final void rule__Between__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11355:1: ( ( ( rule__Between__Op2Assignment_1 ) ) )
            // InternalSqlParser.g:11356:1: ( ( rule__Between__Op2Assignment_1 ) )
            {
            // InternalSqlParser.g:11356:1: ( ( rule__Between__Op2Assignment_1 ) )
            // InternalSqlParser.g:11357:1: ( rule__Between__Op2Assignment_1 )
            {
             before(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 
            // InternalSqlParser.g:11358:1: ( rule__Between__Op2Assignment_1 )
            // InternalSqlParser.g:11358:2: rule__Between__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op2Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__2"
    // InternalSqlParser.g:11368:1: rule__Between__Group__2 : rule__Between__Group__2__Impl rule__Between__Group__3 ;
    public final void rule__Between__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11372:1: ( rule__Between__Group__2__Impl rule__Between__Group__3 )
            // InternalSqlParser.g:11373:2: rule__Between__Group__2__Impl rule__Between__Group__3
            {
            pushFollow(FOLLOW_50);
            rule__Between__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Between__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2"


    // $ANTLR start "rule__Between__Group__2__Impl"
    // InternalSqlParser.g:11380:1: rule__Between__Group__2__Impl : ( AND ) ;
    public final void rule__Between__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11384:1: ( ( AND ) )
            // InternalSqlParser.g:11385:1: ( AND )
            {
            // InternalSqlParser.g:11385:1: ( AND )
            // InternalSqlParser.g:11386:1: AND
            {
             before(grammarAccess.getBetweenAccess().getANDKeyword_2()); 
            match(input,AND,FOLLOW_2); 
             after(grammarAccess.getBetweenAccess().getANDKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2__Impl"


    // $ANTLR start "rule__Between__Group__3"
    // InternalSqlParser.g:11399:1: rule__Between__Group__3 : rule__Between__Group__3__Impl ;
    public final void rule__Between__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11403:1: ( rule__Between__Group__3__Impl )
            // InternalSqlParser.g:11404:2: rule__Between__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3"


    // $ANTLR start "rule__Between__Group__3__Impl"
    // InternalSqlParser.g:11410:1: rule__Between__Group__3__Impl : ( ( rule__Between__Op3Assignment_3 ) ) ;
    public final void rule__Between__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11414:1: ( ( ( rule__Between__Op3Assignment_3 ) ) )
            // InternalSqlParser.g:11415:1: ( ( rule__Between__Op3Assignment_3 ) )
            {
            // InternalSqlParser.g:11415:1: ( ( rule__Between__Op3Assignment_3 ) )
            // InternalSqlParser.g:11416:1: ( rule__Between__Op3Assignment_3 )
            {
             before(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 
            // InternalSqlParser.g:11417:1: ( rule__Between__Op3Assignment_3 )
            // InternalSqlParser.g:11417:2: rule__Between__Op3Assignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op3Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3__Impl"


    // $ANTLR start "rule__InOperator__Group__0"
    // InternalSqlParser.g:11435:1: rule__InOperator__Group__0 : rule__InOperator__Group__0__Impl rule__InOperator__Group__1 ;
    public final void rule__InOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11439:1: ( rule__InOperator__Group__0__Impl rule__InOperator__Group__1 )
            // InternalSqlParser.g:11440:2: rule__InOperator__Group__0__Impl rule__InOperator__Group__1
            {
            pushFollow(FOLLOW_58);
            rule__InOperator__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__InOperator__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0"


    // $ANTLR start "rule__InOperator__Group__0__Impl"
    // InternalSqlParser.g:11447:1: rule__InOperator__Group__0__Impl : ( () ) ;
    public final void rule__InOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11451:1: ( ( () ) )
            // InternalSqlParser.g:11452:1: ( () )
            {
            // InternalSqlParser.g:11452:1: ( () )
            // InternalSqlParser.g:11453:1: ()
            {
             before(grammarAccess.getInOperatorAccess().getInOperAction_0()); 
            // InternalSqlParser.g:11454:1: ()
            // InternalSqlParser.g:11456:1: 
            {
            }

             after(grammarAccess.getInOperatorAccess().getInOperAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0__Impl"


    // $ANTLR start "rule__InOperator__Group__1"
    // InternalSqlParser.g:11466:1: rule__InOperator__Group__1 : rule__InOperator__Group__1__Impl rule__InOperator__Group__2 ;
    public final void rule__InOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11470:1: ( rule__InOperator__Group__1__Impl rule__InOperator__Group__2 )
            // InternalSqlParser.g:11471:2: rule__InOperator__Group__1__Impl rule__InOperator__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__InOperator__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1"


    // $ANTLR start "rule__InOperator__Group__1__Impl"
    // InternalSqlParser.g:11478:1: rule__InOperator__Group__1__Impl : ( ( rule__InOperator__OpAssignment_1 ) ) ;
    public final void rule__InOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11482:1: ( ( ( rule__InOperator__OpAssignment_1 ) ) )
            // InternalSqlParser.g:11483:1: ( ( rule__InOperator__OpAssignment_1 ) )
            {
            // InternalSqlParser.g:11483:1: ( ( rule__InOperator__OpAssignment_1 ) )
            // InternalSqlParser.g:11484:1: ( rule__InOperator__OpAssignment_1 )
            {
             before(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 
            // InternalSqlParser.g:11485:1: ( rule__InOperator__OpAssignment_1 )
            // InternalSqlParser.g:11485:2: rule__InOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__OpAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1__Impl"


    // $ANTLR start "rule__InOperator__Group__2"
    // InternalSqlParser.g:11495:1: rule__InOperator__Group__2 : rule__InOperator__Group__2__Impl ;
    public final void rule__InOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11499:1: ( rule__InOperator__Group__2__Impl )
            // InternalSqlParser.g:11500:2: rule__InOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2"


    // $ANTLR start "rule__InOperator__Group__2__Impl"
    // InternalSqlParser.g:11506:1: rule__InOperator__Group__2__Impl : ( ( rule__InOperator__Alternatives_2 ) ) ;
    public final void rule__InOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11510:1: ( ( ( rule__InOperator__Alternatives_2 ) ) )
            // InternalSqlParser.g:11511:1: ( ( rule__InOperator__Alternatives_2 ) )
            {
            // InternalSqlParser.g:11511:1: ( ( rule__InOperator__Alternatives_2 ) )
            // InternalSqlParser.g:11512:1: ( rule__InOperator__Alternatives_2 )
            {
             before(grammarAccess.getInOperatorAccess().getAlternatives_2()); 
            // InternalSqlParser.g:11513:1: ( rule__InOperator__Alternatives_2 )
            // InternalSqlParser.g:11513:2: rule__InOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Alternatives_2();

            state._fsp--;


            }

             after(grammarAccess.getInOperatorAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__0"
    // InternalSqlParser.g:11529:1: rule__ExistsOperator__Group__0 : rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 ;
    public final void rule__ExistsOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11533:1: ( rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 )
            // InternalSqlParser.g:11534:2: rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__ExistsOperator__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0"


    // $ANTLR start "rule__ExistsOperator__Group__0__Impl"
    // InternalSqlParser.g:11541:1: rule__ExistsOperator__Group__0__Impl : ( () ) ;
    public final void rule__ExistsOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11545:1: ( ( () ) )
            // InternalSqlParser.g:11546:1: ( () )
            {
            // InternalSqlParser.g:11546:1: ( () )
            // InternalSqlParser.g:11547:1: ()
            {
             before(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 
            // InternalSqlParser.g:11548:1: ()
            // InternalSqlParser.g:11550:1: 
            {
            }

             after(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__1"
    // InternalSqlParser.g:11560:1: rule__ExistsOperator__Group__1 : rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 ;
    public final void rule__ExistsOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11564:1: ( rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 )
            // InternalSqlParser.g:11565:2: rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__ExistsOperator__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1"


    // $ANTLR start "rule__ExistsOperator__Group__1__Impl"
    // InternalSqlParser.g:11572:1: rule__ExistsOperator__Group__1__Impl : ( ( rule__ExistsOperator__OpAssignment_1 ) ) ;
    public final void rule__ExistsOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11576:1: ( ( ( rule__ExistsOperator__OpAssignment_1 ) ) )
            // InternalSqlParser.g:11577:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            {
            // InternalSqlParser.g:11577:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            // InternalSqlParser.g:11578:1: ( rule__ExistsOperator__OpAssignment_1 )
            {
             before(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 
            // InternalSqlParser.g:11579:1: ( rule__ExistsOperator__OpAssignment_1 )
            // InternalSqlParser.g:11579:2: rule__ExistsOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__OpAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__2"
    // InternalSqlParser.g:11589:1: rule__ExistsOperator__Group__2 : rule__ExistsOperator__Group__2__Impl ;
    public final void rule__ExistsOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11593:1: ( rule__ExistsOperator__Group__2__Impl )
            // InternalSqlParser.g:11594:2: rule__ExistsOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2"


    // $ANTLR start "rule__ExistsOperator__Group__2__Impl"
    // InternalSqlParser.g:11600:1: rule__ExistsOperator__Group__2__Impl : ( ( rule__ExistsOperator__Alternatives_2 ) ) ;
    public final void rule__ExistsOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11604:1: ( ( ( rule__ExistsOperator__Alternatives_2 ) ) )
            // InternalSqlParser.g:11605:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            {
            // InternalSqlParser.g:11605:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            // InternalSqlParser.g:11606:1: ( rule__ExistsOperator__Alternatives_2 )
            {
             before(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 
            // InternalSqlParser.g:11607:1: ( rule__ExistsOperator__Alternatives_2 )
            // InternalSqlParser.g:11607:2: rule__ExistsOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Alternatives_2();

            state._fsp--;


            }

             after(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__0"
    // InternalSqlParser.g:11623:1: rule__OperandListGroup__Group__0 : rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 ;
    public final void rule__OperandListGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11627:1: ( rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 )
            // InternalSqlParser.g:11628:2: rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1
            {
            pushFollow(FOLLOW_59);
            rule__OperandListGroup__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0"


    // $ANTLR start "rule__OperandListGroup__Group__0__Impl"
    // InternalSqlParser.g:11635:1: rule__OperandListGroup__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandListGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11639:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:11640:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:11640:1: ( LeftParenthesis )
            // InternalSqlParser.g:11641:1: LeftParenthesis
            {
             before(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__1"
    // InternalSqlParser.g:11654:1: rule__OperandListGroup__Group__1 : rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 ;
    public final void rule__OperandListGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11658:1: ( rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 )
            // InternalSqlParser.g:11659:2: rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2
            {
            pushFollow(FOLLOW_32);
            rule__OperandListGroup__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1"


    // $ANTLR start "rule__OperandListGroup__Group__1__Impl"
    // InternalSqlParser.g:11666:1: rule__OperandListGroup__Group__1__Impl : ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) ;
    public final void rule__OperandListGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11670:1: ( ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) )
            // InternalSqlParser.g:11671:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            {
            // InternalSqlParser.g:11671:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            // InternalSqlParser.g:11672:1: ( rule__OperandListGroup__OpGroupAssignment_1 )
            {
             before(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 
            // InternalSqlParser.g:11673:1: ( rule__OperandListGroup__OpGroupAssignment_1 )
            // InternalSqlParser.g:11673:2: rule__OperandListGroup__OpGroupAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__OpGroupAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__2"
    // InternalSqlParser.g:11683:1: rule__OperandListGroup__Group__2 : rule__OperandListGroup__Group__2__Impl ;
    public final void rule__OperandListGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11687:1: ( rule__OperandListGroup__Group__2__Impl )
            // InternalSqlParser.g:11688:2: rule__OperandListGroup__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2"


    // $ANTLR start "rule__OperandListGroup__Group__2__Impl"
    // InternalSqlParser.g:11694:1: rule__OperandListGroup__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandListGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11698:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:11699:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:11699:1: ( RightParenthesis )
            // InternalSqlParser.g:11700:1: RightParenthesis
            {
             before(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2__Impl"


    // $ANTLR start "rule__OperandList__Group__0"
    // InternalSqlParser.g:11719:1: rule__OperandList__Group__0 : rule__OperandList__Group__0__Impl rule__OperandList__Group__1 ;
    public final void rule__OperandList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11723:1: ( rule__OperandList__Group__0__Impl rule__OperandList__Group__1 )
            // InternalSqlParser.g:11724:2: rule__OperandList__Group__0__Impl rule__OperandList__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__OperandList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0"


    // $ANTLR start "rule__OperandList__Group__0__Impl"
    // InternalSqlParser.g:11731:1: rule__OperandList__Group__0__Impl : ( ruleScalarOperand ) ;
    public final void rule__OperandList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11735:1: ( ( ruleScalarOperand ) )
            // InternalSqlParser.g:11736:1: ( ruleScalarOperand )
            {
            // InternalSqlParser.g:11736:1: ( ruleScalarOperand )
            // InternalSqlParser.g:11737:1: ruleScalarOperand
            {
             before(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;

             after(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0__Impl"


    // $ANTLR start "rule__OperandList__Group__1"
    // InternalSqlParser.g:11748:1: rule__OperandList__Group__1 : rule__OperandList__Group__1__Impl ;
    public final void rule__OperandList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11752:1: ( rule__OperandList__Group__1__Impl )
            // InternalSqlParser.g:11753:2: rule__OperandList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1"


    // $ANTLR start "rule__OperandList__Group__1__Impl"
    // InternalSqlParser.g:11759:1: rule__OperandList__Group__1__Impl : ( ( rule__OperandList__Group_1__0 )? ) ;
    public final void rule__OperandList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11763:1: ( ( ( rule__OperandList__Group_1__0 )? ) )
            // InternalSqlParser.g:11764:1: ( ( rule__OperandList__Group_1__0 )? )
            {
            // InternalSqlParser.g:11764:1: ( ( rule__OperandList__Group_1__0 )? )
            // InternalSqlParser.g:11765:1: ( rule__OperandList__Group_1__0 )?
            {
             before(grammarAccess.getOperandListAccess().getGroup_1()); 
            // InternalSqlParser.g:11766:1: ( rule__OperandList__Group_1__0 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==Comma) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalSqlParser.g:11766:2: rule__OperandList__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandList__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOperandListAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1__0"
    // InternalSqlParser.g:11780:1: rule__OperandList__Group_1__0 : rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 ;
    public final void rule__OperandList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11784:1: ( rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 )
            // InternalSqlParser.g:11785:2: rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__OperandList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0"


    // $ANTLR start "rule__OperandList__Group_1__0__Impl"
    // InternalSqlParser.g:11792:1: rule__OperandList__Group_1__0__Impl : ( () ) ;
    public final void rule__OperandList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11796:1: ( ( () ) )
            // InternalSqlParser.g:11797:1: ( () )
            {
            // InternalSqlParser.g:11797:1: ( () )
            // InternalSqlParser.g:11798:1: ()
            {
             before(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 
            // InternalSqlParser.g:11799:1: ()
            // InternalSqlParser.g:11801:1: 
            {
            }

             after(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1__1"
    // InternalSqlParser.g:11811:1: rule__OperandList__Group_1__1 : rule__OperandList__Group_1__1__Impl ;
    public final void rule__OperandList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11815:1: ( rule__OperandList__Group_1__1__Impl )
            // InternalSqlParser.g:11816:2: rule__OperandList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1"


    // $ANTLR start "rule__OperandList__Group_1__1__Impl"
    // InternalSqlParser.g:11822:1: rule__OperandList__Group_1__1__Impl : ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) ;
    public final void rule__OperandList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11826:1: ( ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:11827:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:11827:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            // InternalSqlParser.g:11828:1: ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:11828:1: ( ( rule__OperandList__Group_1_1__0 ) )
            // InternalSqlParser.g:11829:1: ( rule__OperandList__Group_1_1__0 )
            {
             before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            // InternalSqlParser.g:11830:1: ( rule__OperandList__Group_1_1__0 )
            // InternalSqlParser.g:11830:2: rule__OperandList__Group_1_1__0
            {
            pushFollow(FOLLOW_23);
            rule__OperandList__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getOperandListAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:11833:1: ( ( rule__OperandList__Group_1_1__0 )* )
            // InternalSqlParser.g:11834:1: ( rule__OperandList__Group_1_1__0 )*
            {
             before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            // InternalSqlParser.g:11835:1: ( rule__OperandList__Group_1_1__0 )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==Comma) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalSqlParser.g:11835:2: rule__OperandList__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__OperandList__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

             after(grammarAccess.getOperandListAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__0"
    // InternalSqlParser.g:11850:1: rule__OperandList__Group_1_1__0 : rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 ;
    public final void rule__OperandList__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11854:1: ( rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 )
            // InternalSqlParser.g:11855:2: rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1
            {
            pushFollow(FOLLOW_59);
            rule__OperandList__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0"


    // $ANTLR start "rule__OperandList__Group_1_1__0__Impl"
    // InternalSqlParser.g:11862:1: rule__OperandList__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OperandList__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11866:1: ( ( Comma ) )
            // InternalSqlParser.g:11867:1: ( Comma )
            {
            // InternalSqlParser.g:11867:1: ( Comma )
            // InternalSqlParser.g:11868:1: Comma
            {
             before(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__1"
    // InternalSqlParser.g:11881:1: rule__OperandList__Group_1_1__1 : rule__OperandList__Group_1_1__1__Impl ;
    public final void rule__OperandList__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11885:1: ( rule__OperandList__Group_1_1__1__Impl )
            // InternalSqlParser.g:11886:2: rule__OperandList__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1"


    // $ANTLR start "rule__OperandList__Group_1_1__1__Impl"
    // InternalSqlParser.g:11892:1: rule__OperandList__Group_1_1__1__Impl : ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OperandList__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11896:1: ( ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:11897:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:11897:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:11898:1: ( rule__OperandList__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:11899:1: ( rule__OperandList__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:11899:2: rule__OperandList__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__0"
    // InternalSqlParser.g:11913:1: rule__OperandGroup__Group_1__0 : rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 ;
    public final void rule__OperandGroup__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11917:1: ( rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 )
            // InternalSqlParser.g:11918:2: rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1
            {
            pushFollow(FOLLOW_50);
            rule__OperandGroup__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0"


    // $ANTLR start "rule__OperandGroup__Group_1__0__Impl"
    // InternalSqlParser.g:11925:1: rule__OperandGroup__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandGroup__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11929:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:11930:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:11930:1: ( LeftParenthesis )
            // InternalSqlParser.g:11931:1: LeftParenthesis
            {
             before(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__1"
    // InternalSqlParser.g:11944:1: rule__OperandGroup__Group_1__1 : rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 ;
    public final void rule__OperandGroup__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11948:1: ( rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 )
            // InternalSqlParser.g:11949:2: rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__OperandGroup__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1"


    // $ANTLR start "rule__OperandGroup__Group_1__1__Impl"
    // InternalSqlParser.g:11956:1: rule__OperandGroup__Group_1__1__Impl : ( ruleOperand ) ;
    public final void rule__OperandGroup__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11960:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:11961:1: ( ruleOperand )
            {
            // InternalSqlParser.g:11961:1: ( ruleOperand )
            // InternalSqlParser.g:11962:1: ruleOperand
            {
             before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;

             after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__2"
    // InternalSqlParser.g:11973:1: rule__OperandGroup__Group_1__2 : rule__OperandGroup__Group_1__2__Impl ;
    public final void rule__OperandGroup__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11977:1: ( rule__OperandGroup__Group_1__2__Impl )
            // InternalSqlParser.g:11978:2: rule__OperandGroup__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2"


    // $ANTLR start "rule__OperandGroup__Group_1__2__Impl"
    // InternalSqlParser.g:11984:1: rule__OperandGroup__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandGroup__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11988:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:11989:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:11989:1: ( RightParenthesis )
            // InternalSqlParser.g:11990:1: RightParenthesis
            {
             before(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2__Impl"


    // $ANTLR start "rule__Operand__Group__0"
    // InternalSqlParser.g:12009:1: rule__Operand__Group__0 : rule__Operand__Group__0__Impl rule__Operand__Group__1 ;
    public final void rule__Operand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12013:1: ( rule__Operand__Group__0__Impl rule__Operand__Group__1 )
            // InternalSqlParser.g:12014:2: rule__Operand__Group__0__Impl rule__Operand__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__Operand__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0"


    // $ANTLR start "rule__Operand__Group__0__Impl"
    // InternalSqlParser.g:12021:1: rule__Operand__Group__0__Impl : ( ( rule__Operand__Op1Assignment_0 ) ) ;
    public final void rule__Operand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12025:1: ( ( ( rule__Operand__Op1Assignment_0 ) ) )
            // InternalSqlParser.g:12026:1: ( ( rule__Operand__Op1Assignment_0 ) )
            {
            // InternalSqlParser.g:12026:1: ( ( rule__Operand__Op1Assignment_0 ) )
            // InternalSqlParser.g:12027:1: ( rule__Operand__Op1Assignment_0 )
            {
             before(grammarAccess.getOperandAccess().getOp1Assignment_0()); 
            // InternalSqlParser.g:12028:1: ( rule__Operand__Op1Assignment_0 )
            // InternalSqlParser.g:12028:2: rule__Operand__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Op1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getOperandAccess().getOp1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0__Impl"


    // $ANTLR start "rule__Operand__Group__1"
    // InternalSqlParser.g:12038:1: rule__Operand__Group__1 : rule__Operand__Group__1__Impl ;
    public final void rule__Operand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12042:1: ( rule__Operand__Group__1__Impl )
            // InternalSqlParser.g:12043:2: rule__Operand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1"


    // $ANTLR start "rule__Operand__Group__1__Impl"
    // InternalSqlParser.g:12049:1: rule__Operand__Group__1__Impl : ( ( rule__Operand__Group_1__0 )* ) ;
    public final void rule__Operand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12053:1: ( ( ( rule__Operand__Group_1__0 )* ) )
            // InternalSqlParser.g:12054:1: ( ( rule__Operand__Group_1__0 )* )
            {
            // InternalSqlParser.g:12054:1: ( ( rule__Operand__Group_1__0 )* )
            // InternalSqlParser.g:12055:1: ( rule__Operand__Group_1__0 )*
            {
             before(grammarAccess.getOperandAccess().getGroup_1()); 
            // InternalSqlParser.g:12056:1: ( rule__Operand__Group_1__0 )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( (LA113_0==VerticalLineVerticalLine||LA113_0==PlusSign||LA113_0==HyphenMinus||LA113_0==Solidus||LA113_0==RULE_STAR) ) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // InternalSqlParser.g:12056:2: rule__Operand__Group_1__0
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__Operand__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);

             after(grammarAccess.getOperandAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1__Impl"


    // $ANTLR start "rule__Operand__Group_1__0"
    // InternalSqlParser.g:12070:1: rule__Operand__Group_1__0 : rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 ;
    public final void rule__Operand__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12074:1: ( rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 )
            // InternalSqlParser.g:12075:2: rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1
            {
            pushFollow(FOLLOW_50);
            rule__Operand__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0"


    // $ANTLR start "rule__Operand__Group_1__0__Impl"
    // InternalSqlParser.g:12082:1: rule__Operand__Group_1__0__Impl : ( ( rule__Operand__Alternatives_1_0 ) ) ;
    public final void rule__Operand__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12086:1: ( ( ( rule__Operand__Alternatives_1_0 ) ) )
            // InternalSqlParser.g:12087:1: ( ( rule__Operand__Alternatives_1_0 ) )
            {
            // InternalSqlParser.g:12087:1: ( ( rule__Operand__Alternatives_1_0 ) )
            // InternalSqlParser.g:12088:1: ( rule__Operand__Alternatives_1_0 )
            {
             before(grammarAccess.getOperandAccess().getAlternatives_1_0()); 
            // InternalSqlParser.g:12089:1: ( rule__Operand__Alternatives_1_0 )
            // InternalSqlParser.g:12089:2: rule__Operand__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Alternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getOperandAccess().getAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1__1"
    // InternalSqlParser.g:12099:1: rule__Operand__Group_1__1 : rule__Operand__Group_1__1__Impl ;
    public final void rule__Operand__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12103:1: ( rule__Operand__Group_1__1__Impl )
            // InternalSqlParser.g:12104:2: rule__Operand__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1"


    // $ANTLR start "rule__Operand__Group_1__1__Impl"
    // InternalSqlParser.g:12110:1: rule__Operand__Group_1__1__Impl : ( ( rule__Operand__RightAssignment_1_1 ) ) ;
    public final void rule__Operand__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12114:1: ( ( ( rule__Operand__RightAssignment_1_1 ) ) )
            // InternalSqlParser.g:12115:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            {
            // InternalSqlParser.g:12115:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            // InternalSqlParser.g:12116:1: ( rule__Operand__RightAssignment_1_1 )
            {
             before(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 
            // InternalSqlParser.g:12117:1: ( rule__Operand__RightAssignment_1_1 )
            // InternalSqlParser.g:12117:2: rule__Operand__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Operand__RightAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__0"
    // InternalSqlParser.g:12131:1: rule__Operand__Group_1_0_0__0 : rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 ;
    public final void rule__Operand__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12135:1: ( rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 )
            // InternalSqlParser.g:12136:2: rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1
            {
            pushFollow(FOLLOW_62);
            rule__Operand__Group_1_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0"


    // $ANTLR start "rule__Operand__Group_1_0_0__0__Impl"
    // InternalSqlParser.g:12143:1: rule__Operand__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12147:1: ( ( () ) )
            // InternalSqlParser.g:12148:1: ( () )
            {
            // InternalSqlParser.g:12148:1: ( () )
            // InternalSqlParser.g:12149:1: ()
            {
             before(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 
            // InternalSqlParser.g:12150:1: ()
            // InternalSqlParser.g:12152:1: 
            {
            }

             after(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__1"
    // InternalSqlParser.g:12162:1: rule__Operand__Group_1_0_0__1 : rule__Operand__Group_1_0_0__1__Impl ;
    public final void rule__Operand__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12166:1: ( rule__Operand__Group_1_0_0__1__Impl )
            // InternalSqlParser.g:12167:2: rule__Operand__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1"


    // $ANTLR start "rule__Operand__Group_1_0_0__1__Impl"
    // InternalSqlParser.g:12173:1: rule__Operand__Group_1_0_0__1__Impl : ( PlusSign ) ;
    public final void rule__Operand__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12177:1: ( ( PlusSign ) )
            // InternalSqlParser.g:12178:1: ( PlusSign )
            {
            // InternalSqlParser.g:12178:1: ( PlusSign )
            // InternalSqlParser.g:12179:1: PlusSign
            {
             before(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 
            match(input,PlusSign,FOLLOW_2); 
             after(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__0"
    // InternalSqlParser.g:12196:1: rule__Operand__Group_1_0_1__0 : rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 ;
    public final void rule__Operand__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12200:1: ( rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 )
            // InternalSqlParser.g:12201:2: rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1
            {
            pushFollow(FOLLOW_63);
            rule__Operand__Group_1_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0"


    // $ANTLR start "rule__Operand__Group_1_0_1__0__Impl"
    // InternalSqlParser.g:12208:1: rule__Operand__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12212:1: ( ( () ) )
            // InternalSqlParser.g:12213:1: ( () )
            {
            // InternalSqlParser.g:12213:1: ( () )
            // InternalSqlParser.g:12214:1: ()
            {
             before(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 
            // InternalSqlParser.g:12215:1: ()
            // InternalSqlParser.g:12217:1: 
            {
            }

             after(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__1"
    // InternalSqlParser.g:12227:1: rule__Operand__Group_1_0_1__1 : rule__Operand__Group_1_0_1__1__Impl ;
    public final void rule__Operand__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12231:1: ( rule__Operand__Group_1_0_1__1__Impl )
            // InternalSqlParser.g:12232:2: rule__Operand__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1"


    // $ANTLR start "rule__Operand__Group_1_0_1__1__Impl"
    // InternalSqlParser.g:12238:1: rule__Operand__Group_1_0_1__1__Impl : ( HyphenMinus ) ;
    public final void rule__Operand__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12242:1: ( ( HyphenMinus ) )
            // InternalSqlParser.g:12243:1: ( HyphenMinus )
            {
            // InternalSqlParser.g:12243:1: ( HyphenMinus )
            // InternalSqlParser.g:12244:1: HyphenMinus
            {
             before(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 
            match(input,HyphenMinus,FOLLOW_2); 
             after(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__0"
    // InternalSqlParser.g:12261:1: rule__Operand__Group_1_0_2__0 : rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 ;
    public final void rule__Operand__Group_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12265:1: ( rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 )
            // InternalSqlParser.g:12266:2: rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1
            {
            pushFollow(FOLLOW_64);
            rule__Operand__Group_1_0_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0"


    // $ANTLR start "rule__Operand__Group_1_0_2__0__Impl"
    // InternalSqlParser.g:12273:1: rule__Operand__Group_1_0_2__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12277:1: ( ( () ) )
            // InternalSqlParser.g:12278:1: ( () )
            {
            // InternalSqlParser.g:12278:1: ( () )
            // InternalSqlParser.g:12279:1: ()
            {
             before(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 
            // InternalSqlParser.g:12280:1: ()
            // InternalSqlParser.g:12282:1: 
            {
            }

             after(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__1"
    // InternalSqlParser.g:12292:1: rule__Operand__Group_1_0_2__1 : rule__Operand__Group_1_0_2__1__Impl ;
    public final void rule__Operand__Group_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12296:1: ( rule__Operand__Group_1_0_2__1__Impl )
            // InternalSqlParser.g:12297:2: rule__Operand__Group_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1"


    // $ANTLR start "rule__Operand__Group_1_0_2__1__Impl"
    // InternalSqlParser.g:12303:1: rule__Operand__Group_1_0_2__1__Impl : ( VerticalLineVerticalLine ) ;
    public final void rule__Operand__Group_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12307:1: ( ( VerticalLineVerticalLine ) )
            // InternalSqlParser.g:12308:1: ( VerticalLineVerticalLine )
            {
            // InternalSqlParser.g:12308:1: ( VerticalLineVerticalLine )
            // InternalSqlParser.g:12309:1: VerticalLineVerticalLine
            {
             before(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 
            match(input,VerticalLineVerticalLine,FOLLOW_2); 
             after(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__0"
    // InternalSqlParser.g:12326:1: rule__Operand__Group_1_0_3__0 : rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 ;
    public final void rule__Operand__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12330:1: ( rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 )
            // InternalSqlParser.g:12331:2: rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1
            {
            pushFollow(FOLLOW_43);
            rule__Operand__Group_1_0_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0"


    // $ANTLR start "rule__Operand__Group_1_0_3__0__Impl"
    // InternalSqlParser.g:12338:1: rule__Operand__Group_1_0_3__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12342:1: ( ( () ) )
            // InternalSqlParser.g:12343:1: ( () )
            {
            // InternalSqlParser.g:12343:1: ( () )
            // InternalSqlParser.g:12344:1: ()
            {
             before(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 
            // InternalSqlParser.g:12345:1: ()
            // InternalSqlParser.g:12347:1: 
            {
            }

             after(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__1"
    // InternalSqlParser.g:12357:1: rule__Operand__Group_1_0_3__1 : rule__Operand__Group_1_0_3__1__Impl ;
    public final void rule__Operand__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12361:1: ( rule__Operand__Group_1_0_3__1__Impl )
            // InternalSqlParser.g:12362:2: rule__Operand__Group_1_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1"


    // $ANTLR start "rule__Operand__Group_1_0_3__1__Impl"
    // InternalSqlParser.g:12368:1: rule__Operand__Group_1_0_3__1__Impl : ( RULE_STAR ) ;
    public final void rule__Operand__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12372:1: ( ( RULE_STAR ) )
            // InternalSqlParser.g:12373:1: ( RULE_STAR )
            {
            // InternalSqlParser.g:12373:1: ( RULE_STAR )
            // InternalSqlParser.g:12374:1: RULE_STAR
            {
             before(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 
            match(input,RULE_STAR,FOLLOW_2); 
             after(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__0"
    // InternalSqlParser.g:12389:1: rule__Operand__Group_1_0_4__0 : rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 ;
    public final void rule__Operand__Group_1_0_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12393:1: ( rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 )
            // InternalSqlParser.g:12394:2: rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1
            {
            pushFollow(FOLLOW_60);
            rule__Operand__Group_1_0_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0"


    // $ANTLR start "rule__Operand__Group_1_0_4__0__Impl"
    // InternalSqlParser.g:12401:1: rule__Operand__Group_1_0_4__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12405:1: ( ( () ) )
            // InternalSqlParser.g:12406:1: ( () )
            {
            // InternalSqlParser.g:12406:1: ( () )
            // InternalSqlParser.g:12407:1: ()
            {
             before(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 
            // InternalSqlParser.g:12408:1: ()
            // InternalSqlParser.g:12410:1: 
            {
            }

             after(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__1"
    // InternalSqlParser.g:12420:1: rule__Operand__Group_1_0_4__1 : rule__Operand__Group_1_0_4__1__Impl ;
    public final void rule__Operand__Group_1_0_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12424:1: ( rule__Operand__Group_1_0_4__1__Impl )
            // InternalSqlParser.g:12425:2: rule__Operand__Group_1_0_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1"


    // $ANTLR start "rule__Operand__Group_1_0_4__1__Impl"
    // InternalSqlParser.g:12431:1: rule__Operand__Group_1_0_4__1__Impl : ( Solidus ) ;
    public final void rule__Operand__Group_1_0_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12435:1: ( ( Solidus ) )
            // InternalSqlParser.g:12436:1: ( Solidus )
            {
            // InternalSqlParser.g:12436:1: ( Solidus )
            // InternalSqlParser.g:12437:1: Solidus
            {
             before(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 
            match(input,Solidus,FOLLOW_2); 
             after(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__0"
    // InternalSqlParser.g:12454:1: rule__OperandFunction__Group__0 : rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 ;
    public final void rule__OperandFunction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12458:1: ( rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 )
            // InternalSqlParser.g:12459:2: rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__OperandFunction__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0"


    // $ANTLR start "rule__OperandFunction__Group__0__Impl"
    // InternalSqlParser.g:12466:1: rule__OperandFunction__Group__0__Impl : ( () ) ;
    public final void rule__OperandFunction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12470:1: ( ( () ) )
            // InternalSqlParser.g:12471:1: ( () )
            {
            // InternalSqlParser.g:12471:1: ( () )
            // InternalSqlParser.g:12472:1: ()
            {
             before(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 
            // InternalSqlParser.g:12473:1: ()
            // InternalSqlParser.g:12475:1: 
            {
            }

             after(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0__Impl"


    // $ANTLR start "rule__OperandFunction__Group__1"
    // InternalSqlParser.g:12485:1: rule__OperandFunction__Group__1 : rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 ;
    public final void rule__OperandFunction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12489:1: ( rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 )
            // InternalSqlParser.g:12490:2: rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2
            {
            pushFollow(FOLLOW_65);
            rule__OperandFunction__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1"


    // $ANTLR start "rule__OperandFunction__Group__1__Impl"
    // InternalSqlParser.g:12497:1: rule__OperandFunction__Group__1__Impl : ( ( rule__OperandFunction__FnameAssignment_1 ) ) ;
    public final void rule__OperandFunction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12501:1: ( ( ( rule__OperandFunction__FnameAssignment_1 ) ) )
            // InternalSqlParser.g:12502:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            {
            // InternalSqlParser.g:12502:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            // InternalSqlParser.g:12503:1: ( rule__OperandFunction__FnameAssignment_1 )
            {
             before(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 
            // InternalSqlParser.g:12504:1: ( rule__OperandFunction__FnameAssignment_1 )
            // InternalSqlParser.g:12504:2: rule__OperandFunction__FnameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__FnameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__2"
    // InternalSqlParser.g:12514:1: rule__OperandFunction__Group__2 : rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 ;
    public final void rule__OperandFunction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12518:1: ( rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 )
            // InternalSqlParser.g:12519:2: rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3
            {
            pushFollow(FOLLOW_65);
            rule__OperandFunction__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2"


    // $ANTLR start "rule__OperandFunction__Group__2__Impl"
    // InternalSqlParser.g:12526:1: rule__OperandFunction__Group__2__Impl : ( ( rule__OperandFunction__Alternatives_2 )? ) ;
    public final void rule__OperandFunction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12530:1: ( ( ( rule__OperandFunction__Alternatives_2 )? ) )
            // InternalSqlParser.g:12531:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            {
            // InternalSqlParser.g:12531:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            // InternalSqlParser.g:12532:1: ( rule__OperandFunction__Alternatives_2 )?
            {
             before(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 
            // InternalSqlParser.g:12533:1: ( rule__OperandFunction__Alternatives_2 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==DISTINCT||LA114_0==EXTRACT||LA114_0==CAST||LA114_0==CASE||LA114_0==ALL||LA114_0==LeftParenthesis||(LA114_0>=RULE_JRPARAM && LA114_0<=RULE_SIGNED_DOUBLE)||(LA114_0>=RULE_STRING_ && LA114_0<=RULE_ID)) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSqlParser.g:12533:2: rule__OperandFunction__Alternatives_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__Alternatives_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2__Impl"


    // $ANTLR start "rule__OperandFunction__Group__3"
    // InternalSqlParser.g:12543:1: rule__OperandFunction__Group__3 : rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 ;
    public final void rule__OperandFunction__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12547:1: ( rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 )
            // InternalSqlParser.g:12548:2: rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4
            {
            pushFollow(FOLLOW_66);
            rule__OperandFunction__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3"


    // $ANTLR start "rule__OperandFunction__Group__3__Impl"
    // InternalSqlParser.g:12555:1: rule__OperandFunction__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__OperandFunction__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12559:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:12560:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:12560:1: ( RightParenthesis )
            // InternalSqlParser.g:12561:1: RightParenthesis
            {
             before(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3__Impl"


    // $ANTLR start "rule__OperandFunction__Group__4"
    // InternalSqlParser.g:12574:1: rule__OperandFunction__Group__4 : rule__OperandFunction__Group__4__Impl ;
    public final void rule__OperandFunction__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12578:1: ( rule__OperandFunction__Group__4__Impl )
            // InternalSqlParser.g:12579:2: rule__OperandFunction__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4"


    // $ANTLR start "rule__OperandFunction__Group__4__Impl"
    // InternalSqlParser.g:12585:1: rule__OperandFunction__Group__4__Impl : ( ( rule__OperandFunction__FanAssignment_4 )? ) ;
    public final void rule__OperandFunction__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12589:1: ( ( ( rule__OperandFunction__FanAssignment_4 )? ) )
            // InternalSqlParser.g:12590:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            {
            // InternalSqlParser.g:12590:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            // InternalSqlParser.g:12591:1: ( rule__OperandFunction__FanAssignment_4 )?
            {
             before(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 
            // InternalSqlParser.g:12592:1: ( rule__OperandFunction__FanAssignment_4 )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==OVER) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSqlParser.g:12592:2: rule__OperandFunction__FanAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__FanAssignment_4();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__0"
    // InternalSqlParser.g:12612:1: rule__FunctionExtract__Group__0 : rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 ;
    public final void rule__FunctionExtract__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12616:1: ( rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 )
            // InternalSqlParser.g:12617:2: rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__FunctionExtract__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0"


    // $ANTLR start "rule__FunctionExtract__Group__0__Impl"
    // InternalSqlParser.g:12624:1: rule__FunctionExtract__Group__0__Impl : ( EXTRACT ) ;
    public final void rule__FunctionExtract__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12628:1: ( ( EXTRACT ) )
            // InternalSqlParser.g:12629:1: ( EXTRACT )
            {
            // InternalSqlParser.g:12629:1: ( EXTRACT )
            // InternalSqlParser.g:12630:1: EXTRACT
            {
             before(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 
            match(input,EXTRACT,FOLLOW_2); 
             after(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__1"
    // InternalSqlParser.g:12643:1: rule__FunctionExtract__Group__1 : rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 ;
    public final void rule__FunctionExtract__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12647:1: ( rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 )
            // InternalSqlParser.g:12648:2: rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2
            {
            pushFollow(FOLLOW_67);
            rule__FunctionExtract__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1"


    // $ANTLR start "rule__FunctionExtract__Group__1__Impl"
    // InternalSqlParser.g:12655:1: rule__FunctionExtract__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionExtract__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12659:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:12660:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:12660:1: ( LeftParenthesis )
            // InternalSqlParser.g:12661:1: LeftParenthesis
            {
             before(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__2"
    // InternalSqlParser.g:12674:1: rule__FunctionExtract__Group__2 : rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 ;
    public final void rule__FunctionExtract__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12678:1: ( rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 )
            // InternalSqlParser.g:12679:2: rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3
            {
            pushFollow(FOLLOW_13);
            rule__FunctionExtract__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2"


    // $ANTLR start "rule__FunctionExtract__Group__2__Impl"
    // InternalSqlParser.g:12686:1: rule__FunctionExtract__Group__2__Impl : ( ( rule__FunctionExtract__VAssignment_2 ) ) ;
    public final void rule__FunctionExtract__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12690:1: ( ( ( rule__FunctionExtract__VAssignment_2 ) ) )
            // InternalSqlParser.g:12691:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            {
            // InternalSqlParser.g:12691:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            // InternalSqlParser.g:12692:1: ( rule__FunctionExtract__VAssignment_2 )
            {
             before(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 
            // InternalSqlParser.g:12693:1: ( rule__FunctionExtract__VAssignment_2 )
            // InternalSqlParser.g:12693:2: rule__FunctionExtract__VAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__VAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__3"
    // InternalSqlParser.g:12703:1: rule__FunctionExtract__Group__3 : rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 ;
    public final void rule__FunctionExtract__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12707:1: ( rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 )
            // InternalSqlParser.g:12708:2: rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4
            {
            pushFollow(FOLLOW_50);
            rule__FunctionExtract__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3"


    // $ANTLR start "rule__FunctionExtract__Group__3__Impl"
    // InternalSqlParser.g:12715:1: rule__FunctionExtract__Group__3__Impl : ( FROM ) ;
    public final void rule__FunctionExtract__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12719:1: ( ( FROM ) )
            // InternalSqlParser.g:12720:1: ( FROM )
            {
            // InternalSqlParser.g:12720:1: ( FROM )
            // InternalSqlParser.g:12721:1: FROM
            {
             before(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 
            match(input,FROM,FOLLOW_2); 
             after(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__4"
    // InternalSqlParser.g:12734:1: rule__FunctionExtract__Group__4 : rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 ;
    public final void rule__FunctionExtract__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12738:1: ( rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 )
            // InternalSqlParser.g:12739:2: rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5
            {
            pushFollow(FOLLOW_32);
            rule__FunctionExtract__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4"


    // $ANTLR start "rule__FunctionExtract__Group__4__Impl"
    // InternalSqlParser.g:12746:1: rule__FunctionExtract__Group__4__Impl : ( ( rule__FunctionExtract__OperandAssignment_4 ) ) ;
    public final void rule__FunctionExtract__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12750:1: ( ( ( rule__FunctionExtract__OperandAssignment_4 ) ) )
            // InternalSqlParser.g:12751:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            {
            // InternalSqlParser.g:12751:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            // InternalSqlParser.g:12752:1: ( rule__FunctionExtract__OperandAssignment_4 )
            {
             before(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 
            // InternalSqlParser.g:12753:1: ( rule__FunctionExtract__OperandAssignment_4 )
            // InternalSqlParser.g:12753:2: rule__FunctionExtract__OperandAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__OperandAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__5"
    // InternalSqlParser.g:12763:1: rule__FunctionExtract__Group__5 : rule__FunctionExtract__Group__5__Impl ;
    public final void rule__FunctionExtract__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12767:1: ( rule__FunctionExtract__Group__5__Impl )
            // InternalSqlParser.g:12768:2: rule__FunctionExtract__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5"


    // $ANTLR start "rule__FunctionExtract__Group__5__Impl"
    // InternalSqlParser.g:12774:1: rule__FunctionExtract__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionExtract__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12778:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:12779:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:12779:1: ( RightParenthesis )
            // InternalSqlParser.g:12780:1: RightParenthesis
            {
             before(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__0"
    // InternalSqlParser.g:12805:1: rule__FunctionAnalytical__Group__0 : rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 ;
    public final void rule__FunctionAnalytical__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12809:1: ( rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 )
            // InternalSqlParser.g:12810:2: rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__FunctionAnalytical__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0"


    // $ANTLR start "rule__FunctionAnalytical__Group__0__Impl"
    // InternalSqlParser.g:12817:1: rule__FunctionAnalytical__Group__0__Impl : ( OVER ) ;
    public final void rule__FunctionAnalytical__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12821:1: ( ( OVER ) )
            // InternalSqlParser.g:12822:1: ( OVER )
            {
            // InternalSqlParser.g:12822:1: ( OVER )
            // InternalSqlParser.g:12823:1: OVER
            {
             before(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 
            match(input,OVER,FOLLOW_2); 
             after(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__1"
    // InternalSqlParser.g:12836:1: rule__FunctionAnalytical__Group__1 : rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 ;
    public final void rule__FunctionAnalytical__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12840:1: ( rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 )
            // InternalSqlParser.g:12841:2: rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2
            {
            pushFollow(FOLLOW_68);
            rule__FunctionAnalytical__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1"


    // $ANTLR start "rule__FunctionAnalytical__Group__1__Impl"
    // InternalSqlParser.g:12848:1: rule__FunctionAnalytical__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12852:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:12853:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:12853:1: ( LeftParenthesis )
            // InternalSqlParser.g:12854:1: LeftParenthesis
            {
             before(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__2"
    // InternalSqlParser.g:12867:1: rule__FunctionAnalytical__Group__2 : rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 ;
    public final void rule__FunctionAnalytical__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12871:1: ( rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 )
            // InternalSqlParser.g:12872:2: rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__FunctionAnalytical__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2"


    // $ANTLR start "rule__FunctionAnalytical__Group__2__Impl"
    // InternalSqlParser.g:12879:1: rule__FunctionAnalytical__Group__2__Impl : ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) ;
    public final void rule__FunctionAnalytical__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12883:1: ( ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) )
            // InternalSqlParser.g:12884:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            {
            // InternalSqlParser.g:12884:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            // InternalSqlParser.g:12885:1: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            {
             before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 
            // InternalSqlParser.g:12886:1: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            // InternalSqlParser.g:12886:2: rule__FunctionAnalytical__AnClauseAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__AnClauseAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__3"
    // InternalSqlParser.g:12896:1: rule__FunctionAnalytical__Group__3 : rule__FunctionAnalytical__Group__3__Impl ;
    public final void rule__FunctionAnalytical__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12900:1: ( rule__FunctionAnalytical__Group__3__Impl )
            // InternalSqlParser.g:12901:2: rule__FunctionAnalytical__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3"


    // $ANTLR start "rule__FunctionAnalytical__Group__3__Impl"
    // InternalSqlParser.g:12907:1: rule__FunctionAnalytical__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12911:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:12912:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:12912:1: ( RightParenthesis )
            // InternalSqlParser.g:12913:1: RightParenthesis
            {
             before(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__0"
    // InternalSqlParser.g:12934:1: rule__AnalyticClause__Group__0 : rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 ;
    public final void rule__AnalyticClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12938:1: ( rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 )
            // InternalSqlParser.g:12939:2: rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1
            {
            pushFollow(FOLLOW_68);
            rule__AnalyticClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0"


    // $ANTLR start "rule__AnalyticClause__Group__0__Impl"
    // InternalSqlParser.g:12946:1: rule__AnalyticClause__Group__0__Impl : ( () ) ;
    public final void rule__AnalyticClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12950:1: ( ( () ) )
            // InternalSqlParser.g:12951:1: ( () )
            {
            // InternalSqlParser.g:12951:1: ( () )
            // InternalSqlParser.g:12952:1: ()
            {
             before(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 
            // InternalSqlParser.g:12953:1: ()
            // InternalSqlParser.g:12955:1: 
            {
            }

             after(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__1"
    // InternalSqlParser.g:12965:1: rule__AnalyticClause__Group__1 : rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 ;
    public final void rule__AnalyticClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12969:1: ( rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 )
            // InternalSqlParser.g:12970:2: rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2
            {
            pushFollow(FOLLOW_68);
            rule__AnalyticClause__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1"


    // $ANTLR start "rule__AnalyticClause__Group__1__Impl"
    // InternalSqlParser.g:12977:1: rule__AnalyticClause__Group__1__Impl : ( ( rule__AnalyticClause__AbcAssignment_1 )? ) ;
    public final void rule__AnalyticClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12981:1: ( ( ( rule__AnalyticClause__AbcAssignment_1 )? ) )
            // InternalSqlParser.g:12982:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            {
            // InternalSqlParser.g:12982:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            // InternalSqlParser.g:12983:1: ( rule__AnalyticClause__AbcAssignment_1 )?
            {
             before(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 
            // InternalSqlParser.g:12984:1: ( rule__AnalyticClause__AbcAssignment_1 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==PARTITIONBY) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalSqlParser.g:12984:2: rule__AnalyticClause__AbcAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__AbcAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__2"
    // InternalSqlParser.g:12994:1: rule__AnalyticClause__Group__2 : rule__AnalyticClause__Group__2__Impl ;
    public final void rule__AnalyticClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12998:1: ( rule__AnalyticClause__Group__2__Impl )
            // InternalSqlParser.g:12999:2: rule__AnalyticClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2"


    // $ANTLR start "rule__AnalyticClause__Group__2__Impl"
    // InternalSqlParser.g:13005:1: rule__AnalyticClause__Group__2__Impl : ( ( rule__AnalyticClause__Group_2__0 )? ) ;
    public final void rule__AnalyticClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13009:1: ( ( ( rule__AnalyticClause__Group_2__0 )? ) )
            // InternalSqlParser.g:13010:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            {
            // InternalSqlParser.g:13010:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            // InternalSqlParser.g:13011:1: ( rule__AnalyticClause__Group_2__0 )?
            {
             before(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 
            // InternalSqlParser.g:13012:1: ( rule__AnalyticClause__Group_2__0 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==ORDERSIBLINGSBY||LA117_0==ORDERBY) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSqlParser.g:13012:2: rule__AnalyticClause__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__Group_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__0"
    // InternalSqlParser.g:13028:1: rule__AnalyticClause__Group_2__0 : rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 ;
    public final void rule__AnalyticClause__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13032:1: ( rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 )
            // InternalSqlParser.g:13033:2: rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1
            {
            pushFollow(FOLLOW_69);
            rule__AnalyticClause__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0"


    // $ANTLR start "rule__AnalyticClause__Group_2__0__Impl"
    // InternalSqlParser.g:13040:1: rule__AnalyticClause__Group_2__0__Impl : ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) ;
    public final void rule__AnalyticClause__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13044:1: ( ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) )
            // InternalSqlParser.g:13045:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            {
            // InternalSqlParser.g:13045:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            // InternalSqlParser.g:13046:1: ( rule__AnalyticClause__ObcAssignment_2_0 )
            {
             before(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 
            // InternalSqlParser.g:13047:1: ( rule__AnalyticClause__ObcAssignment_2_0 )
            // InternalSqlParser.g:13047:2: rule__AnalyticClause__ObcAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__ObcAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__1"
    // InternalSqlParser.g:13057:1: rule__AnalyticClause__Group_2__1 : rule__AnalyticClause__Group_2__1__Impl ;
    public final void rule__AnalyticClause__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13061:1: ( rule__AnalyticClause__Group_2__1__Impl )
            // InternalSqlParser.g:13062:2: rule__AnalyticClause__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1"


    // $ANTLR start "rule__AnalyticClause__Group_2__1__Impl"
    // InternalSqlParser.g:13068:1: rule__AnalyticClause__Group_2__1__Impl : ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) ;
    public final void rule__AnalyticClause__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13072:1: ( ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) )
            // InternalSqlParser.g:13073:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            {
            // InternalSqlParser.g:13073:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            // InternalSqlParser.g:13074:1: ( rule__AnalyticClause__WincAssignment_2_1 )?
            {
             before(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 
            // InternalSqlParser.g:13075:1: ( rule__AnalyticClause__WincAssignment_2_1 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==RANGE||LA118_0==ROWS) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSqlParser.g:13075:2: rule__AnalyticClause__WincAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__WincAssignment_2_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1__Impl"


    // $ANTLR start "rule__WindowingClause__Group__0"
    // InternalSqlParser.g:13089:1: rule__WindowingClause__Group__0 : rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 ;
    public final void rule__WindowingClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13093:1: ( rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 )
            // InternalSqlParser.g:13094:2: rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__WindowingClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0"


    // $ANTLR start "rule__WindowingClause__Group__0__Impl"
    // InternalSqlParser.g:13101:1: rule__WindowingClause__Group__0__Impl : ( ( rule__WindowingClause__Alternatives_0 ) ) ;
    public final void rule__WindowingClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13105:1: ( ( ( rule__WindowingClause__Alternatives_0 ) ) )
            // InternalSqlParser.g:13106:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            {
            // InternalSqlParser.g:13106:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            // InternalSqlParser.g:13107:1: ( rule__WindowingClause__Alternatives_0 )
            {
             before(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 
            // InternalSqlParser.g:13108:1: ( rule__WindowingClause__Alternatives_0 )
            // InternalSqlParser.g:13108:2: rule__WindowingClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0__Impl"


    // $ANTLR start "rule__WindowingClause__Group__1"
    // InternalSqlParser.g:13118:1: rule__WindowingClause__Group__1 : rule__WindowingClause__Group__1__Impl ;
    public final void rule__WindowingClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13122:1: ( rule__WindowingClause__Group__1__Impl )
            // InternalSqlParser.g:13123:2: rule__WindowingClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1"


    // $ANTLR start "rule__WindowingClause__Group__1__Impl"
    // InternalSqlParser.g:13129:1: rule__WindowingClause__Group__1__Impl : ( ( rule__WindowingClause__Alternatives_1 ) ) ;
    public final void rule__WindowingClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13133:1: ( ( ( rule__WindowingClause__Alternatives_1 ) ) )
            // InternalSqlParser.g:13134:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            {
            // InternalSqlParser.g:13134:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            // InternalSqlParser.g:13135:1: ( rule__WindowingClause__Alternatives_1 )
            {
             before(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 
            // InternalSqlParser.g:13136:1: ( rule__WindowingClause__Alternatives_1 )
            // InternalSqlParser.g:13136:2: rule__WindowingClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0"
    // InternalSqlParser.g:13150:1: rule__WindowingClauseBetween__Group__0 : rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 ;
    public final void rule__WindowingClauseBetween__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13154:1: ( rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 )
            // InternalSqlParser.g:13155:2: rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__WindowingClauseBetween__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0__Impl"
    // InternalSqlParser.g:13162:1: rule__WindowingClauseBetween__Group__0__Impl : ( BETWEEN ) ;
    public final void rule__WindowingClauseBetween__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13166:1: ( ( BETWEEN ) )
            // InternalSqlParser.g:13167:1: ( BETWEEN )
            {
            // InternalSqlParser.g:13167:1: ( BETWEEN )
            // InternalSqlParser.g:13168:1: BETWEEN
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 
            match(input,BETWEEN,FOLLOW_2); 
             after(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1"
    // InternalSqlParser.g:13181:1: rule__WindowingClauseBetween__Group__1 : rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 ;
    public final void rule__WindowingClauseBetween__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13185:1: ( rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 )
            // InternalSqlParser.g:13186:2: rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2
            {
            pushFollow(FOLLOW_57);
            rule__WindowingClauseBetween__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1__Impl"
    // InternalSqlParser.g:13193:1: rule__WindowingClauseBetween__Group__1__Impl : ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) ;
    public final void rule__WindowingClauseBetween__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13197:1: ( ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) )
            // InternalSqlParser.g:13198:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            {
            // InternalSqlParser.g:13198:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            // InternalSqlParser.g:13199:1: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 
            // InternalSqlParser.g:13200:1: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            // InternalSqlParser.g:13200:2: rule__WindowingClauseBetween__WcoPAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoPAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2"
    // InternalSqlParser.g:13210:1: rule__WindowingClauseBetween__Group__2 : rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 ;
    public final void rule__WindowingClauseBetween__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13214:1: ( rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 )
            // InternalSqlParser.g:13215:2: rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3
            {
            pushFollow(FOLLOW_71);
            rule__WindowingClauseBetween__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2__Impl"
    // InternalSqlParser.g:13222:1: rule__WindowingClauseBetween__Group__2__Impl : ( AND ) ;
    public final void rule__WindowingClauseBetween__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13226:1: ( ( AND ) )
            // InternalSqlParser.g:13227:1: ( AND )
            {
            // InternalSqlParser.g:13227:1: ( AND )
            // InternalSqlParser.g:13228:1: AND
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 
            match(input,AND,FOLLOW_2); 
             after(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3"
    // InternalSqlParser.g:13241:1: rule__WindowingClauseBetween__Group__3 : rule__WindowingClauseBetween__Group__3__Impl ;
    public final void rule__WindowingClauseBetween__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13245:1: ( rule__WindowingClauseBetween__Group__3__Impl )
            // InternalSqlParser.g:13246:2: rule__WindowingClauseBetween__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3__Impl"
    // InternalSqlParser.g:13252:1: rule__WindowingClauseBetween__Group__3__Impl : ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) ;
    public final void rule__WindowingClauseBetween__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13256:1: ( ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) )
            // InternalSqlParser.g:13257:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            {
            // InternalSqlParser.g:13257:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            // InternalSqlParser.g:13258:1: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 
            // InternalSqlParser.g:13259:1: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            // InternalSqlParser.g:13259:2: rule__WindowingClauseBetween__WcoFAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoFAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0"
    // InternalSqlParser.g:13277:1: rule__WindowingClauseOperandFollowing__Group__0 : rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13281:1: ( rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 )
            // InternalSqlParser.g:13282:2: rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__WindowingClauseOperandFollowing__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0__Impl"
    // InternalSqlParser.g:13289:1: rule__WindowingClauseOperandFollowing__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13293:1: ( ( () ) )
            // InternalSqlParser.g:13294:1: ( () )
            {
            // InternalSqlParser.g:13294:1: ( () )
            // InternalSqlParser.g:13295:1: ()
            {
             before(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 
            // InternalSqlParser.g:13296:1: ()
            // InternalSqlParser.g:13298:1: 
            {
            }

             after(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1"
    // InternalSqlParser.g:13308:1: rule__WindowingClauseOperandFollowing__Group__1 : rule__WindowingClauseOperandFollowing__Group__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13312:1: ( rule__WindowingClauseOperandFollowing__Group__1__Impl )
            // InternalSqlParser.g:13313:2: rule__WindowingClauseOperandFollowing__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1__Impl"
    // InternalSqlParser.g:13319:1: rule__WindowingClauseOperandFollowing__Group__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13323:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) )
            // InternalSqlParser.g:13324:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            {
            // InternalSqlParser.g:13324:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            // InternalSqlParser.g:13325:1: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            {
             before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 
            // InternalSqlParser.g:13326:1: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            // InternalSqlParser.g:13326:2: rule__WindowingClauseOperandFollowing__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0"
    // InternalSqlParser.g:13340:1: rule__WindowingClauseOperandFollowing__Group_1_2__0 : rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13344:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 )
            // InternalSqlParser.g:13345:2: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1
            {
            pushFollow(FOLLOW_72);
            rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"
    // InternalSqlParser.g:13352:1: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13356:1: ( ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) )
            // InternalSqlParser.g:13357:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            {
            // InternalSqlParser.g:13357:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            // InternalSqlParser.g:13358:1: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            {
             before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 
            // InternalSqlParser.g:13359:1: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            // InternalSqlParser.g:13359:2: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1"
    // InternalSqlParser.g:13369:1: rule__WindowingClauseOperandFollowing__Group_1_2__1 : rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13373:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl )
            // InternalSqlParser.g:13374:2: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"
    // InternalSqlParser.g:13380:1: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13384:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) )
            // InternalSqlParser.g:13385:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            {
            // InternalSqlParser.g:13385:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            // InternalSqlParser.g:13386:1: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            {
             before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 
            // InternalSqlParser.g:13387:1: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            // InternalSqlParser.g:13387:2: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0"
    // InternalSqlParser.g:13401:1: rule__WindowingClauseOperandPreceding__Group__0 : rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13405:1: ( rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 )
            // InternalSqlParser.g:13406:2: rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__WindowingClauseOperandPreceding__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0__Impl"
    // InternalSqlParser.g:13413:1: rule__WindowingClauseOperandPreceding__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13417:1: ( ( () ) )
            // InternalSqlParser.g:13418:1: ( () )
            {
            // InternalSqlParser.g:13418:1: ( () )
            // InternalSqlParser.g:13419:1: ()
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 
            // InternalSqlParser.g:13420:1: ()
            // InternalSqlParser.g:13422:1: 
            {
            }

             after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1"
    // InternalSqlParser.g:13432:1: rule__WindowingClauseOperandPreceding__Group__1 : rule__WindowingClauseOperandPreceding__Group__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13436:1: ( rule__WindowingClauseOperandPreceding__Group__1__Impl )
            // InternalSqlParser.g:13437:2: rule__WindowingClauseOperandPreceding__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1__Impl"
    // InternalSqlParser.g:13443:1: rule__WindowingClauseOperandPreceding__Group__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13447:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) )
            // InternalSqlParser.g:13448:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            {
            // InternalSqlParser.g:13448:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            // InternalSqlParser.g:13449:1: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 
            // InternalSqlParser.g:13450:1: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            // InternalSqlParser.g:13450:2: rule__WindowingClauseOperandPreceding__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0"
    // InternalSqlParser.g:13464:1: rule__WindowingClauseOperandPreceding__Group_1_2__0 : rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13468:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 )
            // InternalSqlParser.g:13469:2: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1
            {
            pushFollow(FOLLOW_72);
            rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"
    // InternalSqlParser.g:13476:1: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13480:1: ( ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) )
            // InternalSqlParser.g:13481:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            {
            // InternalSqlParser.g:13481:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            // InternalSqlParser.g:13482:1: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 
            // InternalSqlParser.g:13483:1: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            // InternalSqlParser.g:13483:2: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1"
    // InternalSqlParser.g:13493:1: rule__WindowingClauseOperandPreceding__Group_1_2__1 : rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13497:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl )
            // InternalSqlParser.g:13498:2: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"
    // InternalSqlParser.g:13504:1: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13508:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) )
            // InternalSqlParser.g:13509:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            {
            // InternalSqlParser.g:13509:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            // InternalSqlParser.g:13510:1: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 
            // InternalSqlParser.g:13511:1: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            // InternalSqlParser.g:13511:2: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group__0"
    // InternalSqlParser.g:13525:1: rule__OrderByClause__Group__0 : rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 ;
    public final void rule__OrderByClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13529:1: ( rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 )
            // InternalSqlParser.g:13530:2: rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__OrderByClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0"


    // $ANTLR start "rule__OrderByClause__Group__0__Impl"
    // InternalSqlParser.g:13537:1: rule__OrderByClause__Group__0__Impl : ( ( rule__OrderByClause__Alternatives_0 ) ) ;
    public final void rule__OrderByClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13541:1: ( ( ( rule__OrderByClause__Alternatives_0 ) ) )
            // InternalSqlParser.g:13542:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            {
            // InternalSqlParser.g:13542:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            // InternalSqlParser.g:13543:1: ( rule__OrderByClause__Alternatives_0 )
            {
             before(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 
            // InternalSqlParser.g:13544:1: ( rule__OrderByClause__Alternatives_0 )
            // InternalSqlParser.g:13544:2: rule__OrderByClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Alternatives_0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group__1"
    // InternalSqlParser.g:13554:1: rule__OrderByClause__Group__1 : rule__OrderByClause__Group__1__Impl ;
    public final void rule__OrderByClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13558:1: ( rule__OrderByClause__Group__1__Impl )
            // InternalSqlParser.g:13559:2: rule__OrderByClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1"


    // $ANTLR start "rule__OrderByClause__Group__1__Impl"
    // InternalSqlParser.g:13565:1: rule__OrderByClause__Group__1__Impl : ( ( rule__OrderByClause__ArgsAssignment_1 ) ) ;
    public final void rule__OrderByClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13569:1: ( ( ( rule__OrderByClause__ArgsAssignment_1 ) ) )
            // InternalSqlParser.g:13570:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            {
            // InternalSqlParser.g:13570:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            // InternalSqlParser.g:13571:1: ( rule__OrderByClause__ArgsAssignment_1 )
            {
             before(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 
            // InternalSqlParser.g:13572:1: ( rule__OrderByClause__ArgsAssignment_1 )
            // InternalSqlParser.g:13572:2: rule__OrderByClause__ArgsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__ArgsAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0"
    // InternalSqlParser.g:13586:1: rule__OrderByClauseArgs__Group__0 : rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 ;
    public final void rule__OrderByClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13590:1: ( rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 )
            // InternalSqlParser.g:13591:2: rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__OrderByClauseArgs__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0__Impl"
    // InternalSqlParser.g:13598:1: rule__OrderByClauseArgs__Group__0__Impl : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13602:1: ( ( ruleOrderByClauseArg ) )
            // InternalSqlParser.g:13603:1: ( ruleOrderByClauseArg )
            {
            // InternalSqlParser.g:13603:1: ( ruleOrderByClauseArg )
            // InternalSqlParser.g:13604:1: ruleOrderByClauseArg
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;

             after(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1"
    // InternalSqlParser.g:13615:1: rule__OrderByClauseArgs__Group__1 : rule__OrderByClauseArgs__Group__1__Impl ;
    public final void rule__OrderByClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13619:1: ( rule__OrderByClauseArgs__Group__1__Impl )
            // InternalSqlParser.g:13620:2: rule__OrderByClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1__Impl"
    // InternalSqlParser.g:13626:1: rule__OrderByClauseArgs__Group__1__Impl : ( ( rule__OrderByClauseArgs__Group_1__0 )? ) ;
    public final void rule__OrderByClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13630:1: ( ( ( rule__OrderByClauseArgs__Group_1__0 )? ) )
            // InternalSqlParser.g:13631:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            {
            // InternalSqlParser.g:13631:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            // InternalSqlParser.g:13632:1: ( rule__OrderByClauseArgs__Group_1__0 )?
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 
            // InternalSqlParser.g:13633:1: ( rule__OrderByClauseArgs__Group_1__0 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==Comma) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalSqlParser.g:13633:2: rule__OrderByClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArgs__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0"
    // InternalSqlParser.g:13647:1: rule__OrderByClauseArgs__Group_1__0 : rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13651:1: ( rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 )
            // InternalSqlParser.g:13652:2: rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__OrderByClauseArgs__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0__Impl"
    // InternalSqlParser.g:13659:1: rule__OrderByClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13663:1: ( ( () ) )
            // InternalSqlParser.g:13664:1: ( () )
            {
            // InternalSqlParser.g:13664:1: ( () )
            // InternalSqlParser.g:13665:1: ()
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 
            // InternalSqlParser.g:13666:1: ()
            // InternalSqlParser.g:13668:1: 
            {
            }

             after(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1"
    // InternalSqlParser.g:13678:1: rule__OrderByClauseArgs__Group_1__1 : rule__OrderByClauseArgs__Group_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13682:1: ( rule__OrderByClauseArgs__Group_1__1__Impl )
            // InternalSqlParser.g:13683:2: rule__OrderByClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1__Impl"
    // InternalSqlParser.g:13689:1: rule__OrderByClauseArgs__Group_1__1__Impl : ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13693:1: ( ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:13694:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:13694:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            // InternalSqlParser.g:13695:1: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:13695:1: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) )
            // InternalSqlParser.g:13696:1: ( rule__OrderByClauseArgs__Group_1_1__0 )
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:13697:1: ( rule__OrderByClauseArgs__Group_1_1__0 )
            // InternalSqlParser.g:13697:2: rule__OrderByClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_23);
            rule__OrderByClauseArgs__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:13700:1: ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            // InternalSqlParser.g:13701:1: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:13702:1: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==Comma) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalSqlParser.g:13702:2: rule__OrderByClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__OrderByClauseArgs__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);

             after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0"
    // InternalSqlParser.g:13717:1: rule__OrderByClauseArgs__Group_1_1__0 : rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13721:1: ( rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 )
            // InternalSqlParser.g:13722:2: rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_70);
            rule__OrderByClauseArgs__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0__Impl"
    // InternalSqlParser.g:13729:1: rule__OrderByClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13733:1: ( ( Comma ) )
            // InternalSqlParser.g:13734:1: ( Comma )
            {
            // InternalSqlParser.g:13734:1: ( Comma )
            // InternalSqlParser.g:13735:1: Comma
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1"
    // InternalSqlParser.g:13748:1: rule__OrderByClauseArgs__Group_1_1__1 : rule__OrderByClauseArgs__Group_1_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13752:1: ( rule__OrderByClauseArgs__Group_1_1__1__Impl )
            // InternalSqlParser.g:13753:2: rule__OrderByClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1__Impl"
    // InternalSqlParser.g:13759:1: rule__OrderByClauseArgs__Group_1_1__1__Impl : ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13763:1: ( ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:13764:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:13764:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:13765:1: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:13766:1: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:13766:2: rule__OrderByClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__0"
    // InternalSqlParser.g:13780:1: rule__OrderByClauseArg__Group__0 : rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 ;
    public final void rule__OrderByClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13784:1: ( rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 )
            // InternalSqlParser.g:13785:2: rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__OrderByClauseArg__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0"


    // $ANTLR start "rule__OrderByClauseArg__Group__0__Impl"
    // InternalSqlParser.g:13792:1: rule__OrderByClauseArg__Group__0__Impl : ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) ;
    public final void rule__OrderByClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13796:1: ( ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) )
            // InternalSqlParser.g:13797:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            {
            // InternalSqlParser.g:13797:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            // InternalSqlParser.g:13798:1: ( rule__OrderByClauseArg__ColAssignment_0 )
            {
             before(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 
            // InternalSqlParser.g:13799:1: ( rule__OrderByClauseArg__ColAssignment_0 )
            // InternalSqlParser.g:13799:2: rule__OrderByClauseArg__ColAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__ColAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__1"
    // InternalSqlParser.g:13809:1: rule__OrderByClauseArg__Group__1 : rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 ;
    public final void rule__OrderByClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13813:1: ( rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 )
            // InternalSqlParser.g:13814:2: rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2
            {
            pushFollow(FOLLOW_73);
            rule__OrderByClauseArg__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1"


    // $ANTLR start "rule__OrderByClauseArg__Group__1__Impl"
    // InternalSqlParser.g:13821:1: rule__OrderByClauseArg__Group__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_1 )? ) ;
    public final void rule__OrderByClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13825:1: ( ( ( rule__OrderByClauseArg__Alternatives_1 )? ) )
            // InternalSqlParser.g:13826:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            {
            // InternalSqlParser.g:13826:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            // InternalSqlParser.g:13827:1: ( rule__OrderByClauseArg__Alternatives_1 )?
            {
             before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 
            // InternalSqlParser.g:13828:1: ( rule__OrderByClauseArg__Alternatives_1 )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==DESC||LA121_0==ASC) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSqlParser.g:13828:2: rule__OrderByClauseArg__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__2"
    // InternalSqlParser.g:13838:1: rule__OrderByClauseArg__Group__2 : rule__OrderByClauseArg__Group__2__Impl ;
    public final void rule__OrderByClauseArg__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13842:1: ( rule__OrderByClauseArg__Group__2__Impl )
            // InternalSqlParser.g:13843:2: rule__OrderByClauseArg__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2"


    // $ANTLR start "rule__OrderByClauseArg__Group__2__Impl"
    // InternalSqlParser.g:13849:1: rule__OrderByClauseArg__Group__2__Impl : ( ( rule__OrderByClauseArg__Group_2__0 )? ) ;
    public final void rule__OrderByClauseArg__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13853:1: ( ( ( rule__OrderByClauseArg__Group_2__0 )? ) )
            // InternalSqlParser.g:13854:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            {
            // InternalSqlParser.g:13854:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            // InternalSqlParser.g:13855:1: ( rule__OrderByClauseArg__Group_2__0 )?
            {
             before(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 
            // InternalSqlParser.g:13856:1: ( rule__OrderByClauseArg__Group_2__0 )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==NULLS) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSqlParser.g:13856:2: rule__OrderByClauseArg__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Group_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0"
    // InternalSqlParser.g:13872:1: rule__OrderByClauseArg__Group_2__0 : rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 ;
    public final void rule__OrderByClauseArg__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13876:1: ( rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 )
            // InternalSqlParser.g:13877:2: rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1
            {
            pushFollow(FOLLOW_74);
            rule__OrderByClauseArg__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0__Impl"
    // InternalSqlParser.g:13884:1: rule__OrderByClauseArg__Group_2__0__Impl : ( NULLS ) ;
    public final void rule__OrderByClauseArg__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13888:1: ( ( NULLS ) )
            // InternalSqlParser.g:13889:1: ( NULLS )
            {
            // InternalSqlParser.g:13889:1: ( NULLS )
            // InternalSqlParser.g:13890:1: NULLS
            {
             before(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 
            match(input,NULLS,FOLLOW_2); 
             after(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1"
    // InternalSqlParser.g:13903:1: rule__OrderByClauseArg__Group_2__1 : rule__OrderByClauseArg__Group_2__1__Impl ;
    public final void rule__OrderByClauseArg__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13907:1: ( rule__OrderByClauseArg__Group_2__1__Impl )
            // InternalSqlParser.g:13908:2: rule__OrderByClauseArg__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1__Impl"
    // InternalSqlParser.g:13914:1: rule__OrderByClauseArg__Group_2__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) ;
    public final void rule__OrderByClauseArg__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13918:1: ( ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) )
            // InternalSqlParser.g:13919:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            {
            // InternalSqlParser.g:13919:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            // InternalSqlParser.g:13920:1: ( rule__OrderByClauseArg__Alternatives_2_1 )
            {
             before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 
            // InternalSqlParser.g:13921:1: ( rule__OrderByClauseArg__Alternatives_2_1 )
            // InternalSqlParser.g:13921:2: rule__OrderByClauseArg__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Alternatives_2_1();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__0"
    // InternalSqlParser.g:13935:1: rule__QueryPartitionClause__Group__0 : rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 ;
    public final void rule__QueryPartitionClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13939:1: ( rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 )
            // InternalSqlParser.g:13940:2: rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__QueryPartitionClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0"


    // $ANTLR start "rule__QueryPartitionClause__Group__0__Impl"
    // InternalSqlParser.g:13947:1: rule__QueryPartitionClause__Group__0__Impl : ( PARTITIONBY ) ;
    public final void rule__QueryPartitionClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13951:1: ( ( PARTITIONBY ) )
            // InternalSqlParser.g:13952:1: ( PARTITIONBY )
            {
            // InternalSqlParser.g:13952:1: ( PARTITIONBY )
            // InternalSqlParser.g:13953:1: PARTITIONBY
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONBYKeyword_0()); 
            match(input,PARTITIONBY,FOLLOW_2); 
             after(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONBYKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__1"
    // InternalSqlParser.g:13966:1: rule__QueryPartitionClause__Group__1 : rule__QueryPartitionClause__Group__1__Impl ;
    public final void rule__QueryPartitionClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13970:1: ( rule__QueryPartitionClause__Group__1__Impl )
            // InternalSqlParser.g:13971:2: rule__QueryPartitionClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1"


    // $ANTLR start "rule__QueryPartitionClause__Group__1__Impl"
    // InternalSqlParser.g:13977:1: rule__QueryPartitionClause__Group__1__Impl : ( ( rule__QueryPartitionClause__Alternatives_1 ) ) ;
    public final void rule__QueryPartitionClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13981:1: ( ( ( rule__QueryPartitionClause__Alternatives_1 ) ) )
            // InternalSqlParser.g:13982:1: ( ( rule__QueryPartitionClause__Alternatives_1 ) )
            {
            // InternalSqlParser.g:13982:1: ( ( rule__QueryPartitionClause__Alternatives_1 ) )
            // InternalSqlParser.g:13983:1: ( rule__QueryPartitionClause__Alternatives_1 )
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_1()); 
            // InternalSqlParser.g:13984:1: ( rule__QueryPartitionClause__Alternatives_1 )
            // InternalSqlParser.g:13984:2: rule__QueryPartitionClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_1_1__0"
    // InternalSqlParser.g:13998:1: rule__QueryPartitionClause__Group_1_1__0 : rule__QueryPartitionClause__Group_1_1__0__Impl rule__QueryPartitionClause__Group_1_1__1 ;
    public final void rule__QueryPartitionClause__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14002:1: ( rule__QueryPartitionClause__Group_1_1__0__Impl rule__QueryPartitionClause__Group_1_1__1 )
            // InternalSqlParser.g:14003:2: rule__QueryPartitionClause__Group_1_1__0__Impl rule__QueryPartitionClause__Group_1_1__1
            {
            pushFollow(FOLLOW_70);
            rule__QueryPartitionClause__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_1_1__0"


    // $ANTLR start "rule__QueryPartitionClause__Group_1_1__0__Impl"
    // InternalSqlParser.g:14010:1: rule__QueryPartitionClause__Group_1_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14014:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:14015:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:14015:1: ( LeftParenthesis )
            // InternalSqlParser.g:14016:1: LeftParenthesis
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_1_1__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_1_1__1"
    // InternalSqlParser.g:14029:1: rule__QueryPartitionClause__Group_1_1__1 : rule__QueryPartitionClause__Group_1_1__1__Impl rule__QueryPartitionClause__Group_1_1__2 ;
    public final void rule__QueryPartitionClause__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14033:1: ( rule__QueryPartitionClause__Group_1_1__1__Impl rule__QueryPartitionClause__Group_1_1__2 )
            // InternalSqlParser.g:14034:2: rule__QueryPartitionClause__Group_1_1__1__Impl rule__QueryPartitionClause__Group_1_1__2
            {
            pushFollow(FOLLOW_32);
            rule__QueryPartitionClause__Group_1_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_1_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_1_1__1"


    // $ANTLR start "rule__QueryPartitionClause__Group_1_1__1__Impl"
    // InternalSqlParser.g:14041:1: rule__QueryPartitionClause__Group_1_1__1__Impl : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14045:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSqlParser.g:14046:1: ( ruleAnalyticExprArgs )
            {
            // InternalSqlParser.g:14046:1: ( ruleAnalyticExprArgs )
            // InternalSqlParser.g:14047:1: ruleAnalyticExprArgs
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_1_1_1()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;

             after(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_1_1__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_1_1__2"
    // InternalSqlParser.g:14058:1: rule__QueryPartitionClause__Group_1_1__2 : rule__QueryPartitionClause__Group_1_1__2__Impl ;
    public final void rule__QueryPartitionClause__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14062:1: ( rule__QueryPartitionClause__Group_1_1__2__Impl )
            // InternalSqlParser.g:14063:2: rule__QueryPartitionClause__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_1_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_1_1__2"


    // $ANTLR start "rule__QueryPartitionClause__Group_1_1__2__Impl"
    // InternalSqlParser.g:14069:1: rule__QueryPartitionClause__Group_1_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14073:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:14074:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:14074:1: ( RightParenthesis )
            // InternalSqlParser.g:14075:1: RightParenthesis
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_1_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_1_1__2__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0"
    // InternalSqlParser.g:14094:1: rule__AnalyticExprArgs__Group__0 : rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 ;
    public final void rule__AnalyticExprArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14098:1: ( rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 )
            // InternalSqlParser.g:14099:2: rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__AnalyticExprArgs__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0__Impl"
    // InternalSqlParser.g:14106:1: rule__AnalyticExprArgs__Group__0__Impl : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14110:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:14111:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:14111:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:14112:1: ruleAnalyticExprArg
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;

             after(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1"
    // InternalSqlParser.g:14123:1: rule__AnalyticExprArgs__Group__1 : rule__AnalyticExprArgs__Group__1__Impl ;
    public final void rule__AnalyticExprArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14127:1: ( rule__AnalyticExprArgs__Group__1__Impl )
            // InternalSqlParser.g:14128:2: rule__AnalyticExprArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1__Impl"
    // InternalSqlParser.g:14134:1: rule__AnalyticExprArgs__Group__1__Impl : ( ( rule__AnalyticExprArgs__Group_1__0 )? ) ;
    public final void rule__AnalyticExprArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14138:1: ( ( ( rule__AnalyticExprArgs__Group_1__0 )? ) )
            // InternalSqlParser.g:14139:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            {
            // InternalSqlParser.g:14139:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            // InternalSqlParser.g:14140:1: ( rule__AnalyticExprArgs__Group_1__0 )?
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 
            // InternalSqlParser.g:14141:1: ( rule__AnalyticExprArgs__Group_1__0 )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==Comma) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalSqlParser.g:14141:2: rule__AnalyticExprArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArgs__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0"
    // InternalSqlParser.g:14155:1: rule__AnalyticExprArgs__Group_1__0 : rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14159:1: ( rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 )
            // InternalSqlParser.g:14160:2: rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__AnalyticExprArgs__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0__Impl"
    // InternalSqlParser.g:14167:1: rule__AnalyticExprArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__AnalyticExprArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14171:1: ( ( () ) )
            // InternalSqlParser.g:14172:1: ( () )
            {
            // InternalSqlParser.g:14172:1: ( () )
            // InternalSqlParser.g:14173:1: ()
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 
            // InternalSqlParser.g:14174:1: ()
            // InternalSqlParser.g:14176:1: 
            {
            }

             after(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1"
    // InternalSqlParser.g:14186:1: rule__AnalyticExprArgs__Group_1__1 : rule__AnalyticExprArgs__Group_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14190:1: ( rule__AnalyticExprArgs__Group_1__1__Impl )
            // InternalSqlParser.g:14191:2: rule__AnalyticExprArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1__Impl"
    // InternalSqlParser.g:14197:1: rule__AnalyticExprArgs__Group_1__1__Impl : ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) ;
    public final void rule__AnalyticExprArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14201:1: ( ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:14202:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:14202:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            // InternalSqlParser.g:14203:1: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:14203:1: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) )
            // InternalSqlParser.g:14204:1: ( rule__AnalyticExprArgs__Group_1_1__0 )
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:14205:1: ( rule__AnalyticExprArgs__Group_1_1__0 )
            // InternalSqlParser.g:14205:2: rule__AnalyticExprArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_23);
            rule__AnalyticExprArgs__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:14208:1: ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            // InternalSqlParser.g:14209:1: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:14210:1: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==Comma) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalSqlParser.g:14210:2: rule__AnalyticExprArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__AnalyticExprArgs__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);

             after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0"
    // InternalSqlParser.g:14225:1: rule__AnalyticExprArgs__Group_1_1__0 : rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14229:1: ( rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 )
            // InternalSqlParser.g:14230:2: rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_70);
            rule__AnalyticExprArgs__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0__Impl"
    // InternalSqlParser.g:14237:1: rule__AnalyticExprArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14241:1: ( ( Comma ) )
            // InternalSqlParser.g:14242:1: ( Comma )
            {
            // InternalSqlParser.g:14242:1: ( Comma )
            // InternalSqlParser.g:14243:1: Comma
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1"
    // InternalSqlParser.g:14256:1: rule__AnalyticExprArgs__Group_1_1__1 : rule__AnalyticExprArgs__Group_1_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14260:1: ( rule__AnalyticExprArgs__Group_1_1__1__Impl )
            // InternalSqlParser.g:14261:2: rule__AnalyticExprArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1__Impl"
    // InternalSqlParser.g:14267:1: rule__AnalyticExprArgs__Group_1_1__1__Impl : ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14271:1: ( ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:14272:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:14272:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:14273:1: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:14274:1: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:14274:2: rule__AnalyticExprArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__0"
    // InternalSqlParser.g:14288:1: rule__AnalyticExprArg__Group__0 : rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 ;
    public final void rule__AnalyticExprArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14292:1: ( rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 )
            // InternalSqlParser.g:14293:2: rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__AnalyticExprArg__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0"


    // $ANTLR start "rule__AnalyticExprArg__Group__0__Impl"
    // InternalSqlParser.g:14300:1: rule__AnalyticExprArg__Group__0__Impl : ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) ;
    public final void rule__AnalyticExprArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14304:1: ( ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) )
            // InternalSqlParser.g:14305:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            {
            // InternalSqlParser.g:14305:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            // InternalSqlParser.g:14306:1: ( rule__AnalyticExprArg__CeAssignment_0 )
            {
             before(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 
            // InternalSqlParser.g:14307:1: ( rule__AnalyticExprArg__CeAssignment_0 )
            // InternalSqlParser.g:14307:2: rule__AnalyticExprArg__CeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__CeAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__1"
    // InternalSqlParser.g:14317:1: rule__AnalyticExprArg__Group__1 : rule__AnalyticExprArg__Group__1__Impl ;
    public final void rule__AnalyticExprArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14321:1: ( rule__AnalyticExprArg__Group__1__Impl )
            // InternalSqlParser.g:14322:2: rule__AnalyticExprArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1"


    // $ANTLR start "rule__AnalyticExprArg__Group__1__Impl"
    // InternalSqlParser.g:14328:1: rule__AnalyticExprArg__Group__1__Impl : ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) ;
    public final void rule__AnalyticExprArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14332:1: ( ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) )
            // InternalSqlParser.g:14333:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            {
            // InternalSqlParser.g:14333:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            // InternalSqlParser.g:14334:1: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            {
             before(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 
            // InternalSqlParser.g:14335:1: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( ((LA125_0>=RULE_STRING && LA125_0<=RULE_ID)) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalSqlParser.g:14335:2: rule__AnalyticExprArg__ColAliasAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArg__ColAliasAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__0"
    // InternalSqlParser.g:14349:1: rule__OpFunctionArg__Group__0 : rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 ;
    public final void rule__OpFunctionArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14353:1: ( rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 )
            // InternalSqlParser.g:14354:2: rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__OpFunctionArg__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0"


    // $ANTLR start "rule__OpFunctionArg__Group__0__Impl"
    // InternalSqlParser.g:14361:1: rule__OpFunctionArg__Group__0__Impl : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14365:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSqlParser.g:14366:1: ( ruleOpFunctionArgOperand )
            {
            // InternalSqlParser.g:14366:1: ( ruleOpFunctionArgOperand )
            // InternalSqlParser.g:14367:1: ruleOpFunctionArgOperand
            {
             before(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;

             after(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__1"
    // InternalSqlParser.g:14378:1: rule__OpFunctionArg__Group__1 : rule__OpFunctionArg__Group__1__Impl ;
    public final void rule__OpFunctionArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14382:1: ( rule__OpFunctionArg__Group__1__Impl )
            // InternalSqlParser.g:14383:2: rule__OpFunctionArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1"


    // $ANTLR start "rule__OpFunctionArg__Group__1__Impl"
    // InternalSqlParser.g:14389:1: rule__OpFunctionArg__Group__1__Impl : ( ( rule__OpFunctionArg__Group_1__0 )? ) ;
    public final void rule__OpFunctionArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14393:1: ( ( ( rule__OpFunctionArg__Group_1__0 )? ) )
            // InternalSqlParser.g:14394:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            {
            // InternalSqlParser.g:14394:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            // InternalSqlParser.g:14395:1: ( rule__OpFunctionArg__Group_1__0 )?
            {
             before(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 
            // InternalSqlParser.g:14396:1: ( rule__OpFunctionArg__Group_1__0 )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==Comma) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalSqlParser.g:14396:2: rule__OpFunctionArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionArg__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0"
    // InternalSqlParser.g:14410:1: rule__OpFunctionArg__Group_1__0 : rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 ;
    public final void rule__OpFunctionArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14414:1: ( rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 )
            // InternalSqlParser.g:14415:2: rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__OpFunctionArg__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0__Impl"
    // InternalSqlParser.g:14422:1: rule__OpFunctionArg__Group_1__0__Impl : ( () ) ;
    public final void rule__OpFunctionArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14426:1: ( ( () ) )
            // InternalSqlParser.g:14427:1: ( () )
            {
            // InternalSqlParser.g:14427:1: ( () )
            // InternalSqlParser.g:14428:1: ()
            {
             before(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 
            // InternalSqlParser.g:14429:1: ()
            // InternalSqlParser.g:14431:1: 
            {
            }

             after(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1"
    // InternalSqlParser.g:14441:1: rule__OpFunctionArg__Group_1__1 : rule__OpFunctionArg__Group_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14445:1: ( rule__OpFunctionArg__Group_1__1__Impl )
            // InternalSqlParser.g:14446:2: rule__OpFunctionArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1__Impl"
    // InternalSqlParser.g:14452:1: rule__OpFunctionArg__Group_1__1__Impl : ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) ;
    public final void rule__OpFunctionArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14456:1: ( ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:14457:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:14457:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            // InternalSqlParser.g:14458:1: ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:14458:1: ( ( rule__OpFunctionArg__Group_1_1__0 ) )
            // InternalSqlParser.g:14459:1: ( rule__OpFunctionArg__Group_1_1__0 )
            {
             before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            // InternalSqlParser.g:14460:1: ( rule__OpFunctionArg__Group_1_1__0 )
            // InternalSqlParser.g:14460:2: rule__OpFunctionArg__Group_1_1__0
            {
            pushFollow(FOLLOW_23);
            rule__OpFunctionArg__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:14463:1: ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            // InternalSqlParser.g:14464:1: ( rule__OpFunctionArg__Group_1_1__0 )*
            {
             before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            // InternalSqlParser.g:14465:1: ( rule__OpFunctionArg__Group_1_1__0 )*
            loop127:
            do {
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( (LA127_0==Comma) ) {
                    alt127=1;
                }


                switch (alt127) {
            	case 1 :
            	    // InternalSqlParser.g:14465:2: rule__OpFunctionArg__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__OpFunctionArg__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop127;
                }
            } while (true);

             after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0"
    // InternalSqlParser.g:14480:1: rule__OpFunctionArg__Group_1_1__0 : rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 ;
    public final void rule__OpFunctionArg__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14484:1: ( rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 )
            // InternalSqlParser.g:14485:2: rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1
            {
            pushFollow(FOLLOW_75);
            rule__OpFunctionArg__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0__Impl"
    // InternalSqlParser.g:14492:1: rule__OpFunctionArg__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionArg__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14496:1: ( ( Comma ) )
            // InternalSqlParser.g:14497:1: ( Comma )
            {
            // InternalSqlParser.g:14497:1: ( Comma )
            // InternalSqlParser.g:14498:1: Comma
            {
             before(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1"
    // InternalSqlParser.g:14511:1: rule__OpFunctionArg__Group_1_1__1 : rule__OpFunctionArg__Group_1_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14515:1: ( rule__OpFunctionArg__Group_1_1__1__Impl )
            // InternalSqlParser.g:14516:2: rule__OpFunctionArg__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1__Impl"
    // InternalSqlParser.g:14522:1: rule__OpFunctionArg__Group_1_1__1__Impl : ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OpFunctionArg__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14526:1: ( ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:14527:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:14527:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:14528:1: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:14529:1: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:14529:2: rule__OpFunctionArg__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__0"
    // InternalSqlParser.g:14543:1: rule__OpFunctionCast__Group__0 : rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 ;
    public final void rule__OpFunctionCast__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14547:1: ( rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 )
            // InternalSqlParser.g:14548:2: rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__OpFunctionCast__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0"


    // $ANTLR start "rule__OpFunctionCast__Group__0__Impl"
    // InternalSqlParser.g:14555:1: rule__OpFunctionCast__Group__0__Impl : ( CAST ) ;
    public final void rule__OpFunctionCast__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14559:1: ( ( CAST ) )
            // InternalSqlParser.g:14560:1: ( CAST )
            {
            // InternalSqlParser.g:14560:1: ( CAST )
            // InternalSqlParser.g:14561:1: CAST
            {
             before(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 
            match(input,CAST,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__1"
    // InternalSqlParser.g:14574:1: rule__OpFunctionCast__Group__1 : rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 ;
    public final void rule__OpFunctionCast__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14578:1: ( rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 )
            // InternalSqlParser.g:14579:2: rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__OpFunctionCast__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1"


    // $ANTLR start "rule__OpFunctionCast__Group__1__Impl"
    // InternalSqlParser.g:14586:1: rule__OpFunctionCast__Group__1__Impl : ( ( rule__OpFunctionCast__OpAssignment_1 ) ) ;
    public final void rule__OpFunctionCast__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14590:1: ( ( ( rule__OpFunctionCast__OpAssignment_1 ) ) )
            // InternalSqlParser.g:14591:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            {
            // InternalSqlParser.g:14591:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            // InternalSqlParser.g:14592:1: ( rule__OpFunctionCast__OpAssignment_1 )
            {
             before(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 
            // InternalSqlParser.g:14593:1: ( rule__OpFunctionCast__OpAssignment_1 )
            // InternalSqlParser.g:14593:2: rule__OpFunctionCast__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__OpAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__2"
    // InternalSqlParser.g:14603:1: rule__OpFunctionCast__Group__2 : rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 ;
    public final void rule__OpFunctionCast__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14607:1: ( rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 )
            // InternalSqlParser.g:14608:2: rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__OpFunctionCast__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2"


    // $ANTLR start "rule__OpFunctionCast__Group__2__Impl"
    // InternalSqlParser.g:14615:1: rule__OpFunctionCast__Group__2__Impl : ( AS ) ;
    public final void rule__OpFunctionCast__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14619:1: ( ( AS ) )
            // InternalSqlParser.g:14620:1: ( AS )
            {
            // InternalSqlParser.g:14620:1: ( AS )
            // InternalSqlParser.g:14621:1: AS
            {
             before(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 
            match(input,AS,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__3"
    // InternalSqlParser.g:14634:1: rule__OpFunctionCast__Group__3 : rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 ;
    public final void rule__OpFunctionCast__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14638:1: ( rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 )
            // InternalSqlParser.g:14639:2: rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4
            {
            pushFollow(FOLLOW_76);
            rule__OpFunctionCast__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3"


    // $ANTLR start "rule__OpFunctionCast__Group__3__Impl"
    // InternalSqlParser.g:14646:1: rule__OpFunctionCast__Group__3__Impl : ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) ;
    public final void rule__OpFunctionCast__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14650:1: ( ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) )
            // InternalSqlParser.g:14651:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            {
            // InternalSqlParser.g:14651:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            // InternalSqlParser.g:14652:1: ( rule__OpFunctionCast__TypeAssignment_3 )
            {
             before(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 
            // InternalSqlParser.g:14653:1: ( rule__OpFunctionCast__TypeAssignment_3 )
            // InternalSqlParser.g:14653:2: rule__OpFunctionCast__TypeAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__TypeAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__4"
    // InternalSqlParser.g:14663:1: rule__OpFunctionCast__Group__4 : rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 ;
    public final void rule__OpFunctionCast__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14667:1: ( rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 )
            // InternalSqlParser.g:14668:2: rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5
            {
            pushFollow(FOLLOW_76);
            rule__OpFunctionCast__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4"


    // $ANTLR start "rule__OpFunctionCast__Group__4__Impl"
    // InternalSqlParser.g:14675:1: rule__OpFunctionCast__Group__4__Impl : ( ( rule__OpFunctionCast__Group_4__0 )? ) ;
    public final void rule__OpFunctionCast__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14679:1: ( ( ( rule__OpFunctionCast__Group_4__0 )? ) )
            // InternalSqlParser.g:14680:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            {
            // InternalSqlParser.g:14680:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            // InternalSqlParser.g:14681:1: ( rule__OpFunctionCast__Group_4__0 )?
            {
             before(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 
            // InternalSqlParser.g:14682:1: ( rule__OpFunctionCast__Group_4__0 )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==LeftParenthesis) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalSqlParser.g:14682:2: rule__OpFunctionCast__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__5"
    // InternalSqlParser.g:14692:1: rule__OpFunctionCast__Group__5 : rule__OpFunctionCast__Group__5__Impl ;
    public final void rule__OpFunctionCast__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14696:1: ( rule__OpFunctionCast__Group__5__Impl )
            // InternalSqlParser.g:14697:2: rule__OpFunctionCast__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5"


    // $ANTLR start "rule__OpFunctionCast__Group__5__Impl"
    // InternalSqlParser.g:14703:1: rule__OpFunctionCast__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14707:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:14708:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:14708:1: ( RightParenthesis )
            // InternalSqlParser.g:14709:1: RightParenthesis
            {
             before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0"
    // InternalSqlParser.g:14734:1: rule__OpFunctionCast__Group_4__0 : rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 ;
    public final void rule__OpFunctionCast__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14738:1: ( rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 )
            // InternalSqlParser.g:14739:2: rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1
            {
            pushFollow(FOLLOW_21);
            rule__OpFunctionCast__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0__Impl"
    // InternalSqlParser.g:14746:1: rule__OpFunctionCast__Group_4__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14750:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:14751:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:14751:1: ( LeftParenthesis )
            // InternalSqlParser.g:14752:1: LeftParenthesis
            {
             before(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1"
    // InternalSqlParser.g:14765:1: rule__OpFunctionCast__Group_4__1 : rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 ;
    public final void rule__OpFunctionCast__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14769:1: ( rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 )
            // InternalSqlParser.g:14770:2: rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2
            {
            pushFollow(FOLLOW_77);
            rule__OpFunctionCast__Group_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1__Impl"
    // InternalSqlParser.g:14777:1: rule__OpFunctionCast__Group_4__1__Impl : ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14781:1: ( ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) )
            // InternalSqlParser.g:14782:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            {
            // InternalSqlParser.g:14782:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            // InternalSqlParser.g:14783:1: ( rule__OpFunctionCast__PAssignment_4_1 )
            {
             before(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 
            // InternalSqlParser.g:14784:1: ( rule__OpFunctionCast__PAssignment_4_1 )
            // InternalSqlParser.g:14784:2: rule__OpFunctionCast__PAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__PAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2"
    // InternalSqlParser.g:14794:1: rule__OpFunctionCast__Group_4__2 : rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 ;
    public final void rule__OpFunctionCast__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14798:1: ( rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 )
            // InternalSqlParser.g:14799:2: rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3
            {
            pushFollow(FOLLOW_77);
            rule__OpFunctionCast__Group_4__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2__Impl"
    // InternalSqlParser.g:14806:1: rule__OpFunctionCast__Group_4__2__Impl : ( ( rule__OpFunctionCast__Group_4_2__0 )? ) ;
    public final void rule__OpFunctionCast__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14810:1: ( ( ( rule__OpFunctionCast__Group_4_2__0 )? ) )
            // InternalSqlParser.g:14811:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            {
            // InternalSqlParser.g:14811:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            // InternalSqlParser.g:14812:1: ( rule__OpFunctionCast__Group_4_2__0 )?
            {
             before(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 
            // InternalSqlParser.g:14813:1: ( rule__OpFunctionCast__Group_4_2__0 )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==Comma) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalSqlParser.g:14813:2: rule__OpFunctionCast__Group_4_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3"
    // InternalSqlParser.g:14823:1: rule__OpFunctionCast__Group_4__3 : rule__OpFunctionCast__Group_4__3__Impl ;
    public final void rule__OpFunctionCast__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14827:1: ( rule__OpFunctionCast__Group_4__3__Impl )
            // InternalSqlParser.g:14828:2: rule__OpFunctionCast__Group_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3__Impl"
    // InternalSqlParser.g:14834:1: rule__OpFunctionCast__Group_4__3__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14838:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:14839:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:14839:1: ( RightParenthesis )
            // InternalSqlParser.g:14840:1: RightParenthesis
            {
             before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0"
    // InternalSqlParser.g:14861:1: rule__OpFunctionCast__Group_4_2__0 : rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 ;
    public final void rule__OpFunctionCast__Group_4_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14865:1: ( rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 )
            // InternalSqlParser.g:14866:2: rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1
            {
            pushFollow(FOLLOW_21);
            rule__OpFunctionCast__Group_4_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0__Impl"
    // InternalSqlParser.g:14873:1: rule__OpFunctionCast__Group_4_2__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionCast__Group_4_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14877:1: ( ( Comma ) )
            // InternalSqlParser.g:14878:1: ( Comma )
            {
            // InternalSqlParser.g:14878:1: ( Comma )
            // InternalSqlParser.g:14879:1: Comma
            {
             before(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1"
    // InternalSqlParser.g:14892:1: rule__OpFunctionCast__Group_4_2__1 : rule__OpFunctionCast__Group_4_2__1__Impl ;
    public final void rule__OpFunctionCast__Group_4_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14896:1: ( rule__OpFunctionCast__Group_4_2__1__Impl )
            // InternalSqlParser.g:14897:2: rule__OpFunctionCast__Group_4_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1__Impl"
    // InternalSqlParser.g:14903:1: rule__OpFunctionCast__Group_4_2__1__Impl : ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14907:1: ( ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) )
            // InternalSqlParser.g:14908:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            {
            // InternalSqlParser.g:14908:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            // InternalSqlParser.g:14909:1: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            {
             before(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 
            // InternalSqlParser.g:14910:1: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            // InternalSqlParser.g:14910:2: rule__OpFunctionCast__P2Assignment_4_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__P2Assignment_4_2_1();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0"
    // InternalSqlParser.g:14924:1: rule__OpFunctionArgAgregate__Group__0 : rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 ;
    public final void rule__OpFunctionArgAgregate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14928:1: ( rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 )
            // InternalSqlParser.g:14929:2: rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__OpFunctionArgAgregate__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0__Impl"
    // InternalSqlParser.g:14936:1: rule__OpFunctionArgAgregate__Group__0__Impl : ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) ;
    public final void rule__OpFunctionArgAgregate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14940:1: ( ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) )
            // InternalSqlParser.g:14941:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            {
            // InternalSqlParser.g:14941:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            // InternalSqlParser.g:14942:1: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            {
             before(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 
            // InternalSqlParser.g:14943:1: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            // InternalSqlParser.g:14943:2: rule__OpFunctionArgAgregate__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Alternatives_0();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1"
    // InternalSqlParser.g:14953:1: rule__OpFunctionArgAgregate__Group__1 : rule__OpFunctionArgAgregate__Group__1__Impl ;
    public final void rule__OpFunctionArgAgregate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14957:1: ( rule__OpFunctionArgAgregate__Group__1__Impl )
            // InternalSqlParser.g:14958:2: rule__OpFunctionArgAgregate__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1__Impl"
    // InternalSqlParser.g:14964:1: rule__OpFunctionArgAgregate__Group__1__Impl : ( ruleOperand ) ;
    public final void rule__OpFunctionArgAgregate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14968:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:14969:1: ( ruleOperand )
            {
            // InternalSqlParser.g:14969:1: ( ruleOperand )
            // InternalSqlParser.g:14970:1: ruleOperand
            {
             before(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;

             after(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__0"
    // InternalSqlParser.g:14985:1: rule__ColumnOperand__Group__0 : rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 ;
    public final void rule__ColumnOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14989:1: ( rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 )
            // InternalSqlParser.g:14990:2: rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__ColumnOperand__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0"


    // $ANTLR start "rule__ColumnOperand__Group__0__Impl"
    // InternalSqlParser.g:14997:1: rule__ColumnOperand__Group__0__Impl : ( ( rule__ColumnOperand__CfullAssignment_0 ) ) ;
    public final void rule__ColumnOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15001:1: ( ( ( rule__ColumnOperand__CfullAssignment_0 ) ) )
            // InternalSqlParser.g:15002:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            {
            // InternalSqlParser.g:15002:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            // InternalSqlParser.g:15003:1: ( rule__ColumnOperand__CfullAssignment_0 )
            {
             before(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 
            // InternalSqlParser.g:15004:1: ( rule__ColumnOperand__CfullAssignment_0 )
            // InternalSqlParser.g:15004:2: rule__ColumnOperand__CfullAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__CfullAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__1"
    // InternalSqlParser.g:15014:1: rule__ColumnOperand__Group__1 : rule__ColumnOperand__Group__1__Impl ;
    public final void rule__ColumnOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15018:1: ( rule__ColumnOperand__Group__1__Impl )
            // InternalSqlParser.g:15019:2: rule__ColumnOperand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1"


    // $ANTLR start "rule__ColumnOperand__Group__1__Impl"
    // InternalSqlParser.g:15025:1: rule__ColumnOperand__Group__1__Impl : ( ( rule__ColumnOperand__OraAssignment_1 )? ) ;
    public final void rule__ColumnOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15029:1: ( ( ( rule__ColumnOperand__OraAssignment_1 )? ) )
            // InternalSqlParser.g:15030:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            {
            // InternalSqlParser.g:15030:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            // InternalSqlParser.g:15031:1: ( rule__ColumnOperand__OraAssignment_1 )?
            {
             before(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 
            // InternalSqlParser.g:15032:1: ( rule__ColumnOperand__OraAssignment_1 )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==LeftParenthesisPlusSignRightParenthesis) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalSqlParser.g:15032:2: rule__ColumnOperand__OraAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOperand__OraAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__0"
    // InternalSqlParser.g:15046:1: rule__SubQueryOperand__Group__0 : rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 ;
    public final void rule__SubQueryOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15050:1: ( rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 )
            // InternalSqlParser.g:15051:2: rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__SubQueryOperand__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0"


    // $ANTLR start "rule__SubQueryOperand__Group__0__Impl"
    // InternalSqlParser.g:15058:1: rule__SubQueryOperand__Group__0__Impl : ( () ) ;
    public final void rule__SubQueryOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15062:1: ( ( () ) )
            // InternalSqlParser.g:15063:1: ( () )
            {
            // InternalSqlParser.g:15063:1: ( () )
            // InternalSqlParser.g:15064:1: ()
            {
             before(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 
            // InternalSqlParser.g:15065:1: ()
            // InternalSqlParser.g:15067:1: 
            {
            }

             after(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__1"
    // InternalSqlParser.g:15077:1: rule__SubQueryOperand__Group__1 : rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 ;
    public final void rule__SubQueryOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15081:1: ( rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 )
            // InternalSqlParser.g:15082:2: rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__SubQueryOperand__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1"


    // $ANTLR start "rule__SubQueryOperand__Group__1__Impl"
    // InternalSqlParser.g:15089:1: rule__SubQueryOperand__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__SubQueryOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15093:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:15094:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:15094:1: ( LeftParenthesis )
            // InternalSqlParser.g:15095:1: LeftParenthesis
            {
             before(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__2"
    // InternalSqlParser.g:15108:1: rule__SubQueryOperand__Group__2 : rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 ;
    public final void rule__SubQueryOperand__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15112:1: ( rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 )
            // InternalSqlParser.g:15113:2: rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__SubQueryOperand__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2"


    // $ANTLR start "rule__SubQueryOperand__Group__2__Impl"
    // InternalSqlParser.g:15120:1: rule__SubQueryOperand__Group__2__Impl : ( ( rule__SubQueryOperand__SelAssignment_2 ) ) ;
    public final void rule__SubQueryOperand__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15124:1: ( ( ( rule__SubQueryOperand__SelAssignment_2 ) ) )
            // InternalSqlParser.g:15125:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            {
            // InternalSqlParser.g:15125:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            // InternalSqlParser.g:15126:1: ( rule__SubQueryOperand__SelAssignment_2 )
            {
             before(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 
            // InternalSqlParser.g:15127:1: ( rule__SubQueryOperand__SelAssignment_2 )
            // InternalSqlParser.g:15127:2: rule__SubQueryOperand__SelAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__SelAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__3"
    // InternalSqlParser.g:15137:1: rule__SubQueryOperand__Group__3 : rule__SubQueryOperand__Group__3__Impl ;
    public final void rule__SubQueryOperand__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15141:1: ( rule__SubQueryOperand__Group__3__Impl )
            // InternalSqlParser.g:15142:2: rule__SubQueryOperand__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3"


    // $ANTLR start "rule__SubQueryOperand__Group__3__Impl"
    // InternalSqlParser.g:15148:1: rule__SubQueryOperand__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__SubQueryOperand__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15152:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:15153:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:15153:1: ( RightParenthesis )
            // InternalSqlParser.g:15154:1: RightParenthesis
            {
             before(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3__Impl"


    // $ANTLR start "rule__SQLCASE__Group__0"
    // InternalSqlParser.g:15175:1: rule__SQLCASE__Group__0 : rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 ;
    public final void rule__SQLCASE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15179:1: ( rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 )
            // InternalSqlParser.g:15180:2: rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1
            {
            pushFollow(FOLLOW_79);
            rule__SQLCASE__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0"


    // $ANTLR start "rule__SQLCASE__Group__0__Impl"
    // InternalSqlParser.g:15187:1: rule__SQLCASE__Group__0__Impl : ( CASE ) ;
    public final void rule__SQLCASE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15191:1: ( ( CASE ) )
            // InternalSqlParser.g:15192:1: ( CASE )
            {
            // InternalSqlParser.g:15192:1: ( CASE )
            // InternalSqlParser.g:15193:1: CASE
            {
             before(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 
            match(input,CASE,FOLLOW_2); 
             after(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0__Impl"


    // $ANTLR start "rule__SQLCASE__Group__1"
    // InternalSqlParser.g:15206:1: rule__SQLCASE__Group__1 : rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 ;
    public final void rule__SQLCASE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15210:1: ( rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 )
            // InternalSqlParser.g:15211:2: rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2
            {
            pushFollow(FOLLOW_79);
            rule__SQLCASE__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1"


    // $ANTLR start "rule__SQLCASE__Group__1__Impl"
    // InternalSqlParser.g:15218:1: rule__SQLCASE__Group__1__Impl : ( ( rule__SQLCASE__ExprAssignment_1 )? ) ;
    public final void rule__SQLCASE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15222:1: ( ( ( rule__SQLCASE__ExprAssignment_1 )? ) )
            // InternalSqlParser.g:15223:1: ( ( rule__SQLCASE__ExprAssignment_1 )? )
            {
            // InternalSqlParser.g:15223:1: ( ( rule__SQLCASE__ExprAssignment_1 )? )
            // InternalSqlParser.g:15224:1: ( rule__SQLCASE__ExprAssignment_1 )?
            {
             before(grammarAccess.getSQLCASEAccess().getExprAssignment_1()); 
            // InternalSqlParser.g:15225:1: ( rule__SQLCASE__ExprAssignment_1 )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==NOTEXISTS||LA131_0==EXTRACT||LA131_0==EXISTS||LA131_0==NOTIN_1||LA131_0==CAST||LA131_0==CASE||(LA131_0>=NOT && LA131_0<=NOT_1)||LA131_0==X||LA131_0==IN||LA131_0==LeftParenthesis||(LA131_0>=RULE_JRPARAM && LA131_0<=RULE_JRNPARAM)||(LA131_0>=RULE_UNSIGNED && LA131_0<=RULE_SIGNED_DOUBLE)||(LA131_0>=RULE_STRING_ && LA131_0<=RULE_ID)) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalSqlParser.g:15225:2: rule__SQLCASE__ExprAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__ExprAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSQLCASEAccess().getExprAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1__Impl"


    // $ANTLR start "rule__SQLCASE__Group__2"
    // InternalSqlParser.g:15235:1: rule__SQLCASE__Group__2 : rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 ;
    public final void rule__SQLCASE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15239:1: ( rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 )
            // InternalSqlParser.g:15240:2: rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3
            {
            pushFollow(FOLLOW_80);
            rule__SQLCASE__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2"


    // $ANTLR start "rule__SQLCASE__Group__2__Impl"
    // InternalSqlParser.g:15247:1: rule__SQLCASE__Group__2__Impl : ( ( rule__SQLCASE__WhenAssignment_2 ) ) ;
    public final void rule__SQLCASE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15251:1: ( ( ( rule__SQLCASE__WhenAssignment_2 ) ) )
            // InternalSqlParser.g:15252:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            {
            // InternalSqlParser.g:15252:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            // InternalSqlParser.g:15253:1: ( rule__SQLCASE__WhenAssignment_2 )
            {
             before(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 
            // InternalSqlParser.g:15254:1: ( rule__SQLCASE__WhenAssignment_2 )
            // InternalSqlParser.g:15254:2: rule__SQLCASE__WhenAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__WhenAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2__Impl"


    // $ANTLR start "rule__SQLCASE__Group__3"
    // InternalSqlParser.g:15264:1: rule__SQLCASE__Group__3 : rule__SQLCASE__Group__3__Impl ;
    public final void rule__SQLCASE__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15268:1: ( rule__SQLCASE__Group__3__Impl )
            // InternalSqlParser.g:15269:2: rule__SQLCASE__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3"


    // $ANTLR start "rule__SQLCASE__Group__3__Impl"
    // InternalSqlParser.g:15275:1: rule__SQLCASE__Group__3__Impl : ( END ) ;
    public final void rule__SQLCASE__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15279:1: ( ( END ) )
            // InternalSqlParser.g:15280:1: ( END )
            {
            // InternalSqlParser.g:15280:1: ( END )
            // InternalSqlParser.g:15281:1: END
            {
             before(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 
            match(input,END,FOLLOW_2); 
             after(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__0"
    // InternalSqlParser.g:15302:1: rule__SQLCaseWhens__Group__0 : rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 ;
    public final void rule__SQLCaseWhens__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15306:1: ( rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 )
            // InternalSqlParser.g:15307:2: rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1
            {
            pushFollow(FOLLOW_79);
            rule__SQLCaseWhens__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0"


    // $ANTLR start "rule__SQLCaseWhens__Group__0__Impl"
    // InternalSqlParser.g:15314:1: rule__SQLCaseWhens__Group__0__Impl : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15318:1: ( ( ruleSqlCaseWhen ) )
            // InternalSqlParser.g:15319:1: ( ruleSqlCaseWhen )
            {
            // InternalSqlParser.g:15319:1: ( ruleSqlCaseWhen )
            // InternalSqlParser.g:15320:1: ruleSqlCaseWhen
            {
             before(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;

             after(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__1"
    // InternalSqlParser.g:15331:1: rule__SQLCaseWhens__Group__1 : rule__SQLCaseWhens__Group__1__Impl ;
    public final void rule__SQLCaseWhens__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15335:1: ( rule__SQLCaseWhens__Group__1__Impl )
            // InternalSqlParser.g:15336:2: rule__SQLCaseWhens__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1"


    // $ANTLR start "rule__SQLCaseWhens__Group__1__Impl"
    // InternalSqlParser.g:15342:1: rule__SQLCaseWhens__Group__1__Impl : ( ( rule__SQLCaseWhens__Group_1__0 )? ) ;
    public final void rule__SQLCaseWhens__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15346:1: ( ( ( rule__SQLCaseWhens__Group_1__0 )? ) )
            // InternalSqlParser.g:15347:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            {
            // InternalSqlParser.g:15347:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            // InternalSqlParser.g:15348:1: ( rule__SQLCaseWhens__Group_1__0 )?
            {
             before(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 
            // InternalSqlParser.g:15349:1: ( rule__SQLCaseWhens__Group_1__0 )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==WHEN) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalSqlParser.g:15349:2: rule__SQLCaseWhens__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCaseWhens__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0"
    // InternalSqlParser.g:15363:1: rule__SQLCaseWhens__Group_1__0 : rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 ;
    public final void rule__SQLCaseWhens__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15367:1: ( rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 )
            // InternalSqlParser.g:15368:2: rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1
            {
            pushFollow(FOLLOW_79);
            rule__SQLCaseWhens__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0__Impl"
    // InternalSqlParser.g:15375:1: rule__SQLCaseWhens__Group_1__0__Impl : ( () ) ;
    public final void rule__SQLCaseWhens__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15379:1: ( ( () ) )
            // InternalSqlParser.g:15380:1: ( () )
            {
            // InternalSqlParser.g:15380:1: ( () )
            // InternalSqlParser.g:15381:1: ()
            {
             before(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 
            // InternalSqlParser.g:15382:1: ()
            // InternalSqlParser.g:15384:1: 
            {
            }

             after(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1"
    // InternalSqlParser.g:15394:1: rule__SQLCaseWhens__Group_1__1 : rule__SQLCaseWhens__Group_1__1__Impl ;
    public final void rule__SQLCaseWhens__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15398:1: ( rule__SQLCaseWhens__Group_1__1__Impl )
            // InternalSqlParser.g:15399:2: rule__SQLCaseWhens__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1__Impl"
    // InternalSqlParser.g:15405:1: rule__SQLCaseWhens__Group_1__1__Impl : ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__SQLCaseWhens__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15409:1: ( ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) )
            // InternalSqlParser.g:15410:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            {
            // InternalSqlParser.g:15410:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            // InternalSqlParser.g:15411:1: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            {
            // InternalSqlParser.g:15411:1: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) )
            // InternalSqlParser.g:15412:1: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            {
             before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            // InternalSqlParser.g:15413:1: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            // InternalSqlParser.g:15413:2: rule__SQLCaseWhens__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_81);
            rule__SQLCaseWhens__EntriesAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 

            }

            // InternalSqlParser.g:15416:1: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            // InternalSqlParser.g:15417:1: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            {
             before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            // InternalSqlParser.g:15418:1: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==WHEN) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalSqlParser.g:15418:2: rule__SQLCaseWhens__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_81);
            	    rule__SQLCaseWhens__EntriesAssignment_1_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

             after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__0"
    // InternalSqlParser.g:15433:1: rule__SqlCaseWhen__Group__0 : rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 ;
    public final void rule__SqlCaseWhen__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15437:1: ( rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 )
            // InternalSqlParser.g:15438:2: rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__SqlCaseWhen__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0"


    // $ANTLR start "rule__SqlCaseWhen__Group__0__Impl"
    // InternalSqlParser.g:15445:1: rule__SqlCaseWhen__Group__0__Impl : ( WHEN ) ;
    public final void rule__SqlCaseWhen__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15449:1: ( ( WHEN ) )
            // InternalSqlParser.g:15450:1: ( WHEN )
            {
            // InternalSqlParser.g:15450:1: ( WHEN )
            // InternalSqlParser.g:15451:1: WHEN
            {
             before(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 
            match(input,WHEN,FOLLOW_2); 
             after(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__1"
    // InternalSqlParser.g:15464:1: rule__SqlCaseWhen__Group__1 : rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 ;
    public final void rule__SqlCaseWhen__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15468:1: ( rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 )
            // InternalSqlParser.g:15469:2: rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2
            {
            pushFollow(FOLLOW_82);
            rule__SqlCaseWhen__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1"


    // $ANTLR start "rule__SqlCaseWhen__Group__1__Impl"
    // InternalSqlParser.g:15476:1: rule__SqlCaseWhen__Group__1__Impl : ( ( rule__SqlCaseWhen__ExprAssignment_1 ) ) ;
    public final void rule__SqlCaseWhen__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15480:1: ( ( ( rule__SqlCaseWhen__ExprAssignment_1 ) ) )
            // InternalSqlParser.g:15481:1: ( ( rule__SqlCaseWhen__ExprAssignment_1 ) )
            {
            // InternalSqlParser.g:15481:1: ( ( rule__SqlCaseWhen__ExprAssignment_1 ) )
            // InternalSqlParser.g:15482:1: ( rule__SqlCaseWhen__ExprAssignment_1 )
            {
             before(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1()); 
            // InternalSqlParser.g:15483:1: ( rule__SqlCaseWhen__ExprAssignment_1 )
            // InternalSqlParser.g:15483:2: rule__SqlCaseWhen__ExprAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__ExprAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__2"
    // InternalSqlParser.g:15493:1: rule__SqlCaseWhen__Group__2 : rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 ;
    public final void rule__SqlCaseWhen__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15497:1: ( rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 )
            // InternalSqlParser.g:15498:2: rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3
            {
            pushFollow(FOLLOW_50);
            rule__SqlCaseWhen__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2"


    // $ANTLR start "rule__SqlCaseWhen__Group__2__Impl"
    // InternalSqlParser.g:15505:1: rule__SqlCaseWhen__Group__2__Impl : ( THEN ) ;
    public final void rule__SqlCaseWhen__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15509:1: ( ( THEN ) )
            // InternalSqlParser.g:15510:1: ( THEN )
            {
            // InternalSqlParser.g:15510:1: ( THEN )
            // InternalSqlParser.g:15511:1: THEN
            {
             before(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 
            match(input,THEN,FOLLOW_2); 
             after(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__3"
    // InternalSqlParser.g:15524:1: rule__SqlCaseWhen__Group__3 : rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 ;
    public final void rule__SqlCaseWhen__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15528:1: ( rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 )
            // InternalSqlParser.g:15529:2: rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4
            {
            pushFollow(FOLLOW_83);
            rule__SqlCaseWhen__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3"


    // $ANTLR start "rule__SqlCaseWhen__Group__3__Impl"
    // InternalSqlParser.g:15536:1: rule__SqlCaseWhen__Group__3__Impl : ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) ;
    public final void rule__SqlCaseWhen__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15540:1: ( ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) )
            // InternalSqlParser.g:15541:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            {
            // InternalSqlParser.g:15541:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            // InternalSqlParser.g:15542:1: ( rule__SqlCaseWhen__TexpAssignment_3 )
            {
             before(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 
            // InternalSqlParser.g:15543:1: ( rule__SqlCaseWhen__TexpAssignment_3 )
            // InternalSqlParser.g:15543:2: rule__SqlCaseWhen__TexpAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__TexpAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__4"
    // InternalSqlParser.g:15553:1: rule__SqlCaseWhen__Group__4 : rule__SqlCaseWhen__Group__4__Impl ;
    public final void rule__SqlCaseWhen__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15557:1: ( rule__SqlCaseWhen__Group__4__Impl )
            // InternalSqlParser.g:15558:2: rule__SqlCaseWhen__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4"


    // $ANTLR start "rule__SqlCaseWhen__Group__4__Impl"
    // InternalSqlParser.g:15564:1: rule__SqlCaseWhen__Group__4__Impl : ( ( rule__SqlCaseWhen__Group_4__0 )? ) ;
    public final void rule__SqlCaseWhen__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15568:1: ( ( ( rule__SqlCaseWhen__Group_4__0 )? ) )
            // InternalSqlParser.g:15569:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            {
            // InternalSqlParser.g:15569:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            // InternalSqlParser.g:15570:1: ( rule__SqlCaseWhen__Group_4__0 )?
            {
             before(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 
            // InternalSqlParser.g:15571:1: ( rule__SqlCaseWhen__Group_4__0 )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==ELSE) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSqlParser.g:15571:2: rule__SqlCaseWhen__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__Group_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0"
    // InternalSqlParser.g:15591:1: rule__SqlCaseWhen__Group_4__0 : rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 ;
    public final void rule__SqlCaseWhen__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15595:1: ( rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 )
            // InternalSqlParser.g:15596:2: rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1
            {
            pushFollow(FOLLOW_50);
            rule__SqlCaseWhen__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0__Impl"
    // InternalSqlParser.g:15603:1: rule__SqlCaseWhen__Group_4__0__Impl : ( ELSE ) ;
    public final void rule__SqlCaseWhen__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15607:1: ( ( ELSE ) )
            // InternalSqlParser.g:15608:1: ( ELSE )
            {
            // InternalSqlParser.g:15608:1: ( ELSE )
            // InternalSqlParser.g:15609:1: ELSE
            {
             before(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 
            match(input,ELSE,FOLLOW_2); 
             after(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1"
    // InternalSqlParser.g:15622:1: rule__SqlCaseWhen__Group_4__1 : rule__SqlCaseWhen__Group_4__1__Impl ;
    public final void rule__SqlCaseWhen__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15626:1: ( rule__SqlCaseWhen__Group_4__1__Impl )
            // InternalSqlParser.g:15627:2: rule__SqlCaseWhen__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1__Impl"
    // InternalSqlParser.g:15633:1: rule__SqlCaseWhen__Group_4__1__Impl : ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) ;
    public final void rule__SqlCaseWhen__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15637:1: ( ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) )
            // InternalSqlParser.g:15638:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            {
            // InternalSqlParser.g:15638:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            // InternalSqlParser.g:15639:1: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            {
             before(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 
            // InternalSqlParser.g:15640:1: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            // InternalSqlParser.g:15640:2: rule__SqlCaseWhen__EexpAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__EexpAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1__Impl"


    // $ANTLR start "rule__JoinType__Group__0"
    // InternalSqlParser.g:15654:1: rule__JoinType__Group__0 : rule__JoinType__Group__0__Impl rule__JoinType__Group__1 ;
    public final void rule__JoinType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15658:1: ( rule__JoinType__Group__0__Impl rule__JoinType__Group__1 )
            // InternalSqlParser.g:15659:2: rule__JoinType__Group__0__Impl rule__JoinType__Group__1
            {
            pushFollow(FOLLOW_28);
            rule__JoinType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__JoinType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0"


    // $ANTLR start "rule__JoinType__Group__0__Impl"
    // InternalSqlParser.g:15666:1: rule__JoinType__Group__0__Impl : ( ( NATURAL )? ) ;
    public final void rule__JoinType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15670:1: ( ( ( NATURAL )? ) )
            // InternalSqlParser.g:15671:1: ( ( NATURAL )? )
            {
            // InternalSqlParser.g:15671:1: ( ( NATURAL )? )
            // InternalSqlParser.g:15672:1: ( NATURAL )?
            {
             before(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 
            // InternalSqlParser.g:15673:1: ( NATURAL )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==NATURAL) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSqlParser.g:15674:2: NATURAL
                    {
                    match(input,NATURAL,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0__Impl"


    // $ANTLR start "rule__JoinType__Group__1"
    // InternalSqlParser.g:15685:1: rule__JoinType__Group__1 : rule__JoinType__Group__1__Impl rule__JoinType__Group__2 ;
    public final void rule__JoinType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15689:1: ( rule__JoinType__Group__1__Impl rule__JoinType__Group__2 )
            // InternalSqlParser.g:15690:2: rule__JoinType__Group__1__Impl rule__JoinType__Group__2
            {
            pushFollow(FOLLOW_28);
            rule__JoinType__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1"


    // $ANTLR start "rule__JoinType__Group__1__Impl"
    // InternalSqlParser.g:15697:1: rule__JoinType__Group__1__Impl : ( ( rule__JoinType__Alternatives_1 )? ) ;
    public final void rule__JoinType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15701:1: ( ( ( rule__JoinType__Alternatives_1 )? ) )
            // InternalSqlParser.g:15702:1: ( ( rule__JoinType__Alternatives_1 )? )
            {
            // InternalSqlParser.g:15702:1: ( ( rule__JoinType__Alternatives_1 )? )
            // InternalSqlParser.g:15703:1: ( rule__JoinType__Alternatives_1 )?
            {
             before(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 
            // InternalSqlParser.g:15704:1: ( rule__JoinType__Alternatives_1 )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==STRAIGHT_JOIN||LA136_0==CROSS||LA136_0==INNER||LA136_0==RIGHT||LA136_0==FULL||LA136_0==LEFT) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSqlParser.g:15704:2: rule__JoinType__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1__Impl"


    // $ANTLR start "rule__JoinType__Group__2"
    // InternalSqlParser.g:15714:1: rule__JoinType__Group__2 : rule__JoinType__Group__2__Impl ;
    public final void rule__JoinType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15718:1: ( rule__JoinType__Group__2__Impl )
            // InternalSqlParser.g:15719:2: rule__JoinType__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2"


    // $ANTLR start "rule__JoinType__Group__2__Impl"
    // InternalSqlParser.g:15725:1: rule__JoinType__Group__2__Impl : ( JOIN ) ;
    public final void rule__JoinType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15729:1: ( ( JOIN ) )
            // InternalSqlParser.g:15730:1: ( JOIN )
            {
            // InternalSqlParser.g:15730:1: ( JOIN )
            // InternalSqlParser.g:15731:1: JOIN
            {
             before(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 
            match(input,JOIN,FOLLOW_2); 
             after(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__0"
    // InternalSqlParser.g:15750:1: rule__JoinType__Group_1_1__0 : rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 ;
    public final void rule__JoinType__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15754:1: ( rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 )
            // InternalSqlParser.g:15755:2: rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1
            {
            pushFollow(FOLLOW_84);
            rule__JoinType__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0"


    // $ANTLR start "rule__JoinType__Group_1_1__0__Impl"
    // InternalSqlParser.g:15762:1: rule__JoinType__Group_1_1__0__Impl : ( ( rule__JoinType__Alternatives_1_1_0 ) ) ;
    public final void rule__JoinType__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15766:1: ( ( ( rule__JoinType__Alternatives_1_1_0 ) ) )
            // InternalSqlParser.g:15767:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            {
            // InternalSqlParser.g:15767:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            // InternalSqlParser.g:15768:1: ( rule__JoinType__Alternatives_1_1_0 )
            {
             before(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 
            // InternalSqlParser.g:15769:1: ( rule__JoinType__Alternatives_1_1_0 )
            // InternalSqlParser.g:15769:2: rule__JoinType__Alternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Alternatives_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__1"
    // InternalSqlParser.g:15779:1: rule__JoinType__Group_1_1__1 : rule__JoinType__Group_1_1__1__Impl ;
    public final void rule__JoinType__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15783:1: ( rule__JoinType__Group_1_1__1__Impl )
            // InternalSqlParser.g:15784:2: rule__JoinType__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1"


    // $ANTLR start "rule__JoinType__Group_1_1__1__Impl"
    // InternalSqlParser.g:15790:1: rule__JoinType__Group_1_1__1__Impl : ( ( OUTER )? ) ;
    public final void rule__JoinType__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15794:1: ( ( ( OUTER )? ) )
            // InternalSqlParser.g:15795:1: ( ( OUTER )? )
            {
            // InternalSqlParser.g:15795:1: ( ( OUTER )? )
            // InternalSqlParser.g:15796:1: ( OUTER )?
            {
             before(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 
            // InternalSqlParser.g:15797:1: ( OUTER )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==OUTER) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalSqlParser.g:15798:2: OUTER
                    {
                    match(input,OUTER,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1__Impl"


    // $ANTLR start "rule__FNAME__Group__0"
    // InternalSqlParser.g:15813:1: rule__FNAME__Group__0 : rule__FNAME__Group__0__Impl rule__FNAME__Group__1 ;
    public final void rule__FNAME__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15817:1: ( rule__FNAME__Group__0__Impl rule__FNAME__Group__1 )
            // InternalSqlParser.g:15818:2: rule__FNAME__Group__0__Impl rule__FNAME__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__FNAME__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0"


    // $ANTLR start "rule__FNAME__Group__0__Impl"
    // InternalSqlParser.g:15825:1: rule__FNAME__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FNAME__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15829:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:15830:1: ( RULE_ID )
            {
            // InternalSqlParser.g:15830:1: ( RULE_ID )
            // InternalSqlParser.g:15831:1: RULE_ID
            {
             before(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0__Impl"


    // $ANTLR start "rule__FNAME__Group__1"
    // InternalSqlParser.g:15842:1: rule__FNAME__Group__1 : rule__FNAME__Group__1__Impl ;
    public final void rule__FNAME__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15846:1: ( rule__FNAME__Group__1__Impl )
            // InternalSqlParser.g:15847:2: rule__FNAME__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1"


    // $ANTLR start "rule__FNAME__Group__1__Impl"
    // InternalSqlParser.g:15853:1: rule__FNAME__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FNAME__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15857:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:15858:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:15858:1: ( LeftParenthesis )
            // InternalSqlParser.g:15859:1: LeftParenthesis
            {
             before(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1__Impl"


    // $ANTLR start "rule__Model__QueryAssignment_1"
    // InternalSqlParser.g:15877:1: rule__Model__QueryAssignment_1 : ( ruleSelectQuery ) ;
    public final void rule__Model__QueryAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15881:1: ( ( ruleSelectQuery ) )
            // InternalSqlParser.g:15882:1: ( ruleSelectQuery )
            {
            // InternalSqlParser.g:15882:1: ( ruleSelectQuery )
            // InternalSqlParser.g:15883:1: ruleSelectQuery
            {
             before(grammarAccess.getModelAccess().getQuerySelectQueryParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;

             after(grammarAccess.getModelAccess().getQuerySelectQueryParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__QueryAssignment_1"


    // $ANTLR start "rule__FetchFirst__FetchFirstAssignment_0"
    // InternalSqlParser.g:15892:1: rule__FetchFirst__FetchFirstAssignment_0 : ( ruleIntegerValue ) ;
    public final void rule__FetchFirst__FetchFirstAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15896:1: ( ( ruleIntegerValue ) )
            // InternalSqlParser.g:15897:1: ( ruleIntegerValue )
            {
            // InternalSqlParser.g:15897:1: ( ruleIntegerValue )
            // InternalSqlParser.g:15898:1: ruleIntegerValue
            {
             before(grammarAccess.getFetchFirstAccess().getFetchFirstIntegerValueParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleIntegerValue();

            state._fsp--;

             after(grammarAccess.getFetchFirstAccess().getFetchFirstIntegerValueParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__FetchFirstAssignment_0"


    // $ANTLR start "rule__FetchFirst__RowAssignment_1"
    // InternalSqlParser.g:15907:1: rule__FetchFirst__RowAssignment_1 : ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) ;
    public final void rule__FetchFirst__RowAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15911:1: ( ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) )
            // InternalSqlParser.g:15912:1: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:15912:1: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            // InternalSqlParser.g:15913:1: ( rule__FetchFirst__RowAlternatives_1_0 )
            {
             before(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 
            // InternalSqlParser.g:15914:1: ( rule__FetchFirst__RowAlternatives_1_0 )
            // InternalSqlParser.g:15914:2: rule__FetchFirst__RowAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAssignment_1"


    // $ANTLR start "rule__Offset__OffsetAssignment"
    // InternalSqlParser.g:15923:1: rule__Offset__OffsetAssignment : ( RULE_INT ) ;
    public final void rule__Offset__OffsetAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15927:1: ( ( RULE_INT ) )
            // InternalSqlParser.g:15928:1: ( RULE_INT )
            {
            // InternalSqlParser.g:15928:1: ( RULE_INT )
            // InternalSqlParser.g:15929:1: RULE_INT
            {
             before(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__OffsetAssignment"


    // $ANTLR start "rule__Limit__L1Assignment_1_0"
    // InternalSqlParser.g:15938:1: rule__Limit__L1Assignment_1_0 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L1Assignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15942:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:15943:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:15943:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:15944:1: RULE_UNSIGNED
            {
             before(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 
            match(input,RULE_UNSIGNED,FOLLOW_2); 
             after(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L1Assignment_1_0"


    // $ANTLR start "rule__Limit__L2Assignment_1_1_1"
    // InternalSqlParser.g:15953:1: rule__Limit__L2Assignment_1_1_1 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L2Assignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15957:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:15958:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:15958:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:15959:1: RULE_UNSIGNED
            {
             before(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 
            match(input,RULE_UNSIGNED,FOLLOW_2); 
             after(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L2Assignment_1_1_1"


    // $ANTLR start "rule__SelectQuery__OpAssignment_1"
    // InternalSqlParser.g:15968:1: rule__SelectQuery__OpAssignment_1 : ( ruleSelectSubSet ) ;
    public final void rule__SelectQuery__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15972:1: ( ( ruleSelectSubSet ) )
            // InternalSqlParser.g:15973:1: ( ruleSelectSubSet )
            {
            // InternalSqlParser.g:15973:1: ( ruleSelectSubSet )
            // InternalSqlParser.g:15974:1: ruleSelectSubSet
            {
             before(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSelectSubSet();

            state._fsp--;

             after(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__OpAssignment_1"


    // $ANTLR start "rule__SelectSubSet__OpAssignment_0"
    // InternalSqlParser.g:15983:1: rule__SelectSubSet__OpAssignment_0 : ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) ;
    public final void rule__SelectSubSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15987:1: ( ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) )
            // InternalSqlParser.g:15988:1: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            {
            // InternalSqlParser.g:15988:1: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            // InternalSqlParser.g:15989:1: ( rule__SelectSubSet__OpAlternatives_0_0 )
            {
             before(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 
            // InternalSqlParser.g:15990:1: ( rule__SelectSubSet__OpAlternatives_0_0 )
            // InternalSqlParser.g:15990:2: rule__SelectSubSet__OpAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAlternatives_0_0();

            state._fsp--;


            }

             after(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAssignment_0"


    // $ANTLR start "rule__SelectSubSet__AllAssignment_1"
    // InternalSqlParser.g:15999:1: rule__SelectSubSet__AllAssignment_1 : ( ( ALL ) ) ;
    public final void rule__SelectSubSet__AllAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16003:1: ( ( ( ALL ) ) )
            // InternalSqlParser.g:16004:1: ( ( ALL ) )
            {
            // InternalSqlParser.g:16004:1: ( ( ALL ) )
            // InternalSqlParser.g:16005:1: ( ALL )
            {
             before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            // InternalSqlParser.g:16006:1: ( ALL )
            // InternalSqlParser.g:16007:1: ALL
            {
             before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            match(input,ALL,FOLLOW_2); 
             after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 

            }

             after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__AllAssignment_1"


    // $ANTLR start "rule__SelectSubSet__QueryAssignment_2"
    // InternalSqlParser.g:16022:1: rule__SelectSubSet__QueryAssignment_2 : ( ruleSelect ) ;
    public final void rule__SelectSubSet__QueryAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16026:1: ( ( ruleSelect ) )
            // InternalSqlParser.g:16027:1: ( ruleSelect )
            {
            // InternalSqlParser.g:16027:1: ( ruleSelect )
            // InternalSqlParser.g:16028:1: ruleSelect
            {
             before(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;

             after(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__QueryAssignment_2"


    // $ANTLR start "rule__Select__SelectAssignment_0"
    // InternalSqlParser.g:16037:1: rule__Select__SelectAssignment_0 : ( ( SELECT ) ) ;
    public final void rule__Select__SelectAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16041:1: ( ( ( SELECT ) ) )
            // InternalSqlParser.g:16042:1: ( ( SELECT ) )
            {
            // InternalSqlParser.g:16042:1: ( ( SELECT ) )
            // InternalSqlParser.g:16043:1: ( SELECT )
            {
             before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            // InternalSqlParser.g:16044:1: ( SELECT )
            // InternalSqlParser.g:16045:1: SELECT
            {
             before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            match(input,SELECT,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 

            }

             after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__SelectAssignment_0"


    // $ANTLR start "rule__Select__ColsAssignment_3"
    // InternalSqlParser.g:16060:1: rule__Select__ColsAssignment_3 : ( ruleColumns ) ;
    public final void rule__Select__ColsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16064:1: ( ( ruleColumns ) )
            // InternalSqlParser.g:16065:1: ( ruleColumns )
            {
            // InternalSqlParser.g:16065:1: ( ruleColumns )
            // InternalSqlParser.g:16066:1: ruleColumns
            {
             before(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__ColsAssignment_3"


    // $ANTLR start "rule__Select__TblAssignment_5"
    // InternalSqlParser.g:16075:1: rule__Select__TblAssignment_5 : ( ruleTables ) ;
    public final void rule__Select__TblAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16079:1: ( ( ruleTables ) )
            // InternalSqlParser.g:16080:1: ( ruleTables )
            {
            // InternalSqlParser.g:16080:1: ( ruleTables )
            // InternalSqlParser.g:16081:1: ruleTables
            {
             before(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            ruleTables();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__TblAssignment_5"


    // $ANTLR start "rule__Select__WhereExpressionAssignment_6_1"
    // InternalSqlParser.g:16090:1: rule__Select__WhereExpressionAssignment_6_1 : ( ruleFullExpression ) ;
    public final void rule__Select__WhereExpressionAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16094:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:16095:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:16095:1: ( ruleFullExpression )
            // InternalSqlParser.g:16096:1: ruleFullExpression
            {
             before(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__WhereExpressionAssignment_6_1"


    // $ANTLR start "rule__Select__GroupByEntryAssignment_7_1"
    // InternalSqlParser.g:16105:1: rule__Select__GroupByEntryAssignment_7_1 : ( ruleGroupByColumns ) ;
    public final void rule__Select__GroupByEntryAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16109:1: ( ( ruleGroupByColumns ) )
            // InternalSqlParser.g:16110:1: ( ruleGroupByColumns )
            {
            // InternalSqlParser.g:16110:1: ( ruleGroupByColumns )
            // InternalSqlParser.g:16111:1: ruleGroupByColumns
            {
             before(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGroupByColumns();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__GroupByEntryAssignment_7_1"


    // $ANTLR start "rule__Select__HavingEntryAssignment_8_1"
    // InternalSqlParser.g:16120:1: rule__Select__HavingEntryAssignment_8_1 : ( ruleFullExpression ) ;
    public final void rule__Select__HavingEntryAssignment_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16124:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:16125:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:16125:1: ( ruleFullExpression )
            // InternalSqlParser.g:16126:1: ruleFullExpression
            {
             before(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__HavingEntryAssignment_8_1"


    // $ANTLR start "rule__Select__OrderByEntryAssignment_9_1"
    // InternalSqlParser.g:16135:1: rule__Select__OrderByEntryAssignment_9_1 : ( ruleOrderByColumns ) ;
    public final void rule__Select__OrderByEntryAssignment_9_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16139:1: ( ( ruleOrderByColumns ) )
            // InternalSqlParser.g:16140:1: ( ruleOrderByColumns )
            {
            // InternalSqlParser.g:16140:1: ( ruleOrderByColumns )
            // InternalSqlParser.g:16141:1: ruleOrderByColumns
            {
             before(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByColumns();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OrderByEntryAssignment_9_1"


    // $ANTLR start "rule__Select__LimAssignment_10_1"
    // InternalSqlParser.g:16150:1: rule__Select__LimAssignment_10_1 : ( ruleLimit ) ;
    public final void rule__Select__LimAssignment_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16154:1: ( ( ruleLimit ) )
            // InternalSqlParser.g:16155:1: ( ruleLimit )
            {
            // InternalSqlParser.g:16155:1: ( ruleLimit )
            // InternalSqlParser.g:16156:1: ruleLimit
            {
             before(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLimit();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__LimAssignment_10_1"


    // $ANTLR start "rule__Select__OffsetAssignment_11_1"
    // InternalSqlParser.g:16165:1: rule__Select__OffsetAssignment_11_1 : ( ruleOffset ) ;
    public final void rule__Select__OffsetAssignment_11_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16169:1: ( ( ruleOffset ) )
            // InternalSqlParser.g:16170:1: ( ruleOffset )
            {
            // InternalSqlParser.g:16170:1: ( ruleOffset )
            // InternalSqlParser.g:16171:1: ruleOffset
            {
             before(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOffset();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OffsetAssignment_11_1"


    // $ANTLR start "rule__Select__FetchFirstAssignment_12_1"
    // InternalSqlParser.g:16180:1: rule__Select__FetchFirstAssignment_12_1 : ( ruleFetchFirst ) ;
    public final void rule__Select__FetchFirstAssignment_12_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16184:1: ( ( ruleFetchFirst ) )
            // InternalSqlParser.g:16185:1: ( ruleFetchFirst )
            {
            // InternalSqlParser.g:16185:1: ( ruleFetchFirst )
            // InternalSqlParser.g:16186:1: ruleFetchFirst
            {
             before(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFetchFirst();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__FetchFirstAssignment_12_1"


    // $ANTLR start "rule__Columns__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:16195:1: rule__Columns__EntriesAssignment_1_1_1 : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16199:1: ( ( ruleColumnOrAlias ) )
            // InternalSqlParser.g:16200:1: ( ruleColumnOrAlias )
            {
            // InternalSqlParser.g:16200:1: ( ruleColumnOrAlias )
            // InternalSqlParser.g:16201:1: ruleColumnOrAlias
            {
             before(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;

             after(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnOrAlias__CeAssignment_0_0"
    // InternalSqlParser.g:16210:1: rule__ColumnOrAlias__CeAssignment_0_0 : ( ruleOperandGroup ) ;
    public final void rule__ColumnOrAlias__CeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16214:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:16215:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:16215:1: ( ruleOperandGroup )
            // InternalSqlParser.g:16216:1: ruleOperandGroup
            {
             before(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__CeAssignment_0_0"


    // $ANTLR start "rule__ColumnOrAlias__AliasAssignment_0_1"
    // InternalSqlParser.g:16225:1: rule__ColumnOrAlias__AliasAssignment_0_1 : ( ( AS ) ) ;
    public final void rule__ColumnOrAlias__AliasAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16229:1: ( ( ( AS ) ) )
            // InternalSqlParser.g:16230:1: ( ( AS ) )
            {
            // InternalSqlParser.g:16230:1: ( ( AS ) )
            // InternalSqlParser.g:16231:1: ( AS )
            {
             before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            // InternalSqlParser.g:16232:1: ( AS )
            // InternalSqlParser.g:16233:1: AS
            {
             before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            match(input,AS,FOLLOW_2); 
             after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 

            }

             after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AliasAssignment_0_1"


    // $ANTLR start "rule__ColumnOrAlias__ColAliasAssignment_0_2"
    // InternalSqlParser.g:16248:1: rule__ColumnOrAlias__ColAliasAssignment_0_2 : ( ruleDbObjectName ) ;
    public final void rule__ColumnOrAlias__ColAliasAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16252:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:16253:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:16253:1: ( ruleDbObjectName )
            // InternalSqlParser.g:16254:1: ruleDbObjectName
            {
             before(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__ColAliasAssignment_0_2"


    // $ANTLR start "rule__ColumnOrAlias__AllColsAssignment_1"
    // InternalSqlParser.g:16263:1: rule__ColumnOrAlias__AllColsAssignment_1 : ( RULE_STAR ) ;
    public final void rule__ColumnOrAlias__AllColsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16267:1: ( ( RULE_STAR ) )
            // InternalSqlParser.g:16268:1: ( RULE_STAR )
            {
            // InternalSqlParser.g:16268:1: ( RULE_STAR )
            // InternalSqlParser.g:16269:1: RULE_STAR
            {
             before(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 
            match(input,RULE_STAR,FOLLOW_2); 
             after(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AllColsAssignment_1"


    // $ANTLR start "rule__ColumnOrAlias__DbAllColsAssignment_2"
    // InternalSqlParser.g:16278:1: rule__ColumnOrAlias__DbAllColsAssignment_2 : ( ruleDbObjectNameAll ) ;
    public final void rule__ColumnOrAlias__DbAllColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16282:1: ( ( ruleDbObjectNameAll ) )
            // InternalSqlParser.g:16283:1: ( ruleDbObjectNameAll )
            {
            // InternalSqlParser.g:16283:1: ( ruleDbObjectNameAll )
            // InternalSqlParser.g:16284:1: ruleDbObjectNameAll
            {
             before(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectNameAll();

            state._fsp--;

             after(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__DbAllColsAssignment_2"


    // $ANTLR start "rule__ColumnFull__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:16293:1: rule__ColumnFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16297:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:16298:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:16298:1: ( ruleDbObjectName )
            // InternalSqlParser.g:16299:1: ruleDbObjectName
            {
             before(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Tables__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:16308:1: rule__Tables__EntriesAssignment_1_1_1 : ( ruleFromTable ) ;
    public final void rule__Tables__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16312:1: ( ( ruleFromTable ) )
            // InternalSqlParser.g:16313:1: ( ruleFromTable )
            {
            // InternalSqlParser.g:16313:1: ( ruleFromTable )
            // InternalSqlParser.g:16314:1: ruleFromTable
            {
             before(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;

             after(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__FromTable__TableAssignment_0"
    // InternalSqlParser.g:16323:1: rule__FromTable__TableAssignment_0 : ( ruleTableOrAlias ) ;
    public final void rule__FromTable__TableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16327:1: ( ( ruleTableOrAlias ) )
            // InternalSqlParser.g:16328:1: ( ruleTableOrAlias )
            {
            // InternalSqlParser.g:16328:1: ( ruleTableOrAlias )
            // InternalSqlParser.g:16329:1: ruleTableOrAlias
            {
             before(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;

             after(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__TableAssignment_0"


    // $ANTLR start "rule__FromTable__FjoinAssignment_1"
    // InternalSqlParser.g:16338:1: rule__FromTable__FjoinAssignment_1 : ( ruleFromTableJoin ) ;
    public final void rule__FromTable__FjoinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16342:1: ( ( ruleFromTableJoin ) )
            // InternalSqlParser.g:16343:1: ( ruleFromTableJoin )
            {
            // InternalSqlParser.g:16343:1: ( ruleFromTableJoin )
            // InternalSqlParser.g:16344:1: ruleFromTableJoin
            {
             before(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFromTableJoin();

            state._fsp--;

             after(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__FjoinAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinAssignment_0"
    // InternalSqlParser.g:16353:1: rule__FromTableJoin__JoinAssignment_0 : ( ruleJoinType ) ;
    public final void rule__FromTableJoin__JoinAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16357:1: ( ( ruleJoinType ) )
            // InternalSqlParser.g:16358:1: ( ruleJoinType )
            {
            // InternalSqlParser.g:16358:1: ( ruleJoinType )
            // InternalSqlParser.g:16359:1: ruleJoinType
            {
             before(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleJoinType();

            state._fsp--;

             after(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinAssignment_0"


    // $ANTLR start "rule__FromTableJoin__OnTableAssignment_1"
    // InternalSqlParser.g:16368:1: rule__FromTableJoin__OnTableAssignment_1 : ( ruleTableOrAlias ) ;
    public final void rule__FromTableJoin__OnTableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16372:1: ( ( ruleTableOrAlias ) )
            // InternalSqlParser.g:16373:1: ( ruleTableOrAlias )
            {
            // InternalSqlParser.g:16373:1: ( ruleTableOrAlias )
            // InternalSqlParser.g:16374:1: ruleTableOrAlias
            {
             before(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;

             after(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__OnTableAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinExprAssignment_2_0_1"
    // InternalSqlParser.g:16383:1: rule__FromTableJoin__JoinExprAssignment_2_0_1 : ( ruleFullExpression ) ;
    public final void rule__FromTableJoin__JoinExprAssignment_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16387:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:16388:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:16388:1: ( ruleFullExpression )
            // InternalSqlParser.g:16389:1: ruleFullExpression
            {
             before(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinExprAssignment_2_0_1"


    // $ANTLR start "rule__FromTableJoin__JoinCondAssignment_2_1"
    // InternalSqlParser.g:16398:1: rule__FromTableJoin__JoinCondAssignment_2_1 : ( ruleJoinCondition ) ;
    public final void rule__FromTableJoin__JoinCondAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16402:1: ( ( ruleJoinCondition ) )
            // InternalSqlParser.g:16403:1: ( ruleJoinCondition )
            {
            // InternalSqlParser.g:16403:1: ( ruleJoinCondition )
            // InternalSqlParser.g:16404:1: ruleJoinCondition
            {
             before(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleJoinCondition();

            state._fsp--;

             after(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinCondAssignment_2_1"


    // $ANTLR start "rule__JoinCondition__UseColsAssignment_2"
    // InternalSqlParser.g:16413:1: rule__JoinCondition__UseColsAssignment_2 : ( ruleUsingCols ) ;
    public final void rule__JoinCondition__UseColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16417:1: ( ( ruleUsingCols ) )
            // InternalSqlParser.g:16418:1: ( ruleUsingCols )
            {
            // InternalSqlParser.g:16418:1: ( ruleUsingCols )
            // InternalSqlParser.g:16419:1: ruleUsingCols
            {
             before(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleUsingCols();

            state._fsp--;

             after(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__UseColsAssignment_2"


    // $ANTLR start "rule__UsingCols__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:16428:1: rule__UsingCols__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16432:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:16433:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:16433:1: ( ruleDbObjectName )
            // InternalSqlParser.g:16434:1: ruleDbObjectName
            {
             before(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableOrAlias__TfullAssignment_0_0"
    // InternalSqlParser.g:16443:1: rule__TableOrAlias__TfullAssignment_0_0 : ( ruleTableFull ) ;
    public final void rule__TableOrAlias__TfullAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16447:1: ( ( ruleTableFull ) )
            // InternalSqlParser.g:16448:1: ( ruleTableFull )
            {
            // InternalSqlParser.g:16448:1: ( ruleTableFull )
            // InternalSqlParser.g:16449:1: ruleTableFull
            {
             before(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleTableFull();

            state._fsp--;

             after(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TfullAssignment_0_0"


    // $ANTLR start "rule__TableOrAlias__SqAssignment_0_1"
    // InternalSqlParser.g:16458:1: rule__TableOrAlias__SqAssignment_0_1 : ( ruleSubQueryOperand ) ;
    public final void rule__TableOrAlias__SqAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16462:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:16463:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:16463:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:16464:1: ruleSubQueryOperand
            {
             before(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;

             after(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__SqAssignment_0_1"


    // $ANTLR start "rule__TableOrAlias__PivotAssignment_1_0"
    // InternalSqlParser.g:16473:1: rule__TableOrAlias__PivotAssignment_1_0 : ( rulePivotTable ) ;
    public final void rule__TableOrAlias__PivotAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16477:1: ( ( rulePivotTable ) )
            // InternalSqlParser.g:16478:1: ( rulePivotTable )
            {
            // InternalSqlParser.g:16478:1: ( rulePivotTable )
            // InternalSqlParser.g:16479:1: rulePivotTable
            {
             before(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            rulePivotTable();

            state._fsp--;

             after(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__PivotAssignment_1_0"


    // $ANTLR start "rule__TableOrAlias__UnpivotAssignment_1_1"
    // InternalSqlParser.g:16488:1: rule__TableOrAlias__UnpivotAssignment_1_1 : ( ruleUnpivotTable ) ;
    public final void rule__TableOrAlias__UnpivotAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16492:1: ( ( ruleUnpivotTable ) )
            // InternalSqlParser.g:16493:1: ( ruleUnpivotTable )
            {
            // InternalSqlParser.g:16493:1: ( ruleUnpivotTable )
            // InternalSqlParser.g:16494:1: ruleUnpivotTable
            {
             before(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleUnpivotTable();

            state._fsp--;

             after(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__UnpivotAssignment_1_1"


    // $ANTLR start "rule__TableOrAlias__AliasAssignment_2"
    // InternalSqlParser.g:16503:1: rule__TableOrAlias__AliasAssignment_2 : ( ( AS ) ) ;
    public final void rule__TableOrAlias__AliasAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16507:1: ( ( ( AS ) ) )
            // InternalSqlParser.g:16508:1: ( ( AS ) )
            {
            // InternalSqlParser.g:16508:1: ( ( AS ) )
            // InternalSqlParser.g:16509:1: ( AS )
            {
             before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            // InternalSqlParser.g:16510:1: ( AS )
            // InternalSqlParser.g:16511:1: AS
            {
             before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            match(input,AS,FOLLOW_2); 
             after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 

            }

             after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__AliasAssignment_2"


    // $ANTLR start "rule__TableOrAlias__TblAliasAssignment_3"
    // InternalSqlParser.g:16526:1: rule__TableOrAlias__TblAliasAssignment_3 : ( ruleDbObjectName ) ;
    public final void rule__TableOrAlias__TblAliasAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16530:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:16531:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:16531:1: ( ruleDbObjectName )
            // InternalSqlParser.g:16532:1: ruleDbObjectName
            {
             before(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TblAliasAssignment_3"


    // $ANTLR start "rule__PivotTable__PfunAssignment_3"
    // InternalSqlParser.g:16541:1: rule__PivotTable__PfunAssignment_3 : ( rulePivotFunctions ) ;
    public final void rule__PivotTable__PfunAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16545:1: ( ( rulePivotFunctions ) )
            // InternalSqlParser.g:16546:1: ( rulePivotFunctions )
            {
            // InternalSqlParser.g:16546:1: ( rulePivotFunctions )
            // InternalSqlParser.g:16547:1: rulePivotFunctions
            {
             before(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            rulePivotFunctions();

            state._fsp--;

             after(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PfunAssignment_3"


    // $ANTLR start "rule__PivotTable__PforAssignment_4"
    // InternalSqlParser.g:16556:1: rule__PivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__PivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16560:1: ( ( rulePivotForClause ) )
            // InternalSqlParser.g:16561:1: ( rulePivotForClause )
            {
            // InternalSqlParser.g:16561:1: ( rulePivotForClause )
            // InternalSqlParser.g:16562:1: rulePivotForClause
            {
             before(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;

             after(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PforAssignment_4"


    // $ANTLR start "rule__PivotTable__PinAssignment_5"
    // InternalSqlParser.g:16571:1: rule__PivotTable__PinAssignment_5 : ( rulePivotInClause ) ;
    public final void rule__PivotTable__PinAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16575:1: ( ( rulePivotInClause ) )
            // InternalSqlParser.g:16576:1: ( rulePivotInClause )
            {
            // InternalSqlParser.g:16576:1: ( rulePivotInClause )
            // InternalSqlParser.g:16577:1: rulePivotInClause
            {
             before(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            rulePivotInClause();

            state._fsp--;

             after(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PinAssignment_5"


    // $ANTLR start "rule__PivotFunctions__AbcAssignment"
    // InternalSqlParser.g:16586:1: rule__PivotFunctions__AbcAssignment : ( RULE_ID ) ;
    public final void rule__PivotFunctions__AbcAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16590:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:16591:1: ( RULE_ID )
            {
            // InternalSqlParser.g:16591:1: ( RULE_ID )
            // InternalSqlParser.g:16592:1: RULE_ID
            {
             before(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotFunctions__AbcAssignment"


    // $ANTLR start "rule__PivotInClause__SqAssignment_2_0"
    // InternalSqlParser.g:16601:1: rule__PivotInClause__SqAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__PivotInClause__SqAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16605:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:16606:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:16606:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:16607:1: ruleSubQueryOperand
            {
             before(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;

             after(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__SqAssignment_2_0"


    // $ANTLR start "rule__PivotInClause__ArgsAssignment_2_1"
    // InternalSqlParser.g:16616:1: rule__PivotInClause__ArgsAssignment_2_1 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__PivotInClause__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16620:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSqlParser.g:16621:1: ( ruleUnpivotInClauseArgs )
            {
            // InternalSqlParser.g:16621:1: ( ruleUnpivotInClauseArgs )
            // InternalSqlParser.g:16622:1: ruleUnpivotInClauseArgs
            {
             before(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;

             after(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__ArgsAssignment_2_1"


    // $ANTLR start "rule__PivotInClause__PinanyAssignment_2_2"
    // InternalSqlParser.g:16631:1: rule__PivotInClause__PinanyAssignment_2_2 : ( rulePivotInClauseAny ) ;
    public final void rule__PivotInClause__PinanyAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16635:1: ( ( rulePivotInClauseAny ) )
            // InternalSqlParser.g:16636:1: ( rulePivotInClauseAny )
            {
            // InternalSqlParser.g:16636:1: ( rulePivotInClauseAny )
            // InternalSqlParser.g:16637:1: rulePivotInClauseAny
            {
             before(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            rulePivotInClauseAny();

            state._fsp--;

             after(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__PinanyAssignment_2_2"


    // $ANTLR start "rule__UnpivotTable__PcolsAssignment_3"
    // InternalSqlParser.g:16646:1: rule__UnpivotTable__PcolsAssignment_3 : ( rulePivotColumns ) ;
    public final void rule__UnpivotTable__PcolsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16650:1: ( ( rulePivotColumns ) )
            // InternalSqlParser.g:16651:1: ( rulePivotColumns )
            {
            // InternalSqlParser.g:16651:1: ( rulePivotColumns )
            // InternalSqlParser.g:16652:1: rulePivotColumns
            {
             before(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;

             after(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PcolsAssignment_3"


    // $ANTLR start "rule__UnpivotTable__PforAssignment_4"
    // InternalSqlParser.g:16661:1: rule__UnpivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__UnpivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16665:1: ( ( rulePivotForClause ) )
            // InternalSqlParser.g:16666:1: ( rulePivotForClause )
            {
            // InternalSqlParser.g:16666:1: ( rulePivotForClause )
            // InternalSqlParser.g:16667:1: rulePivotForClause
            {
             before(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;

             after(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PforAssignment_4"


    // $ANTLR start "rule__UnpivotTable__InopAssignment_5"
    // InternalSqlParser.g:16676:1: rule__UnpivotTable__InopAssignment_5 : ( ruleUnpivotInClause ) ;
    public final void rule__UnpivotTable__InopAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16680:1: ( ( ruleUnpivotInClause ) )
            // InternalSqlParser.g:16681:1: ( ruleUnpivotInClause )
            {
            // InternalSqlParser.g:16681:1: ( ruleUnpivotInClause )
            // InternalSqlParser.g:16682:1: ruleUnpivotInClause
            {
             before(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            ruleUnpivotInClause();

            state._fsp--;

             after(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__InopAssignment_5"


    // $ANTLR start "rule__UnpivotInClause__OpAssignment_1"
    // InternalSqlParser.g:16691:1: rule__UnpivotInClause__OpAssignment_1 : ( ( IN ) ) ;
    public final void rule__UnpivotInClause__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16695:1: ( ( ( IN ) ) )
            // InternalSqlParser.g:16696:1: ( ( IN ) )
            {
            // InternalSqlParser.g:16696:1: ( ( IN ) )
            // InternalSqlParser.g:16697:1: ( IN )
            {
             before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            // InternalSqlParser.g:16698:1: ( IN )
            // InternalSqlParser.g:16699:1: IN
            {
             before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            match(input,IN,FOLLOW_2); 
             after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 

            }

             after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__OpAssignment_1"


    // $ANTLR start "rule__UnpivotInClause__ArgsAssignment_3"
    // InternalSqlParser.g:16714:1: rule__UnpivotInClause__ArgsAssignment_3 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__UnpivotInClause__ArgsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16718:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSqlParser.g:16719:1: ( ruleUnpivotInClauseArgs )
            {
            // InternalSqlParser.g:16719:1: ( ruleUnpivotInClauseArgs )
            // InternalSqlParser.g:16720:1: ruleUnpivotInClauseArgs
            {
             before(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__ArgsAssignment_3"


    // $ANTLR start "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:16729:1: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16733:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSqlParser.g:16734:1: ( ruleUnpivotInClauseArg )
            {
            // InternalSqlParser.g:16734:1: ( ruleUnpivotInClauseArg )
            // InternalSqlParser.g:16735:1: ruleUnpivotInClauseArg
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__UnpivotInClauseArg__PcolsAssignment_0"
    // InternalSqlParser.g:16744:1: rule__UnpivotInClauseArg__PcolsAssignment_0 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__PcolsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16748:1: ( ( rulePivotColumns ) )
            // InternalSqlParser.g:16749:1: ( rulePivotColumns )
            {
            // InternalSqlParser.g:16749:1: ( rulePivotColumns )
            // InternalSqlParser.g:16750:1: rulePivotColumns
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__PcolsAssignment_0"


    // $ANTLR start "rule__UnpivotInClauseArg__CfulsAssignment_1_1"
    // InternalSqlParser.g:16759:1: rule__UnpivotInClauseArg__CfulsAssignment_1_1 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__CfulsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16763:1: ( ( rulePivotColumns ) )
            // InternalSqlParser.g:16764:1: ( rulePivotColumns )
            {
            // InternalSqlParser.g:16764:1: ( rulePivotColumns )
            // InternalSqlParser.g:16765:1: rulePivotColumns
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__CfulsAssignment_1_1"


    // $ANTLR start "rule__PivotCols__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:16774:1: rule__PivotCols__EntriesAssignment_1_1_1 : ( rulePivotCol ) ;
    public final void rule__PivotCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16778:1: ( ( rulePivotCol ) )
            // InternalSqlParser.g:16779:1: ( rulePivotCol )
            {
            // InternalSqlParser.g:16779:1: ( rulePivotCol )
            // InternalSqlParser.g:16780:1: rulePivotCol
            {
             before(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;

             after(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__PivotCol__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:16789:1: rule__PivotCol__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16793:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:16794:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:16794:1: ( ruleDbObjectName )
            // InternalSqlParser.g:16795:1: ruleDbObjectName
            {
             before(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableFull__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:16804:1: rule__TableFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__TableFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16808:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:16809:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:16809:1: ( ruleDbObjectName )
            // InternalSqlParser.g:16810:1: ruleDbObjectName
            {
             before(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__DbObjectNameAll__DbnameAssignment_0"
    // InternalSqlParser.g:16819:1: rule__DbObjectNameAll__DbnameAssignment_0 : ( ruleDBID ) ;
    public final void rule__DbObjectNameAll__DbnameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16823:1: ( ( ruleDBID ) )
            // InternalSqlParser.g:16824:1: ( ruleDBID )
            {
            // InternalSqlParser.g:16824:1: ( ruleDBID )
            // InternalSqlParser.g:16825:1: ruleDBID
            {
             before(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;

             after(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__DbnameAssignment_0"


    // $ANTLR start "rule__DbObjectName__DbnameAssignment"
    // InternalSqlParser.g:16834:1: rule__DbObjectName__DbnameAssignment : ( ruleDBID ) ;
    public final void rule__DbObjectName__DbnameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16838:1: ( ( ruleDBID ) )
            // InternalSqlParser.g:16839:1: ( ruleDBID )
            {
            // InternalSqlParser.g:16839:1: ( ruleDBID )
            // InternalSqlParser.g:16840:1: ruleDBID
            {
             before(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;

             after(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectName__DbnameAssignment"


    // $ANTLR start "rule__OrderByColumns__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:16849:1: rule__OrderByColumns__EntriesAssignment_1_1_1 : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16853:1: ( ( ruleOrderByColumnFull ) )
            // InternalSqlParser.g:16854:1: ( ruleOrderByColumnFull )
            {
            // InternalSqlParser.g:16854:1: ( ruleOrderByColumnFull )
            // InternalSqlParser.g:16855:1: ruleOrderByColumnFull
            {
             before(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;

             after(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderAssignment_0_0"
    // InternalSqlParser.g:16864:1: rule__OrderByColumnFull__ColOrderAssignment_0_0 : ( ruleColumnFull ) ;
    public final void rule__OrderByColumnFull__ColOrderAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16868:1: ( ( ruleColumnFull ) )
            // InternalSqlParser.g:16869:1: ( ruleColumnFull )
            {
            // InternalSqlParser.g:16869:1: ( ruleColumnFull )
            // InternalSqlParser.g:16870:1: ruleColumnFull
            {
             before(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;

             after(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderAssignment_0_0"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"
    // InternalSqlParser.g:16879:1: rule__OrderByColumnFull__ColOrderIntAssignment_0_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OrderByColumnFull__ColOrderIntAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16883:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:16884:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:16884:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:16885:1: RULE_UNSIGNED
            {
             before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 
            match(input,RULE_UNSIGNED,FOLLOW_2); 
             after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAssignment_1"
    // InternalSqlParser.g:16894:1: rule__OrderByColumnFull__DirectionAssignment_1 : ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) ;
    public final void rule__OrderByColumnFull__DirectionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16898:1: ( ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) )
            // InternalSqlParser.g:16899:1: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:16899:1: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            // InternalSqlParser.g:16900:1: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            {
             before(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 
            // InternalSqlParser.g:16901:1: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            // InternalSqlParser.g:16901:2: rule__OrderByColumnFull__DirectionAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__DirectionAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAssignment_1"


    // $ANTLR start "rule__GroupByColumns__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:16910:1: rule__GroupByColumns__EntriesAssignment_1_1_1 : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16914:1: ( ( ruleGroupByColumnFull ) )
            // InternalSqlParser.g:16915:1: ( ruleGroupByColumnFull )
            {
            // InternalSqlParser.g:16915:1: ( ruleGroupByColumnFull )
            // InternalSqlParser.g:16916:1: ruleGroupByColumnFull
            {
             before(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;

             after(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__GroupByColumnFull__ColGrByAssignment_0"
    // InternalSqlParser.g:16925:1: rule__GroupByColumnFull__ColGrByAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__GroupByColumnFull__ColGrByAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16929:1: ( ( ruleColumnFull ) )
            // InternalSqlParser.g:16930:1: ( ruleColumnFull )
            {
            // InternalSqlParser.g:16930:1: ( ruleColumnFull )
            // InternalSqlParser.g:16931:1: ruleColumnFull
            {
             before(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;

             after(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__ColGrByAssignment_0"


    // $ANTLR start "rule__GroupByColumnFull__GbFunctionAssignment_1"
    // InternalSqlParser.g:16940:1: rule__GroupByColumnFull__GbFunctionAssignment_1 : ( ruleOperandFunction ) ;
    public final void rule__GroupByColumnFull__GbFunctionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16944:1: ( ( ruleOperandFunction ) )
            // InternalSqlParser.g:16945:1: ( ruleOperandFunction )
            {
            // InternalSqlParser.g:16945:1: ( ruleOperandFunction )
            // InternalSqlParser.g:16946:1: ruleOperandFunction
            {
             before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;

             after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GbFunctionAssignment_1"


    // $ANTLR start "rule__GroupByColumnFull__GrByIntAssignment_2"
    // InternalSqlParser.g:16955:1: rule__GroupByColumnFull__GrByIntAssignment_2 : ( RULE_UNSIGNED ) ;
    public final void rule__GroupByColumnFull__GrByIntAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16959:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:16960:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:16960:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:16961:1: RULE_UNSIGNED
            {
             before(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 
            match(input,RULE_UNSIGNED,FOLLOW_2); 
             after(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GrByIntAssignment_2"


    // $ANTLR start "rule__FullExpression__EntriesAssignment_1_1"
    // InternalSqlParser.g:16970:1: rule__FullExpression__EntriesAssignment_1_1 : ( ruleExpressionFragmentSecond ) ;
    public final void rule__FullExpression__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16974:1: ( ( ruleExpressionFragmentSecond ) )
            // InternalSqlParser.g:16975:1: ( ruleExpressionFragmentSecond )
            {
            // InternalSqlParser.g:16975:1: ( ruleExpressionFragmentSecond )
            // InternalSqlParser.g:16976:1: ruleExpressionFragmentSecond
            {
             before(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpressionFragmentSecond();

            state._fsp--;

             after(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__EntriesAssignment_1_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAssignment_0_0"
    // InternalSqlParser.g:16985:1: rule__ExpressionFragmentSecond__CAssignment_0_0 : ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__CAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16989:1: ( ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) )
            // InternalSqlParser.g:16990:1: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            {
            // InternalSqlParser.g:16990:1: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            // InternalSqlParser.g:16991:1: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            {
             before(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 
            // InternalSqlParser.g:16992:1: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            // InternalSqlParser.g:16992:2: rule__ExpressionFragmentSecond__CAlternatives_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAlternatives_0_0_0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAssignment_0_0"


    // $ANTLR start "rule__ExpressionFragmentSecond__EfragAssignment_0_1"
    // InternalSqlParser.g:17001:1: rule__ExpressionFragmentSecond__EfragAssignment_0_1 : ( ruleExpressionFragment ) ;
    public final void rule__ExpressionFragmentSecond__EfragAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17005:1: ( ( ruleExpressionFragment ) )
            // InternalSqlParser.g:17006:1: ( ruleExpressionFragment )
            {
            // InternalSqlParser.g:17006:1: ( ruleExpressionFragment )
            // InternalSqlParser.g:17007:1: ruleExpressionFragment
            {
             before(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__EfragAssignment_0_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__NotPrmAssignment_1"
    // InternalSqlParser.g:17016:1: rule__ExpressionFragmentSecond__NotPrmAssignment_1 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragmentSecond__NotPrmAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17020:1: ( ( RULE_JRNPARAM ) )
            // InternalSqlParser.g:17021:1: ( RULE_JRNPARAM )
            {
            // InternalSqlParser.g:17021:1: ( RULE_JRNPARAM )
            // InternalSqlParser.g:17022:1: RULE_JRNPARAM
            {
             before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 
            match(input,RULE_JRNPARAM,FOLLOW_2); 
             after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__NotPrmAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__ExpgroupAssignment_0"
    // InternalSqlParser.g:17031:1: rule__ExpressionFragment__ExpgroupAssignment_0 : ( ruleExpressionGroup ) ;
    public final void rule__ExpressionFragment__ExpgroupAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17035:1: ( ( ruleExpressionGroup ) )
            // InternalSqlParser.g:17036:1: ( ruleExpressionGroup )
            {
            // InternalSqlParser.g:17036:1: ( ruleExpressionGroup )
            // InternalSqlParser.g:17037:1: ruleExpressionGroup
            {
             before(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleExpressionGroup();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpgroupAssignment_0"


    // $ANTLR start "rule__ExpressionFragment__ExpAssignment_1"
    // InternalSqlParser.g:17046:1: rule__ExpressionFragment__ExpAssignment_1 : ( ruleExpression ) ;
    public final void rule__ExpressionFragment__ExpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17050:1: ( ( ruleExpression ) )
            // InternalSqlParser.g:17051:1: ( ruleExpression )
            {
            // InternalSqlParser.g:17051:1: ( ruleExpression )
            // InternalSqlParser.g:17052:1: ruleExpression
            {
             before(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__XexpAssignment_2"
    // InternalSqlParser.g:17061:1: rule__ExpressionFragment__XexpAssignment_2 : ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) ;
    public final void rule__ExpressionFragment__XexpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17065:1: ( ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) )
            // InternalSqlParser.g:17066:1: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            {
            // InternalSqlParser.g:17066:1: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            // InternalSqlParser.g:17067:1: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            {
             before(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 
            // InternalSqlParser.g:17068:1: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            // InternalSqlParser.g:17068:2: rule__ExpressionFragment__XexpAlternatives_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__XexpAlternatives_2_0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAssignment_2"


    // $ANTLR start "rule__ExpressionFragment__NotPrmAssignment_3"
    // InternalSqlParser.g:17077:1: rule__ExpressionFragment__NotPrmAssignment_3 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragment__NotPrmAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17081:1: ( ( RULE_JRNPARAM ) )
            // InternalSqlParser.g:17082:1: ( RULE_JRNPARAM )
            {
            // InternalSqlParser.g:17082:1: ( RULE_JRNPARAM )
            // InternalSqlParser.g:17083:1: RULE_JRNPARAM
            {
             before(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 
            match(input,RULE_JRNPARAM,FOLLOW_2); 
             after(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__NotPrmAssignment_3"


    // $ANTLR start "rule__ExpressionFragment__InAssignment_4"
    // InternalSqlParser.g:17092:1: rule__ExpressionFragment__InAssignment_4 : ( ruleInOperator ) ;
    public final void rule__ExpressionFragment__InAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17096:1: ( ( ruleInOperator ) )
            // InternalSqlParser.g:17097:1: ( ruleInOperator )
            {
            // InternalSqlParser.g:17097:1: ( ruleInOperator )
            // InternalSqlParser.g:17098:1: ruleInOperator
            {
             before(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__InAssignment_4"


    // $ANTLR start "rule__ExpressionFragment__ExistsAssignment_5"
    // InternalSqlParser.g:17107:1: rule__ExpressionFragment__ExistsAssignment_5 : ( ruleExistsOperator ) ;
    public final void rule__ExpressionFragment__ExistsAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17111:1: ( ( ruleExistsOperator ) )
            // InternalSqlParser.g:17112:1: ( ruleExistsOperator )
            {
            // InternalSqlParser.g:17112:1: ( ruleExistsOperator )
            // InternalSqlParser.g:17113:1: ruleExistsOperator
            {
             before(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExistsAssignment_5"


    // $ANTLR start "rule__ExpressionGroup__IsnotAssignment_1"
    // InternalSqlParser.g:17122:1: rule__ExpressionGroup__IsnotAssignment_1 : ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) ;
    public final void rule__ExpressionGroup__IsnotAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17126:1: ( ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) )
            // InternalSqlParser.g:17127:1: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:17127:1: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            // InternalSqlParser.g:17128:1: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            {
             before(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 
            // InternalSqlParser.g:17129:1: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            // InternalSqlParser.g:17129:2: rule__ExpressionGroup__IsnotAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__IsnotAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAssignment_1"


    // $ANTLR start "rule__ExpressionGroup__ExprAssignment_3"
    // InternalSqlParser.g:17138:1: rule__ExpressionGroup__ExprAssignment_3 : ( ruleFullExpression ) ;
    public final void rule__ExpressionGroup__ExprAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17142:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:17143:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:17143:1: ( ruleFullExpression )
            // InternalSqlParser.g:17144:1: ruleFullExpression
            {
             before(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__ExprAssignment_3"


    // $ANTLR start "rule__XExpression__XfAssignment_3"
    // InternalSqlParser.g:17153:1: rule__XExpression__XfAssignment_3 : ( ruleXFunction ) ;
    public final void rule__XExpression__XfAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17157:1: ( ( ruleXFunction ) )
            // InternalSqlParser.g:17158:1: ( ruleXFunction )
            {
            // InternalSqlParser.g:17158:1: ( ruleXFunction )
            // InternalSqlParser.g:17159:1: ruleXFunction
            {
             before(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;

             after(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__XfAssignment_3"


    // $ANTLR start "rule__XExpression__ColAssignment_5"
    // InternalSqlParser.g:17168:1: rule__XExpression__ColAssignment_5 : ( ruleOperandGroup ) ;
    public final void rule__XExpression__ColAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17172:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:17173:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:17173:1: ( ruleOperandGroup )
            // InternalSqlParser.g:17174:1: ruleOperandGroup
            {
             before(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__ColAssignment_5"


    // $ANTLR start "rule__XExpression__PrmAssignment_6_1"
    // InternalSqlParser.g:17183:1: rule__XExpression__PrmAssignment_6_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression__PrmAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17187:1: ( ( ruleXExpressionParams ) )
            // InternalSqlParser.g:17188:1: ( ruleXExpressionParams )
            {
            // InternalSqlParser.g:17188:1: ( ruleXExpressionParams )
            // InternalSqlParser.g:17189:1: ruleXExpressionParams
            {
             before(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;

             after(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__PrmAssignment_6_1"


    // $ANTLR start "rule__XExpression___XfAssignment_3"
    // InternalSqlParser.g:17198:1: rule__XExpression___XfAssignment_3 : ( ruleXFunction ) ;
    public final void rule__XExpression___XfAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17202:1: ( ( ruleXFunction ) )
            // InternalSqlParser.g:17203:1: ( ruleXFunction )
            {
            // InternalSqlParser.g:17203:1: ( ruleXFunction )
            // InternalSqlParser.g:17204:1: ruleXFunction
            {
             before(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;

             after(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___XfAssignment_3"


    // $ANTLR start "rule__XExpression___ColAssignment_5"
    // InternalSqlParser.g:17213:1: rule__XExpression___ColAssignment_5 : ( ruleOperandGroup ) ;
    public final void rule__XExpression___ColAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17217:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:17218:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:17218:1: ( ruleOperandGroup )
            // InternalSqlParser.g:17219:1: ruleOperandGroup
            {
             before(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___ColAssignment_5"


    // $ANTLR start "rule__XExpression___PrmAssignment_6_1"
    // InternalSqlParser.g:17228:1: rule__XExpression___PrmAssignment_6_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression___PrmAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17232:1: ( ( ruleXExpressionParams ) )
            // InternalSqlParser.g:17233:1: ( ruleXExpressionParams )
            {
            // InternalSqlParser.g:17233:1: ( ruleXExpressionParams )
            // InternalSqlParser.g:17234:1: ruleXExpressionParams
            {
             before(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;

             after(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___PrmAssignment_6_1"


    // $ANTLR start "rule__XExpressionParams__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:17243:1: rule__XExpressionParams__EntriesAssignment_1_1_1 : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17247:1: ( ( ruleJRParameter ) )
            // InternalSqlParser.g:17248:1: ( ruleJRParameter )
            {
            // InternalSqlParser.g:17248:1: ( ruleJRParameter )
            // InternalSqlParser.g:17249:1: ruleJRParameter
            {
             before(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;

             after(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__JRParameter__JrprmAssignment"
    // InternalSqlParser.g:17258:1: rule__JRParameter__JrprmAssignment : ( RULE_ID ) ;
    public final void rule__JRParameter__JrprmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17262:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:17263:1: ( RULE_ID )
            {
            // InternalSqlParser.g:17263:1: ( RULE_ID )
            // InternalSqlParser.g:17264:1: RULE_ID
            {
             before(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JRParameter__JrprmAssignment"


    // $ANTLR start "rule__Expression__Op1Assignment_0"
    // InternalSqlParser.g:17273:1: rule__Expression__Op1Assignment_0 : ( ruleOperand ) ;
    public final void rule__Expression__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17277:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:17278:1: ( ruleOperand )
            {
            // InternalSqlParser.g:17278:1: ( ruleOperand )
            // InternalSqlParser.g:17279:1: ruleOperand
            {
             before(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Op1Assignment_0"


    // $ANTLR start "rule__Expression__IsnullAssignment_1_0"
    // InternalSqlParser.g:17288:1: rule__Expression__IsnullAssignment_1_0 : ( ( rule__Expression__IsnullAlternatives_1_0_0 ) ) ;
    public final void rule__Expression__IsnullAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17292:1: ( ( ( rule__Expression__IsnullAlternatives_1_0_0 ) ) )
            // InternalSqlParser.g:17293:1: ( ( rule__Expression__IsnullAlternatives_1_0_0 ) )
            {
            // InternalSqlParser.g:17293:1: ( ( rule__Expression__IsnullAlternatives_1_0_0 ) )
            // InternalSqlParser.g:17294:1: ( rule__Expression__IsnullAlternatives_1_0_0 )
            {
             before(grammarAccess.getExpressionAccess().getIsnullAlternatives_1_0_0()); 
            // InternalSqlParser.g:17295:1: ( rule__Expression__IsnullAlternatives_1_0_0 )
            // InternalSqlParser.g:17295:2: rule__Expression__IsnullAlternatives_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__IsnullAlternatives_1_0_0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionAccess().getIsnullAlternatives_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__IsnullAssignment_1_0"


    // $ANTLR start "rule__Expression__InAssignment_1_1"
    // InternalSqlParser.g:17304:1: rule__Expression__InAssignment_1_1 : ( ruleInOperator ) ;
    public final void rule__Expression__InAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17308:1: ( ( ruleInOperator ) )
            // InternalSqlParser.g:17309:1: ( ruleInOperator )
            {
            // InternalSqlParser.g:17309:1: ( ruleInOperator )
            // InternalSqlParser.g:17310:1: ruleInOperator
            {
             before(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__InAssignment_1_1"


    // $ANTLR start "rule__Expression__ExistsAssignment_1_2"
    // InternalSqlParser.g:17319:1: rule__Expression__ExistsAssignment_1_2 : ( ruleExistsOperator ) ;
    public final void rule__Expression__ExistsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17323:1: ( ( ruleExistsOperator ) )
            // InternalSqlParser.g:17324:1: ( ruleExistsOperator )
            {
            // InternalSqlParser.g:17324:1: ( ruleExistsOperator )
            // InternalSqlParser.g:17325:1: ruleExistsOperator
            {
             before(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__ExistsAssignment_1_2"


    // $ANTLR start "rule__Expression__BetweenAssignment_1_3"
    // InternalSqlParser.g:17334:1: rule__Expression__BetweenAssignment_1_3 : ( ruleBetween ) ;
    public final void rule__Expression__BetweenAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17338:1: ( ( ruleBetween ) )
            // InternalSqlParser.g:17339:1: ( ruleBetween )
            {
            // InternalSqlParser.g:17339:1: ( ruleBetween )
            // InternalSqlParser.g:17340:1: ruleBetween
            {
             before(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBetween();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__BetweenAssignment_1_3"


    // $ANTLR start "rule__Expression__LikeAssignment_1_4"
    // InternalSqlParser.g:17349:1: rule__Expression__LikeAssignment_1_4 : ( ruleLike ) ;
    public final void rule__Expression__LikeAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17353:1: ( ( ruleLike ) )
            // InternalSqlParser.g:17354:1: ( ruleLike )
            {
            // InternalSqlParser.g:17354:1: ( ruleLike )
            // InternalSqlParser.g:17355:1: ruleLike
            {
             before(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 
            pushFollow(FOLLOW_2);
            ruleLike();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__LikeAssignment_1_4"


    // $ANTLR start "rule__Expression__CompAssignment_1_5"
    // InternalSqlParser.g:17364:1: rule__Expression__CompAssignment_1_5 : ( ruleComparison ) ;
    public final void rule__Expression__CompAssignment_1_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17368:1: ( ( ruleComparison ) )
            // InternalSqlParser.g:17369:1: ( ruleComparison )
            {
            // InternalSqlParser.g:17369:1: ( ruleComparison )
            // InternalSqlParser.g:17370:1: ruleComparison
            {
             before(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__CompAssignment_1_5"


    // $ANTLR start "rule__Comparison__OperatorAssignment_0"
    // InternalSqlParser.g:17379:1: rule__Comparison__OperatorAssignment_0 : ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) ;
    public final void rule__Comparison__OperatorAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17383:1: ( ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) )
            // InternalSqlParser.g:17384:1: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            {
            // InternalSqlParser.g:17384:1: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            // InternalSqlParser.g:17385:1: ( rule__Comparison__OperatorAlternatives_0_0 )
            {
             before(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 
            // InternalSqlParser.g:17386:1: ( rule__Comparison__OperatorAlternatives_0_0 )
            // InternalSqlParser.g:17386:2: rule__Comparison__OperatorAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAlternatives_0_0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAssignment_0"


    // $ANTLR start "rule__Comparison__SubOperatorAssignment_1"
    // InternalSqlParser.g:17395:1: rule__Comparison__SubOperatorAssignment_1 : ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) ;
    public final void rule__Comparison__SubOperatorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17399:1: ( ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) )
            // InternalSqlParser.g:17400:1: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:17400:1: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            // InternalSqlParser.g:17401:1: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            {
             before(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 
            // InternalSqlParser.g:17402:1: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            // InternalSqlParser.g:17402:2: rule__Comparison__SubOperatorAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__SubOperatorAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAssignment_1"


    // $ANTLR start "rule__Comparison__Op2Assignment_2"
    // InternalSqlParser.g:17411:1: rule__Comparison__Op2Assignment_2 : ( ruleOperand ) ;
    public final void rule__Comparison__Op2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17415:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:17416:1: ( ruleOperand )
            {
            // InternalSqlParser.g:17416:1: ( ruleOperand )
            // InternalSqlParser.g:17417:1: ruleOperand
            {
             before(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;

             after(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Op2Assignment_2"


    // $ANTLR start "rule__Like__OpLikeAssignment_0"
    // InternalSqlParser.g:17426:1: rule__Like__OpLikeAssignment_0 : ( ( rule__Like__OpLikeAlternatives_0_0 ) ) ;
    public final void rule__Like__OpLikeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17430:1: ( ( ( rule__Like__OpLikeAlternatives_0_0 ) ) )
            // InternalSqlParser.g:17431:1: ( ( rule__Like__OpLikeAlternatives_0_0 ) )
            {
            // InternalSqlParser.g:17431:1: ( ( rule__Like__OpLikeAlternatives_0_0 ) )
            // InternalSqlParser.g:17432:1: ( rule__Like__OpLikeAlternatives_0_0 )
            {
             before(grammarAccess.getLikeAccess().getOpLikeAlternatives_0_0()); 
            // InternalSqlParser.g:17433:1: ( rule__Like__OpLikeAlternatives_0_0 )
            // InternalSqlParser.g:17433:2: rule__Like__OpLikeAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Like__OpLikeAlternatives_0_0();

            state._fsp--;


            }

             after(grammarAccess.getLikeAccess().getOpLikeAlternatives_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__OpLikeAssignment_0"


    // $ANTLR start "rule__Like__Op2Assignment_1"
    // InternalSqlParser.g:17442:1: rule__Like__Op2Assignment_1 : ( ruleLikeOperand ) ;
    public final void rule__Like__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17446:1: ( ( ruleLikeOperand ) )
            // InternalSqlParser.g:17447:1: ( ruleLikeOperand )
            {
            // InternalSqlParser.g:17447:1: ( ruleLikeOperand )
            // InternalSqlParser.g:17448:1: ruleLikeOperand
            {
             before(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLikeOperand();

            state._fsp--;

             after(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Op2Assignment_1"


    // $ANTLR start "rule__LikeOperand__Op2Assignment_0"
    // InternalSqlParser.g:17457:1: rule__LikeOperand__Op2Assignment_0 : ( ruleStringOperand ) ;
    public final void rule__LikeOperand__Op2Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17461:1: ( ( ruleStringOperand ) )
            // InternalSqlParser.g:17462:1: ( ruleStringOperand )
            {
            // InternalSqlParser.g:17462:1: ( ruleStringOperand )
            // InternalSqlParser.g:17463:1: ruleStringOperand
            {
             before(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;

             after(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Op2Assignment_0"


    // $ANTLR start "rule__LikeOperand__Fop2Assignment_1"
    // InternalSqlParser.g:17472:1: rule__LikeOperand__Fop2Assignment_1 : ( ruleOperandFunction ) ;
    public final void rule__LikeOperand__Fop2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17476:1: ( ( ruleOperandFunction ) )
            // InternalSqlParser.g:17477:1: ( ruleOperandFunction )
            {
            // InternalSqlParser.g:17477:1: ( ruleOperandFunction )
            // InternalSqlParser.g:17478:1: ruleOperandFunction
            {
             before(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;

             after(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Fop2Assignment_1"


    // $ANTLR start "rule__LikeOperand__FcastAssignment_2"
    // InternalSqlParser.g:17487:1: rule__LikeOperand__FcastAssignment_2 : ( ruleOpFunctionCast ) ;
    public final void rule__LikeOperand__FcastAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17491:1: ( ( ruleOpFunctionCast ) )
            // InternalSqlParser.g:17492:1: ( ruleOpFunctionCast )
            {
            // InternalSqlParser.g:17492:1: ( ruleOpFunctionCast )
            // InternalSqlParser.g:17493:1: ruleOpFunctionCast
            {
             before(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;

             after(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FcastAssignment_2"


    // $ANTLR start "rule__LikeOperand__FparamAssignment_3"
    // InternalSqlParser.g:17502:1: rule__LikeOperand__FparamAssignment_3 : ( ruleParameterOperand ) ;
    public final void rule__LikeOperand__FparamAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17506:1: ( ( ruleParameterOperand ) )
            // InternalSqlParser.g:17507:1: ( ruleParameterOperand )
            {
            // InternalSqlParser.g:17507:1: ( ruleParameterOperand )
            // InternalSqlParser.g:17508:1: ruleParameterOperand
            {
             before(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;

             after(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FparamAssignment_3"


    // $ANTLR start "rule__Between__OpBetweenAssignment_0"
    // InternalSqlParser.g:17517:1: rule__Between__OpBetweenAssignment_0 : ( ( rule__Between__OpBetweenAlternatives_0_0 ) ) ;
    public final void rule__Between__OpBetweenAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17521:1: ( ( ( rule__Between__OpBetweenAlternatives_0_0 ) ) )
            // InternalSqlParser.g:17522:1: ( ( rule__Between__OpBetweenAlternatives_0_0 ) )
            {
            // InternalSqlParser.g:17522:1: ( ( rule__Between__OpBetweenAlternatives_0_0 ) )
            // InternalSqlParser.g:17523:1: ( rule__Between__OpBetweenAlternatives_0_0 )
            {
             before(grammarAccess.getBetweenAccess().getOpBetweenAlternatives_0_0()); 
            // InternalSqlParser.g:17524:1: ( rule__Between__OpBetweenAlternatives_0_0 )
            // InternalSqlParser.g:17524:2: rule__Between__OpBetweenAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Between__OpBetweenAlternatives_0_0();

            state._fsp--;


            }

             after(grammarAccess.getBetweenAccess().getOpBetweenAlternatives_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__OpBetweenAssignment_0"


    // $ANTLR start "rule__Between__Op2Assignment_1"
    // InternalSqlParser.g:17533:1: rule__Between__Op2Assignment_1 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17537:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:17538:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:17538:1: ( ruleOperandGroup )
            // InternalSqlParser.g:17539:1: ruleOperandGroup
            {
             before(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op2Assignment_1"


    // $ANTLR start "rule__Between__Op3Assignment_3"
    // InternalSqlParser.g:17548:1: rule__Between__Op3Assignment_3 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op3Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17552:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:17553:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:17553:1: ( ruleOperandGroup )
            // InternalSqlParser.g:17554:1: ruleOperandGroup
            {
             before(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op3Assignment_3"


    // $ANTLR start "rule__InOperator__OpAssignment_1"
    // InternalSqlParser.g:17563:1: rule__InOperator__OpAssignment_1 : ( ( rule__InOperator__OpAlternatives_1_0 ) ) ;
    public final void rule__InOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17567:1: ( ( ( rule__InOperator__OpAlternatives_1_0 ) ) )
            // InternalSqlParser.g:17568:1: ( ( rule__InOperator__OpAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:17568:1: ( ( rule__InOperator__OpAlternatives_1_0 ) )
            // InternalSqlParser.g:17569:1: ( rule__InOperator__OpAlternatives_1_0 )
            {
             before(grammarAccess.getInOperatorAccess().getOpAlternatives_1_0()); 
            // InternalSqlParser.g:17570:1: ( rule__InOperator__OpAlternatives_1_0 )
            // InternalSqlParser.g:17570:2: rule__InOperator__OpAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__OpAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getInOperatorAccess().getOpAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpAssignment_1"


    // $ANTLR start "rule__InOperator__SubqueryAssignment_2_0"
    // InternalSqlParser.g:17579:1: rule__InOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__InOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17583:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:17584:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:17584:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:17585:1: ruleSubQueryOperand
            {
             before(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;

             after(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__InOperator__OpListAssignment_2_1"
    // InternalSqlParser.g:17594:1: rule__InOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__InOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17598:1: ( ( ruleOperandListGroup ) )
            // InternalSqlParser.g:17599:1: ( ruleOperandListGroup )
            {
            // InternalSqlParser.g:17599:1: ( ruleOperandListGroup )
            // InternalSqlParser.g:17600:1: ruleOperandListGroup
            {
             before(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;

             after(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__ExistsOperator__OpAssignment_1"
    // InternalSqlParser.g:17609:1: rule__ExistsOperator__OpAssignment_1 : ( ( rule__ExistsOperator__OpAlternatives_1_0 ) ) ;
    public final void rule__ExistsOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17613:1: ( ( ( rule__ExistsOperator__OpAlternatives_1_0 ) ) )
            // InternalSqlParser.g:17614:1: ( ( rule__ExistsOperator__OpAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:17614:1: ( ( rule__ExistsOperator__OpAlternatives_1_0 ) )
            // InternalSqlParser.g:17615:1: ( rule__ExistsOperator__OpAlternatives_1_0 )
            {
             before(grammarAccess.getExistsOperatorAccess().getOpAlternatives_1_0()); 
            // InternalSqlParser.g:17616:1: ( rule__ExistsOperator__OpAlternatives_1_0 )
            // InternalSqlParser.g:17616:2: rule__ExistsOperator__OpAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__OpAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getExistsOperatorAccess().getOpAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpAssignment_1"


    // $ANTLR start "rule__ExistsOperator__SubqueryAssignment_2_0"
    // InternalSqlParser.g:17625:1: rule__ExistsOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__ExistsOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17629:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:17630:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:17630:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:17631:1: ruleSubQueryOperand
            {
             before(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;

             after(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__ExistsOperator__OpListAssignment_2_1"
    // InternalSqlParser.g:17640:1: rule__ExistsOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__ExistsOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17644:1: ( ( ruleOperandListGroup ) )
            // InternalSqlParser.g:17645:1: ( ruleOperandListGroup )
            {
            // InternalSqlParser.g:17645:1: ( ruleOperandListGroup )
            // InternalSqlParser.g:17646:1: ruleOperandListGroup
            {
             before(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;

             after(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__OperandListGroup__OpGroupAssignment_1"
    // InternalSqlParser.g:17655:1: rule__OperandListGroup__OpGroupAssignment_1 : ( ruleOperandList ) ;
    public final void rule__OperandListGroup__OpGroupAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17659:1: ( ( ruleOperandList ) )
            // InternalSqlParser.g:17660:1: ( ruleOperandList )
            {
            // InternalSqlParser.g:17660:1: ( ruleOperandList )
            // InternalSqlParser.g:17661:1: ruleOperandList
            {
             before(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandList();

            state._fsp--;

             after(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__OpGroupAssignment_1"


    // $ANTLR start "rule__OperandList__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:17670:1: rule__OperandList__EntriesAssignment_1_1_1 : ( ruleScalarOperand ) ;
    public final void rule__OperandList__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17674:1: ( ( ruleScalarOperand ) )
            // InternalSqlParser.g:17675:1: ( ruleScalarOperand )
            {
            // InternalSqlParser.g:17675:1: ( ruleScalarOperand )
            // InternalSqlParser.g:17676:1: ruleScalarOperand
            {
             before(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;

             after(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Operand__Op1Assignment_0"
    // InternalSqlParser.g:17685:1: rule__Operand__Op1Assignment_0 : ( ruleOperandFragment ) ;
    public final void rule__Operand__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17689:1: ( ( ruleOperandFragment ) )
            // InternalSqlParser.g:17690:1: ( ruleOperandFragment )
            {
            // InternalSqlParser.g:17690:1: ( ruleOperandFragment )
            // InternalSqlParser.g:17691:1: ruleOperandFragment
            {
             before(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;

             after(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Op1Assignment_0"


    // $ANTLR start "rule__Operand__RightAssignment_1_1"
    // InternalSqlParser.g:17700:1: rule__Operand__RightAssignment_1_1 : ( ruleOperandFragment ) ;
    public final void rule__Operand__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17704:1: ( ( ruleOperandFragment ) )
            // InternalSqlParser.g:17705:1: ( ruleOperandFragment )
            {
            // InternalSqlParser.g:17705:1: ( ruleOperandFragment )
            // InternalSqlParser.g:17706:1: ruleOperandFragment
            {
             before(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;

             after(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__RightAssignment_1_1"


    // $ANTLR start "rule__OperandFragment__ColumnAssignment_0"
    // InternalSqlParser.g:17715:1: rule__OperandFragment__ColumnAssignment_0 : ( ruleColumnOperand ) ;
    public final void rule__OperandFragment__ColumnAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17719:1: ( ( ruleColumnOperand ) )
            // InternalSqlParser.g:17720:1: ( ruleColumnOperand )
            {
            // InternalSqlParser.g:17720:1: ( ruleColumnOperand )
            // InternalSqlParser.g:17721:1: ruleColumnOperand
            {
             before(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnOperand();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__ColumnAssignment_0"


    // $ANTLR start "rule__OperandFragment__XopAssignment_1"
    // InternalSqlParser.g:17730:1: rule__OperandFragment__XopAssignment_1 : ( ruleXOperandFragment ) ;
    public final void rule__OperandFragment__XopAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17734:1: ( ( ruleXOperandFragment ) )
            // InternalSqlParser.g:17735:1: ( ruleXOperandFragment )
            {
            // InternalSqlParser.g:17735:1: ( ruleXOperandFragment )
            // InternalSqlParser.g:17736:1: ruleXOperandFragment
            {
             before(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleXOperandFragment();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__XopAssignment_1"


    // $ANTLR start "rule__OperandFragment__SubqAssignment_2"
    // InternalSqlParser.g:17745:1: rule__OperandFragment__SubqAssignment_2 : ( ruleSubQueryOperand ) ;
    public final void rule__OperandFragment__SubqAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17749:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:17750:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:17750:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:17751:1: ruleSubQueryOperand
            {
             before(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SubqAssignment_2"


    // $ANTLR start "rule__OperandFragment__FcastAssignment_3"
    // InternalSqlParser.g:17760:1: rule__OperandFragment__FcastAssignment_3 : ( ruleOpFunctionCast ) ;
    public final void rule__OperandFragment__FcastAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17764:1: ( ( ruleOpFunctionCast ) )
            // InternalSqlParser.g:17765:1: ( ruleOpFunctionCast )
            {
            // InternalSqlParser.g:17765:1: ( ruleOpFunctionCast )
            // InternalSqlParser.g:17766:1: ruleOpFunctionCast
            {
             before(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FcastAssignment_3"


    // $ANTLR start "rule__OperandFragment__FextAssignment_4"
    // InternalSqlParser.g:17775:1: rule__OperandFragment__FextAssignment_4 : ( ruleFunctionExtract ) ;
    public final void rule__OperandFragment__FextAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17779:1: ( ( ruleFunctionExtract ) )
            // InternalSqlParser.g:17780:1: ( ruleFunctionExtract )
            {
            // InternalSqlParser.g:17780:1: ( ruleFunctionExtract )
            // InternalSqlParser.g:17781:1: ruleFunctionExtract
            {
             before(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleFunctionExtract();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FextAssignment_4"


    // $ANTLR start "rule__OperandFragment__FuncAssignment_5"
    // InternalSqlParser.g:17790:1: rule__OperandFragment__FuncAssignment_5 : ( ruleOperandFunction ) ;
    public final void rule__OperandFragment__FuncAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17794:1: ( ( ruleOperandFunction ) )
            // InternalSqlParser.g:17795:1: ( ruleOperandFunction )
            {
            // InternalSqlParser.g:17795:1: ( ruleOperandFunction )
            // InternalSqlParser.g:17796:1: ruleOperandFunction
            {
             before(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FuncAssignment_5"


    // $ANTLR start "rule__OperandFragment__SqlcaseAssignment_6"
    // InternalSqlParser.g:17805:1: rule__OperandFragment__SqlcaseAssignment_6 : ( ruleSQLCASE ) ;
    public final void rule__OperandFragment__SqlcaseAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17809:1: ( ( ruleSQLCASE ) )
            // InternalSqlParser.g:17810:1: ( ruleSQLCASE )
            {
            // InternalSqlParser.g:17810:1: ( ruleSQLCASE )
            // InternalSqlParser.g:17811:1: ruleSQLCASE
            {
             before(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 
            pushFollow(FOLLOW_2);
            ruleSQLCASE();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SqlcaseAssignment_6"


    // $ANTLR start "rule__OperandFunction__FnameAssignment_1"
    // InternalSqlParser.g:17820:1: rule__OperandFunction__FnameAssignment_1 : ( ruleFNAME ) ;
    public final void rule__OperandFunction__FnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17824:1: ( ( ruleFNAME ) )
            // InternalSqlParser.g:17825:1: ( ruleFNAME )
            {
            // InternalSqlParser.g:17825:1: ( ruleFNAME )
            // InternalSqlParser.g:17826:1: ruleFNAME
            {
             before(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFNAME();

            state._fsp--;

             after(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FnameAssignment_1"


    // $ANTLR start "rule__OperandFunction__StarAssignment_2_0"
    // InternalSqlParser.g:17835:1: rule__OperandFunction__StarAssignment_2_0 : ( RULE_STAR ) ;
    public final void rule__OperandFunction__StarAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17839:1: ( ( RULE_STAR ) )
            // InternalSqlParser.g:17840:1: ( RULE_STAR )
            {
            // InternalSqlParser.g:17840:1: ( RULE_STAR )
            // InternalSqlParser.g:17841:1: RULE_STAR
            {
             before(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 
            match(input,RULE_STAR,FOLLOW_2); 
             after(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__StarAssignment_2_0"


    // $ANTLR start "rule__OperandFunction__ArgsAssignment_2_1"
    // InternalSqlParser.g:17850:1: rule__OperandFunction__ArgsAssignment_2_1 : ( ruleOpFunctionArg ) ;
    public final void rule__OperandFunction__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17854:1: ( ( ruleOpFunctionArg ) )
            // InternalSqlParser.g:17855:1: ( ruleOpFunctionArg )
            {
            // InternalSqlParser.g:17855:1: ( ruleOpFunctionArg )
            // InternalSqlParser.g:17856:1: ruleOpFunctionArg
            {
             before(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOpFunctionArg();

            state._fsp--;

             after(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__ArgsAssignment_2_1"


    // $ANTLR start "rule__OperandFunction__FanAssignment_4"
    // InternalSqlParser.g:17865:1: rule__OperandFunction__FanAssignment_4 : ( ruleFunctionAnalytical ) ;
    public final void rule__OperandFunction__FanAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17869:1: ( ( ruleFunctionAnalytical ) )
            // InternalSqlParser.g:17870:1: ( ruleFunctionAnalytical )
            {
            // InternalSqlParser.g:17870:1: ( ruleFunctionAnalytical )
            // InternalSqlParser.g:17871:1: ruleFunctionAnalytical
            {
             before(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleFunctionAnalytical();

            state._fsp--;

             after(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FanAssignment_4"


    // $ANTLR start "rule__FunctionExtract__VAssignment_2"
    // InternalSqlParser.g:17880:1: rule__FunctionExtract__VAssignment_2 : ( ruleEXTRACT_VALUES ) ;
    public final void rule__FunctionExtract__VAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17884:1: ( ( ruleEXTRACT_VALUES ) )
            // InternalSqlParser.g:17885:1: ( ruleEXTRACT_VALUES )
            {
            // InternalSqlParser.g:17885:1: ( ruleEXTRACT_VALUES )
            // InternalSqlParser.g:17886:1: ruleEXTRACT_VALUES
            {
             before(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEXTRACT_VALUES();

            state._fsp--;

             after(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__VAssignment_2"


    // $ANTLR start "rule__FunctionExtract__OperandAssignment_4"
    // InternalSqlParser.g:17895:1: rule__FunctionExtract__OperandAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__FunctionExtract__OperandAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17899:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:17900:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:17900:1: ( ruleOperandGroup )
            // InternalSqlParser.g:17901:1: ruleOperandGroup
            {
             before(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__OperandAssignment_4"


    // $ANTLR start "rule__FunctionAnalytical__AnClauseAssignment_2"
    // InternalSqlParser.g:17910:1: rule__FunctionAnalytical__AnClauseAssignment_2 : ( ruleAnalyticClause ) ;
    public final void rule__FunctionAnalytical__AnClauseAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17914:1: ( ( ruleAnalyticClause ) )
            // InternalSqlParser.g:17915:1: ( ruleAnalyticClause )
            {
            // InternalSqlParser.g:17915:1: ( ruleAnalyticClause )
            // InternalSqlParser.g:17916:1: ruleAnalyticClause
            {
             before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticClause();

            state._fsp--;

             after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__AnClauseAssignment_2"


    // $ANTLR start "rule__AnalyticClause__AbcAssignment_1"
    // InternalSqlParser.g:17925:1: rule__AnalyticClause__AbcAssignment_1 : ( ruleQueryPartitionClause ) ;
    public final void rule__AnalyticClause__AbcAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17929:1: ( ( ruleQueryPartitionClause ) )
            // InternalSqlParser.g:17930:1: ( ruleQueryPartitionClause )
            {
            // InternalSqlParser.g:17930:1: ( ruleQueryPartitionClause )
            // InternalSqlParser.g:17931:1: ruleQueryPartitionClause
            {
             before(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQueryPartitionClause();

            state._fsp--;

             after(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__AbcAssignment_1"


    // $ANTLR start "rule__AnalyticClause__ObcAssignment_2_0"
    // InternalSqlParser.g:17940:1: rule__AnalyticClause__ObcAssignment_2_0 : ( ruleOrderByClause ) ;
    public final void rule__AnalyticClause__ObcAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17944:1: ( ( ruleOrderByClause ) )
            // InternalSqlParser.g:17945:1: ( ruleOrderByClause )
            {
            // InternalSqlParser.g:17945:1: ( ruleOrderByClause )
            // InternalSqlParser.g:17946:1: ruleOrderByClause
            {
             before(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByClause();

            state._fsp--;

             after(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__ObcAssignment_2_0"


    // $ANTLR start "rule__AnalyticClause__WincAssignment_2_1"
    // InternalSqlParser.g:17955:1: rule__AnalyticClause__WincAssignment_2_1 : ( ruleWindowingClause ) ;
    public final void rule__AnalyticClause__WincAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17959:1: ( ( ruleWindowingClause ) )
            // InternalSqlParser.g:17960:1: ( ruleWindowingClause )
            {
            // InternalSqlParser.g:17960:1: ( ruleWindowingClause )
            // InternalSqlParser.g:17961:1: ruleWindowingClause
            {
             before(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleWindowingClause();

            state._fsp--;

             after(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__WincAssignment_2_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoPAssignment_1"
    // InternalSqlParser.g:17970:1: rule__WindowingClauseBetween__WcoPAssignment_1 : ( ruleWindowingClauseOperandPreceding ) ;
    public final void rule__WindowingClauseBetween__WcoPAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17974:1: ( ( ruleWindowingClauseOperandPreceding ) )
            // InternalSqlParser.g:17975:1: ( ruleWindowingClauseOperandPreceding )
            {
            // InternalSqlParser.g:17975:1: ( ruleWindowingClauseOperandPreceding )
            // InternalSqlParser.g:17976:1: ruleWindowingClauseOperandPreceding
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;

             after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoPAssignment_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoFAssignment_3"
    // InternalSqlParser.g:17985:1: rule__WindowingClauseBetween__WcoFAssignment_3 : ( ruleWindowingClauseOperandFollowing ) ;
    public final void rule__WindowingClauseBetween__WcoFAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17989:1: ( ( ruleWindowingClauseOperandFollowing ) )
            // InternalSqlParser.g:17990:1: ( ruleWindowingClauseOperandFollowing )
            {
            // InternalSqlParser.g:17990:1: ( ruleWindowingClauseOperandFollowing )
            // InternalSqlParser.g:17991:1: ruleWindowingClauseOperandFollowing
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;

             after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoFAssignment_3"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"
    // InternalSqlParser.g:18000:1: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18004:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:18005:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:18005:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:18006:1: ruleAnalyticExprArg
            {
             before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;

             after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"
    // InternalSqlParser.g:18015:1: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18019:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:18020:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:18020:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:18021:1: ruleAnalyticExprArg
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;

             after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"


    // $ANTLR start "rule__OrderByClause__ArgsAssignment_1"
    // InternalSqlParser.g:18030:1: rule__OrderByClause__ArgsAssignment_1 : ( ruleOrderByClauseArgs ) ;
    public final void rule__OrderByClause__ArgsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18034:1: ( ( ruleOrderByClauseArgs ) )
            // InternalSqlParser.g:18035:1: ( ruleOrderByClauseArgs )
            {
            // InternalSqlParser.g:18035:1: ( ruleOrderByClauseArgs )
            // InternalSqlParser.g:18036:1: ruleOrderByClauseArgs
            {
             before(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArgs();

            state._fsp--;

             after(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__ArgsAssignment_1"


    // $ANTLR start "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:18045:1: rule__OrderByClauseArgs__EntriesAssignment_1_1_1 : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18049:1: ( ( ruleOrderByClauseArg ) )
            // InternalSqlParser.g:18050:1: ( ruleOrderByClauseArg )
            {
            // InternalSqlParser.g:18050:1: ( ruleOrderByClauseArg )
            // InternalSqlParser.g:18051:1: ruleOrderByClauseArg
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;

             after(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByClauseArg__ColAssignment_0"
    // InternalSqlParser.g:18060:1: rule__OrderByClauseArg__ColAssignment_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__OrderByClauseArg__ColAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18064:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:18065:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:18065:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:18066:1: ruleAnalyticExprArg
            {
             before(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;

             after(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__ColAssignment_0"


    // $ANTLR start "rule__QueryPartitionClause__ArgsAssignment_1_0"
    // InternalSqlParser.g:18075:1: rule__QueryPartitionClause__ArgsAssignment_1_0 : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__ArgsAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18079:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSqlParser.g:18080:1: ( ruleAnalyticExprArgs )
            {
            // InternalSqlParser.g:18080:1: ( ruleAnalyticExprArgs )
            // InternalSqlParser.g:18081:1: ruleAnalyticExprArgs
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;

             after(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__ArgsAssignment_1_0"


    // $ANTLR start "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:18090:1: rule__AnalyticExprArgs__EntriesAssignment_1_1_1 : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18094:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:18095:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:18095:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:18096:1: ruleAnalyticExprArg
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;

             after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__AnalyticExprArg__CeAssignment_0"
    // InternalSqlParser.g:18105:1: rule__AnalyticExprArg__CeAssignment_0 : ( ruleOperand ) ;
    public final void rule__AnalyticExprArg__CeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18109:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:18110:1: ( ruleOperand )
            {
            // InternalSqlParser.g:18110:1: ( ruleOperand )
            // InternalSqlParser.g:18111:1: ruleOperand
            {
             before(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;

             after(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__CeAssignment_0"


    // $ANTLR start "rule__AnalyticExprArg__ColAliasAssignment_1"
    // InternalSqlParser.g:18120:1: rule__AnalyticExprArg__ColAliasAssignment_1 : ( ruleDbObjectName ) ;
    public final void rule__AnalyticExprArg__ColAliasAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18124:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:18125:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:18125:1: ( ruleDbObjectName )
            // InternalSqlParser.g:18126:1: ruleDbObjectName
            {
             before(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__ColAliasAssignment_1"


    // $ANTLR start "rule__OpFunctionArg__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:18135:1: rule__OpFunctionArg__EntriesAssignment_1_1_1 : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18139:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSqlParser.g:18140:1: ( ruleOpFunctionArgOperand )
            {
            // InternalSqlParser.g:18140:1: ( ruleOpFunctionArgOperand )
            // InternalSqlParser.g:18141:1: ruleOpFunctionArgOperand
            {
             before(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;

             after(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAssignment"
    // InternalSqlParser.g:18150:1: rule__OpFunctionArgOperand__OpAssignment : ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) ;
    public final void rule__OpFunctionArgOperand__OpAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18154:1: ( ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) )
            // InternalSqlParser.g:18155:1: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            {
            // InternalSqlParser.g:18155:1: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            // InternalSqlParser.g:18156:1: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            {
             before(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 
            // InternalSqlParser.g:18157:1: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            // InternalSqlParser.g:18157:2: rule__OpFunctionArgOperand__OpAlternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAlternatives_0();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAssignment"


    // $ANTLR start "rule__OpFunctionCast__OpAssignment_1"
    // InternalSqlParser.g:18166:1: rule__OpFunctionCast__OpAssignment_1 : ( ruleOperandGroup ) ;
    public final void rule__OpFunctionCast__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18170:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:18171:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:18171:1: ( ruleOperandGroup )
            // InternalSqlParser.g:18172:1: ruleOperandGroup
            {
             before(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__OpAssignment_1"


    // $ANTLR start "rule__OpFunctionCast__TypeAssignment_3"
    // InternalSqlParser.g:18181:1: rule__OpFunctionCast__TypeAssignment_3 : ( RULE_ID ) ;
    public final void rule__OpFunctionCast__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18185:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:18186:1: ( RULE_ID )
            {
            // InternalSqlParser.g:18186:1: ( RULE_ID )
            // InternalSqlParser.g:18187:1: RULE_ID
            {
             before(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__TypeAssignment_3"


    // $ANTLR start "rule__OpFunctionCast__PAssignment_4_1"
    // InternalSqlParser.g:18196:1: rule__OpFunctionCast__PAssignment_4_1 : ( RULE_INT ) ;
    public final void rule__OpFunctionCast__PAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18200:1: ( ( RULE_INT ) )
            // InternalSqlParser.g:18201:1: ( RULE_INT )
            {
            // InternalSqlParser.g:18201:1: ( RULE_INT )
            // InternalSqlParser.g:18202:1: RULE_INT
            {
             before(grammarAccess.getOpFunctionCastAccess().getPINTTerminalRuleCall_4_1_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getPINTTerminalRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__PAssignment_4_1"


    // $ANTLR start "rule__OpFunctionCast__P2Assignment_4_2_1"
    // InternalSqlParser.g:18211:1: rule__OpFunctionCast__P2Assignment_4_2_1 : ( RULE_INT ) ;
    public final void rule__OpFunctionCast__P2Assignment_4_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18215:1: ( ( RULE_INT ) )
            // InternalSqlParser.g:18216:1: ( RULE_INT )
            {
            // InternalSqlParser.g:18216:1: ( RULE_INT )
            // InternalSqlParser.g:18217:1: RULE_INT
            {
             before(grammarAccess.getOpFunctionCastAccess().getP2INTTerminalRuleCall_4_2_1_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getP2INTTerminalRuleCall_4_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__P2Assignment_4_2_1"


    // $ANTLR start "rule__XOperandFragment__ParamAssignment_0"
    // InternalSqlParser.g:18226:1: rule__XOperandFragment__ParamAssignment_0 : ( ruleParameterOperand ) ;
    public final void rule__XOperandFragment__ParamAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18230:1: ( ( ruleParameterOperand ) )
            // InternalSqlParser.g:18231:1: ( ruleParameterOperand )
            {
            // InternalSqlParser.g:18231:1: ( ruleParameterOperand )
            // InternalSqlParser.g:18232:1: ruleParameterOperand
            {
             before(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;

             after(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ParamAssignment_0"


    // $ANTLR start "rule__XOperandFragment__EparamAssignment_1"
    // InternalSqlParser.g:18241:1: rule__XOperandFragment__EparamAssignment_1 : ( ruleExclamationParameterOperand ) ;
    public final void rule__XOperandFragment__EparamAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18245:1: ( ( ruleExclamationParameterOperand ) )
            // InternalSqlParser.g:18246:1: ( ruleExclamationParameterOperand )
            {
            // InternalSqlParser.g:18246:1: ( ruleExclamationParameterOperand )
            // InternalSqlParser.g:18247:1: ruleExclamationParameterOperand
            {
             before(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExclamationParameterOperand();

            state._fsp--;

             after(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__EparamAssignment_1"


    // $ANTLR start "rule__XOperandFragment__ScalarAssignment_2"
    // InternalSqlParser.g:18256:1: rule__XOperandFragment__ScalarAssignment_2 : ( ruleScalarNumberOperand ) ;
    public final void rule__XOperandFragment__ScalarAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18260:1: ( ( ruleScalarNumberOperand ) )
            // InternalSqlParser.g:18261:1: ( ruleScalarNumberOperand )
            {
            // InternalSqlParser.g:18261:1: ( ruleScalarNumberOperand )
            // InternalSqlParser.g:18262:1: ruleScalarNumberOperand
            {
             before(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleScalarNumberOperand();

            state._fsp--;

             after(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ScalarAssignment_2"


    // $ANTLR start "rule__ParameterOperand__PrmAssignment"
    // InternalSqlParser.g:18271:1: rule__ParameterOperand__PrmAssignment : ( RULE_JRPARAM ) ;
    public final void rule__ParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18275:1: ( ( RULE_JRPARAM ) )
            // InternalSqlParser.g:18276:1: ( RULE_JRPARAM )
            {
            // InternalSqlParser.g:18276:1: ( RULE_JRPARAM )
            // InternalSqlParser.g:18277:1: RULE_JRPARAM
            {
             before(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 
            match(input,RULE_JRPARAM,FOLLOW_2); 
             after(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ExclamationParameterOperand__PrmAssignment"
    // InternalSqlParser.g:18286:1: rule__ExclamationParameterOperand__PrmAssignment : ( RULE_JRNPARAM ) ;
    public final void rule__ExclamationParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18290:1: ( ( RULE_JRNPARAM ) )
            // InternalSqlParser.g:18291:1: ( RULE_JRNPARAM )
            {
            // InternalSqlParser.g:18291:1: ( RULE_JRNPARAM )
            // InternalSqlParser.g:18292:1: RULE_JRNPARAM
            {
             before(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 
            match(input,RULE_JRNPARAM,FOLLOW_2); 
             after(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclamationParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ColumnOperand__CfullAssignment_0"
    // InternalSqlParser.g:18301:1: rule__ColumnOperand__CfullAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__ColumnOperand__CfullAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18305:1: ( ( ruleColumnFull ) )
            // InternalSqlParser.g:18306:1: ( ruleColumnFull )
            {
            // InternalSqlParser.g:18306:1: ( ruleColumnFull )
            // InternalSqlParser.g:18307:1: ruleColumnFull
            {
             before(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;

             after(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__CfullAssignment_0"


    // $ANTLR start "rule__ColumnOperand__OraAssignment_1"
    // InternalSqlParser.g:18316:1: rule__ColumnOperand__OraAssignment_1 : ( ( LeftParenthesisPlusSignRightParenthesis ) ) ;
    public final void rule__ColumnOperand__OraAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18320:1: ( ( ( LeftParenthesisPlusSignRightParenthesis ) ) )
            // InternalSqlParser.g:18321:1: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            {
            // InternalSqlParser.g:18321:1: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            // InternalSqlParser.g:18322:1: ( LeftParenthesisPlusSignRightParenthesis )
            {
             before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            // InternalSqlParser.g:18323:1: ( LeftParenthesisPlusSignRightParenthesis )
            // InternalSqlParser.g:18324:1: LeftParenthesisPlusSignRightParenthesis
            {
             before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            match(input,LeftParenthesisPlusSignRightParenthesis,FOLLOW_2); 
             after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 

            }

             after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__OraAssignment_1"


    // $ANTLR start "rule__SubQueryOperand__SelAssignment_2"
    // InternalSqlParser.g:18339:1: rule__SubQueryOperand__SelAssignment_2 : ( ruleSelectQuery ) ;
    public final void rule__SubQueryOperand__SelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18343:1: ( ( ruleSelectQuery ) )
            // InternalSqlParser.g:18344:1: ( ruleSelectQuery )
            {
            // InternalSqlParser.g:18344:1: ( ruleSelectQuery )
            // InternalSqlParser.g:18345:1: ruleSelectQuery
            {
             before(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;

             after(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__SelAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SostrAssignment_0"
    // InternalSqlParser.g:18354:1: rule__ScalarOperand__SostrAssignment_0 : ( ruleStringOperand ) ;
    public final void rule__ScalarOperand__SostrAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18358:1: ( ( ruleStringOperand ) )
            // InternalSqlParser.g:18359:1: ( ruleStringOperand )
            {
            // InternalSqlParser.g:18359:1: ( ruleStringOperand )
            // InternalSqlParser.g:18360:1: ruleStringOperand
            {
             before(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;

             after(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SostrAssignment_0"


    // $ANTLR start "rule__ScalarOperand__SodblAssignment_1"
    // InternalSqlParser.g:18369:1: rule__ScalarOperand__SodblAssignment_1 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarOperand__SodblAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18373:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSqlParser.g:18374:1: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSqlParser.g:18374:1: ( RULE_SIGNED_DOUBLE )
            // InternalSqlParser.g:18375:1: RULE_SIGNED_DOUBLE
            {
             before(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); 
             after(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodblAssignment_1"


    // $ANTLR start "rule__ScalarOperand__SodateAssignment_2"
    // InternalSqlParser.g:18384:1: rule__ScalarOperand__SodateAssignment_2 : ( RULE_DATE ) ;
    public final void rule__ScalarOperand__SodateAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18388:1: ( ( RULE_DATE ) )
            // InternalSqlParser.g:18389:1: ( RULE_DATE )
            {
            // InternalSqlParser.g:18389:1: ( RULE_DATE )
            // InternalSqlParser.g:18390:1: RULE_DATE
            {
             before(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 
            match(input,RULE_DATE,FOLLOW_2); 
             after(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodateAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SotimeAssignment_3"
    // InternalSqlParser.g:18399:1: rule__ScalarOperand__SotimeAssignment_3 : ( RULE_TIME ) ;
    public final void rule__ScalarOperand__SotimeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18403:1: ( ( RULE_TIME ) )
            // InternalSqlParser.g:18404:1: ( RULE_TIME )
            {
            // InternalSqlParser.g:18404:1: ( RULE_TIME )
            // InternalSqlParser.g:18405:1: RULE_TIME
            {
             before(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 
            match(input,RULE_TIME,FOLLOW_2); 
             after(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SotimeAssignment_3"


    // $ANTLR start "rule__ScalarOperand__SodtAssignment_4"
    // InternalSqlParser.g:18414:1: rule__ScalarOperand__SodtAssignment_4 : ( RULE_TIMESTAMP ) ;
    public final void rule__ScalarOperand__SodtAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18418:1: ( ( RULE_TIMESTAMP ) )
            // InternalSqlParser.g:18419:1: ( RULE_TIMESTAMP )
            {
            // InternalSqlParser.g:18419:1: ( RULE_TIMESTAMP )
            // InternalSqlParser.g:18420:1: RULE_TIMESTAMP
            {
             before(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 
            match(input,RULE_TIMESTAMP,FOLLOW_2); 
             after(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodtAssignment_4"


    // $ANTLR start "rule__ScalarNumberOperand__SoUIntAssignment_0"
    // InternalSqlParser.g:18429:1: rule__ScalarNumberOperand__SoUIntAssignment_0 : ( RULE_UNSIGNED ) ;
    public final void rule__ScalarNumberOperand__SoUIntAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18433:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:18434:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:18434:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:18435:1: RULE_UNSIGNED
            {
             before(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 
            match(input,RULE_UNSIGNED,FOLLOW_2); 
             after(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SoUIntAssignment_0"


    // $ANTLR start "rule__ScalarNumberOperand__SointAssignment_1"
    // InternalSqlParser.g:18444:1: rule__ScalarNumberOperand__SointAssignment_1 : ( RULE_INT ) ;
    public final void rule__ScalarNumberOperand__SointAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18448:1: ( ( RULE_INT ) )
            // InternalSqlParser.g:18449:1: ( RULE_INT )
            {
            // InternalSqlParser.g:18449:1: ( RULE_INT )
            // InternalSqlParser.g:18450:1: RULE_INT
            {
             before(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SointAssignment_1"


    // $ANTLR start "rule__ScalarNumberOperand__SodblAssignment_2"
    // InternalSqlParser.g:18459:1: rule__ScalarNumberOperand__SodblAssignment_2 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarNumberOperand__SodblAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18463:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSqlParser.g:18464:1: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSqlParser.g:18464:1: ( RULE_SIGNED_DOUBLE )
            // InternalSqlParser.g:18465:1: RULE_SIGNED_DOUBLE
            {
             before(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); 
             after(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SodblAssignment_2"


    // $ANTLR start "rule__ScalarNumberOperand__SostrAssignment_3"
    // InternalSqlParser.g:18474:1: rule__ScalarNumberOperand__SostrAssignment_3 : ( ruleStringOperand ) ;
    public final void rule__ScalarNumberOperand__SostrAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18478:1: ( ( ruleStringOperand ) )
            // InternalSqlParser.g:18479:1: ( ruleStringOperand )
            {
            // InternalSqlParser.g:18479:1: ( ruleStringOperand )
            // InternalSqlParser.g:18480:1: ruleStringOperand
            {
             before(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;

             after(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SostrAssignment_3"


    // $ANTLR start "rule__SQLCASE__ExprAssignment_1"
    // InternalSqlParser.g:18489:1: rule__SQLCASE__ExprAssignment_1 : ( ruleFullExpression ) ;
    public final void rule__SQLCASE__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18493:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:18494:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:18494:1: ( ruleFullExpression )
            // InternalSqlParser.g:18495:1: ruleFullExpression
            {
             before(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__ExprAssignment_1"


    // $ANTLR start "rule__SQLCASE__WhenAssignment_2"
    // InternalSqlParser.g:18504:1: rule__SQLCASE__WhenAssignment_2 : ( ruleSQLCaseWhens ) ;
    public final void rule__SQLCASE__WhenAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18508:1: ( ( ruleSQLCaseWhens ) )
            // InternalSqlParser.g:18509:1: ( ruleSQLCaseWhens )
            {
            // InternalSqlParser.g:18509:1: ( ruleSQLCaseWhens )
            // InternalSqlParser.g:18510:1: ruleSQLCaseWhens
            {
             before(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSQLCaseWhens();

            state._fsp--;

             after(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__WhenAssignment_2"


    // $ANTLR start "rule__SQLCaseWhens__EntriesAssignment_1_1"
    // InternalSqlParser.g:18519:1: rule__SQLCaseWhens__EntriesAssignment_1_1 : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18523:1: ( ( ruleSqlCaseWhen ) )
            // InternalSqlParser.g:18524:1: ( ruleSqlCaseWhen )
            {
            // InternalSqlParser.g:18524:1: ( ruleSqlCaseWhen )
            // InternalSqlParser.g:18525:1: ruleSqlCaseWhen
            {
             before(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;

             after(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__EntriesAssignment_1_1"


    // $ANTLR start "rule__SqlCaseWhen__ExprAssignment_1"
    // InternalSqlParser.g:18534:1: rule__SqlCaseWhen__ExprAssignment_1 : ( ruleFullExpression ) ;
    public final void rule__SqlCaseWhen__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18538:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:18539:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:18539:1: ( ruleFullExpression )
            // InternalSqlParser.g:18540:1: ruleFullExpression
            {
             before(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__ExprAssignment_1"


    // $ANTLR start "rule__SqlCaseWhen__TexpAssignment_3"
    // InternalSqlParser.g:18549:1: rule__SqlCaseWhen__TexpAssignment_3 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__TexpAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18553:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:18554:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:18554:1: ( ruleOperandGroup )
            // InternalSqlParser.g:18555:1: ruleOperandGroup
            {
             before(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__TexpAssignment_3"


    // $ANTLR start "rule__SqlCaseWhen__EexpAssignment_4_1"
    // InternalSqlParser.g:18564:1: rule__SqlCaseWhen__EexpAssignment_4_1 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__EexpAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18568:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:18569:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:18569:1: ( ruleOperandGroup )
            // InternalSqlParser.g:18570:1: ruleOperandGroup
            {
             before(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__EexpAssignment_4_1"


    // $ANTLR start "rule__IntegerValue__IntegerAssignment"
    // InternalSqlParser.g:18579:1: rule__IntegerValue__IntegerAssignment : ( RULE_INT ) ;
    public final void rule__IntegerValue__IntegerAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18583:1: ( ( RULE_INT ) )
            // InternalSqlParser.g:18584:1: ( RULE_INT )
            {
            // InternalSqlParser.g:18584:1: ( RULE_INT )
            // InternalSqlParser.g:18585:1: RULE_INT
            {
             before(grammarAccess.getIntegerValueAccess().getIntegerINTTerminalRuleCall_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getIntegerValueAccess().getIntegerINTTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__IntegerAssignment"

    // Delegated rules


    protected DFA19 dfa19 = new DFA19(this);
    static final String dfa_1s = "\21\uffff";
    static final String dfa_2s = "\1\154\1\u0080\1\35\14\171\2\uffff";
    static final String dfa_3s = "\1\154\1\u0080\1\161\14\u0081\2\uffff";
    static final String dfa_4s = "\17\uffff\1\1\1\2";
    static final String dfa_5s = "\21\uffff}>";
    static final String[] dfa_6s = {
            "\1\1",
            "\1\2",
            "\1\14\1\16\4\uffff\1\6\1\uffff\1\15\1\12\1\13\2\uffff\1\10\20\uffff\1\5\2\uffff\1\11\3\uffff\1\4\21\uffff\1\7\34\uffff\1\3",
            "\1\17\7\uffff\1\20",
            "\1\17\7\uffff\1\20",
            "\1\17\7\uffff\1\20",
            "\1\17\7\uffff\1\20",
            "\1\17\7\uffff\1\20",
            "\1\17\7\uffff\1\20",
            "\1\17\7\uffff\1\20",
            "\1\17\7\uffff\1\20",
            "\1\17\7\uffff\1\20",
            "\1\17\7\uffff\1\20",
            "\1\17\7\uffff\1\20",
            "\1\17\7\uffff\1\20",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "3168:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000010004000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0002000004000000L,0x0000000000000101L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0002000004000002L,0x0000000000000101L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0100000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0200020100000000L,0x0040020000000800L,0x000000000000F1F8L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x8048001200008000L,0x0000000000000400L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000180L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000400010000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0224020000800000L,0x0042100000C00800L,0x000000000000F1D8L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000000E040L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000010004000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000002L,0x0200000000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000002L,0x0800000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x2400200000001000L,0x00000000000A8080L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x2400200000001002L,0x00000000000A8080L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000200L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0001000000000000L,0x0001000000000020L,0x000000000000E000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0040040000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0040000800000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000090000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000001000001000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0008000400000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000002L,0x0008000400000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0040000000C00000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x480004E860000000L,0x0002000000100004L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0200020000000000L,0x0040000000000800L,0x000000000000F1D8L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0224128400940000L,0xE052F80000E00800L,0x000000000000F1D8L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0200020000000000L,0x0040000A08000800L,0x000000000000F1D8L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0200000000000000L,0x0000000000000000L,0x00000000000091D8L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0020000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001FD8L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x1520000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000002L,0x1520000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0200020100000000L,0x00C0000200000800L,0x000000000000F1F8L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x00908000816B0EC0L,0x00000020A0010002L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000001000002100L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000040L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0200028000004020L,0x0040000000000800L,0x000000000000F1D8L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0200028000004030L,0x0040000000000800L,0x000000000000F1D8L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x000000000A000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000001000001008L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x1000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0200020100000000L,0x0040000200000800L,0x000000000000F1F8L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x00C0000000000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0280000000000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0224020000800000L,0x0042100040C00800L,0x000000000000F1D8L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0224020000800002L,0x0042100040C00800L,0x000000000000F1D8L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});

}