<project default="main">
	<property file="build.properties"/>
	
	
	<property name="baseLocation" value="${eclipse.home}"/>
	<!-- by default, check for deltapack co-located with eclipse -->
	<property name="deltapack" value="${eclipse.home}/deltapack/eclipse"/>
	<property name="builder" value="${basedir}" />
	<property name="buildDirectory" value="${basedir}/buildDirectory"/>
	<property name="pluginPath" value="${basedir}/..${path.separator}${deltapack}" />
	<property name="buildTempFolder" value="${buildDirectory}" />
	
	<target name="main">
	
		<echo message="Delta pack location: ${deltapack}"/>
		<!-- Check that we have a deltapack -->
		<available property="haveDeltaPack" file="${deltapack}"/>
		<fail unless="haveDeltaPack" message="The deltapack is required to build this product.  Please edit buildProduct.xml or set the &quot;deltapack&quot; property." />
			
		<!-- Clenup the build environment first -->
		<delete dir="${buildDirectory}"/>
		
		<ant antfile="${eclipse.pdebuild.scripts}/productBuild/productBuild.xml" />

		<move todir="${basedir}">
			<fileset dir="${buildDirectory}/${buildLabel}" includes="*.zip"/>
		</move>

		<!-- refresh the workspace -->
		<eclipse.convertPath fileSystemPath="${basedir}" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>
	
	<!-- create the windows installer -->
	<target name="windows-x86-installer" description="Create the win32 x86 installer using NSIS script (NSIS required)">
		
		<property name="dist" value="${basedir}/dist" />
		<property name="zipfile" value="${buildId}-win32.win32.x86"/>
		<property name="zipdir" value="${dist}/${zipfile}" />
		
		<echo message="${basedir}/${buildId}-win32.win32.x86.zip"/>
		<!-- cleanup the previous directory (if any) -->
		<mkdir dir="${dist}"/>
		
		<delete dir="${zipdir}"/>
		
		<!-- Decompressing the archive created by the Eclipse build -->
		<unzip src="${basedir}/${zipfile}.zip" dest="${zipdir}"/>
		<!-- Replacing the exe launcher (it is a modified version of the original laucher (Eclipse 3.6.2)
		     improved with Jaspersoft Studio icons -->
		<copy file="${basedir}/resources/Jaspersoft Studio.exe" tofile="${zipdir}/jaspersoftstudio/Jaspersoft Studio.exe" overwrite="true"/>
		
		<!-- copy notice.txt and LICENSE.txt in the eclipse folder -->
		<copy file="${basedir}/resources/notice.txt" todir="${zipdir}/jaspersoftstudio"/>
		<copy file="${basedir}/resources/LICENSE.txt" todir="${zipdir}/jaspersoftstudio"/>
		
		<taskdef name="nsisant"	classname="net.sf.nsisant.Task"	classpath="${basedir}/lib/nsisant-1.1.jar"/>
		<nsisant script="${basedir}/resources/JaspersoftStudioInstaller.nsi">
			<define name="PRDUCT_ARCH" value="x86"/>
			<define name="PRODUCT_VERSION" value="${jss.version}"/>
			<define name="PRODUCT_NAME" value="Jaspersoft Studio"/>
			<define name="PRODUCT_WEB_SITE" value="http://www.jasperforge.org/projects/jaspersoftstudio"/>
			<define name="INSTALLER_FILES_DIR" value="${zipdir}/jaspersoftstudio"/>
			<define name="OUTPUT_FILE_NAME" value="${dist}/${jss.win32.x86.installer}"/>
		</nsisant>
		
		<!-- remove the directory used to create the installer -->
		<delete dir="${zipdir}"/>	

	</target>
	
	<!-- create the windows installer -->
		<target name="windows-x86_64-installer" description="Create the win64 installer using NSIS script (NSIS required)">
			
			<property name="dist" value="${basedir}/dist" />
			<property name="zipfile" value="${buildId}-win32.win32.x86_64"/>
			<property name="zipdir" value="${dist}/${zipfile}" />
			
			<echo message="${basedir}/${buildId}-win32.win32.x86_64.zip"/>
			<!-- cleanup the previous directory (if any) -->
			<mkdir dir="${dist}"/>
			
			<delete dir="${zipdir}"/>
			
			<!-- Decompressing the archive created by the Eclipse build -->
			<unzip src="${basedir}/${zipfile}.zip" dest="${zipdir}"/>
			<!-- Replacing the exe launcher (it is a modified version of the original laucher (Eclipse 3.6.2)
			     improved with Jaspersoft Studio icons -->
			<copy file="${basedir}/resources/Jaspersoft Studio64.exe" tofile="${zipdir}/jaspersoftstudio/Jaspersoft Studio.exe" overwrite="true"/>
			
			<!-- copy notice.txt and LICENSE.txt in the eclipse folder -->
			<copy file="${basedir}/resources/notice.txt" todir="${zipdir}/jaspersoftstudio"/>
			<copy file="${basedir}/resources/LICENSE.txt" todir="${zipdir}/jaspersoftstudio"/>
			
			<taskdef name="nsisant"	classname="net.sf.nsisant.Task"	classpath="${basedir}/lib/nsisant-1.1.jar"/>
			<nsisant script="${basedir}/resources/JaspersoftStudioInstaller64.nsi">
				<define name="PRDUCT_ARCH" value="x86_64"/>
				<define name="PRODUCT_VERSION" value="${jss.version}"/>
				<define name="PRODUCT_NAME" value="Jaspersoft Studio"/>
				<define name="PRODUCT_WEB_SITE" value="http://www.jasperforge.org/projects/jaspersoftstudio"/>
				<define name="INSTALLER_FILES_DIR" value="${zipdir}/jaspersoftstudio"/>
				<define name="OUTPUT_FILE_NAME" value="${dist}/${jss.win32.x86_64.installer}"/>
			</nsisant>
			
			<!-- remove the directory used to create the installer -->
			<delete dir="${zipdir}"/>	

		</target>
	
	<!-- create the Linux tgz -->
	<target name="linux-x86-installer" description="Create the Linux (x86) tgz package (Unix system required)">
			
			<property name="dist" value="${basedir}/dist" />
			<property name="zipfile" value="${buildId}-linux.gtk.x86"/>
			<property name="zipdir" value="${dist}/${zipfile}" />

			<!-- cleanup the previous directory (if any) -->
			<mkdir dir="${dist}"/>
			
			<delete dir="${zipdir}"/>
			
			<!-- Decompressing the archive created by the Eclipse build -->
			<unzip src="${basedir}/${zipfile}.zip" dest="${zipdir}"/>
			<!-- copy notice.txt and LICENSE.txt in the eclipse folder -->
			<copy file="${basedir}/resources/notice.txt" todir="${zipdir}/jaspersoftstudio"/>
			<copy file="${basedir}/resources/LICENSE.txt" todir="${zipdir}/jaspersoftstudio"/>
			<chmod file="${zipdir}/jaspersoftstudio/Jaspersoft Studio" perm="ugo+x"/>
			<!-- rename the folder -->
			<move file="${zipdir}/jaspersoftstudio" tofile="${zipdir}/${jss.distro.folder}"/>
			
			<tar destfile="${dist}/${jss.linux.x86.tgz}" basedir="${zipdir}" compression="gzip"/>
			<!-- remove the temp extraction directory -->
			<delete dir="${zipdir}"/>
	</target>
	
	<!-- create the Linux tgz -->
		<target name="linux-x86_64-installer" description="Create the Linux (x86_64) tgz package (Unix system required)">
				
				<property name="dist" value="${basedir}/dist" />
				<property name="zipfile" value="${buildId}-linux.gtk.x86_64"/>
				<property name="zipdir" value="${dist}/${zipfile}" />

				<!-- cleanup the previous directory (if any) -->
				<mkdir dir="${dist}"/>
				
				<delete dir="${zipdir}"/>
				
				<!-- Decompressing the archive created by the Eclipse build -->
				<unzip src="${basedir}/${zipfile}.zip" dest="${zipdir}"/>
				<!-- copy notice.txt and LICENSE.txt in the eclipse folder -->
				<copy file="${basedir}/resources/notice.txt" todir="${zipdir}/jaspersoftstudio"/>
				<copy file="${basedir}/resources/LICENSE.txt" todir="${zipdir}/jaspersoftstudio"/>
				<chmod file="${zipdir}/jaspersoftstudio/Jaspersoft Studio" perm="ugo+x"/>
				<!-- rename the folder -->
				<move file="${zipdir}/jaspersoftstudio" tofile="${zipdir}/${jss.distro.folder}"/>
				
				<tar destfile="${dist}/${jss.linux.x86_64.tgz}" basedir="${zipdir}" compression="gzip"/>
				<!-- remove the temp extraction directory -->
				<delete dir="${zipdir}"/>
		</target>
	
	
		<!-- create the Mac installer  -->
		<target name="mac-x86_64-installer" description="Create DMG installer for Mac x86_64 using a remote Mac server (uses ssh.properties)">
				
			<property file="ssh.properties"/>
				<property name="dist" value="${basedir}/dist" />
				<property name="zipfile" value="${buildId}-macosx.cocoa.x86_64"/>
				<property name="zipdir" value="${dist}/${zipfile}" />

				<sshexec host="${sshhost}"
					username="${sshuser}"
					password="${sshpass}"
					command="rm -Rf ${sshroot}/tmp-jssbuild"/>
			
				<sshexec host="${sshhost}"
					username="${sshuser}"
					password="${sshpass}"
					command="mkdir ${sshroot}/tmp-jssbuild"/>

				<scp file="${basedir}/resources/jss-package-template.tgz"
			       todir="${sshuser}@${sshhost}:${sshroot}/tmp-jssbuild" 
				   password="${sshpass}"/>

				<scp file="${basedir}/resources/mac_distro.sh"
				       todir="${sshuser}@${sshhost}:${sshroot}/tmp-jssbuild" 
					   password="${sshpass}"/>
			
				<scp file="${basedir}/${zipfile}.zip"
				      todir="${sshuser}@${sshhost}:${sshroot}/tmp-jssbuild" 
					  password="${sshpass}"/>
			
			    <sshexec host="${sshhost}"
						username="${sshuser}"
						password="${sshpass}"
						command="cd '${sshroot}/tmp-jssbuild'; chmod +x mac_distro.sh; ./mac_distro.sh ${jss.version}"/>
			
			    <scp file="${sshuser}@${sshhost}:${sshroot}/tmp-jssbuild/jaspersoftstudio.dmg"
	    				localTofile="${dist}/${jss.mac.x86_64}" 
						password="${sshpass}"/>
				
		</target>
	
	
		<!-- create the Mac installer -->
			<target name="mac-x86-installer" description="Create DMG installer for Mac x86 using a remote Mac server (uses ssh.properties)">
					
				<property file="ssh.properties"/>
					<property name="dist" value="${basedir}/dist" />
					<property name="zipfile" value="${buildId}-macosx.cocoa.x86"/>
					<property name="zipdir" value="${dist}/${zipfile}" />

					<sshexec host="${sshhost}"
						username="${sshuser}"
						password="${sshpass}"
						command="rm -Rf ${sshroot}/tmp-jssbuild"/>
				
					<sshexec host="${sshhost}"
						username="${sshuser}"
						password="${sshpass}"
						command="mkdir ${sshroot}/tmp-jssbuild"/>

					<scp file="${basedir}/resources/jss-package-template.tgz"
				       todir="${sshuser}@${sshhost}:${sshroot}/tmp-jssbuild" 
					   password="${sshpass}"/>

					<scp file="${basedir}/resources/mac_distro.sh"
					       todir="${sshuser}@${sshhost}:${sshroot}/tmp-jssbuild" 
						   password="${sshpass}"/>
				
					<scp file="${basedir}/${zipfile}.zip"
					      todir="${sshuser}@${sshhost}:${sshroot}/tmp-jssbuild" 
						  password="${sshpass}"/>
				
				    <sshexec host="${sshhost}"
							username="${sshuser}"
							password="${sshpass}"
							command="cd '${sshroot}/tmp-jssbuild'; chmod +x mac_distro.sh; ./mac_distro.sh ${jss.version}"/>
				
				    <scp file="${sshuser}@${sshhost}:${sshroot}/tmp-jssbuild/jaspersoftstudio.dmg"
		    				localTofile="${dist}/${jss.mac.x86}" 
							password="${sshpass}"/>
					
			</target>
	
	
	
</project>