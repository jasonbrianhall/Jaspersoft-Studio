/*******************************************************************************
 * Copyright (C) 2010 - 2016. TIBCO Software Inc. 
 * All Rights Reserved. Confidential & Proprietary.
 ******************************************************************************/
package com.jaspersoft.studio.data.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.jaspersoft.studio.data.services.SqlGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalSqlParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "UNBOUNDEDFOLLOWING", "UNBOUNDEDPRECEDING", "MINUTE_MICROSECOND", "SECOND_MICROSECOND", "ORDERSIBLINGSBY", "HOUR_MICROSECOND", "DAY_MICROSECOND", "MINUTE_SECOND", "STRAIGHT_JOIN", "PARTITIONBY", "CURRENTROW", "FETCHFIRST", "HOUR_MINUTE", "HOUR_SECOND", "ISNOTNULL", "MICROSECOND", "NOTBETWEEN", "DAY_MINUTE", "DAY_SECOND", "NOTEXISTS", "YEAR_MONTH", "KW_FOLLOWING", "INTERSECT", "PRECEDING", "WITHTIES", "BETWEEN_3", "BETWEEN_1", "DAY_HOUR", "DISTINCT", "GROUPBY", "NOTLIKE", "NOTEQUAL", "ORDERBY", "BETWEEN_2", "GREATER_1", "BETWEEN", "EXCLUDE", "EXTRACT", "GREATER", "INCLUDE", "ISNULL", "NATURAL", "PERCENT", "QUARTER", "UNPIVOT", "EXCEPT", "EXISTS", "HAVING", "MINUTE", "NOTIN_1", "OFFSET", "SECOND", "SELECT", "VALUES", "CAST", "CROSS", "EQUAL", "FIRST", "INNER", "LESS_1", "LIMIT", "MINUS", "MONTH", "NOTIN", "NULLS", "OUTER", "PIVOT", "RANGE", "RIGHT", "UNION", "USING", "WHERE", "CASE", "DESC", "ELSE", "FROM", "FULL", "HOUR", "JOIN", "LAST", "LEFT", "LESS", "LIKE", "NOT", "NOT_1", "NULL", "ONLY", "OVER", "ROWS", "SOME", "THEN", "WEEK", "WHEN", "YEAR", "LeftParenthesisPlusSignRightParenthesis", "ALL", "AND", "ANY", "ASC", "DAY", "END", "FOR", "ROW", "TOP", "XML", "ExclamationMarkEqualsSign", "X", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "GreaterThanSignEqualsSign", "AS", "IN", "ON", "OR", "CircumflexAccentEqualsSign", "VerticalLineVerticalLine", "LeftParenthesis", "RightParenthesis", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "LessThanSign", "EqualsSign", "GreaterThanSign", "LeftCurlyBracket", "VerticalLine", "RightCurlyBracket", "RULE_JRPARAM", "RULE_JRNPARAM", "RULE_STAR", "RULE_UNSIGNED", "RULE_INT", "RULE_SIGNED_DOUBLE", "RULE_DATE", "RULE_TIME", "RULE_TIMESTAMP", "RULE_STRING_", "RULE_STRING", "RULE_DBNAME", "RULE_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int CAST=58;
    public static final int PIVOT=70;
    public static final int WEEK=95;
    public static final int RULE_ID=145;
    public static final int RULE_JRNPARAM=134;
    public static final int RULE_DATE=139;
    public static final int RightParenthesis=121;
    public static final int ROW=106;
    public static final int RULE_ANY_OTHER=149;
    public static final int CASE=76;
    public static final int LeftParenthesis=120;
    public static final int DAY=103;
    public static final int NOT=87;
    public static final int Solidus=126;
    public static final int EXCEPT=49;
    public static final int EOF=-1;
    public static final int MONTH=66;
    public static final int FullStop=125;
    public static final int NOTEQUAL=35;
    public static final int NOTLIKE=34;
    public static final int FULL=80;
    public static final int GREATER=42;
    public static final int QUARTER=47;
    public static final int USING=74;
    public static final int CircumflexAccentEqualsSign=118;
    public static final int PRECEDING=27;
    public static final int INCLUDE=43;
    public static final int LessThanSign=127;
    public static final int LESS=85;
    public static final int HOUR_MICROSECOND=9;
    public static final int RULE_SIGNED_DOUBLE=138;
    public static final int NOT_1=88;
    public static final int LAST=83;
    public static final int NOTIN_1=53;
    public static final int SELECT=56;
    public static final int GROUPBY=33;
    public static final int SECOND=55;
    public static final int DAY_MICROSECOND=10;
    public static final int ASC=102;
    public static final int NULL=89;
    public static final int ELSE=78;
    public static final int ON=116;
    public static final int LessThanSignEqualsSign=111;
    public static final int DAY_MINUTE=21;
    public static final int LeftCurlyBracket=130;
    public static final int CURRENTROW=14;
    public static final int HOUR_SECOND=17;
    public static final int STRAIGHT_JOIN=12;
    public static final int X=110;
    public static final int RULE_ML_COMMENT=146;
    public static final int INTERSECT=26;
    public static final int RULE_STRING=143;
    public static final int ORDERSIBLINGSBY=8;
    public static final int VerticalLine=131;
    public static final int OR=117;
    public static final int END=104;
    public static final int FROM=79;
    public static final int DISTINCT=32;
    public static final int XML=108;
    public static final int BETWEEN_3=29;
    public static final int BETWEEN_2=37;
    public static final int BETWEEN_1=30;
    public static final int RightCurlyBracket=132;
    public static final int NOTIN=67;
    public static final int OVER=91;
    public static final int WHERE=75;
    public static final int VerticalLineVerticalLine=119;
    public static final int HyphenMinus=124;
    public static final int INNER=62;
    public static final int YEAR=97;
    public static final int RULE_UNSIGNED=136;
    public static final int MICROSECOND=19;
    public static final int LIMIT=64;
    public static final int ONLY=90;
    public static final int UNPIVOT=48;
    public static final int ISNULL=44;
    public static final int FOR=105;
    public static final int ORDERBY=36;
    public static final int RULE_STRING_=142;
    public static final int LessThanSignGreaterThanSign=112;
    public static final int AND=100;
    public static final int NOTEXISTS=23;
    public static final int GreaterThanSign=129;
    public static final int CROSS=59;
    public static final int SECOND_MICROSECOND=7;
    public static final int YEAR_MONTH=24;
    public static final int LESS_1=63;
    public static final int AS=114;
    public static final int DAY_HOUR=31;
    public static final int THEN=94;
    public static final int IN=115;
    public static final int FETCHFIRST=15;
    public static final int OFFSET=54;
    public static final int LEFT=84;
    public static final int SOME=93;
    public static final int EQUAL=60;
    public static final int ALL=99;
    public static final int RULE_TIME=140;
    public static final int RULE_INT=137;
    public static final int RULE_TIMESTAMP=141;
    public static final int RULE_DBNAME=144;
    public static final int EXISTS=50;
    public static final int MINUTE_SECOND=11;
    public static final int EXTRACT=41;
    public static final int WITHTIES=28;
    public static final int LIKE=86;
    public static final int EXCLUDE=40;
    public static final int ExclamationMarkEqualsSign=109;
    public static final int OUTER=69;
    public static final int PARTITIONBY=13;
    public static final int PERCENT=46;
    public static final int UNBOUNDEDFOLLOWING=4;
    public static final int KW_FOLLOWING=25;
    public static final int GREATER_1=38;
    public static final int MINUTE_MICROSECOND=6;
    public static final int VALUES=57;
    public static final int RANGE=71;
    public static final int RIGHT=72;
    public static final int HAVING=51;
    public static final int MINUS=65;
    public static final int HOUR=81;
    public static final int RULE_SL_COMMENT=147;
    public static final int JOIN=82;
    public static final int UNION=73;
    public static final int NOTBETWEEN=20;
    public static final int NULLS=68;
    public static final int ANY=101;
    public static final int PlusSign=122;
    public static final int ISNOTNULL=18;
    public static final int UNBOUNDEDPRECEDING=5;
    public static final int DAY_SECOND=22;
    public static final int RULE_STAR=135;
    public static final int WHEN=96;
    public static final int RULE_JRPARAM=133;
    public static final int HOUR_MINUTE=16;
    public static final int ROWS=92;
    public static final int GreaterThanSignEqualsSign=113;
    public static final int NATURAL=45;
    public static final int DESC=77;
    public static final int LeftParenthesisPlusSignRightParenthesis=98;
    public static final int MINUTE=52;
    public static final int RULE_WS=148;
    public static final int TOP=107;
    public static final int Comma=123;
    public static final int EqualsSign=128;
    public static final int BETWEEN=39;
    public static final int FIRST=61;

    // delegates
    // delegators


        public InternalSqlParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSqlParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSqlParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSqlParser.g"; }


     
     	private SqlGrammarAccess grammarAccess;
     	
     	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
     	
     	{
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("LeftCurlyBracket", "'{'");
    		tokenNameToValue.put("VerticalLine", "'|'");
    		tokenNameToValue.put("RightCurlyBracket", "'}'");
    		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
    		tokenNameToValue.put("X", "'\u0024X'");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AS", "'AS'");
    		tokenNameToValue.put("IN", "'IN'");
    		tokenNameToValue.put("ON", "'ON'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("CircumflexAccentEqualsSign", "'^='");
    		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
    		tokenNameToValue.put("LeftParenthesisPlusSignRightParenthesis", "'(+)'");
    		tokenNameToValue.put("ALL", "'ALL'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("ANY", "'ANY'");
    		tokenNameToValue.put("ASC", "'ASC'");
    		tokenNameToValue.put("DAY", "'DAY'");
    		tokenNameToValue.put("END", "'END'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("ROW", "'ROW'");
    		tokenNameToValue.put("TOP", "'TOP'");
    		tokenNameToValue.put("XML", "'XML'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("DESC", "'DESC'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("FROM", "'FROM'");
    		tokenNameToValue.put("FULL", "'FULL'");
    		tokenNameToValue.put("HOUR", "'HOUR'");
    		tokenNameToValue.put("JOIN", "'JOIN'");
    		tokenNameToValue.put("LAST", "'LAST'");
    		tokenNameToValue.put("LEFT", "'LEFT'");
    		tokenNameToValue.put("LESS", "'LESS'");
    		tokenNameToValue.put("LIKE", "'LIKE'");
    		tokenNameToValue.put("NOT", "'NOT\n'");
    		tokenNameToValue.put("NOT_1", "'NOT '");
    		tokenNameToValue.put("NULL", "'NULL'");
    		tokenNameToValue.put("ONLY", "'ONLY'");
    		tokenNameToValue.put("OVER", "'OVER'");
    		tokenNameToValue.put("ROWS", "'ROWS'");
    		tokenNameToValue.put("SOME", "'SOME'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("WEEK", "'WEEK'");
    		tokenNameToValue.put("WHEN", "'WHEN'");
    		tokenNameToValue.put("YEAR", "'YEAR'");
    		tokenNameToValue.put("CAST", "'CAST('");
    		tokenNameToValue.put("CROSS", "'CROSS'");
    		tokenNameToValue.put("EQUAL", "'EQUAL'");
    		tokenNameToValue.put("FIRST", "'FIRST'");
    		tokenNameToValue.put("INNER", "'INNER'");
    		tokenNameToValue.put("LESS_1", "'LESS]'");
    		tokenNameToValue.put("LIMIT", "'LIMIT'");
    		tokenNameToValue.put("MINUS", "'MINUS'");
    		tokenNameToValue.put("MONTH", "'MONTH'");
    		tokenNameToValue.put("NOTIN", "'NOTIN'");
    		tokenNameToValue.put("NULLS", "'NULLS'");
    		tokenNameToValue.put("OUTER", "'OUTER'");
    		tokenNameToValue.put("PIVOT", "'PIVOT'");
    		tokenNameToValue.put("RANGE", "'RANGE'");
    		tokenNameToValue.put("RIGHT", "'RIGHT'");
    		tokenNameToValue.put("UNION", "'UNION'");
    		tokenNameToValue.put("USING", "'USING'");
    		tokenNameToValue.put("WHERE", "'WHERE'");
    		tokenNameToValue.put("EXCEPT", "'EXCEPT'");
    		tokenNameToValue.put("EXISTS", "'EXISTS'");
    		tokenNameToValue.put("HAVING", "'HAVING'");
    		tokenNameToValue.put("MINUTE", "'MINUTE'");
    		tokenNameToValue.put("NOTIN_1", "'NOT IN'");
    		tokenNameToValue.put("OFFSET", "'OFFSET'");
    		tokenNameToValue.put("SECOND", "'SECOND'");
    		tokenNameToValue.put("SELECT", "'SELECT'");
    		tokenNameToValue.put("VALUES", "'VALUES'");
    		tokenNameToValue.put("BETWEEN", "'BETWEEN'");
    		tokenNameToValue.put("EXCLUDE", "'EXCLUDE'");
    		tokenNameToValue.put("EXTRACT", "'EXTRACT'");
    		tokenNameToValue.put("GREATER", "'GREATER'");
    		tokenNameToValue.put("INCLUDE", "'INCLUDE'");
    		tokenNameToValue.put("ISNULL", "'IS NULL'");
    		tokenNameToValue.put("NATURAL", "'NATURAL'");
    		tokenNameToValue.put("PERCENT", "'PERCENT'");
    		tokenNameToValue.put("QUARTER", "'QUARTER'");
    		tokenNameToValue.put("UNPIVOT", "'UNPIVOT'");
    		tokenNameToValue.put("BETWEEN_1", "'BETWEEN]'");
    		tokenNameToValue.put("DAY_HOUR", "'DAY_HOUR'");
    		tokenNameToValue.put("DISTINCT", "'DISTINCT'");
    		tokenNameToValue.put("GROUPBY", "'GROUP BY'");
    		tokenNameToValue.put("NOTLIKE", "'NOT LIKE'");
    		tokenNameToValue.put("NOTEQUAL", "'NOTEQUAL'");
    		tokenNameToValue.put("ORDERBY", "'ORDER BY'");
    		tokenNameToValue.put("BETWEEN_2", "'[BETWEEN'");
    		tokenNameToValue.put("GREATER_1", "'[GREATER'");
    		tokenNameToValue.put("KW_FOLLOWING", "'FOLLOWING'");
    		tokenNameToValue.put("INTERSECT", "'INTERSECT'");
    		tokenNameToValue.put("PRECEDING", "'PRECEDING'");
    		tokenNameToValue.put("WITHTIES", "'WITH TIES'");
    		tokenNameToValue.put("BETWEEN_3", "'[BETWEEN]'");
    		tokenNameToValue.put("DAY_MINUTE", "'DAY_MINUTE'");
    		tokenNameToValue.put("DAY_SECOND", "'DAY_SECOND'");
    		tokenNameToValue.put("NOTEXISTS", "'NOT EXISTS'");
    		tokenNameToValue.put("YEAR_MONTH", "'YEAR_MONTH'");
    		tokenNameToValue.put("CURRENTROW", "'CURRENT ROW'");
    		tokenNameToValue.put("FETCHFIRST", "'FETCH FIRST'");
    		tokenNameToValue.put("HOUR_MINUTE", "'HOUR_MINUTE'");
    		tokenNameToValue.put("HOUR_SECOND", "'HOUR_SECOND'");
    		tokenNameToValue.put("ISNOTNULL", "'IS NOT NULL'");
    		tokenNameToValue.put("MICROSECOND", "'MICROSECOND'");
    		tokenNameToValue.put("NOTBETWEEN", "'NOT BETWEEN'");
    		tokenNameToValue.put("PARTITIONBY", "'PARTITION BY'");
    		tokenNameToValue.put("MINUTE_SECOND", "'MINUTE_SECOND'");
    		tokenNameToValue.put("STRAIGHT_JOIN", "'STRAIGHT_JOIN'");
    		tokenNameToValue.put("DAY_MICROSECOND", "'DAY_MICROSECOND'");
    		tokenNameToValue.put("HOUR_MICROSECOND", "'HOUR_MICROSECOND'");
    		tokenNameToValue.put("ORDERSIBLINGSBY", "'ORDER SIBLINGS BY'");
    		tokenNameToValue.put("MINUTE_MICROSECOND", "'MINUTE_MICROSECOND'");
    		tokenNameToValue.put("SECOND_MICROSECOND", "'SECOND_MICROSECOND'");
    		tokenNameToValue.put("UNBOUNDEDFOLLOWING", "'UNBOUNDED FOLLOWING'");
    		tokenNameToValue.put("UNBOUNDEDPRECEDING", "'UNBOUNDED PRECEDING'");
     	}
     	
        public void setGrammarAccess(SqlGrammarAccess grammarAccess) {
        	this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected Grammar getGrammar() {
        	return grammarAccess.getGrammar();
        }

    	@Override
        protected String getValueForTokenName(String tokenName) {
        	String result = tokenNameToValue.get(tokenName);
        	if (result == null)
        		result = tokenName;
        	return result;
        }



    // $ANTLR start "entryRuleModel"
    // InternalSqlParser.g:192:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalSqlParser.g:193:1: ( ruleModel EOF )
            // InternalSqlParser.g:194:1: ruleModel EOF
            {
             before(grammarAccess.getModelRule()); 
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;

             after(grammarAccess.getModelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalSqlParser.g:201:1: ruleModel : ( ( rule__Model__Group__0 ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:205:5: ( ( ( rule__Model__Group__0 ) ) )
            // InternalSqlParser.g:206:1: ( ( rule__Model__Group__0 ) )
            {
            // InternalSqlParser.g:206:1: ( ( rule__Model__Group__0 ) )
            // InternalSqlParser.g:207:1: ( rule__Model__Group__0 )
            {
             before(grammarAccess.getModelAccess().getGroup()); 
            // InternalSqlParser.g:208:1: ( rule__Model__Group__0 )
            // InternalSqlParser.g:208:2: rule__Model__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Model__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getModelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleFetchFirst"
    // InternalSqlParser.g:220:1: entryRuleFetchFirst : ruleFetchFirst EOF ;
    public final void entryRuleFetchFirst() throws RecognitionException {
        try {
            // InternalSqlParser.g:221:1: ( ruleFetchFirst EOF )
            // InternalSqlParser.g:222:1: ruleFetchFirst EOF
            {
             before(grammarAccess.getFetchFirstRule()); 
            pushFollow(FOLLOW_1);
            ruleFetchFirst();

            state._fsp--;

             after(grammarAccess.getFetchFirstRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFetchFirst"


    // $ANTLR start "ruleFetchFirst"
    // InternalSqlParser.g:229:1: ruleFetchFirst : ( ( rule__FetchFirst__Group__0 ) ) ;
    public final void ruleFetchFirst() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:233:5: ( ( ( rule__FetchFirst__Group__0 ) ) )
            // InternalSqlParser.g:234:1: ( ( rule__FetchFirst__Group__0 ) )
            {
            // InternalSqlParser.g:234:1: ( ( rule__FetchFirst__Group__0 ) )
            // InternalSqlParser.g:235:1: ( rule__FetchFirst__Group__0 )
            {
             before(grammarAccess.getFetchFirstAccess().getGroup()); 
            // InternalSqlParser.g:236:1: ( rule__FetchFirst__Group__0 )
            // InternalSqlParser.g:236:2: rule__FetchFirst__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFetchFirstAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFetchFirst"


    // $ANTLR start "entryRuleOffset"
    // InternalSqlParser.g:248:1: entryRuleOffset : ruleOffset EOF ;
    public final void entryRuleOffset() throws RecognitionException {
        try {
            // InternalSqlParser.g:249:1: ( ruleOffset EOF )
            // InternalSqlParser.g:250:1: ruleOffset EOF
            {
             before(grammarAccess.getOffsetRule()); 
            pushFollow(FOLLOW_1);
            ruleOffset();

            state._fsp--;

             after(grammarAccess.getOffsetRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOffset"


    // $ANTLR start "ruleOffset"
    // InternalSqlParser.g:257:1: ruleOffset : ( ( rule__Offset__OffsetAssignment ) ) ;
    public final void ruleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:261:5: ( ( ( rule__Offset__OffsetAssignment ) ) )
            // InternalSqlParser.g:262:1: ( ( rule__Offset__OffsetAssignment ) )
            {
            // InternalSqlParser.g:262:1: ( ( rule__Offset__OffsetAssignment ) )
            // InternalSqlParser.g:263:1: ( rule__Offset__OffsetAssignment )
            {
             before(grammarAccess.getOffsetAccess().getOffsetAssignment()); 
            // InternalSqlParser.g:264:1: ( rule__Offset__OffsetAssignment )
            // InternalSqlParser.g:264:2: rule__Offset__OffsetAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Offset__OffsetAssignment();

            state._fsp--;


            }

             after(grammarAccess.getOffsetAccess().getOffsetAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOffset"


    // $ANTLR start "entryRuleLimit"
    // InternalSqlParser.g:276:1: entryRuleLimit : ruleLimit EOF ;
    public final void entryRuleLimit() throws RecognitionException {
        try {
            // InternalSqlParser.g:277:1: ( ruleLimit EOF )
            // InternalSqlParser.g:278:1: ruleLimit EOF
            {
             before(grammarAccess.getLimitRule()); 
            pushFollow(FOLLOW_1);
            ruleLimit();

            state._fsp--;

             after(grammarAccess.getLimitRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLimit"


    // $ANTLR start "ruleLimit"
    // InternalSqlParser.g:285:1: ruleLimit : ( ( rule__Limit__Alternatives ) ) ;
    public final void ruleLimit() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:289:5: ( ( ( rule__Limit__Alternatives ) ) )
            // InternalSqlParser.g:290:1: ( ( rule__Limit__Alternatives ) )
            {
            // InternalSqlParser.g:290:1: ( ( rule__Limit__Alternatives ) )
            // InternalSqlParser.g:291:1: ( rule__Limit__Alternatives )
            {
             before(grammarAccess.getLimitAccess().getAlternatives()); 
            // InternalSqlParser.g:292:1: ( rule__Limit__Alternatives )
            // InternalSqlParser.g:292:2: rule__Limit__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLimitAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLimit"


    // $ANTLR start "entryRuleSelectQuery"
    // InternalSqlParser.g:304:1: entryRuleSelectQuery : ruleSelectQuery EOF ;
    public final void entryRuleSelectQuery() throws RecognitionException {
        try {
            // InternalSqlParser.g:305:1: ( ruleSelectQuery EOF )
            // InternalSqlParser.g:306:1: ruleSelectQuery EOF
            {
             before(grammarAccess.getSelectQueryRule()); 
            pushFollow(FOLLOW_1);
            ruleSelectQuery();

            state._fsp--;

             after(grammarAccess.getSelectQueryRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectQuery"


    // $ANTLR start "ruleSelectQuery"
    // InternalSqlParser.g:313:1: ruleSelectQuery : ( ( rule__SelectQuery__Group__0 ) ) ;
    public final void ruleSelectQuery() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:317:5: ( ( ( rule__SelectQuery__Group__0 ) ) )
            // InternalSqlParser.g:318:1: ( ( rule__SelectQuery__Group__0 ) )
            {
            // InternalSqlParser.g:318:1: ( ( rule__SelectQuery__Group__0 ) )
            // InternalSqlParser.g:319:1: ( rule__SelectQuery__Group__0 )
            {
             before(grammarAccess.getSelectQueryAccess().getGroup()); 
            // InternalSqlParser.g:320:1: ( rule__SelectQuery__Group__0 )
            // InternalSqlParser.g:320:2: rule__SelectQuery__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSelectQueryAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectQuery"


    // $ANTLR start "entryRuleSelectSubSet"
    // InternalSqlParser.g:332:1: entryRuleSelectSubSet : ruleSelectSubSet EOF ;
    public final void entryRuleSelectSubSet() throws RecognitionException {
        try {
            // InternalSqlParser.g:333:1: ( ruleSelectSubSet EOF )
            // InternalSqlParser.g:334:1: ruleSelectSubSet EOF
            {
             before(grammarAccess.getSelectSubSetRule()); 
            pushFollow(FOLLOW_1);
            ruleSelectSubSet();

            state._fsp--;

             after(grammarAccess.getSelectSubSetRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectSubSet"


    // $ANTLR start "ruleSelectSubSet"
    // InternalSqlParser.g:341:1: ruleSelectSubSet : ( ( rule__SelectSubSet__Group__0 ) ) ;
    public final void ruleSelectSubSet() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:345:5: ( ( ( rule__SelectSubSet__Group__0 ) ) )
            // InternalSqlParser.g:346:1: ( ( rule__SelectSubSet__Group__0 ) )
            {
            // InternalSqlParser.g:346:1: ( ( rule__SelectSubSet__Group__0 ) )
            // InternalSqlParser.g:347:1: ( rule__SelectSubSet__Group__0 )
            {
             before(grammarAccess.getSelectSubSetAccess().getGroup()); 
            // InternalSqlParser.g:348:1: ( rule__SelectSubSet__Group__0 )
            // InternalSqlParser.g:348:2: rule__SelectSubSet__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSelectSubSetAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectSubSet"


    // $ANTLR start "entryRuleSelect"
    // InternalSqlParser.g:360:1: entryRuleSelect : ruleSelect EOF ;
    public final void entryRuleSelect() throws RecognitionException {
        try {
            // InternalSqlParser.g:361:1: ( ruleSelect EOF )
            // InternalSqlParser.g:362:1: ruleSelect EOF
            {
             before(grammarAccess.getSelectRule()); 
            pushFollow(FOLLOW_1);
            ruleSelect();

            state._fsp--;

             after(grammarAccess.getSelectRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelect"


    // $ANTLR start "ruleSelect"
    // InternalSqlParser.g:369:1: ruleSelect : ( ( rule__Select__Group__0 ) ) ;
    public final void ruleSelect() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:373:5: ( ( ( rule__Select__Group__0 ) ) )
            // InternalSqlParser.g:374:1: ( ( rule__Select__Group__0 ) )
            {
            // InternalSqlParser.g:374:1: ( ( rule__Select__Group__0 ) )
            // InternalSqlParser.g:375:1: ( rule__Select__Group__0 )
            {
             before(grammarAccess.getSelectAccess().getGroup()); 
            // InternalSqlParser.g:376:1: ( rule__Select__Group__0 )
            // InternalSqlParser.g:376:2: rule__Select__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelect"


    // $ANTLR start "entryRuleColumns"
    // InternalSqlParser.g:388:1: entryRuleColumns : ruleColumns EOF ;
    public final void entryRuleColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:389:1: ( ruleColumns EOF )
            // InternalSqlParser.g:390:1: ruleColumns EOF
            {
             before(grammarAccess.getColumnsRule()); 
            pushFollow(FOLLOW_1);
            ruleColumns();

            state._fsp--;

             after(grammarAccess.getColumnsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumns"


    // $ANTLR start "ruleColumns"
    // InternalSqlParser.g:397:1: ruleColumns : ( ( rule__Columns__Group__0 ) ) ;
    public final void ruleColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:401:5: ( ( ( rule__Columns__Group__0 ) ) )
            // InternalSqlParser.g:402:1: ( ( rule__Columns__Group__0 ) )
            {
            // InternalSqlParser.g:402:1: ( ( rule__Columns__Group__0 ) )
            // InternalSqlParser.g:403:1: ( rule__Columns__Group__0 )
            {
             before(grammarAccess.getColumnsAccess().getGroup()); 
            // InternalSqlParser.g:404:1: ( rule__Columns__Group__0 )
            // InternalSqlParser.g:404:2: rule__Columns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getColumnsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumns"


    // $ANTLR start "entryRuleColumnOrAlias"
    // InternalSqlParser.g:416:1: entryRuleColumnOrAlias : ruleColumnOrAlias EOF ;
    public final void entryRuleColumnOrAlias() throws RecognitionException {
        try {
            // InternalSqlParser.g:417:1: ( ruleColumnOrAlias EOF )
            // InternalSqlParser.g:418:1: ruleColumnOrAlias EOF
            {
             before(grammarAccess.getColumnOrAliasRule()); 
            pushFollow(FOLLOW_1);
            ruleColumnOrAlias();

            state._fsp--;

             after(grammarAccess.getColumnOrAliasRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOrAlias"


    // $ANTLR start "ruleColumnOrAlias"
    // InternalSqlParser.g:425:1: ruleColumnOrAlias : ( ( rule__ColumnOrAlias__Alternatives ) ) ;
    public final void ruleColumnOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:429:5: ( ( ( rule__ColumnOrAlias__Alternatives ) ) )
            // InternalSqlParser.g:430:1: ( ( rule__ColumnOrAlias__Alternatives ) )
            {
            // InternalSqlParser.g:430:1: ( ( rule__ColumnOrAlias__Alternatives ) )
            // InternalSqlParser.g:431:1: ( rule__ColumnOrAlias__Alternatives )
            {
             before(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 
            // InternalSqlParser.g:432:1: ( rule__ColumnOrAlias__Alternatives )
            // InternalSqlParser.g:432:2: rule__ColumnOrAlias__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOrAlias"


    // $ANTLR start "entryRuleColumnFull"
    // InternalSqlParser.g:444:1: entryRuleColumnFull : ruleColumnFull EOF ;
    public final void entryRuleColumnFull() throws RecognitionException {
        try {
            // InternalSqlParser.g:445:1: ( ruleColumnFull EOF )
            // InternalSqlParser.g:446:1: ruleColumnFull EOF
            {
             before(grammarAccess.getColumnFullRule()); 
            pushFollow(FOLLOW_1);
            ruleColumnFull();

            state._fsp--;

             after(grammarAccess.getColumnFullRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnFull"


    // $ANTLR start "ruleColumnFull"
    // InternalSqlParser.g:453:1: ruleColumnFull : ( ( rule__ColumnFull__Group__0 ) ) ;
    public final void ruleColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:457:5: ( ( ( rule__ColumnFull__Group__0 ) ) )
            // InternalSqlParser.g:458:1: ( ( rule__ColumnFull__Group__0 ) )
            {
            // InternalSqlParser.g:458:1: ( ( rule__ColumnFull__Group__0 ) )
            // InternalSqlParser.g:459:1: ( rule__ColumnFull__Group__0 )
            {
             before(grammarAccess.getColumnFullAccess().getGroup()); 
            // InternalSqlParser.g:460:1: ( rule__ColumnFull__Group__0 )
            // InternalSqlParser.g:460:2: rule__ColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getColumnFullAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnFull"


    // $ANTLR start "entryRuleTables"
    // InternalSqlParser.g:472:1: entryRuleTables : ruleTables EOF ;
    public final void entryRuleTables() throws RecognitionException {
        try {
            // InternalSqlParser.g:473:1: ( ruleTables EOF )
            // InternalSqlParser.g:474:1: ruleTables EOF
            {
             before(grammarAccess.getTablesRule()); 
            pushFollow(FOLLOW_1);
            ruleTables();

            state._fsp--;

             after(grammarAccess.getTablesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTables"


    // $ANTLR start "ruleTables"
    // InternalSqlParser.g:481:1: ruleTables : ( ( rule__Tables__Group__0 ) ) ;
    public final void ruleTables() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:485:5: ( ( ( rule__Tables__Group__0 ) ) )
            // InternalSqlParser.g:486:1: ( ( rule__Tables__Group__0 ) )
            {
            // InternalSqlParser.g:486:1: ( ( rule__Tables__Group__0 ) )
            // InternalSqlParser.g:487:1: ( rule__Tables__Group__0 )
            {
             before(grammarAccess.getTablesAccess().getGroup()); 
            // InternalSqlParser.g:488:1: ( rule__Tables__Group__0 )
            // InternalSqlParser.g:488:2: rule__Tables__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getTablesAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTables"


    // $ANTLR start "entryRuleFromTable"
    // InternalSqlParser.g:500:1: entryRuleFromTable : ruleFromTable EOF ;
    public final void entryRuleFromTable() throws RecognitionException {
        try {
            // InternalSqlParser.g:501:1: ( ruleFromTable EOF )
            // InternalSqlParser.g:502:1: ruleFromTable EOF
            {
             before(grammarAccess.getFromTableRule()); 
            pushFollow(FOLLOW_1);
            ruleFromTable();

            state._fsp--;

             after(grammarAccess.getFromTableRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTable"


    // $ANTLR start "ruleFromTable"
    // InternalSqlParser.g:509:1: ruleFromTable : ( ( rule__FromTable__Group__0 ) ) ;
    public final void ruleFromTable() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:513:5: ( ( ( rule__FromTable__Group__0 ) ) )
            // InternalSqlParser.g:514:1: ( ( rule__FromTable__Group__0 ) )
            {
            // InternalSqlParser.g:514:1: ( ( rule__FromTable__Group__0 ) )
            // InternalSqlParser.g:515:1: ( rule__FromTable__Group__0 )
            {
             before(grammarAccess.getFromTableAccess().getGroup()); 
            // InternalSqlParser.g:516:1: ( rule__FromTable__Group__0 )
            // InternalSqlParser.g:516:2: rule__FromTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFromTableAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTable"


    // $ANTLR start "entryRuleFromTableJoin"
    // InternalSqlParser.g:528:1: entryRuleFromTableJoin : ruleFromTableJoin EOF ;
    public final void entryRuleFromTableJoin() throws RecognitionException {
        try {
            // InternalSqlParser.g:529:1: ( ruleFromTableJoin EOF )
            // InternalSqlParser.g:530:1: ruleFromTableJoin EOF
            {
             before(grammarAccess.getFromTableJoinRule()); 
            pushFollow(FOLLOW_1);
            ruleFromTableJoin();

            state._fsp--;

             after(grammarAccess.getFromTableJoinRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTableJoin"


    // $ANTLR start "ruleFromTableJoin"
    // InternalSqlParser.g:537:1: ruleFromTableJoin : ( ( rule__FromTableJoin__Group__0 ) ) ;
    public final void ruleFromTableJoin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:541:5: ( ( ( rule__FromTableJoin__Group__0 ) ) )
            // InternalSqlParser.g:542:1: ( ( rule__FromTableJoin__Group__0 ) )
            {
            // InternalSqlParser.g:542:1: ( ( rule__FromTableJoin__Group__0 ) )
            // InternalSqlParser.g:543:1: ( rule__FromTableJoin__Group__0 )
            {
             before(grammarAccess.getFromTableJoinAccess().getGroup()); 
            // InternalSqlParser.g:544:1: ( rule__FromTableJoin__Group__0 )
            // InternalSqlParser.g:544:2: rule__FromTableJoin__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFromTableJoinAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTableJoin"


    // $ANTLR start "entryRuleJoinCondition"
    // InternalSqlParser.g:556:1: entryRuleJoinCondition : ruleJoinCondition EOF ;
    public final void entryRuleJoinCondition() throws RecognitionException {
        try {
            // InternalSqlParser.g:557:1: ( ruleJoinCondition EOF )
            // InternalSqlParser.g:558:1: ruleJoinCondition EOF
            {
             before(grammarAccess.getJoinConditionRule()); 
            pushFollow(FOLLOW_1);
            ruleJoinCondition();

            state._fsp--;

             after(grammarAccess.getJoinConditionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinCondition"


    // $ANTLR start "ruleJoinCondition"
    // InternalSqlParser.g:565:1: ruleJoinCondition : ( ( rule__JoinCondition__Group__0 ) ) ;
    public final void ruleJoinCondition() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:569:5: ( ( ( rule__JoinCondition__Group__0 ) ) )
            // InternalSqlParser.g:570:1: ( ( rule__JoinCondition__Group__0 ) )
            {
            // InternalSqlParser.g:570:1: ( ( rule__JoinCondition__Group__0 ) )
            // InternalSqlParser.g:571:1: ( rule__JoinCondition__Group__0 )
            {
             before(grammarAccess.getJoinConditionAccess().getGroup()); 
            // InternalSqlParser.g:572:1: ( rule__JoinCondition__Group__0 )
            // InternalSqlParser.g:572:2: rule__JoinCondition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getJoinConditionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinCondition"


    // $ANTLR start "entryRuleUsingCols"
    // InternalSqlParser.g:584:1: entryRuleUsingCols : ruleUsingCols EOF ;
    public final void entryRuleUsingCols() throws RecognitionException {
        try {
            // InternalSqlParser.g:585:1: ( ruleUsingCols EOF )
            // InternalSqlParser.g:586:1: ruleUsingCols EOF
            {
             before(grammarAccess.getUsingColsRule()); 
            pushFollow(FOLLOW_1);
            ruleUsingCols();

            state._fsp--;

             after(grammarAccess.getUsingColsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUsingCols"


    // $ANTLR start "ruleUsingCols"
    // InternalSqlParser.g:593:1: ruleUsingCols : ( ( rule__UsingCols__Group__0 ) ) ;
    public final void ruleUsingCols() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:597:5: ( ( ( rule__UsingCols__Group__0 ) ) )
            // InternalSqlParser.g:598:1: ( ( rule__UsingCols__Group__0 ) )
            {
            // InternalSqlParser.g:598:1: ( ( rule__UsingCols__Group__0 ) )
            // InternalSqlParser.g:599:1: ( rule__UsingCols__Group__0 )
            {
             before(grammarAccess.getUsingColsAccess().getGroup()); 
            // InternalSqlParser.g:600:1: ( rule__UsingCols__Group__0 )
            // InternalSqlParser.g:600:2: rule__UsingCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getUsingColsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUsingCols"


    // $ANTLR start "entryRuleTableOrAlias"
    // InternalSqlParser.g:612:1: entryRuleTableOrAlias : ruleTableOrAlias EOF ;
    public final void entryRuleTableOrAlias() throws RecognitionException {
        try {
            // InternalSqlParser.g:613:1: ( ruleTableOrAlias EOF )
            // InternalSqlParser.g:614:1: ruleTableOrAlias EOF
            {
             before(grammarAccess.getTableOrAliasRule()); 
            pushFollow(FOLLOW_1);
            ruleTableOrAlias();

            state._fsp--;

             after(grammarAccess.getTableOrAliasRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableOrAlias"


    // $ANTLR start "ruleTableOrAlias"
    // InternalSqlParser.g:621:1: ruleTableOrAlias : ( ( rule__TableOrAlias__Group__0 ) ) ;
    public final void ruleTableOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:625:5: ( ( ( rule__TableOrAlias__Group__0 ) ) )
            // InternalSqlParser.g:626:1: ( ( rule__TableOrAlias__Group__0 ) )
            {
            // InternalSqlParser.g:626:1: ( ( rule__TableOrAlias__Group__0 ) )
            // InternalSqlParser.g:627:1: ( rule__TableOrAlias__Group__0 )
            {
             before(grammarAccess.getTableOrAliasAccess().getGroup()); 
            // InternalSqlParser.g:628:1: ( rule__TableOrAlias__Group__0 )
            // InternalSqlParser.g:628:2: rule__TableOrAlias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getTableOrAliasAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableOrAlias"


    // $ANTLR start "entryRuleFromValues"
    // InternalSqlParser.g:640:1: entryRuleFromValues : ruleFromValues EOF ;
    public final void entryRuleFromValues() throws RecognitionException {
        try {
            // InternalSqlParser.g:641:1: ( ruleFromValues EOF )
            // InternalSqlParser.g:642:1: ruleFromValues EOF
            {
             before(grammarAccess.getFromValuesRule()); 
            pushFollow(FOLLOW_1);
            ruleFromValues();

            state._fsp--;

             after(grammarAccess.getFromValuesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValues"


    // $ANTLR start "ruleFromValues"
    // InternalSqlParser.g:649:1: ruleFromValues : ( ( rule__FromValues__Group__0 ) ) ;
    public final void ruleFromValues() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:653:5: ( ( ( rule__FromValues__Group__0 ) ) )
            // InternalSqlParser.g:654:1: ( ( rule__FromValues__Group__0 ) )
            {
            // InternalSqlParser.g:654:1: ( ( rule__FromValues__Group__0 ) )
            // InternalSqlParser.g:655:1: ( rule__FromValues__Group__0 )
            {
             before(grammarAccess.getFromValuesAccess().getGroup()); 
            // InternalSqlParser.g:656:1: ( rule__FromValues__Group__0 )
            // InternalSqlParser.g:656:2: rule__FromValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFromValuesAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValues"


    // $ANTLR start "entryRuleFromValuesColumns"
    // InternalSqlParser.g:668:1: entryRuleFromValuesColumns : ruleFromValuesColumns EOF ;
    public final void entryRuleFromValuesColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:669:1: ( ruleFromValuesColumns EOF )
            // InternalSqlParser.g:670:1: ruleFromValuesColumns EOF
            {
             before(grammarAccess.getFromValuesColumnsRule()); 
            pushFollow(FOLLOW_1);
            ruleFromValuesColumns();

            state._fsp--;

             after(grammarAccess.getFromValuesColumnsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValuesColumns"


    // $ANTLR start "ruleFromValuesColumns"
    // InternalSqlParser.g:677:1: ruleFromValuesColumns : ( ( rule__FromValuesColumns__Group__0 ) ) ;
    public final void ruleFromValuesColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:681:5: ( ( ( rule__FromValuesColumns__Group__0 ) ) )
            // InternalSqlParser.g:682:1: ( ( rule__FromValuesColumns__Group__0 ) )
            {
            // InternalSqlParser.g:682:1: ( ( rule__FromValuesColumns__Group__0 ) )
            // InternalSqlParser.g:683:1: ( rule__FromValuesColumns__Group__0 )
            {
             before(grammarAccess.getFromValuesColumnsAccess().getGroup()); 
            // InternalSqlParser.g:684:1: ( rule__FromValuesColumns__Group__0 )
            // InternalSqlParser.g:684:2: rule__FromValuesColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFromValuesColumnsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValuesColumns"


    // $ANTLR start "entryRuleFromValuesColumnNames"
    // InternalSqlParser.g:696:1: entryRuleFromValuesColumnNames : ruleFromValuesColumnNames EOF ;
    public final void entryRuleFromValuesColumnNames() throws RecognitionException {
        try {
            // InternalSqlParser.g:697:1: ( ruleFromValuesColumnNames EOF )
            // InternalSqlParser.g:698:1: ruleFromValuesColumnNames EOF
            {
             before(grammarAccess.getFromValuesColumnNamesRule()); 
            pushFollow(FOLLOW_1);
            ruleFromValuesColumnNames();

            state._fsp--;

             after(grammarAccess.getFromValuesColumnNamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValuesColumnNames"


    // $ANTLR start "ruleFromValuesColumnNames"
    // InternalSqlParser.g:705:1: ruleFromValuesColumnNames : ( ( rule__FromValuesColumnNames__Group__0 ) ) ;
    public final void ruleFromValuesColumnNames() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:709:5: ( ( ( rule__FromValuesColumnNames__Group__0 ) ) )
            // InternalSqlParser.g:710:1: ( ( rule__FromValuesColumnNames__Group__0 ) )
            {
            // InternalSqlParser.g:710:1: ( ( rule__FromValuesColumnNames__Group__0 ) )
            // InternalSqlParser.g:711:1: ( rule__FromValuesColumnNames__Group__0 )
            {
             before(grammarAccess.getFromValuesColumnNamesAccess().getGroup()); 
            // InternalSqlParser.g:712:1: ( rule__FromValuesColumnNames__Group__0 )
            // InternalSqlParser.g:712:2: rule__FromValuesColumnNames__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFromValuesColumnNamesAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValuesColumnNames"


    // $ANTLR start "entryRuleColumnName"
    // InternalSqlParser.g:724:1: entryRuleColumnName : ruleColumnName EOF ;
    public final void entryRuleColumnName() throws RecognitionException {
        try {
            // InternalSqlParser.g:725:1: ( ruleColumnName EOF )
            // InternalSqlParser.g:726:1: ruleColumnName EOF
            {
             before(grammarAccess.getColumnNameRule()); 
            pushFollow(FOLLOW_1);
            ruleColumnName();

            state._fsp--;

             after(grammarAccess.getColumnNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnName"


    // $ANTLR start "ruleColumnName"
    // InternalSqlParser.g:733:1: ruleColumnName : ( ( rule__ColumnName__ColNameAssignment ) ) ;
    public final void ruleColumnName() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:737:5: ( ( ( rule__ColumnName__ColNameAssignment ) ) )
            // InternalSqlParser.g:738:1: ( ( rule__ColumnName__ColNameAssignment ) )
            {
            // InternalSqlParser.g:738:1: ( ( rule__ColumnName__ColNameAssignment ) )
            // InternalSqlParser.g:739:1: ( rule__ColumnName__ColNameAssignment )
            {
             before(grammarAccess.getColumnNameAccess().getColNameAssignment()); 
            // InternalSqlParser.g:740:1: ( rule__ColumnName__ColNameAssignment )
            // InternalSqlParser.g:740:2: rule__ColumnName__ColNameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ColumnName__ColNameAssignment();

            state._fsp--;


            }

             after(grammarAccess.getColumnNameAccess().getColNameAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnName"


    // $ANTLR start "entryRuleValues"
    // InternalSqlParser.g:752:1: entryRuleValues : ruleValues EOF ;
    public final void entryRuleValues() throws RecognitionException {
        try {
            // InternalSqlParser.g:753:1: ( ruleValues EOF )
            // InternalSqlParser.g:754:1: ruleValues EOF
            {
             before(grammarAccess.getValuesRule()); 
            pushFollow(FOLLOW_1);
            ruleValues();

            state._fsp--;

             after(grammarAccess.getValuesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValues"


    // $ANTLR start "ruleValues"
    // InternalSqlParser.g:761:1: ruleValues : ( ( rule__Values__Group__0 ) ) ;
    public final void ruleValues() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:765:5: ( ( ( rule__Values__Group__0 ) ) )
            // InternalSqlParser.g:766:1: ( ( rule__Values__Group__0 ) )
            {
            // InternalSqlParser.g:766:1: ( ( rule__Values__Group__0 ) )
            // InternalSqlParser.g:767:1: ( rule__Values__Group__0 )
            {
             before(grammarAccess.getValuesAccess().getGroup()); 
            // InternalSqlParser.g:768:1: ( rule__Values__Group__0 )
            // InternalSqlParser.g:768:2: rule__Values__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Values__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getValuesAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValues"


    // $ANTLR start "entryRuleRows"
    // InternalSqlParser.g:780:1: entryRuleRows : ruleRows EOF ;
    public final void entryRuleRows() throws RecognitionException {
        try {
            // InternalSqlParser.g:781:1: ( ruleRows EOF )
            // InternalSqlParser.g:782:1: ruleRows EOF
            {
             before(grammarAccess.getRowsRule()); 
            pushFollow(FOLLOW_1);
            ruleRows();

            state._fsp--;

             after(grammarAccess.getRowsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRows"


    // $ANTLR start "ruleRows"
    // InternalSqlParser.g:789:1: ruleRows : ( ( rule__Rows__Group__0 ) ) ;
    public final void ruleRows() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:793:5: ( ( ( rule__Rows__Group__0 ) ) )
            // InternalSqlParser.g:794:1: ( ( rule__Rows__Group__0 ) )
            {
            // InternalSqlParser.g:794:1: ( ( rule__Rows__Group__0 ) )
            // InternalSqlParser.g:795:1: ( rule__Rows__Group__0 )
            {
             before(grammarAccess.getRowsAccess().getGroup()); 
            // InternalSqlParser.g:796:1: ( rule__Rows__Group__0 )
            // InternalSqlParser.g:796:2: rule__Rows__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getRowsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRows"


    // $ANTLR start "entryRuleRow"
    // InternalSqlParser.g:808:1: entryRuleRow : ruleRow EOF ;
    public final void entryRuleRow() throws RecognitionException {
        try {
            // InternalSqlParser.g:809:1: ( ruleRow EOF )
            // InternalSqlParser.g:810:1: ruleRow EOF
            {
             before(grammarAccess.getRowRule()); 
            pushFollow(FOLLOW_1);
            ruleRow();

            state._fsp--;

             after(grammarAccess.getRowRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRow"


    // $ANTLR start "ruleRow"
    // InternalSqlParser.g:817:1: ruleRow : ( ( rule__Row__Group__0 ) ) ;
    public final void ruleRow() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:821:5: ( ( ( rule__Row__Group__0 ) ) )
            // InternalSqlParser.g:822:1: ( ( rule__Row__Group__0 ) )
            {
            // InternalSqlParser.g:822:1: ( ( rule__Row__Group__0 ) )
            // InternalSqlParser.g:823:1: ( rule__Row__Group__0 )
            {
             before(grammarAccess.getRowAccess().getGroup()); 
            // InternalSqlParser.g:824:1: ( rule__Row__Group__0 )
            // InternalSqlParser.g:824:2: rule__Row__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Row__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getRowAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRow"


    // $ANTLR start "entryRuleRowValues"
    // InternalSqlParser.g:836:1: entryRuleRowValues : ruleRowValues EOF ;
    public final void entryRuleRowValues() throws RecognitionException {
        try {
            // InternalSqlParser.g:837:1: ( ruleRowValues EOF )
            // InternalSqlParser.g:838:1: ruleRowValues EOF
            {
             before(grammarAccess.getRowValuesRule()); 
            pushFollow(FOLLOW_1);
            ruleRowValues();

            state._fsp--;

             after(grammarAccess.getRowValuesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRowValues"


    // $ANTLR start "ruleRowValues"
    // InternalSqlParser.g:845:1: ruleRowValues : ( ( rule__RowValues__Group__0 ) ) ;
    public final void ruleRowValues() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:849:5: ( ( ( rule__RowValues__Group__0 ) ) )
            // InternalSqlParser.g:850:1: ( ( rule__RowValues__Group__0 ) )
            {
            // InternalSqlParser.g:850:1: ( ( rule__RowValues__Group__0 ) )
            // InternalSqlParser.g:851:1: ( rule__RowValues__Group__0 )
            {
             before(grammarAccess.getRowValuesAccess().getGroup()); 
            // InternalSqlParser.g:852:1: ( rule__RowValues__Group__0 )
            // InternalSqlParser.g:852:2: rule__RowValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getRowValuesAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRowValues"


    // $ANTLR start "entryRuleRowValue"
    // InternalSqlParser.g:864:1: entryRuleRowValue : ruleRowValue EOF ;
    public final void entryRuleRowValue() throws RecognitionException {
        try {
            // InternalSqlParser.g:865:1: ( ruleRowValue EOF )
            // InternalSqlParser.g:866:1: ruleRowValue EOF
            {
             before(grammarAccess.getRowValueRule()); 
            pushFollow(FOLLOW_1);
            ruleRowValue();

            state._fsp--;

             after(grammarAccess.getRowValueRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRowValue"


    // $ANTLR start "ruleRowValue"
    // InternalSqlParser.g:873:1: ruleRowValue : ( ( rule__RowValue__Alternatives ) ) ;
    public final void ruleRowValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:877:5: ( ( ( rule__RowValue__Alternatives ) ) )
            // InternalSqlParser.g:878:1: ( ( rule__RowValue__Alternatives ) )
            {
            // InternalSqlParser.g:878:1: ( ( rule__RowValue__Alternatives ) )
            // InternalSqlParser.g:879:1: ( rule__RowValue__Alternatives )
            {
             before(grammarAccess.getRowValueAccess().getAlternatives()); 
            // InternalSqlParser.g:880:1: ( rule__RowValue__Alternatives )
            // InternalSqlParser.g:880:2: rule__RowValue__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RowValue__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getRowValueAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRowValue"


    // $ANTLR start "entryRulePivotTable"
    // InternalSqlParser.g:892:1: entryRulePivotTable : rulePivotTable EOF ;
    public final void entryRulePivotTable() throws RecognitionException {
        try {
            // InternalSqlParser.g:893:1: ( rulePivotTable EOF )
            // InternalSqlParser.g:894:1: rulePivotTable EOF
            {
             before(grammarAccess.getPivotTableRule()); 
            pushFollow(FOLLOW_1);
            rulePivotTable();

            state._fsp--;

             after(grammarAccess.getPivotTableRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotTable"


    // $ANTLR start "rulePivotTable"
    // InternalSqlParser.g:901:1: rulePivotTable : ( ( rule__PivotTable__Group__0 ) ) ;
    public final void rulePivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:905:5: ( ( ( rule__PivotTable__Group__0 ) ) )
            // InternalSqlParser.g:906:1: ( ( rule__PivotTable__Group__0 ) )
            {
            // InternalSqlParser.g:906:1: ( ( rule__PivotTable__Group__0 ) )
            // InternalSqlParser.g:907:1: ( rule__PivotTable__Group__0 )
            {
             before(grammarAccess.getPivotTableAccess().getGroup()); 
            // InternalSqlParser.g:908:1: ( rule__PivotTable__Group__0 )
            // InternalSqlParser.g:908:2: rule__PivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotTableAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotTable"


    // $ANTLR start "entryRulePivotFunctions"
    // InternalSqlParser.g:920:1: entryRulePivotFunctions : rulePivotFunctions EOF ;
    public final void entryRulePivotFunctions() throws RecognitionException {
        try {
            // InternalSqlParser.g:921:1: ( rulePivotFunctions EOF )
            // InternalSqlParser.g:922:1: rulePivotFunctions EOF
            {
             before(grammarAccess.getPivotFunctionsRule()); 
            pushFollow(FOLLOW_1);
            rulePivotFunctions();

            state._fsp--;

             after(grammarAccess.getPivotFunctionsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotFunctions"


    // $ANTLR start "rulePivotFunctions"
    // InternalSqlParser.g:929:1: rulePivotFunctions : ( ( rule__PivotFunctions__AbcAssignment ) ) ;
    public final void rulePivotFunctions() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:933:5: ( ( ( rule__PivotFunctions__AbcAssignment ) ) )
            // InternalSqlParser.g:934:1: ( ( rule__PivotFunctions__AbcAssignment ) )
            {
            // InternalSqlParser.g:934:1: ( ( rule__PivotFunctions__AbcAssignment ) )
            // InternalSqlParser.g:935:1: ( rule__PivotFunctions__AbcAssignment )
            {
             before(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 
            // InternalSqlParser.g:936:1: ( rule__PivotFunctions__AbcAssignment )
            // InternalSqlParser.g:936:2: rule__PivotFunctions__AbcAssignment
            {
            pushFollow(FOLLOW_2);
            rule__PivotFunctions__AbcAssignment();

            state._fsp--;


            }

             after(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotFunctions"


    // $ANTLR start "entryRulePivotInClause"
    // InternalSqlParser.g:950:1: entryRulePivotInClause : rulePivotInClause EOF ;
    public final void entryRulePivotInClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:951:1: ( rulePivotInClause EOF )
            // InternalSqlParser.g:952:1: rulePivotInClause EOF
            {
             before(grammarAccess.getPivotInClauseRule()); 
            pushFollow(FOLLOW_1);
            rulePivotInClause();

            state._fsp--;

             after(grammarAccess.getPivotInClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClause"


    // $ANTLR start "rulePivotInClause"
    // InternalSqlParser.g:959:1: rulePivotInClause : ( ( rule__PivotInClause__Group__0 ) ) ;
    public final void rulePivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:963:5: ( ( ( rule__PivotInClause__Group__0 ) ) )
            // InternalSqlParser.g:964:1: ( ( rule__PivotInClause__Group__0 ) )
            {
            // InternalSqlParser.g:964:1: ( ( rule__PivotInClause__Group__0 ) )
            // InternalSqlParser.g:965:1: ( rule__PivotInClause__Group__0 )
            {
             before(grammarAccess.getPivotInClauseAccess().getGroup()); 
            // InternalSqlParser.g:966:1: ( rule__PivotInClause__Group__0 )
            // InternalSqlParser.g:966:2: rule__PivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotInClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClause"


    // $ANTLR start "entryRulePivotInClauseAny"
    // InternalSqlParser.g:978:1: entryRulePivotInClauseAny : rulePivotInClauseAny EOF ;
    public final void entryRulePivotInClauseAny() throws RecognitionException {
        try {
            // InternalSqlParser.g:979:1: ( rulePivotInClauseAny EOF )
            // InternalSqlParser.g:980:1: rulePivotInClauseAny EOF
            {
             before(grammarAccess.getPivotInClauseAnyRule()); 
            pushFollow(FOLLOW_1);
            rulePivotInClauseAny();

            state._fsp--;

             after(grammarAccess.getPivotInClauseAnyRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClauseAny"


    // $ANTLR start "rulePivotInClauseAny"
    // InternalSqlParser.g:987:1: rulePivotInClauseAny : ( ( rule__PivotInClauseAny__Group__0 ) ) ;
    public final void rulePivotInClauseAny() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:991:5: ( ( ( rule__PivotInClauseAny__Group__0 ) ) )
            // InternalSqlParser.g:992:1: ( ( rule__PivotInClauseAny__Group__0 ) )
            {
            // InternalSqlParser.g:992:1: ( ( rule__PivotInClauseAny__Group__0 ) )
            // InternalSqlParser.g:993:1: ( rule__PivotInClauseAny__Group__0 )
            {
             before(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 
            // InternalSqlParser.g:994:1: ( rule__PivotInClauseAny__Group__0 )
            // InternalSqlParser.g:994:2: rule__PivotInClauseAny__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClauseAny"


    // $ANTLR start "entryRuleUnpivotTable"
    // InternalSqlParser.g:1006:1: entryRuleUnpivotTable : ruleUnpivotTable EOF ;
    public final void entryRuleUnpivotTable() throws RecognitionException {
        try {
            // InternalSqlParser.g:1007:1: ( ruleUnpivotTable EOF )
            // InternalSqlParser.g:1008:1: ruleUnpivotTable EOF
            {
             before(grammarAccess.getUnpivotTableRule()); 
            pushFollow(FOLLOW_1);
            ruleUnpivotTable();

            state._fsp--;

             after(grammarAccess.getUnpivotTableRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotTable"


    // $ANTLR start "ruleUnpivotTable"
    // InternalSqlParser.g:1015:1: ruleUnpivotTable : ( ( rule__UnpivotTable__Group__0 ) ) ;
    public final void ruleUnpivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1019:5: ( ( ( rule__UnpivotTable__Group__0 ) ) )
            // InternalSqlParser.g:1020:1: ( ( rule__UnpivotTable__Group__0 ) )
            {
            // InternalSqlParser.g:1020:1: ( ( rule__UnpivotTable__Group__0 ) )
            // InternalSqlParser.g:1021:1: ( rule__UnpivotTable__Group__0 )
            {
             before(grammarAccess.getUnpivotTableAccess().getGroup()); 
            // InternalSqlParser.g:1022:1: ( rule__UnpivotTable__Group__0 )
            // InternalSqlParser.g:1022:2: rule__UnpivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotTableAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotTable"


    // $ANTLR start "entryRuleUnpivotInClause"
    // InternalSqlParser.g:1034:1: entryRuleUnpivotInClause : ruleUnpivotInClause EOF ;
    public final void entryRuleUnpivotInClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:1035:1: ( ruleUnpivotInClause EOF )
            // InternalSqlParser.g:1036:1: ruleUnpivotInClause EOF
            {
             before(grammarAccess.getUnpivotInClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleUnpivotInClause();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClause"


    // $ANTLR start "ruleUnpivotInClause"
    // InternalSqlParser.g:1043:1: ruleUnpivotInClause : ( ( rule__UnpivotInClause__Group__0 ) ) ;
    public final void ruleUnpivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1047:5: ( ( ( rule__UnpivotInClause__Group__0 ) ) )
            // InternalSqlParser.g:1048:1: ( ( rule__UnpivotInClause__Group__0 ) )
            {
            // InternalSqlParser.g:1048:1: ( ( rule__UnpivotInClause__Group__0 ) )
            // InternalSqlParser.g:1049:1: ( rule__UnpivotInClause__Group__0 )
            {
             before(grammarAccess.getUnpivotInClauseAccess().getGroup()); 
            // InternalSqlParser.g:1050:1: ( rule__UnpivotInClause__Group__0 )
            // InternalSqlParser.g:1050:2: rule__UnpivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClause"


    // $ANTLR start "entryRuleUnpivotInClauseArgs"
    // InternalSqlParser.g:1062:1: entryRuleUnpivotInClauseArgs : ruleUnpivotInClauseArgs EOF ;
    public final void entryRuleUnpivotInClauseArgs() throws RecognitionException {
        try {
            // InternalSqlParser.g:1063:1: ( ruleUnpivotInClauseArgs EOF )
            // InternalSqlParser.g:1064:1: ruleUnpivotInClauseArgs EOF
            {
             before(grammarAccess.getUnpivotInClauseArgsRule()); 
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArgs();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseArgsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArgs"


    // $ANTLR start "ruleUnpivotInClauseArgs"
    // InternalSqlParser.g:1071:1: ruleUnpivotInClauseArgs : ( ( rule__UnpivotInClauseArgs__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1075:5: ( ( ( rule__UnpivotInClauseArgs__Group__0 ) ) )
            // InternalSqlParser.g:1076:1: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            {
            // InternalSqlParser.g:1076:1: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            // InternalSqlParser.g:1077:1: ( rule__UnpivotInClauseArgs__Group__0 )
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 
            // InternalSqlParser.g:1078:1: ( rule__UnpivotInClauseArgs__Group__0 )
            // InternalSqlParser.g:1078:2: rule__UnpivotInClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArgs"


    // $ANTLR start "entryRuleUnpivotInClauseArg"
    // InternalSqlParser.g:1090:1: entryRuleUnpivotInClauseArg : ruleUnpivotInClauseArg EOF ;
    public final void entryRuleUnpivotInClauseArg() throws RecognitionException {
        try {
            // InternalSqlParser.g:1091:1: ( ruleUnpivotInClauseArg EOF )
            // InternalSqlParser.g:1092:1: ruleUnpivotInClauseArg EOF
            {
             before(grammarAccess.getUnpivotInClauseArgRule()); 
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArg();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseArgRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArg"


    // $ANTLR start "ruleUnpivotInClauseArg"
    // InternalSqlParser.g:1099:1: ruleUnpivotInClauseArg : ( ( rule__UnpivotInClauseArg__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1103:5: ( ( ( rule__UnpivotInClauseArg__Group__0 ) ) )
            // InternalSqlParser.g:1104:1: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            {
            // InternalSqlParser.g:1104:1: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            // InternalSqlParser.g:1105:1: ( rule__UnpivotInClauseArg__Group__0 )
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 
            // InternalSqlParser.g:1106:1: ( rule__UnpivotInClauseArg__Group__0 )
            // InternalSqlParser.g:1106:2: rule__UnpivotInClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArg"


    // $ANTLR start "entryRulePivotForClause"
    // InternalSqlParser.g:1118:1: entryRulePivotForClause : rulePivotForClause EOF ;
    public final void entryRulePivotForClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:1119:1: ( rulePivotForClause EOF )
            // InternalSqlParser.g:1120:1: rulePivotForClause EOF
            {
             before(grammarAccess.getPivotForClauseRule()); 
            pushFollow(FOLLOW_1);
            rulePivotForClause();

            state._fsp--;

             after(grammarAccess.getPivotForClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotForClause"


    // $ANTLR start "rulePivotForClause"
    // InternalSqlParser.g:1127:1: rulePivotForClause : ( ( rule__PivotForClause__Group__0 ) ) ;
    public final void rulePivotForClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1131:5: ( ( ( rule__PivotForClause__Group__0 ) ) )
            // InternalSqlParser.g:1132:1: ( ( rule__PivotForClause__Group__0 ) )
            {
            // InternalSqlParser.g:1132:1: ( ( rule__PivotForClause__Group__0 ) )
            // InternalSqlParser.g:1133:1: ( rule__PivotForClause__Group__0 )
            {
             before(grammarAccess.getPivotForClauseAccess().getGroup()); 
            // InternalSqlParser.g:1134:1: ( rule__PivotForClause__Group__0 )
            // InternalSqlParser.g:1134:2: rule__PivotForClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotForClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotForClause"


    // $ANTLR start "entryRulePivotColumns"
    // InternalSqlParser.g:1146:1: entryRulePivotColumns : rulePivotColumns EOF ;
    public final void entryRulePivotColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:1147:1: ( rulePivotColumns EOF )
            // InternalSqlParser.g:1148:1: rulePivotColumns EOF
            {
             before(grammarAccess.getPivotColumnsRule()); 
            pushFollow(FOLLOW_1);
            rulePivotColumns();

            state._fsp--;

             after(grammarAccess.getPivotColumnsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotColumns"


    // $ANTLR start "rulePivotColumns"
    // InternalSqlParser.g:1155:1: rulePivotColumns : ( ( rule__PivotColumns__Alternatives ) ) ;
    public final void rulePivotColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1159:5: ( ( ( rule__PivotColumns__Alternatives ) ) )
            // InternalSqlParser.g:1160:1: ( ( rule__PivotColumns__Alternatives ) )
            {
            // InternalSqlParser.g:1160:1: ( ( rule__PivotColumns__Alternatives ) )
            // InternalSqlParser.g:1161:1: ( rule__PivotColumns__Alternatives )
            {
             before(grammarAccess.getPivotColumnsAccess().getAlternatives()); 
            // InternalSqlParser.g:1162:1: ( rule__PivotColumns__Alternatives )
            // InternalSqlParser.g:1162:2: rule__PivotColumns__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPivotColumnsAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotColumns"


    // $ANTLR start "entryRulePivotCols"
    // InternalSqlParser.g:1174:1: entryRulePivotCols : rulePivotCols EOF ;
    public final void entryRulePivotCols() throws RecognitionException {
        try {
            // InternalSqlParser.g:1175:1: ( rulePivotCols EOF )
            // InternalSqlParser.g:1176:1: rulePivotCols EOF
            {
             before(grammarAccess.getPivotColsRule()); 
            pushFollow(FOLLOW_1);
            rulePivotCols();

            state._fsp--;

             after(grammarAccess.getPivotColsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCols"


    // $ANTLR start "rulePivotCols"
    // InternalSqlParser.g:1183:1: rulePivotCols : ( ( rule__PivotCols__Group__0 ) ) ;
    public final void rulePivotCols() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1187:5: ( ( ( rule__PivotCols__Group__0 ) ) )
            // InternalSqlParser.g:1188:1: ( ( rule__PivotCols__Group__0 ) )
            {
            // InternalSqlParser.g:1188:1: ( ( rule__PivotCols__Group__0 ) )
            // InternalSqlParser.g:1189:1: ( rule__PivotCols__Group__0 )
            {
             before(grammarAccess.getPivotColsAccess().getGroup()); 
            // InternalSqlParser.g:1190:1: ( rule__PivotCols__Group__0 )
            // InternalSqlParser.g:1190:2: rule__PivotCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotColsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCols"


    // $ANTLR start "entryRulePivotCol"
    // InternalSqlParser.g:1202:1: entryRulePivotCol : rulePivotCol EOF ;
    public final void entryRulePivotCol() throws RecognitionException {
        try {
            // InternalSqlParser.g:1203:1: ( rulePivotCol EOF )
            // InternalSqlParser.g:1204:1: rulePivotCol EOF
            {
             before(grammarAccess.getPivotColRule()); 
            pushFollow(FOLLOW_1);
            rulePivotCol();

            state._fsp--;

             after(grammarAccess.getPivotColRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCol"


    // $ANTLR start "rulePivotCol"
    // InternalSqlParser.g:1211:1: rulePivotCol : ( ( rule__PivotCol__Group__0 ) ) ;
    public final void rulePivotCol() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1215:5: ( ( ( rule__PivotCol__Group__0 ) ) )
            // InternalSqlParser.g:1216:1: ( ( rule__PivotCol__Group__0 ) )
            {
            // InternalSqlParser.g:1216:1: ( ( rule__PivotCol__Group__0 ) )
            // InternalSqlParser.g:1217:1: ( rule__PivotCol__Group__0 )
            {
             before(grammarAccess.getPivotColAccess().getGroup()); 
            // InternalSqlParser.g:1218:1: ( rule__PivotCol__Group__0 )
            // InternalSqlParser.g:1218:2: rule__PivotCol__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotColAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCol"


    // $ANTLR start "entryRuleTableFull"
    // InternalSqlParser.g:1230:1: entryRuleTableFull : ruleTableFull EOF ;
    public final void entryRuleTableFull() throws RecognitionException {
        try {
            // InternalSqlParser.g:1231:1: ( ruleTableFull EOF )
            // InternalSqlParser.g:1232:1: ruleTableFull EOF
            {
             before(grammarAccess.getTableFullRule()); 
            pushFollow(FOLLOW_1);
            ruleTableFull();

            state._fsp--;

             after(grammarAccess.getTableFullRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableFull"


    // $ANTLR start "ruleTableFull"
    // InternalSqlParser.g:1239:1: ruleTableFull : ( ( rule__TableFull__Group__0 ) ) ;
    public final void ruleTableFull() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1243:5: ( ( ( rule__TableFull__Group__0 ) ) )
            // InternalSqlParser.g:1244:1: ( ( rule__TableFull__Group__0 ) )
            {
            // InternalSqlParser.g:1244:1: ( ( rule__TableFull__Group__0 ) )
            // InternalSqlParser.g:1245:1: ( rule__TableFull__Group__0 )
            {
             before(grammarAccess.getTableFullAccess().getGroup()); 
            // InternalSqlParser.g:1246:1: ( rule__TableFull__Group__0 )
            // InternalSqlParser.g:1246:2: rule__TableFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getTableFullAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableFull"


    // $ANTLR start "entryRuleDbObjectNameAll"
    // InternalSqlParser.g:1258:1: entryRuleDbObjectNameAll : ruleDbObjectNameAll EOF ;
    public final void entryRuleDbObjectNameAll() throws RecognitionException {
        try {
            // InternalSqlParser.g:1259:1: ( ruleDbObjectNameAll EOF )
            // InternalSqlParser.g:1260:1: ruleDbObjectNameAll EOF
            {
             before(grammarAccess.getDbObjectNameAllRule()); 
            pushFollow(FOLLOW_1);
            ruleDbObjectNameAll();

            state._fsp--;

             after(grammarAccess.getDbObjectNameAllRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectNameAll"


    // $ANTLR start "ruleDbObjectNameAll"
    // InternalSqlParser.g:1267:1: ruleDbObjectNameAll : ( ( rule__DbObjectNameAll__Group__0 ) ) ;
    public final void ruleDbObjectNameAll() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1271:5: ( ( ( rule__DbObjectNameAll__Group__0 ) ) )
            // InternalSqlParser.g:1272:1: ( ( rule__DbObjectNameAll__Group__0 ) )
            {
            // InternalSqlParser.g:1272:1: ( ( rule__DbObjectNameAll__Group__0 ) )
            // InternalSqlParser.g:1273:1: ( rule__DbObjectNameAll__Group__0 )
            {
             before(grammarAccess.getDbObjectNameAllAccess().getGroup()); 
            // InternalSqlParser.g:1274:1: ( rule__DbObjectNameAll__Group__0 )
            // InternalSqlParser.g:1274:2: rule__DbObjectNameAll__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDbObjectNameAllAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectNameAll"


    // $ANTLR start "entryRuleDbObjectName"
    // InternalSqlParser.g:1286:1: entryRuleDbObjectName : ruleDbObjectName EOF ;
    public final void entryRuleDbObjectName() throws RecognitionException {
        try {
            // InternalSqlParser.g:1287:1: ( ruleDbObjectName EOF )
            // InternalSqlParser.g:1288:1: ruleDbObjectName EOF
            {
             before(grammarAccess.getDbObjectNameRule()); 
            pushFollow(FOLLOW_1);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getDbObjectNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectName"


    // $ANTLR start "ruleDbObjectName"
    // InternalSqlParser.g:1295:1: ruleDbObjectName : ( ( rule__DbObjectName__DbnameAssignment ) ) ;
    public final void ruleDbObjectName() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1299:5: ( ( ( rule__DbObjectName__DbnameAssignment ) ) )
            // InternalSqlParser.g:1300:1: ( ( rule__DbObjectName__DbnameAssignment ) )
            {
            // InternalSqlParser.g:1300:1: ( ( rule__DbObjectName__DbnameAssignment ) )
            // InternalSqlParser.g:1301:1: ( rule__DbObjectName__DbnameAssignment )
            {
             before(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 
            // InternalSqlParser.g:1302:1: ( rule__DbObjectName__DbnameAssignment )
            // InternalSqlParser.g:1302:2: rule__DbObjectName__DbnameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectName__DbnameAssignment();

            state._fsp--;


            }

             after(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectName"


    // $ANTLR start "entryRuleOrderByColumns"
    // InternalSqlParser.g:1314:1: entryRuleOrderByColumns : ruleOrderByColumns EOF ;
    public final void entryRuleOrderByColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:1315:1: ( ruleOrderByColumns EOF )
            // InternalSqlParser.g:1316:1: ruleOrderByColumns EOF
            {
             before(grammarAccess.getOrderByColumnsRule()); 
            pushFollow(FOLLOW_1);
            ruleOrderByColumns();

            state._fsp--;

             after(grammarAccess.getOrderByColumnsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumns"


    // $ANTLR start "ruleOrderByColumns"
    // InternalSqlParser.g:1323:1: ruleOrderByColumns : ( ( rule__OrderByColumns__Group__0 ) ) ;
    public final void ruleOrderByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1327:5: ( ( ( rule__OrderByColumns__Group__0 ) ) )
            // InternalSqlParser.g:1328:1: ( ( rule__OrderByColumns__Group__0 ) )
            {
            // InternalSqlParser.g:1328:1: ( ( rule__OrderByColumns__Group__0 ) )
            // InternalSqlParser.g:1329:1: ( rule__OrderByColumns__Group__0 )
            {
             before(grammarAccess.getOrderByColumnsAccess().getGroup()); 
            // InternalSqlParser.g:1330:1: ( rule__OrderByColumns__Group__0 )
            // InternalSqlParser.g:1330:2: rule__OrderByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByColumnsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumns"


    // $ANTLR start "entryRuleOrderByColumnFull"
    // InternalSqlParser.g:1342:1: entryRuleOrderByColumnFull : ruleOrderByColumnFull EOF ;
    public final void entryRuleOrderByColumnFull() throws RecognitionException {
        try {
            // InternalSqlParser.g:1343:1: ( ruleOrderByColumnFull EOF )
            // InternalSqlParser.g:1344:1: ruleOrderByColumnFull EOF
            {
             before(grammarAccess.getOrderByColumnFullRule()); 
            pushFollow(FOLLOW_1);
            ruleOrderByColumnFull();

            state._fsp--;

             after(grammarAccess.getOrderByColumnFullRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumnFull"


    // $ANTLR start "ruleOrderByColumnFull"
    // InternalSqlParser.g:1351:1: ruleOrderByColumnFull : ( ( rule__OrderByColumnFull__Group__0 ) ) ;
    public final void ruleOrderByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1355:5: ( ( ( rule__OrderByColumnFull__Group__0 ) ) )
            // InternalSqlParser.g:1356:1: ( ( rule__OrderByColumnFull__Group__0 ) )
            {
            // InternalSqlParser.g:1356:1: ( ( rule__OrderByColumnFull__Group__0 ) )
            // InternalSqlParser.g:1357:1: ( rule__OrderByColumnFull__Group__0 )
            {
             before(grammarAccess.getOrderByColumnFullAccess().getGroup()); 
            // InternalSqlParser.g:1358:1: ( rule__OrderByColumnFull__Group__0 )
            // InternalSqlParser.g:1358:2: rule__OrderByColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByColumnFullAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumnFull"


    // $ANTLR start "entryRuleGroupByColumns"
    // InternalSqlParser.g:1370:1: entryRuleGroupByColumns : ruleGroupByColumns EOF ;
    public final void entryRuleGroupByColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:1371:1: ( ruleGroupByColumns EOF )
            // InternalSqlParser.g:1372:1: ruleGroupByColumns EOF
            {
             before(grammarAccess.getGroupByColumnsRule()); 
            pushFollow(FOLLOW_1);
            ruleGroupByColumns();

            state._fsp--;

             after(grammarAccess.getGroupByColumnsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumns"


    // $ANTLR start "ruleGroupByColumns"
    // InternalSqlParser.g:1379:1: ruleGroupByColumns : ( ( rule__GroupByColumns__Group__0 ) ) ;
    public final void ruleGroupByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1383:5: ( ( ( rule__GroupByColumns__Group__0 ) ) )
            // InternalSqlParser.g:1384:1: ( ( rule__GroupByColumns__Group__0 ) )
            {
            // InternalSqlParser.g:1384:1: ( ( rule__GroupByColumns__Group__0 ) )
            // InternalSqlParser.g:1385:1: ( rule__GroupByColumns__Group__0 )
            {
             before(grammarAccess.getGroupByColumnsAccess().getGroup()); 
            // InternalSqlParser.g:1386:1: ( rule__GroupByColumns__Group__0 )
            // InternalSqlParser.g:1386:2: rule__GroupByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGroupByColumnsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumns"


    // $ANTLR start "entryRuleGroupByColumnFull"
    // InternalSqlParser.g:1398:1: entryRuleGroupByColumnFull : ruleGroupByColumnFull EOF ;
    public final void entryRuleGroupByColumnFull() throws RecognitionException {
        try {
            // InternalSqlParser.g:1399:1: ( ruleGroupByColumnFull EOF )
            // InternalSqlParser.g:1400:1: ruleGroupByColumnFull EOF
            {
             before(grammarAccess.getGroupByColumnFullRule()); 
            pushFollow(FOLLOW_1);
            ruleGroupByColumnFull();

            state._fsp--;

             after(grammarAccess.getGroupByColumnFullRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumnFull"


    // $ANTLR start "ruleGroupByColumnFull"
    // InternalSqlParser.g:1407:1: ruleGroupByColumnFull : ( ( rule__GroupByColumnFull__Alternatives ) ) ;
    public final void ruleGroupByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1411:5: ( ( ( rule__GroupByColumnFull__Alternatives ) ) )
            // InternalSqlParser.g:1412:1: ( ( rule__GroupByColumnFull__Alternatives ) )
            {
            // InternalSqlParser.g:1412:1: ( ( rule__GroupByColumnFull__Alternatives ) )
            // InternalSqlParser.g:1413:1: ( rule__GroupByColumnFull__Alternatives )
            {
             before(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 
            // InternalSqlParser.g:1414:1: ( rule__GroupByColumnFull__Alternatives )
            // InternalSqlParser.g:1414:2: rule__GroupByColumnFull__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumnFull__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumnFull"


    // $ANTLR start "entryRuleFullExpression"
    // InternalSqlParser.g:1426:1: entryRuleFullExpression : ruleFullExpression EOF ;
    public final void entryRuleFullExpression() throws RecognitionException {
        try {
            // InternalSqlParser.g:1427:1: ( ruleFullExpression EOF )
            // InternalSqlParser.g:1428:1: ruleFullExpression EOF
            {
             before(grammarAccess.getFullExpressionRule()); 
            pushFollow(FOLLOW_1);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getFullExpressionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFullExpression"


    // $ANTLR start "ruleFullExpression"
    // InternalSqlParser.g:1435:1: ruleFullExpression : ( ( rule__FullExpression__Group__0 ) ) ;
    public final void ruleFullExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1439:5: ( ( ( rule__FullExpression__Group__0 ) ) )
            // InternalSqlParser.g:1440:1: ( ( rule__FullExpression__Group__0 ) )
            {
            // InternalSqlParser.g:1440:1: ( ( rule__FullExpression__Group__0 ) )
            // InternalSqlParser.g:1441:1: ( rule__FullExpression__Group__0 )
            {
             before(grammarAccess.getFullExpressionAccess().getGroup()); 
            // InternalSqlParser.g:1442:1: ( rule__FullExpression__Group__0 )
            // InternalSqlParser.g:1442:2: rule__FullExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFullExpressionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFullExpression"


    // $ANTLR start "entryRuleExpressionFragmentSecond"
    // InternalSqlParser.g:1454:1: entryRuleExpressionFragmentSecond : ruleExpressionFragmentSecond EOF ;
    public final void entryRuleExpressionFragmentSecond() throws RecognitionException {
        try {
            // InternalSqlParser.g:1455:1: ( ruleExpressionFragmentSecond EOF )
            // InternalSqlParser.g:1456:1: ruleExpressionFragmentSecond EOF
            {
             before(grammarAccess.getExpressionFragmentSecondRule()); 
            pushFollow(FOLLOW_1);
            ruleExpressionFragmentSecond();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentSecondRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragmentSecond"


    // $ANTLR start "ruleExpressionFragmentSecond"
    // InternalSqlParser.g:1463:1: ruleExpressionFragmentSecond : ( ( rule__ExpressionFragmentSecond__Alternatives ) ) ;
    public final void ruleExpressionFragmentSecond() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1467:5: ( ( ( rule__ExpressionFragmentSecond__Alternatives ) ) )
            // InternalSqlParser.g:1468:1: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            {
            // InternalSqlParser.g:1468:1: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            // InternalSqlParser.g:1469:1: ( rule__ExpressionFragmentSecond__Alternatives )
            {
             before(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 
            // InternalSqlParser.g:1470:1: ( rule__ExpressionFragmentSecond__Alternatives )
            // InternalSqlParser.g:1470:2: rule__ExpressionFragmentSecond__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragmentSecond"


    // $ANTLR start "entryRuleExpressionFragment"
    // InternalSqlParser.g:1482:1: entryRuleExpressionFragment : ruleExpressionFragment EOF ;
    public final void entryRuleExpressionFragment() throws RecognitionException {
        try {
            // InternalSqlParser.g:1483:1: ( ruleExpressionFragment EOF )
            // InternalSqlParser.g:1484:1: ruleExpressionFragment EOF
            {
             before(grammarAccess.getExpressionFragmentRule()); 
            pushFollow(FOLLOW_1);
            ruleExpressionFragment();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragment"


    // $ANTLR start "ruleExpressionFragment"
    // InternalSqlParser.g:1491:1: ruleExpressionFragment : ( ( rule__ExpressionFragment__Alternatives ) ) ;
    public final void ruleExpressionFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1495:5: ( ( ( rule__ExpressionFragment__Alternatives ) ) )
            // InternalSqlParser.g:1496:1: ( ( rule__ExpressionFragment__Alternatives ) )
            {
            // InternalSqlParser.g:1496:1: ( ( rule__ExpressionFragment__Alternatives ) )
            // InternalSqlParser.g:1497:1: ( rule__ExpressionFragment__Alternatives )
            {
             before(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 
            // InternalSqlParser.g:1498:1: ( rule__ExpressionFragment__Alternatives )
            // InternalSqlParser.g:1498:2: rule__ExpressionFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragment"


    // $ANTLR start "entryRuleExpressionGroup"
    // InternalSqlParser.g:1510:1: entryRuleExpressionGroup : ruleExpressionGroup EOF ;
    public final void entryRuleExpressionGroup() throws RecognitionException {
        try {
            // InternalSqlParser.g:1511:1: ( ruleExpressionGroup EOF )
            // InternalSqlParser.g:1512:1: ruleExpressionGroup EOF
            {
             before(grammarAccess.getExpressionGroupRule()); 
            pushFollow(FOLLOW_1);
            ruleExpressionGroup();

            state._fsp--;

             after(grammarAccess.getExpressionGroupRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionGroup"


    // $ANTLR start "ruleExpressionGroup"
    // InternalSqlParser.g:1519:1: ruleExpressionGroup : ( ( rule__ExpressionGroup__Group__0 ) ) ;
    public final void ruleExpressionGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1523:5: ( ( ( rule__ExpressionGroup__Group__0 ) ) )
            // InternalSqlParser.g:1524:1: ( ( rule__ExpressionGroup__Group__0 ) )
            {
            // InternalSqlParser.g:1524:1: ( ( rule__ExpressionGroup__Group__0 ) )
            // InternalSqlParser.g:1525:1: ( rule__ExpressionGroup__Group__0 )
            {
             before(grammarAccess.getExpressionGroupAccess().getGroup()); 
            // InternalSqlParser.g:1526:1: ( rule__ExpressionGroup__Group__0 )
            // InternalSqlParser.g:1526:2: rule__ExpressionGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionGroupAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionGroup"


    // $ANTLR start "entryRuleXExpression"
    // InternalSqlParser.g:1538:1: entryRuleXExpression : ruleXExpression EOF ;
    public final void entryRuleXExpression() throws RecognitionException {
        try {
            // InternalSqlParser.g:1539:1: ( ruleXExpression EOF )
            // InternalSqlParser.g:1540:1: ruleXExpression EOF
            {
             before(grammarAccess.getXExpressionRule()); 
            pushFollow(FOLLOW_1);
            ruleXExpression();

            state._fsp--;

             after(grammarAccess.getXExpressionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalSqlParser.g:1547:1: ruleXExpression : ( ( rule__XExpression__Group__0 ) ) ;
    public final void ruleXExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1551:5: ( ( ( rule__XExpression__Group__0 ) ) )
            // InternalSqlParser.g:1552:1: ( ( rule__XExpression__Group__0 ) )
            {
            // InternalSqlParser.g:1552:1: ( ( rule__XExpression__Group__0 ) )
            // InternalSqlParser.g:1553:1: ( rule__XExpression__Group__0 )
            {
             before(grammarAccess.getXExpressionAccess().getGroup()); 
            // InternalSqlParser.g:1554:1: ( rule__XExpression__Group__0 )
            // InternalSqlParser.g:1554:2: rule__XExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXExpression_"
    // InternalSqlParser.g:1566:1: entryRuleXExpression_ : ruleXExpression_ EOF ;
    public final void entryRuleXExpression_() throws RecognitionException {
        try {
            // InternalSqlParser.g:1567:1: ( ruleXExpression_ EOF )
            // InternalSqlParser.g:1568:1: ruleXExpression_ EOF
            {
             before(grammarAccess.getXExpression_Rule()); 
            pushFollow(FOLLOW_1);
            ruleXExpression_();

            state._fsp--;

             after(grammarAccess.getXExpression_Rule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression_"


    // $ANTLR start "ruleXExpression_"
    // InternalSqlParser.g:1575:1: ruleXExpression_ : ( ( rule__XExpression___Group__0 ) ) ;
    public final void ruleXExpression_() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1579:5: ( ( ( rule__XExpression___Group__0 ) ) )
            // InternalSqlParser.g:1580:1: ( ( rule__XExpression___Group__0 ) )
            {
            // InternalSqlParser.g:1580:1: ( ( rule__XExpression___Group__0 ) )
            // InternalSqlParser.g:1581:1: ( rule__XExpression___Group__0 )
            {
             before(grammarAccess.getXExpression_Access().getGroup()); 
            // InternalSqlParser.g:1582:1: ( rule__XExpression___Group__0 )
            // InternalSqlParser.g:1582:2: rule__XExpression___Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__0();

            state._fsp--;


            }

             after(grammarAccess.getXExpression_Access().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression_"


    // $ANTLR start "entryRuleXExpressionParams"
    // InternalSqlParser.g:1594:1: entryRuleXExpressionParams : ruleXExpressionParams EOF ;
    public final void entryRuleXExpressionParams() throws RecognitionException {
        try {
            // InternalSqlParser.g:1595:1: ( ruleXExpressionParams EOF )
            // InternalSqlParser.g:1596:1: ruleXExpressionParams EOF
            {
             before(grammarAccess.getXExpressionParamsRule()); 
            pushFollow(FOLLOW_1);
            ruleXExpressionParams();

            state._fsp--;

             after(grammarAccess.getXExpressionParamsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpressionParams"


    // $ANTLR start "ruleXExpressionParams"
    // InternalSqlParser.g:1603:1: ruleXExpressionParams : ( ( rule__XExpressionParams__Group__0 ) ) ;
    public final void ruleXExpressionParams() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1607:5: ( ( ( rule__XExpressionParams__Group__0 ) ) )
            // InternalSqlParser.g:1608:1: ( ( rule__XExpressionParams__Group__0 ) )
            {
            // InternalSqlParser.g:1608:1: ( ( rule__XExpressionParams__Group__0 ) )
            // InternalSqlParser.g:1609:1: ( rule__XExpressionParams__Group__0 )
            {
             before(grammarAccess.getXExpressionParamsAccess().getGroup()); 
            // InternalSqlParser.g:1610:1: ( rule__XExpressionParams__Group__0 )
            // InternalSqlParser.g:1610:2: rule__XExpressionParams__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionParamsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpressionParams"


    // $ANTLR start "entryRuleJRParameter"
    // InternalSqlParser.g:1622:1: entryRuleJRParameter : ruleJRParameter EOF ;
    public final void entryRuleJRParameter() throws RecognitionException {
        try {
            // InternalSqlParser.g:1623:1: ( ruleJRParameter EOF )
            // InternalSqlParser.g:1624:1: ruleJRParameter EOF
            {
             before(grammarAccess.getJRParameterRule()); 
            pushFollow(FOLLOW_1);
            ruleJRParameter();

            state._fsp--;

             after(grammarAccess.getJRParameterRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJRParameter"


    // $ANTLR start "ruleJRParameter"
    // InternalSqlParser.g:1631:1: ruleJRParameter : ( ( rule__JRParameter__JrprmAssignment ) ) ;
    public final void ruleJRParameter() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1635:5: ( ( ( rule__JRParameter__JrprmAssignment ) ) )
            // InternalSqlParser.g:1636:1: ( ( rule__JRParameter__JrprmAssignment ) )
            {
            // InternalSqlParser.g:1636:1: ( ( rule__JRParameter__JrprmAssignment ) )
            // InternalSqlParser.g:1637:1: ( rule__JRParameter__JrprmAssignment )
            {
             before(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 
            // InternalSqlParser.g:1638:1: ( rule__JRParameter__JrprmAssignment )
            // InternalSqlParser.g:1638:2: rule__JRParameter__JrprmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__JRParameter__JrprmAssignment();

            state._fsp--;


            }

             after(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJRParameter"


    // $ANTLR start "entryRuleExpression"
    // InternalSqlParser.g:1650:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalSqlParser.g:1651:1: ( ruleExpression EOF )
            // InternalSqlParser.g:1652:1: ruleExpression EOF
            {
             before(grammarAccess.getExpressionRule()); 
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getExpressionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSqlParser.g:1659:1: ruleExpression : ( ( rule__Expression__Group__0 ) ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1663:5: ( ( ( rule__Expression__Group__0 ) ) )
            // InternalSqlParser.g:1664:1: ( ( rule__Expression__Group__0 ) )
            {
            // InternalSqlParser.g:1664:1: ( ( rule__Expression__Group__0 ) )
            // InternalSqlParser.g:1665:1: ( rule__Expression__Group__0 )
            {
             before(grammarAccess.getExpressionAccess().getGroup()); 
            // InternalSqlParser.g:1666:1: ( rule__Expression__Group__0 )
            // InternalSqlParser.g:1666:2: rule__Expression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleComparison"
    // InternalSqlParser.g:1678:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalSqlParser.g:1679:1: ( ruleComparison EOF )
            // InternalSqlParser.g:1680:1: ruleComparison EOF
            {
             before(grammarAccess.getComparisonRule()); 
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getComparisonRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalSqlParser.g:1687:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1691:5: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalSqlParser.g:1692:1: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalSqlParser.g:1692:1: ( ( rule__Comparison__Group__0 ) )
            // InternalSqlParser.g:1693:1: ( rule__Comparison__Group__0 )
            {
             before(grammarAccess.getComparisonAccess().getGroup()); 
            // InternalSqlParser.g:1694:1: ( rule__Comparison__Group__0 )
            // InternalSqlParser.g:1694:2: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleLike"
    // InternalSqlParser.g:1706:1: entryRuleLike : ruleLike EOF ;
    public final void entryRuleLike() throws RecognitionException {
        try {
            // InternalSqlParser.g:1707:1: ( ruleLike EOF )
            // InternalSqlParser.g:1708:1: ruleLike EOF
            {
             before(grammarAccess.getLikeRule()); 
            pushFollow(FOLLOW_1);
            ruleLike();

            state._fsp--;

             after(grammarAccess.getLikeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLike"


    // $ANTLR start "ruleLike"
    // InternalSqlParser.g:1715:1: ruleLike : ( ( rule__Like__Group__0 ) ) ;
    public final void ruleLike() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1719:5: ( ( ( rule__Like__Group__0 ) ) )
            // InternalSqlParser.g:1720:1: ( ( rule__Like__Group__0 ) )
            {
            // InternalSqlParser.g:1720:1: ( ( rule__Like__Group__0 ) )
            // InternalSqlParser.g:1721:1: ( rule__Like__Group__0 )
            {
             before(grammarAccess.getLikeAccess().getGroup()); 
            // InternalSqlParser.g:1722:1: ( rule__Like__Group__0 )
            // InternalSqlParser.g:1722:2: rule__Like__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLikeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLike"


    // $ANTLR start "entryRuleLikeOperand"
    // InternalSqlParser.g:1734:1: entryRuleLikeOperand : ruleLikeOperand EOF ;
    public final void entryRuleLikeOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:1735:1: ( ruleLikeOperand EOF )
            // InternalSqlParser.g:1736:1: ruleLikeOperand EOF
            {
             before(grammarAccess.getLikeOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleLikeOperand();

            state._fsp--;

             after(grammarAccess.getLikeOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLikeOperand"


    // $ANTLR start "ruleLikeOperand"
    // InternalSqlParser.g:1743:1: ruleLikeOperand : ( ( rule__LikeOperand__Alternatives ) ) ;
    public final void ruleLikeOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1747:5: ( ( ( rule__LikeOperand__Alternatives ) ) )
            // InternalSqlParser.g:1748:1: ( ( rule__LikeOperand__Alternatives ) )
            {
            // InternalSqlParser.g:1748:1: ( ( rule__LikeOperand__Alternatives ) )
            // InternalSqlParser.g:1749:1: ( rule__LikeOperand__Alternatives )
            {
             before(grammarAccess.getLikeOperandAccess().getAlternatives()); 
            // InternalSqlParser.g:1750:1: ( rule__LikeOperand__Alternatives )
            // InternalSqlParser.g:1750:2: rule__LikeOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LikeOperand__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLikeOperandAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLikeOperand"


    // $ANTLR start "entryRuleBetween"
    // InternalSqlParser.g:1762:1: entryRuleBetween : ruleBetween EOF ;
    public final void entryRuleBetween() throws RecognitionException {
        try {
            // InternalSqlParser.g:1763:1: ( ruleBetween EOF )
            // InternalSqlParser.g:1764:1: ruleBetween EOF
            {
             before(grammarAccess.getBetweenRule()); 
            pushFollow(FOLLOW_1);
            ruleBetween();

            state._fsp--;

             after(grammarAccess.getBetweenRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBetween"


    // $ANTLR start "ruleBetween"
    // InternalSqlParser.g:1771:1: ruleBetween : ( ( rule__Between__Group__0 ) ) ;
    public final void ruleBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1775:5: ( ( ( rule__Between__Group__0 ) ) )
            // InternalSqlParser.g:1776:1: ( ( rule__Between__Group__0 ) )
            {
            // InternalSqlParser.g:1776:1: ( ( rule__Between__Group__0 ) )
            // InternalSqlParser.g:1777:1: ( rule__Between__Group__0 )
            {
             before(grammarAccess.getBetweenAccess().getGroup()); 
            // InternalSqlParser.g:1778:1: ( rule__Between__Group__0 )
            // InternalSqlParser.g:1778:2: rule__Between__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getBetweenAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBetween"


    // $ANTLR start "entryRuleInOperator"
    // InternalSqlParser.g:1790:1: entryRuleInOperator : ruleInOperator EOF ;
    public final void entryRuleInOperator() throws RecognitionException {
        try {
            // InternalSqlParser.g:1791:1: ( ruleInOperator EOF )
            // InternalSqlParser.g:1792:1: ruleInOperator EOF
            {
             before(grammarAccess.getInOperatorRule()); 
            pushFollow(FOLLOW_1);
            ruleInOperator();

            state._fsp--;

             after(grammarAccess.getInOperatorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInOperator"


    // $ANTLR start "ruleInOperator"
    // InternalSqlParser.g:1799:1: ruleInOperator : ( ( rule__InOperator__Group__0 ) ) ;
    public final void ruleInOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1803:5: ( ( ( rule__InOperator__Group__0 ) ) )
            // InternalSqlParser.g:1804:1: ( ( rule__InOperator__Group__0 ) )
            {
            // InternalSqlParser.g:1804:1: ( ( rule__InOperator__Group__0 ) )
            // InternalSqlParser.g:1805:1: ( rule__InOperator__Group__0 )
            {
             before(grammarAccess.getInOperatorAccess().getGroup()); 
            // InternalSqlParser.g:1806:1: ( rule__InOperator__Group__0 )
            // InternalSqlParser.g:1806:2: rule__InOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getInOperatorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInOperator"


    // $ANTLR start "entryRuleExistsOperator"
    // InternalSqlParser.g:1818:1: entryRuleExistsOperator : ruleExistsOperator EOF ;
    public final void entryRuleExistsOperator() throws RecognitionException {
        try {
            // InternalSqlParser.g:1819:1: ( ruleExistsOperator EOF )
            // InternalSqlParser.g:1820:1: ruleExistsOperator EOF
            {
             before(grammarAccess.getExistsOperatorRule()); 
            pushFollow(FOLLOW_1);
            ruleExistsOperator();

            state._fsp--;

             after(grammarAccess.getExistsOperatorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExistsOperator"


    // $ANTLR start "ruleExistsOperator"
    // InternalSqlParser.g:1827:1: ruleExistsOperator : ( ( rule__ExistsOperator__Group__0 ) ) ;
    public final void ruleExistsOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1831:5: ( ( ( rule__ExistsOperator__Group__0 ) ) )
            // InternalSqlParser.g:1832:1: ( ( rule__ExistsOperator__Group__0 ) )
            {
            // InternalSqlParser.g:1832:1: ( ( rule__ExistsOperator__Group__0 ) )
            // InternalSqlParser.g:1833:1: ( rule__ExistsOperator__Group__0 )
            {
             before(grammarAccess.getExistsOperatorAccess().getGroup()); 
            // InternalSqlParser.g:1834:1: ( rule__ExistsOperator__Group__0 )
            // InternalSqlParser.g:1834:2: rule__ExistsOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExistsOperatorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExistsOperator"


    // $ANTLR start "entryRuleOperandListGroup"
    // InternalSqlParser.g:1846:1: entryRuleOperandListGroup : ruleOperandListGroup EOF ;
    public final void entryRuleOperandListGroup() throws RecognitionException {
        try {
            // InternalSqlParser.g:1847:1: ( ruleOperandListGroup EOF )
            // InternalSqlParser.g:1848:1: ruleOperandListGroup EOF
            {
             before(grammarAccess.getOperandListGroupRule()); 
            pushFollow(FOLLOW_1);
            ruleOperandListGroup();

            state._fsp--;

             after(grammarAccess.getOperandListGroupRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandListGroup"


    // $ANTLR start "ruleOperandListGroup"
    // InternalSqlParser.g:1855:1: ruleOperandListGroup : ( ( rule__OperandListGroup__Group__0 ) ) ;
    public final void ruleOperandListGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1859:5: ( ( ( rule__OperandListGroup__Group__0 ) ) )
            // InternalSqlParser.g:1860:1: ( ( rule__OperandListGroup__Group__0 ) )
            {
            // InternalSqlParser.g:1860:1: ( ( rule__OperandListGroup__Group__0 ) )
            // InternalSqlParser.g:1861:1: ( rule__OperandListGroup__Group__0 )
            {
             before(grammarAccess.getOperandListGroupAccess().getGroup()); 
            // InternalSqlParser.g:1862:1: ( rule__OperandListGroup__Group__0 )
            // InternalSqlParser.g:1862:2: rule__OperandListGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOperandListGroupAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandListGroup"


    // $ANTLR start "entryRuleOperandList"
    // InternalSqlParser.g:1874:1: entryRuleOperandList : ruleOperandList EOF ;
    public final void entryRuleOperandList() throws RecognitionException {
        try {
            // InternalSqlParser.g:1875:1: ( ruleOperandList EOF )
            // InternalSqlParser.g:1876:1: ruleOperandList EOF
            {
             before(grammarAccess.getOperandListRule()); 
            pushFollow(FOLLOW_1);
            ruleOperandList();

            state._fsp--;

             after(grammarAccess.getOperandListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandList"


    // $ANTLR start "ruleOperandList"
    // InternalSqlParser.g:1883:1: ruleOperandList : ( ( rule__OperandList__Group__0 ) ) ;
    public final void ruleOperandList() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1887:5: ( ( ( rule__OperandList__Group__0 ) ) )
            // InternalSqlParser.g:1888:1: ( ( rule__OperandList__Group__0 ) )
            {
            // InternalSqlParser.g:1888:1: ( ( rule__OperandList__Group__0 ) )
            // InternalSqlParser.g:1889:1: ( rule__OperandList__Group__0 )
            {
             before(grammarAccess.getOperandListAccess().getGroup()); 
            // InternalSqlParser.g:1890:1: ( rule__OperandList__Group__0 )
            // InternalSqlParser.g:1890:2: rule__OperandList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOperandListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandList"


    // $ANTLR start "entryRuleOperandGroup"
    // InternalSqlParser.g:1902:1: entryRuleOperandGroup : ruleOperandGroup EOF ;
    public final void entryRuleOperandGroup() throws RecognitionException {
        try {
            // InternalSqlParser.g:1903:1: ( ruleOperandGroup EOF )
            // InternalSqlParser.g:1904:1: ruleOperandGroup EOF
            {
             before(grammarAccess.getOperandGroupRule()); 
            pushFollow(FOLLOW_1);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getOperandGroupRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandGroup"


    // $ANTLR start "ruleOperandGroup"
    // InternalSqlParser.g:1911:1: ruleOperandGroup : ( ( rule__OperandGroup__Alternatives ) ) ;
    public final void ruleOperandGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1915:5: ( ( ( rule__OperandGroup__Alternatives ) ) )
            // InternalSqlParser.g:1916:1: ( ( rule__OperandGroup__Alternatives ) )
            {
            // InternalSqlParser.g:1916:1: ( ( rule__OperandGroup__Alternatives ) )
            // InternalSqlParser.g:1917:1: ( rule__OperandGroup__Alternatives )
            {
             before(grammarAccess.getOperandGroupAccess().getAlternatives()); 
            // InternalSqlParser.g:1918:1: ( rule__OperandGroup__Alternatives )
            // InternalSqlParser.g:1918:2: rule__OperandGroup__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getOperandGroupAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandGroup"


    // $ANTLR start "entryRuleOperand"
    // InternalSqlParser.g:1930:1: entryRuleOperand : ruleOperand EOF ;
    public final void entryRuleOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:1931:1: ( ruleOperand EOF )
            // InternalSqlParser.g:1932:1: ruleOperand EOF
            {
             before(grammarAccess.getOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleOperand();

            state._fsp--;

             after(grammarAccess.getOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalSqlParser.g:1939:1: ruleOperand : ( ( rule__Operand__Group__0 ) ) ;
    public final void ruleOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1943:5: ( ( ( rule__Operand__Group__0 ) ) )
            // InternalSqlParser.g:1944:1: ( ( rule__Operand__Group__0 ) )
            {
            // InternalSqlParser.g:1944:1: ( ( rule__Operand__Group__0 ) )
            // InternalSqlParser.g:1945:1: ( rule__Operand__Group__0 )
            {
             before(grammarAccess.getOperandAccess().getGroup()); 
            // InternalSqlParser.g:1946:1: ( rule__Operand__Group__0 )
            // InternalSqlParser.g:1946:2: rule__Operand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOperandAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleOperandFragment"
    // InternalSqlParser.g:1958:1: entryRuleOperandFragment : ruleOperandFragment EOF ;
    public final void entryRuleOperandFragment() throws RecognitionException {
        try {
            // InternalSqlParser.g:1959:1: ( ruleOperandFragment EOF )
            // InternalSqlParser.g:1960:1: ruleOperandFragment EOF
            {
             before(grammarAccess.getOperandFragmentRule()); 
            pushFollow(FOLLOW_1);
            ruleOperandFragment();

            state._fsp--;

             after(grammarAccess.getOperandFragmentRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFragment"


    // $ANTLR start "ruleOperandFragment"
    // InternalSqlParser.g:1967:1: ruleOperandFragment : ( ( rule__OperandFragment__Alternatives ) ) ;
    public final void ruleOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1971:5: ( ( ( rule__OperandFragment__Alternatives ) ) )
            // InternalSqlParser.g:1972:1: ( ( rule__OperandFragment__Alternatives ) )
            {
            // InternalSqlParser.g:1972:1: ( ( rule__OperandFragment__Alternatives ) )
            // InternalSqlParser.g:1973:1: ( rule__OperandFragment__Alternatives )
            {
             before(grammarAccess.getOperandFragmentAccess().getAlternatives()); 
            // InternalSqlParser.g:1974:1: ( rule__OperandFragment__Alternatives )
            // InternalSqlParser.g:1974:2: rule__OperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandFragment__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getOperandFragmentAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFragment"


    // $ANTLR start "entryRuleOperandFunction"
    // InternalSqlParser.g:1986:1: entryRuleOperandFunction : ruleOperandFunction EOF ;
    public final void entryRuleOperandFunction() throws RecognitionException {
        try {
            // InternalSqlParser.g:1987:1: ( ruleOperandFunction EOF )
            // InternalSqlParser.g:1988:1: ruleOperandFunction EOF
            {
             before(grammarAccess.getOperandFunctionRule()); 
            pushFollow(FOLLOW_1);
            ruleOperandFunction();

            state._fsp--;

             after(grammarAccess.getOperandFunctionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFunction"


    // $ANTLR start "ruleOperandFunction"
    // InternalSqlParser.g:1995:1: ruleOperandFunction : ( ( rule__OperandFunction__Group__0 ) ) ;
    public final void ruleOperandFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1999:5: ( ( ( rule__OperandFunction__Group__0 ) ) )
            // InternalSqlParser.g:2000:1: ( ( rule__OperandFunction__Group__0 ) )
            {
            // InternalSqlParser.g:2000:1: ( ( rule__OperandFunction__Group__0 ) )
            // InternalSqlParser.g:2001:1: ( rule__OperandFunction__Group__0 )
            {
             before(grammarAccess.getOperandFunctionAccess().getGroup()); 
            // InternalSqlParser.g:2002:1: ( rule__OperandFunction__Group__0 )
            // InternalSqlParser.g:2002:2: rule__OperandFunction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOperandFunctionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFunction"


    // $ANTLR start "entryRuleFunctionExtract"
    // InternalSqlParser.g:2014:1: entryRuleFunctionExtract : ruleFunctionExtract EOF ;
    public final void entryRuleFunctionExtract() throws RecognitionException {
        try {
            // InternalSqlParser.g:2015:1: ( ruleFunctionExtract EOF )
            // InternalSqlParser.g:2016:1: ruleFunctionExtract EOF
            {
             before(grammarAccess.getFunctionExtractRule()); 
            pushFollow(FOLLOW_1);
            ruleFunctionExtract();

            state._fsp--;

             after(grammarAccess.getFunctionExtractRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionExtract"


    // $ANTLR start "ruleFunctionExtract"
    // InternalSqlParser.g:2023:1: ruleFunctionExtract : ( ( rule__FunctionExtract__Group__0 ) ) ;
    public final void ruleFunctionExtract() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2027:5: ( ( ( rule__FunctionExtract__Group__0 ) ) )
            // InternalSqlParser.g:2028:1: ( ( rule__FunctionExtract__Group__0 ) )
            {
            // InternalSqlParser.g:2028:1: ( ( rule__FunctionExtract__Group__0 ) )
            // InternalSqlParser.g:2029:1: ( rule__FunctionExtract__Group__0 )
            {
             before(grammarAccess.getFunctionExtractAccess().getGroup()); 
            // InternalSqlParser.g:2030:1: ( rule__FunctionExtract__Group__0 )
            // InternalSqlParser.g:2030:2: rule__FunctionExtract__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFunctionExtractAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionExtract"


    // $ANTLR start "entryRuleFunctionAnalytical"
    // InternalSqlParser.g:2042:1: entryRuleFunctionAnalytical : ruleFunctionAnalytical EOF ;
    public final void entryRuleFunctionAnalytical() throws RecognitionException {
        try {
            // InternalSqlParser.g:2043:1: ( ruleFunctionAnalytical EOF )
            // InternalSqlParser.g:2044:1: ruleFunctionAnalytical EOF
            {
             before(grammarAccess.getFunctionAnalyticalRule()); 
            pushFollow(FOLLOW_1);
            ruleFunctionAnalytical();

            state._fsp--;

             after(grammarAccess.getFunctionAnalyticalRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionAnalytical"


    // $ANTLR start "ruleFunctionAnalytical"
    // InternalSqlParser.g:2051:1: ruleFunctionAnalytical : ( ( rule__FunctionAnalytical__Group__0 ) ) ;
    public final void ruleFunctionAnalytical() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2055:5: ( ( ( rule__FunctionAnalytical__Group__0 ) ) )
            // InternalSqlParser.g:2056:1: ( ( rule__FunctionAnalytical__Group__0 ) )
            {
            // InternalSqlParser.g:2056:1: ( ( rule__FunctionAnalytical__Group__0 ) )
            // InternalSqlParser.g:2057:1: ( rule__FunctionAnalytical__Group__0 )
            {
             before(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 
            // InternalSqlParser.g:2058:1: ( rule__FunctionAnalytical__Group__0 )
            // InternalSqlParser.g:2058:2: rule__FunctionAnalytical__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionAnalytical"


    // $ANTLR start "entryRuleAnalyticClause"
    // InternalSqlParser.g:2070:1: entryRuleAnalyticClause : ruleAnalyticClause EOF ;
    public final void entryRuleAnalyticClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:2071:1: ( ruleAnalyticClause EOF )
            // InternalSqlParser.g:2072:1: ruleAnalyticClause EOF
            {
             before(grammarAccess.getAnalyticClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleAnalyticClause();

            state._fsp--;

             after(grammarAccess.getAnalyticClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticClause"


    // $ANTLR start "ruleAnalyticClause"
    // InternalSqlParser.g:2079:1: ruleAnalyticClause : ( ( rule__AnalyticClause__Group__0 ) ) ;
    public final void ruleAnalyticClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2083:5: ( ( ( rule__AnalyticClause__Group__0 ) ) )
            // InternalSqlParser.g:2084:1: ( ( rule__AnalyticClause__Group__0 ) )
            {
            // InternalSqlParser.g:2084:1: ( ( rule__AnalyticClause__Group__0 ) )
            // InternalSqlParser.g:2085:1: ( rule__AnalyticClause__Group__0 )
            {
             before(grammarAccess.getAnalyticClauseAccess().getGroup()); 
            // InternalSqlParser.g:2086:1: ( rule__AnalyticClause__Group__0 )
            // InternalSqlParser.g:2086:2: rule__AnalyticClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticClause"


    // $ANTLR start "entryRuleWindowingClause"
    // InternalSqlParser.g:2098:1: entryRuleWindowingClause : ruleWindowingClause EOF ;
    public final void entryRuleWindowingClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:2099:1: ( ruleWindowingClause EOF )
            // InternalSqlParser.g:2100:1: ruleWindowingClause EOF
            {
             before(grammarAccess.getWindowingClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleWindowingClause();

            state._fsp--;

             after(grammarAccess.getWindowingClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClause"


    // $ANTLR start "ruleWindowingClause"
    // InternalSqlParser.g:2107:1: ruleWindowingClause : ( ( rule__WindowingClause__Group__0 ) ) ;
    public final void ruleWindowingClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2111:5: ( ( ( rule__WindowingClause__Group__0 ) ) )
            // InternalSqlParser.g:2112:1: ( ( rule__WindowingClause__Group__0 ) )
            {
            // InternalSqlParser.g:2112:1: ( ( rule__WindowingClause__Group__0 ) )
            // InternalSqlParser.g:2113:1: ( rule__WindowingClause__Group__0 )
            {
             before(grammarAccess.getWindowingClauseAccess().getGroup()); 
            // InternalSqlParser.g:2114:1: ( rule__WindowingClause__Group__0 )
            // InternalSqlParser.g:2114:2: rule__WindowingClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClause"


    // $ANTLR start "entryRuleWindowingClauseBetween"
    // InternalSqlParser.g:2126:1: entryRuleWindowingClauseBetween : ruleWindowingClauseBetween EOF ;
    public final void entryRuleWindowingClauseBetween() throws RecognitionException {
        try {
            // InternalSqlParser.g:2127:1: ( ruleWindowingClauseBetween EOF )
            // InternalSqlParser.g:2128:1: ruleWindowingClauseBetween EOF
            {
             before(grammarAccess.getWindowingClauseBetweenRule()); 
            pushFollow(FOLLOW_1);
            ruleWindowingClauseBetween();

            state._fsp--;

             after(grammarAccess.getWindowingClauseBetweenRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseBetween"


    // $ANTLR start "ruleWindowingClauseBetween"
    // InternalSqlParser.g:2135:1: ruleWindowingClauseBetween : ( ( rule__WindowingClauseBetween__Group__0 ) ) ;
    public final void ruleWindowingClauseBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2139:5: ( ( ( rule__WindowingClauseBetween__Group__0 ) ) )
            // InternalSqlParser.g:2140:1: ( ( rule__WindowingClauseBetween__Group__0 ) )
            {
            // InternalSqlParser.g:2140:1: ( ( rule__WindowingClauseBetween__Group__0 ) )
            // InternalSqlParser.g:2141:1: ( rule__WindowingClauseBetween__Group__0 )
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 
            // InternalSqlParser.g:2142:1: ( rule__WindowingClauseBetween__Group__0 )
            // InternalSqlParser.g:2142:2: rule__WindowingClauseBetween__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseBetween"


    // $ANTLR start "entryRuleWindowingClauseOperandFollowing"
    // InternalSqlParser.g:2154:1: entryRuleWindowingClauseOperandFollowing : ruleWindowingClauseOperandFollowing EOF ;
    public final void entryRuleWindowingClauseOperandFollowing() throws RecognitionException {
        try {
            // InternalSqlParser.g:2155:1: ( ruleWindowingClauseOperandFollowing EOF )
            // InternalSqlParser.g:2156:1: ruleWindowingClauseOperandFollowing EOF
            {
             before(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;

             after(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandFollowing"


    // $ANTLR start "ruleWindowingClauseOperandFollowing"
    // InternalSqlParser.g:2163:1: ruleWindowingClauseOperandFollowing : ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandFollowing() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2167:5: ( ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) )
            // InternalSqlParser.g:2168:1: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            {
            // InternalSqlParser.g:2168:1: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            // InternalSqlParser.g:2169:1: ( rule__WindowingClauseOperandFollowing__Group__0 )
            {
             before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 
            // InternalSqlParser.g:2170:1: ( rule__WindowingClauseOperandFollowing__Group__0 )
            // InternalSqlParser.g:2170:2: rule__WindowingClauseOperandFollowing__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandFollowing"


    // $ANTLR start "entryRuleWindowingClauseOperandPreceding"
    // InternalSqlParser.g:2182:1: entryRuleWindowingClauseOperandPreceding : ruleWindowingClauseOperandPreceding EOF ;
    public final void entryRuleWindowingClauseOperandPreceding() throws RecognitionException {
        try {
            // InternalSqlParser.g:2183:1: ( ruleWindowingClauseOperandPreceding EOF )
            // InternalSqlParser.g:2184:1: ruleWindowingClauseOperandPreceding EOF
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;

             after(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandPreceding"


    // $ANTLR start "ruleWindowingClauseOperandPreceding"
    // InternalSqlParser.g:2191:1: ruleWindowingClauseOperandPreceding : ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandPreceding() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2195:5: ( ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) )
            // InternalSqlParser.g:2196:1: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            {
            // InternalSqlParser.g:2196:1: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            // InternalSqlParser.g:2197:1: ( rule__WindowingClauseOperandPreceding__Group__0 )
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 
            // InternalSqlParser.g:2198:1: ( rule__WindowingClauseOperandPreceding__Group__0 )
            // InternalSqlParser.g:2198:2: rule__WindowingClauseOperandPreceding__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandPreceding"


    // $ANTLR start "entryRuleOrderByClause"
    // InternalSqlParser.g:2210:1: entryRuleOrderByClause : ruleOrderByClause EOF ;
    public final void entryRuleOrderByClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:2211:1: ( ruleOrderByClause EOF )
            // InternalSqlParser.g:2212:1: ruleOrderByClause EOF
            {
             before(grammarAccess.getOrderByClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleOrderByClause();

            state._fsp--;

             after(grammarAccess.getOrderByClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClause"


    // $ANTLR start "ruleOrderByClause"
    // InternalSqlParser.g:2219:1: ruleOrderByClause : ( ( rule__OrderByClause__Group__0 ) ) ;
    public final void ruleOrderByClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2223:5: ( ( ( rule__OrderByClause__Group__0 ) ) )
            // InternalSqlParser.g:2224:1: ( ( rule__OrderByClause__Group__0 ) )
            {
            // InternalSqlParser.g:2224:1: ( ( rule__OrderByClause__Group__0 ) )
            // InternalSqlParser.g:2225:1: ( rule__OrderByClause__Group__0 )
            {
             before(grammarAccess.getOrderByClauseAccess().getGroup()); 
            // InternalSqlParser.g:2226:1: ( rule__OrderByClause__Group__0 )
            // InternalSqlParser.g:2226:2: rule__OrderByClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClause"


    // $ANTLR start "entryRuleOrderByClauseArgs"
    // InternalSqlParser.g:2238:1: entryRuleOrderByClauseArgs : ruleOrderByClauseArgs EOF ;
    public final void entryRuleOrderByClauseArgs() throws RecognitionException {
        try {
            // InternalSqlParser.g:2239:1: ( ruleOrderByClauseArgs EOF )
            // InternalSqlParser.g:2240:1: ruleOrderByClauseArgs EOF
            {
             before(grammarAccess.getOrderByClauseArgsRule()); 
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArgs();

            state._fsp--;

             after(grammarAccess.getOrderByClauseArgsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArgs"


    // $ANTLR start "ruleOrderByClauseArgs"
    // InternalSqlParser.g:2247:1: ruleOrderByClauseArgs : ( ( rule__OrderByClauseArgs__Group__0 ) ) ;
    public final void ruleOrderByClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2251:5: ( ( ( rule__OrderByClauseArgs__Group__0 ) ) )
            // InternalSqlParser.g:2252:1: ( ( rule__OrderByClauseArgs__Group__0 ) )
            {
            // InternalSqlParser.g:2252:1: ( ( rule__OrderByClauseArgs__Group__0 ) )
            // InternalSqlParser.g:2253:1: ( rule__OrderByClauseArgs__Group__0 )
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 
            // InternalSqlParser.g:2254:1: ( rule__OrderByClauseArgs__Group__0 )
            // InternalSqlParser.g:2254:2: rule__OrderByClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArgs"


    // $ANTLR start "entryRuleOrderByClauseArg"
    // InternalSqlParser.g:2266:1: entryRuleOrderByClauseArg : ruleOrderByClauseArg EOF ;
    public final void entryRuleOrderByClauseArg() throws RecognitionException {
        try {
            // InternalSqlParser.g:2267:1: ( ruleOrderByClauseArg EOF )
            // InternalSqlParser.g:2268:1: ruleOrderByClauseArg EOF
            {
             before(grammarAccess.getOrderByClauseArgRule()); 
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArg();

            state._fsp--;

             after(grammarAccess.getOrderByClauseArgRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArg"


    // $ANTLR start "ruleOrderByClauseArg"
    // InternalSqlParser.g:2275:1: ruleOrderByClauseArg : ( ( rule__OrderByClauseArg__Group__0 ) ) ;
    public final void ruleOrderByClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2279:5: ( ( ( rule__OrderByClauseArg__Group__0 ) ) )
            // InternalSqlParser.g:2280:1: ( ( rule__OrderByClauseArg__Group__0 ) )
            {
            // InternalSqlParser.g:2280:1: ( ( rule__OrderByClauseArg__Group__0 ) )
            // InternalSqlParser.g:2281:1: ( rule__OrderByClauseArg__Group__0 )
            {
             before(grammarAccess.getOrderByClauseArgAccess().getGroup()); 
            // InternalSqlParser.g:2282:1: ( rule__OrderByClauseArg__Group__0 )
            // InternalSqlParser.g:2282:2: rule__OrderByClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseArgAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArg"


    // $ANTLR start "entryRuleQueryPartitionClause"
    // InternalSqlParser.g:2294:1: entryRuleQueryPartitionClause : ruleQueryPartitionClause EOF ;
    public final void entryRuleQueryPartitionClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:2295:1: ( ruleQueryPartitionClause EOF )
            // InternalSqlParser.g:2296:1: ruleQueryPartitionClause EOF
            {
             before(grammarAccess.getQueryPartitionClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleQueryPartitionClause();

            state._fsp--;

             after(grammarAccess.getQueryPartitionClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQueryPartitionClause"


    // $ANTLR start "ruleQueryPartitionClause"
    // InternalSqlParser.g:2303:1: ruleQueryPartitionClause : ( ( rule__QueryPartitionClause__Group__0 ) ) ;
    public final void ruleQueryPartitionClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2307:5: ( ( ( rule__QueryPartitionClause__Group__0 ) ) )
            // InternalSqlParser.g:2308:1: ( ( rule__QueryPartitionClause__Group__0 ) )
            {
            // InternalSqlParser.g:2308:1: ( ( rule__QueryPartitionClause__Group__0 ) )
            // InternalSqlParser.g:2309:1: ( rule__QueryPartitionClause__Group__0 )
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 
            // InternalSqlParser.g:2310:1: ( rule__QueryPartitionClause__Group__0 )
            // InternalSqlParser.g:2310:2: rule__QueryPartitionClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQueryPartitionClause"


    // $ANTLR start "entryRuleAnalyticExprArgs"
    // InternalSqlParser.g:2322:1: entryRuleAnalyticExprArgs : ruleAnalyticExprArgs EOF ;
    public final void entryRuleAnalyticExprArgs() throws RecognitionException {
        try {
            // InternalSqlParser.g:2323:1: ( ruleAnalyticExprArgs EOF )
            // InternalSqlParser.g:2324:1: ruleAnalyticExprArgs EOF
            {
             before(grammarAccess.getAnalyticExprArgsRule()); 
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArgs();

            state._fsp--;

             after(grammarAccess.getAnalyticExprArgsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArgs"


    // $ANTLR start "ruleAnalyticExprArgs"
    // InternalSqlParser.g:2331:1: ruleAnalyticExprArgs : ( ( rule__AnalyticExprArgs__Group__0 ) ) ;
    public final void ruleAnalyticExprArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2335:5: ( ( ( rule__AnalyticExprArgs__Group__0 ) ) )
            // InternalSqlParser.g:2336:1: ( ( rule__AnalyticExprArgs__Group__0 ) )
            {
            // InternalSqlParser.g:2336:1: ( ( rule__AnalyticExprArgs__Group__0 ) )
            // InternalSqlParser.g:2337:1: ( rule__AnalyticExprArgs__Group__0 )
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 
            // InternalSqlParser.g:2338:1: ( rule__AnalyticExprArgs__Group__0 )
            // InternalSqlParser.g:2338:2: rule__AnalyticExprArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArgs"


    // $ANTLR start "entryRuleAnalyticExprArg"
    // InternalSqlParser.g:2350:1: entryRuleAnalyticExprArg : ruleAnalyticExprArg EOF ;
    public final void entryRuleAnalyticExprArg() throws RecognitionException {
        try {
            // InternalSqlParser.g:2351:1: ( ruleAnalyticExprArg EOF )
            // InternalSqlParser.g:2352:1: ruleAnalyticExprArg EOF
            {
             before(grammarAccess.getAnalyticExprArgRule()); 
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArg();

            state._fsp--;

             after(grammarAccess.getAnalyticExprArgRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArg"


    // $ANTLR start "ruleAnalyticExprArg"
    // InternalSqlParser.g:2359:1: ruleAnalyticExprArg : ( ( rule__AnalyticExprArg__Group__0 ) ) ;
    public final void ruleAnalyticExprArg() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2363:5: ( ( ( rule__AnalyticExprArg__Group__0 ) ) )
            // InternalSqlParser.g:2364:1: ( ( rule__AnalyticExprArg__Group__0 ) )
            {
            // InternalSqlParser.g:2364:1: ( ( rule__AnalyticExprArg__Group__0 ) )
            // InternalSqlParser.g:2365:1: ( rule__AnalyticExprArg__Group__0 )
            {
             before(grammarAccess.getAnalyticExprArgAccess().getGroup()); 
            // InternalSqlParser.g:2366:1: ( rule__AnalyticExprArg__Group__0 )
            // InternalSqlParser.g:2366:2: rule__AnalyticExprArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticExprArgAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArg"


    // $ANTLR start "entryRuleOpFunctionArg"
    // InternalSqlParser.g:2378:1: entryRuleOpFunctionArg : ruleOpFunctionArg EOF ;
    public final void entryRuleOpFunctionArg() throws RecognitionException {
        try {
            // InternalSqlParser.g:2379:1: ( ruleOpFunctionArg EOF )
            // InternalSqlParser.g:2380:1: ruleOpFunctionArg EOF
            {
             before(grammarAccess.getOpFunctionArgRule()); 
            pushFollow(FOLLOW_1);
            ruleOpFunctionArg();

            state._fsp--;

             after(grammarAccess.getOpFunctionArgRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArg"


    // $ANTLR start "ruleOpFunctionArg"
    // InternalSqlParser.g:2387:1: ruleOpFunctionArg : ( ( rule__OpFunctionArg__Group__0 ) ) ;
    public final void ruleOpFunctionArg() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2391:5: ( ( ( rule__OpFunctionArg__Group__0 ) ) )
            // InternalSqlParser.g:2392:1: ( ( rule__OpFunctionArg__Group__0 ) )
            {
            // InternalSqlParser.g:2392:1: ( ( rule__OpFunctionArg__Group__0 ) )
            // InternalSqlParser.g:2393:1: ( rule__OpFunctionArg__Group__0 )
            {
             before(grammarAccess.getOpFunctionArgAccess().getGroup()); 
            // InternalSqlParser.g:2394:1: ( rule__OpFunctionArg__Group__0 )
            // InternalSqlParser.g:2394:2: rule__OpFunctionArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArg"


    // $ANTLR start "entryRuleOpFunctionArgOperand"
    // InternalSqlParser.g:2406:1: entryRuleOpFunctionArgOperand : ruleOpFunctionArgOperand EOF ;
    public final void entryRuleOpFunctionArgOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2407:1: ( ruleOpFunctionArgOperand EOF )
            // InternalSqlParser.g:2408:1: ruleOpFunctionArgOperand EOF
            {
             before(grammarAccess.getOpFunctionArgOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgOperand();

            state._fsp--;

             after(grammarAccess.getOpFunctionArgOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgOperand"


    // $ANTLR start "ruleOpFunctionArgOperand"
    // InternalSqlParser.g:2415:1: ruleOpFunctionArgOperand : ( ( rule__OpFunctionArgOperand__OpAssignment ) ) ;
    public final void ruleOpFunctionArgOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2419:5: ( ( ( rule__OpFunctionArgOperand__OpAssignment ) ) )
            // InternalSqlParser.g:2420:1: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            {
            // InternalSqlParser.g:2420:1: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            // InternalSqlParser.g:2421:1: ( rule__OpFunctionArgOperand__OpAssignment )
            {
             before(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 
            // InternalSqlParser.g:2422:1: ( rule__OpFunctionArgOperand__OpAssignment )
            // InternalSqlParser.g:2422:2: rule__OpFunctionArgOperand__OpAssignment
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAssignment();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgOperand"


    // $ANTLR start "entryRuleOpFunctionCast"
    // InternalSqlParser.g:2434:1: entryRuleOpFunctionCast : ruleOpFunctionCast EOF ;
    public final void entryRuleOpFunctionCast() throws RecognitionException {
        try {
            // InternalSqlParser.g:2435:1: ( ruleOpFunctionCast EOF )
            // InternalSqlParser.g:2436:1: ruleOpFunctionCast EOF
            {
             before(grammarAccess.getOpFunctionCastRule()); 
            pushFollow(FOLLOW_1);
            ruleOpFunctionCast();

            state._fsp--;

             after(grammarAccess.getOpFunctionCastRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionCast"


    // $ANTLR start "ruleOpFunctionCast"
    // InternalSqlParser.g:2443:1: ruleOpFunctionCast : ( ( rule__OpFunctionCast__Group__0 ) ) ;
    public final void ruleOpFunctionCast() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2447:5: ( ( ( rule__OpFunctionCast__Group__0 ) ) )
            // InternalSqlParser.g:2448:1: ( ( rule__OpFunctionCast__Group__0 ) )
            {
            // InternalSqlParser.g:2448:1: ( ( rule__OpFunctionCast__Group__0 ) )
            // InternalSqlParser.g:2449:1: ( rule__OpFunctionCast__Group__0 )
            {
             before(grammarAccess.getOpFunctionCastAccess().getGroup()); 
            // InternalSqlParser.g:2450:1: ( rule__OpFunctionCast__Group__0 )
            // InternalSqlParser.g:2450:2: rule__OpFunctionCast__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionCastAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionCast"


    // $ANTLR start "entryRuleOpFunctionArgAgregate"
    // InternalSqlParser.g:2462:1: entryRuleOpFunctionArgAgregate : ruleOpFunctionArgAgregate EOF ;
    public final void entryRuleOpFunctionArgAgregate() throws RecognitionException {
        try {
            // InternalSqlParser.g:2463:1: ( ruleOpFunctionArgAgregate EOF )
            // InternalSqlParser.g:2464:1: ruleOpFunctionArgAgregate EOF
            {
             before(grammarAccess.getOpFunctionArgAgregateRule()); 
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgAgregate();

            state._fsp--;

             after(grammarAccess.getOpFunctionArgAgregateRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgAgregate"


    // $ANTLR start "ruleOpFunctionArgAgregate"
    // InternalSqlParser.g:2471:1: ruleOpFunctionArgAgregate : ( ( rule__OpFunctionArgAgregate__Group__0 ) ) ;
    public final void ruleOpFunctionArgAgregate() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2475:5: ( ( ( rule__OpFunctionArgAgregate__Group__0 ) ) )
            // InternalSqlParser.g:2476:1: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            {
            // InternalSqlParser.g:2476:1: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            // InternalSqlParser.g:2477:1: ( rule__OpFunctionArgAgregate__Group__0 )
            {
             before(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 
            // InternalSqlParser.g:2478:1: ( rule__OpFunctionArgAgregate__Group__0 )
            // InternalSqlParser.g:2478:2: rule__OpFunctionArgAgregate__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgAgregate"


    // $ANTLR start "entryRuleXOperandFragment"
    // InternalSqlParser.g:2490:1: entryRuleXOperandFragment : ruleXOperandFragment EOF ;
    public final void entryRuleXOperandFragment() throws RecognitionException {
        try {
            // InternalSqlParser.g:2491:1: ( ruleXOperandFragment EOF )
            // InternalSqlParser.g:2492:1: ruleXOperandFragment EOF
            {
             before(grammarAccess.getXOperandFragmentRule()); 
            pushFollow(FOLLOW_1);
            ruleXOperandFragment();

            state._fsp--;

             after(grammarAccess.getXOperandFragmentRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXOperandFragment"


    // $ANTLR start "ruleXOperandFragment"
    // InternalSqlParser.g:2499:1: ruleXOperandFragment : ( ( rule__XOperandFragment__Alternatives ) ) ;
    public final void ruleXOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2503:5: ( ( ( rule__XOperandFragment__Alternatives ) ) )
            // InternalSqlParser.g:2504:1: ( ( rule__XOperandFragment__Alternatives ) )
            {
            // InternalSqlParser.g:2504:1: ( ( rule__XOperandFragment__Alternatives ) )
            // InternalSqlParser.g:2505:1: ( rule__XOperandFragment__Alternatives )
            {
             before(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 
            // InternalSqlParser.g:2506:1: ( rule__XOperandFragment__Alternatives )
            // InternalSqlParser.g:2506:2: rule__XOperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XOperandFragment__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXOperandFragment"


    // $ANTLR start "entryRuleParameterOperand"
    // InternalSqlParser.g:2518:1: entryRuleParameterOperand : ruleParameterOperand EOF ;
    public final void entryRuleParameterOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2519:1: ( ruleParameterOperand EOF )
            // InternalSqlParser.g:2520:1: ruleParameterOperand EOF
            {
             before(grammarAccess.getParameterOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleParameterOperand();

            state._fsp--;

             after(grammarAccess.getParameterOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterOperand"


    // $ANTLR start "ruleParameterOperand"
    // InternalSqlParser.g:2527:1: ruleParameterOperand : ( ( rule__ParameterOperand__PrmAssignment ) ) ;
    public final void ruleParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2531:5: ( ( ( rule__ParameterOperand__PrmAssignment ) ) )
            // InternalSqlParser.g:2532:1: ( ( rule__ParameterOperand__PrmAssignment ) )
            {
            // InternalSqlParser.g:2532:1: ( ( rule__ParameterOperand__PrmAssignment ) )
            // InternalSqlParser.g:2533:1: ( rule__ParameterOperand__PrmAssignment )
            {
             before(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 
            // InternalSqlParser.g:2534:1: ( rule__ParameterOperand__PrmAssignment )
            // InternalSqlParser.g:2534:2: rule__ParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ParameterOperand__PrmAssignment();

            state._fsp--;


            }

             after(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterOperand"


    // $ANTLR start "entryRuleExclamationParameterOperand"
    // InternalSqlParser.g:2546:1: entryRuleExclamationParameterOperand : ruleExclamationParameterOperand EOF ;
    public final void entryRuleExclamationParameterOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2547:1: ( ruleExclamationParameterOperand EOF )
            // InternalSqlParser.g:2548:1: ruleExclamationParameterOperand EOF
            {
             before(grammarAccess.getExclamationParameterOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleExclamationParameterOperand();

            state._fsp--;

             after(grammarAccess.getExclamationParameterOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclamationParameterOperand"


    // $ANTLR start "ruleExclamationParameterOperand"
    // InternalSqlParser.g:2555:1: ruleExclamationParameterOperand : ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) ;
    public final void ruleExclamationParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2559:5: ( ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) )
            // InternalSqlParser.g:2560:1: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            {
            // InternalSqlParser.g:2560:1: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            // InternalSqlParser.g:2561:1: ( rule__ExclamationParameterOperand__PrmAssignment )
            {
             before(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 
            // InternalSqlParser.g:2562:1: ( rule__ExclamationParameterOperand__PrmAssignment )
            // InternalSqlParser.g:2562:2: rule__ExclamationParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ExclamationParameterOperand__PrmAssignment();

            state._fsp--;


            }

             after(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclamationParameterOperand"


    // $ANTLR start "entryRuleColumnOperand"
    // InternalSqlParser.g:2574:1: entryRuleColumnOperand : ruleColumnOperand EOF ;
    public final void entryRuleColumnOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2575:1: ( ruleColumnOperand EOF )
            // InternalSqlParser.g:2576:1: ruleColumnOperand EOF
            {
             before(grammarAccess.getColumnOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleColumnOperand();

            state._fsp--;

             after(grammarAccess.getColumnOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOperand"


    // $ANTLR start "ruleColumnOperand"
    // InternalSqlParser.g:2583:1: ruleColumnOperand : ( ( rule__ColumnOperand__Group__0 ) ) ;
    public final void ruleColumnOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2587:5: ( ( ( rule__ColumnOperand__Group__0 ) ) )
            // InternalSqlParser.g:2588:1: ( ( rule__ColumnOperand__Group__0 ) )
            {
            // InternalSqlParser.g:2588:1: ( ( rule__ColumnOperand__Group__0 ) )
            // InternalSqlParser.g:2589:1: ( rule__ColumnOperand__Group__0 )
            {
             before(grammarAccess.getColumnOperandAccess().getGroup()); 
            // InternalSqlParser.g:2590:1: ( rule__ColumnOperand__Group__0 )
            // InternalSqlParser.g:2590:2: rule__ColumnOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getColumnOperandAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOperand"


    // $ANTLR start "entryRuleSubQueryOperand"
    // InternalSqlParser.g:2602:1: entryRuleSubQueryOperand : ruleSubQueryOperand EOF ;
    public final void entryRuleSubQueryOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2603:1: ( ruleSubQueryOperand EOF )
            // InternalSqlParser.g:2604:1: ruleSubQueryOperand EOF
            {
             before(grammarAccess.getSubQueryOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleSubQueryOperand();

            state._fsp--;

             after(grammarAccess.getSubQueryOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubQueryOperand"


    // $ANTLR start "ruleSubQueryOperand"
    // InternalSqlParser.g:2611:1: ruleSubQueryOperand : ( ( rule__SubQueryOperand__Group__0 ) ) ;
    public final void ruleSubQueryOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2615:5: ( ( ( rule__SubQueryOperand__Group__0 ) ) )
            // InternalSqlParser.g:2616:1: ( ( rule__SubQueryOperand__Group__0 ) )
            {
            // InternalSqlParser.g:2616:1: ( ( rule__SubQueryOperand__Group__0 ) )
            // InternalSqlParser.g:2617:1: ( rule__SubQueryOperand__Group__0 )
            {
             before(grammarAccess.getSubQueryOperandAccess().getGroup()); 
            // InternalSqlParser.g:2618:1: ( rule__SubQueryOperand__Group__0 )
            // InternalSqlParser.g:2618:2: rule__SubQueryOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSubQueryOperandAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubQueryOperand"


    // $ANTLR start "entryRuleScalarOperand"
    // InternalSqlParser.g:2630:1: entryRuleScalarOperand : ruleScalarOperand EOF ;
    public final void entryRuleScalarOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2631:1: ( ruleScalarOperand EOF )
            // InternalSqlParser.g:2632:1: ruleScalarOperand EOF
            {
             before(grammarAccess.getScalarOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleScalarOperand();

            state._fsp--;

             after(grammarAccess.getScalarOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarOperand"


    // $ANTLR start "ruleScalarOperand"
    // InternalSqlParser.g:2639:1: ruleScalarOperand : ( ( rule__ScalarOperand__Alternatives ) ) ;
    public final void ruleScalarOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2643:5: ( ( ( rule__ScalarOperand__Alternatives ) ) )
            // InternalSqlParser.g:2644:1: ( ( rule__ScalarOperand__Alternatives ) )
            {
            // InternalSqlParser.g:2644:1: ( ( rule__ScalarOperand__Alternatives ) )
            // InternalSqlParser.g:2645:1: ( rule__ScalarOperand__Alternatives )
            {
             before(grammarAccess.getScalarOperandAccess().getAlternatives()); 
            // InternalSqlParser.g:2646:1: ( rule__ScalarOperand__Alternatives )
            // InternalSqlParser.g:2646:2: rule__ScalarOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarOperand__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getScalarOperandAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarOperand"


    // $ANTLR start "entryRuleScalarNumberOperand"
    // InternalSqlParser.g:2658:1: entryRuleScalarNumberOperand : ruleScalarNumberOperand EOF ;
    public final void entryRuleScalarNumberOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2659:1: ( ruleScalarNumberOperand EOF )
            // InternalSqlParser.g:2660:1: ruleScalarNumberOperand EOF
            {
             before(grammarAccess.getScalarNumberOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleScalarNumberOperand();

            state._fsp--;

             after(grammarAccess.getScalarNumberOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarNumberOperand"


    // $ANTLR start "ruleScalarNumberOperand"
    // InternalSqlParser.g:2667:1: ruleScalarNumberOperand : ( ( rule__ScalarNumberOperand__Alternatives ) ) ;
    public final void ruleScalarNumberOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2671:5: ( ( ( rule__ScalarNumberOperand__Alternatives ) ) )
            // InternalSqlParser.g:2672:1: ( ( rule__ScalarNumberOperand__Alternatives ) )
            {
            // InternalSqlParser.g:2672:1: ( ( rule__ScalarNumberOperand__Alternatives ) )
            // InternalSqlParser.g:2673:1: ( rule__ScalarNumberOperand__Alternatives )
            {
             before(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 
            // InternalSqlParser.g:2674:1: ( rule__ScalarNumberOperand__Alternatives )
            // InternalSqlParser.g:2674:2: rule__ScalarNumberOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarNumberOperand__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarNumberOperand"


    // $ANTLR start "entryRuleSQLCASE"
    // InternalSqlParser.g:2686:1: entryRuleSQLCASE : ruleSQLCASE EOF ;
    public final void entryRuleSQLCASE() throws RecognitionException {
        try {
            // InternalSqlParser.g:2687:1: ( ruleSQLCASE EOF )
            // InternalSqlParser.g:2688:1: ruleSQLCASE EOF
            {
             before(grammarAccess.getSQLCASERule()); 
            pushFollow(FOLLOW_1);
            ruleSQLCASE();

            state._fsp--;

             after(grammarAccess.getSQLCASERule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCASE"


    // $ANTLR start "ruleSQLCASE"
    // InternalSqlParser.g:2695:1: ruleSQLCASE : ( ( rule__SQLCASE__Group__0 ) ) ;
    public final void ruleSQLCASE() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2699:5: ( ( ( rule__SQLCASE__Group__0 ) ) )
            // InternalSqlParser.g:2700:1: ( ( rule__SQLCASE__Group__0 ) )
            {
            // InternalSqlParser.g:2700:1: ( ( rule__SQLCASE__Group__0 ) )
            // InternalSqlParser.g:2701:1: ( rule__SQLCASE__Group__0 )
            {
             before(grammarAccess.getSQLCASEAccess().getGroup()); 
            // InternalSqlParser.g:2702:1: ( rule__SQLCASE__Group__0 )
            // InternalSqlParser.g:2702:2: rule__SQLCASE__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSQLCASEAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCASE"


    // $ANTLR start "entryRuleSQLCaseWhens"
    // InternalSqlParser.g:2714:1: entryRuleSQLCaseWhens : ruleSQLCaseWhens EOF ;
    public final void entryRuleSQLCaseWhens() throws RecognitionException {
        try {
            // InternalSqlParser.g:2715:1: ( ruleSQLCaseWhens EOF )
            // InternalSqlParser.g:2716:1: ruleSQLCaseWhens EOF
            {
             before(grammarAccess.getSQLCaseWhensRule()); 
            pushFollow(FOLLOW_1);
            ruleSQLCaseWhens();

            state._fsp--;

             after(grammarAccess.getSQLCaseWhensRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCaseWhens"


    // $ANTLR start "ruleSQLCaseWhens"
    // InternalSqlParser.g:2723:1: ruleSQLCaseWhens : ( ( rule__SQLCaseWhens__Group__0 ) ) ;
    public final void ruleSQLCaseWhens() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2727:5: ( ( ( rule__SQLCaseWhens__Group__0 ) ) )
            // InternalSqlParser.g:2728:1: ( ( rule__SQLCaseWhens__Group__0 ) )
            {
            // InternalSqlParser.g:2728:1: ( ( rule__SQLCaseWhens__Group__0 ) )
            // InternalSqlParser.g:2729:1: ( rule__SQLCaseWhens__Group__0 )
            {
             before(grammarAccess.getSQLCaseWhensAccess().getGroup()); 
            // InternalSqlParser.g:2730:1: ( rule__SQLCaseWhens__Group__0 )
            // InternalSqlParser.g:2730:2: rule__SQLCaseWhens__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSQLCaseWhensAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCaseWhens"


    // $ANTLR start "entryRuleSqlCaseWhen"
    // InternalSqlParser.g:2742:1: entryRuleSqlCaseWhen : ruleSqlCaseWhen EOF ;
    public final void entryRuleSqlCaseWhen() throws RecognitionException {
        try {
            // InternalSqlParser.g:2743:1: ( ruleSqlCaseWhen EOF )
            // InternalSqlParser.g:2744:1: ruleSqlCaseWhen EOF
            {
             before(grammarAccess.getSqlCaseWhenRule()); 
            pushFollow(FOLLOW_1);
            ruleSqlCaseWhen();

            state._fsp--;

             after(grammarAccess.getSqlCaseWhenRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSqlCaseWhen"


    // $ANTLR start "ruleSqlCaseWhen"
    // InternalSqlParser.g:2751:1: ruleSqlCaseWhen : ( ( rule__SqlCaseWhen__Group__0 ) ) ;
    public final void ruleSqlCaseWhen() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2755:5: ( ( ( rule__SqlCaseWhen__Group__0 ) ) )
            // InternalSqlParser.g:2756:1: ( ( rule__SqlCaseWhen__Group__0 ) )
            {
            // InternalSqlParser.g:2756:1: ( ( rule__SqlCaseWhen__Group__0 ) )
            // InternalSqlParser.g:2757:1: ( rule__SqlCaseWhen__Group__0 )
            {
             before(grammarAccess.getSqlCaseWhenAccess().getGroup()); 
            // InternalSqlParser.g:2758:1: ( rule__SqlCaseWhen__Group__0 )
            // InternalSqlParser.g:2758:2: rule__SqlCaseWhen__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSqlCaseWhenAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSqlCaseWhen"


    // $ANTLR start "entryRuleJoinType"
    // InternalSqlParser.g:2770:1: entryRuleJoinType : ruleJoinType EOF ;
    public final void entryRuleJoinType() throws RecognitionException {
        try {
            // InternalSqlParser.g:2771:1: ( ruleJoinType EOF )
            // InternalSqlParser.g:2772:1: ruleJoinType EOF
            {
             before(grammarAccess.getJoinTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleJoinType();

            state._fsp--;

             after(grammarAccess.getJoinTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinType"


    // $ANTLR start "ruleJoinType"
    // InternalSqlParser.g:2779:1: ruleJoinType : ( ( rule__JoinType__Group__0 ) ) ;
    public final void ruleJoinType() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2783:5: ( ( ( rule__JoinType__Group__0 ) ) )
            // InternalSqlParser.g:2784:1: ( ( rule__JoinType__Group__0 ) )
            {
            // InternalSqlParser.g:2784:1: ( ( rule__JoinType__Group__0 ) )
            // InternalSqlParser.g:2785:1: ( rule__JoinType__Group__0 )
            {
             before(grammarAccess.getJoinTypeAccess().getGroup()); 
            // InternalSqlParser.g:2786:1: ( rule__JoinType__Group__0 )
            // InternalSqlParser.g:2786:2: rule__JoinType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getJoinTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinType"


    // $ANTLR start "entryRuleDBID"
    // InternalSqlParser.g:2798:1: entryRuleDBID : ruleDBID EOF ;
    public final void entryRuleDBID() throws RecognitionException {
        try {
            // InternalSqlParser.g:2799:1: ( ruleDBID EOF )
            // InternalSqlParser.g:2800:1: ruleDBID EOF
            {
             before(grammarAccess.getDBIDRule()); 
            pushFollow(FOLLOW_1);
            ruleDBID();

            state._fsp--;

             after(grammarAccess.getDBIDRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDBID"


    // $ANTLR start "ruleDBID"
    // InternalSqlParser.g:2807:1: ruleDBID : ( ( rule__DBID__Alternatives ) ) ;
    public final void ruleDBID() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2811:5: ( ( ( rule__DBID__Alternatives ) ) )
            // InternalSqlParser.g:2812:1: ( ( rule__DBID__Alternatives ) )
            {
            // InternalSqlParser.g:2812:1: ( ( rule__DBID__Alternatives ) )
            // InternalSqlParser.g:2813:1: ( rule__DBID__Alternatives )
            {
             before(grammarAccess.getDBIDAccess().getAlternatives()); 
            // InternalSqlParser.g:2814:1: ( rule__DBID__Alternatives )
            // InternalSqlParser.g:2814:2: rule__DBID__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DBID__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getDBIDAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDBID"


    // $ANTLR start "entryRuleStringOperand"
    // InternalSqlParser.g:2826:1: entryRuleStringOperand : ruleStringOperand EOF ;
    public final void entryRuleStringOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2827:1: ( ruleStringOperand EOF )
            // InternalSqlParser.g:2828:1: ruleStringOperand EOF
            {
             before(grammarAccess.getStringOperandRule()); 
            pushFollow(FOLLOW_1);
            ruleStringOperand();

            state._fsp--;

             after(grammarAccess.getStringOperandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringOperand"


    // $ANTLR start "ruleStringOperand"
    // InternalSqlParser.g:2835:1: ruleStringOperand : ( RULE_STRING_ ) ;
    public final void ruleStringOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2839:5: ( ( RULE_STRING_ ) )
            // InternalSqlParser.g:2840:1: ( RULE_STRING_ )
            {
            // InternalSqlParser.g:2840:1: ( RULE_STRING_ )
            // InternalSqlParser.g:2841:1: RULE_STRING_
            {
             before(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 
            match(input,RULE_STRING_,FOLLOW_2); 
             after(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringOperand"


    // $ANTLR start "entryRuleFNAME"
    // InternalSqlParser.g:2854:1: entryRuleFNAME : ruleFNAME EOF ;
    public final void entryRuleFNAME() throws RecognitionException {
        try {
            // InternalSqlParser.g:2855:1: ( ruleFNAME EOF )
            // InternalSqlParser.g:2856:1: ruleFNAME EOF
            {
             before(grammarAccess.getFNAMERule()); 
            pushFollow(FOLLOW_1);
            ruleFNAME();

            state._fsp--;

             after(grammarAccess.getFNAMERule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFNAME"


    // $ANTLR start "ruleFNAME"
    // InternalSqlParser.g:2863:1: ruleFNAME : ( ( rule__FNAME__Group__0 ) ) ;
    public final void ruleFNAME() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2867:5: ( ( ( rule__FNAME__Group__0 ) ) )
            // InternalSqlParser.g:2868:1: ( ( rule__FNAME__Group__0 ) )
            {
            // InternalSqlParser.g:2868:1: ( ( rule__FNAME__Group__0 ) )
            // InternalSqlParser.g:2869:1: ( rule__FNAME__Group__0 )
            {
             before(grammarAccess.getFNAMEAccess().getGroup()); 
            // InternalSqlParser.g:2870:1: ( rule__FNAME__Group__0 )
            // InternalSqlParser.g:2870:2: rule__FNAME__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFNAMEAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFNAME"


    // $ANTLR start "entryRuleUnsignedValue"
    // InternalSqlParser.g:2884:1: entryRuleUnsignedValue : ruleUnsignedValue EOF ;
    public final void entryRuleUnsignedValue() throws RecognitionException {
        try {
            // InternalSqlParser.g:2885:1: ( ruleUnsignedValue EOF )
            // InternalSqlParser.g:2886:1: ruleUnsignedValue EOF
            {
             before(grammarAccess.getUnsignedValueRule()); 
            pushFollow(FOLLOW_1);
            ruleUnsignedValue();

            state._fsp--;

             after(grammarAccess.getUnsignedValueRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnsignedValue"


    // $ANTLR start "ruleUnsignedValue"
    // InternalSqlParser.g:2893:1: ruleUnsignedValue : ( ( rule__UnsignedValue__IntegerAssignment ) ) ;
    public final void ruleUnsignedValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2897:5: ( ( ( rule__UnsignedValue__IntegerAssignment ) ) )
            // InternalSqlParser.g:2898:1: ( ( rule__UnsignedValue__IntegerAssignment ) )
            {
            // InternalSqlParser.g:2898:1: ( ( rule__UnsignedValue__IntegerAssignment ) )
            // InternalSqlParser.g:2899:1: ( rule__UnsignedValue__IntegerAssignment )
            {
             before(grammarAccess.getUnsignedValueAccess().getIntegerAssignment()); 
            // InternalSqlParser.g:2900:1: ( rule__UnsignedValue__IntegerAssignment )
            // InternalSqlParser.g:2900:2: rule__UnsignedValue__IntegerAssignment
            {
            pushFollow(FOLLOW_2);
            rule__UnsignedValue__IntegerAssignment();

            state._fsp--;


            }

             after(grammarAccess.getUnsignedValueAccess().getIntegerAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnsignedValue"


    // $ANTLR start "ruleEXTRACT_VALUES"
    // InternalSqlParser.g:2913:1: ruleEXTRACT_VALUES : ( ( rule__EXTRACT_VALUES__Alternatives ) ) ;
    public final void ruleEXTRACT_VALUES() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2917:1: ( ( ( rule__EXTRACT_VALUES__Alternatives ) ) )
            // InternalSqlParser.g:2918:1: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            {
            // InternalSqlParser.g:2918:1: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            // InternalSqlParser.g:2919:1: ( rule__EXTRACT_VALUES__Alternatives )
            {
             before(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 
            // InternalSqlParser.g:2920:1: ( rule__EXTRACT_VALUES__Alternatives )
            // InternalSqlParser.g:2920:2: rule__EXTRACT_VALUES__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EXTRACT_VALUES__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEXTRACT_VALUES"


    // $ANTLR start "ruleXFunction"
    // InternalSqlParser.g:2932:1: ruleXFunction : ( ( rule__XFunction__Alternatives ) ) ;
    public final void ruleXFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2936:1: ( ( ( rule__XFunction__Alternatives ) ) )
            // InternalSqlParser.g:2937:1: ( ( rule__XFunction__Alternatives ) )
            {
            // InternalSqlParser.g:2937:1: ( ( rule__XFunction__Alternatives ) )
            // InternalSqlParser.g:2938:1: ( rule__XFunction__Alternatives )
            {
             before(grammarAccess.getXFunctionAccess().getAlternatives()); 
            // InternalSqlParser.g:2939:1: ( rule__XFunction__Alternatives )
            // InternalSqlParser.g:2939:2: rule__XFunction__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XFunction__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getXFunctionAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXFunction"


    // $ANTLR start "rule__FetchFirst__RowAlternatives_1_0"
    // InternalSqlParser.g:2950:1: rule__FetchFirst__RowAlternatives_1_0 : ( ( ROW ) | ( ROWS ) );
    public final void rule__FetchFirst__RowAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2954:1: ( ( ROW ) | ( ROWS ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==ROW) ) {
                alt1=1;
            }
            else if ( (LA1_0==ROWS) ) {
                alt1=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalSqlParser.g:2955:1: ( ROW )
                    {
                    // InternalSqlParser.g:2955:1: ( ROW )
                    // InternalSqlParser.g:2956:1: ROW
                    {
                     before(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 
                    match(input,ROW,FOLLOW_2); 
                     after(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2963:6: ( ROWS )
                    {
                    // InternalSqlParser.g:2963:6: ( ROWS )
                    // InternalSqlParser.g:2964:1: ROWS
                    {
                     before(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 
                    match(input,ROWS,FOLLOW_2); 
                     after(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAlternatives_1_0"


    // $ANTLR start "rule__Limit__Alternatives"
    // InternalSqlParser.g:2976:1: rule__Limit__Alternatives : ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) );
    public final void rule__Limit__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2980:1: ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==ALL) ) {
                alt2=1;
            }
            else if ( (LA2_0==RULE_UNSIGNED) ) {
                alt2=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSqlParser.g:2981:1: ( ( rule__Limit__Group_0__0 ) )
                    {
                    // InternalSqlParser.g:2981:1: ( ( rule__Limit__Group_0__0 ) )
                    // InternalSqlParser.g:2982:1: ( rule__Limit__Group_0__0 )
                    {
                     before(grammarAccess.getLimitAccess().getGroup_0()); 
                    // InternalSqlParser.g:2983:1: ( rule__Limit__Group_0__0 )
                    // InternalSqlParser.g:2983:2: rule__Limit__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLimitAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:2987:6: ( ( rule__Limit__Group_1__0 ) )
                    {
                    // InternalSqlParser.g:2987:6: ( ( rule__Limit__Group_1__0 ) )
                    // InternalSqlParser.g:2988:1: ( rule__Limit__Group_1__0 )
                    {
                     before(grammarAccess.getLimitAccess().getGroup_1()); 
                    // InternalSqlParser.g:2989:1: ( rule__Limit__Group_1__0 )
                    // InternalSqlParser.g:2989:2: rule__Limit__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLimitAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Alternatives"


    // $ANTLR start "rule__SelectSubSet__OpAlternatives_0_0"
    // InternalSqlParser.g:2998:1: rule__SelectSubSet__OpAlternatives_0_0 : ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) );
    public final void rule__SelectSubSet__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3002:1: ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) )
            int alt3=4;
            switch ( input.LA(1) ) {
            case UNION:
                {
                alt3=1;
                }
                break;
            case INTERSECT:
                {
                alt3=2;
                }
                break;
            case MINUS:
                {
                alt3=3;
                }
                break;
            case EXCEPT:
                {
                alt3=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalSqlParser.g:3003:1: ( UNION )
                    {
                    // InternalSqlParser.g:3003:1: ( UNION )
                    // InternalSqlParser.g:3004:1: UNION
                    {
                     before(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 
                    match(input,UNION,FOLLOW_2); 
                     after(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3011:6: ( INTERSECT )
                    {
                    // InternalSqlParser.g:3011:6: ( INTERSECT )
                    // InternalSqlParser.g:3012:1: INTERSECT
                    {
                     before(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 
                    match(input,INTERSECT,FOLLOW_2); 
                     after(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3019:6: ( MINUS )
                    {
                    // InternalSqlParser.g:3019:6: ( MINUS )
                    // InternalSqlParser.g:3020:1: MINUS
                    {
                     before(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 
                    match(input,MINUS,FOLLOW_2); 
                     after(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3027:6: ( EXCEPT )
                    {
                    // InternalSqlParser.g:3027:6: ( EXCEPT )
                    // InternalSqlParser.g:3028:1: EXCEPT
                    {
                     before(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 
                    match(input,EXCEPT,FOLLOW_2); 
                     after(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAlternatives_0_0"


    // $ANTLR start "rule__Select__Alternatives_2_1"
    // InternalSqlParser.g:3040:1: rule__Select__Alternatives_2_1 : ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) );
    public final void rule__Select__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3044:1: ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_INT) ) {
                alt4=1;
            }
            else if ( (LA4_0==RULE_SIGNED_DOUBLE) ) {
                alt4=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSqlParser.g:3045:1: ( RULE_INT )
                    {
                    // InternalSqlParser.g:3045:1: ( RULE_INT )
                    // InternalSqlParser.g:3046:1: RULE_INT
                    {
                     before(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 
                    match(input,RULE_INT,FOLLOW_2); 
                     after(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3051:6: ( RULE_SIGNED_DOUBLE )
                    {
                    // InternalSqlParser.g:3051:6: ( RULE_SIGNED_DOUBLE )
                    // InternalSqlParser.g:3052:1: RULE_SIGNED_DOUBLE
                    {
                     before(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 
                    match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); 
                     after(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Alternatives_2_1"


    // $ANTLR start "rule__ColumnOrAlias__Alternatives"
    // InternalSqlParser.g:3062:1: rule__ColumnOrAlias__Alternatives : ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) );
    public final void rule__ColumnOrAlias__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3066:1: ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) )
            int alt5=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA5_1 = input.LA(2);

                if ( (LA5_1==FullStop) ) {
                    int LA5_6 = input.LA(3);

                    if ( (LA5_6==RULE_STAR) ) {
                        alt5=3;
                    }
                    else if ( ((LA5_6>=RULE_STRING && LA5_6<=RULE_ID)) ) {
                        alt5=1;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA5_1==EOF||LA5_1==FROM||LA5_1==LeftParenthesisPlusSignRightParenthesis||LA5_1==AS||(LA5_1>=VerticalLineVerticalLine && LA5_1<=HyphenMinus)||LA5_1==Solidus||LA5_1==RULE_STAR||(LA5_1>=RULE_STRING && LA5_1<=RULE_ID)) ) {
                    alt5=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DBNAME:
                {
                int LA5_2 = input.LA(2);

                if ( (LA5_2==FullStop) ) {
                    int LA5_6 = input.LA(3);

                    if ( (LA5_6==RULE_STAR) ) {
                        alt5=3;
                    }
                    else if ( ((LA5_6>=RULE_STRING && LA5_6<=RULE_ID)) ) {
                        alt5=1;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA5_2==EOF||LA5_2==FROM||LA5_2==LeftParenthesisPlusSignRightParenthesis||LA5_2==AS||LA5_2==VerticalLineVerticalLine||(LA5_2>=RightParenthesis && LA5_2<=HyphenMinus)||LA5_2==Solidus||LA5_2==RULE_STAR||(LA5_2>=RULE_STRING && LA5_2<=RULE_ID)) ) {
                    alt5=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
                {
                int LA5_3 = input.LA(2);

                if ( (LA5_3==FullStop) ) {
                    int LA5_6 = input.LA(3);

                    if ( (LA5_6==RULE_STAR) ) {
                        alt5=3;
                    }
                    else if ( ((LA5_6>=RULE_STRING && LA5_6<=RULE_ID)) ) {
                        alt5=1;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA5_3==EOF||LA5_3==FROM||LA5_3==LeftParenthesisPlusSignRightParenthesis||LA5_3==AS||LA5_3==VerticalLineVerticalLine||(LA5_3>=RightParenthesis && LA5_3<=HyphenMinus)||LA5_3==Solidus||LA5_3==RULE_STAR||(LA5_3>=RULE_STRING && LA5_3<=RULE_ID)) ) {
                    alt5=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 3, input);

                    throw nvae;
                }
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt5=1;
                }
                break;
            case RULE_STAR:
                {
                alt5=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalSqlParser.g:3067:1: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    {
                    // InternalSqlParser.g:3067:1: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    // InternalSqlParser.g:3068:1: ( rule__ColumnOrAlias__Group_0__0 )
                    {
                     before(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 
                    // InternalSqlParser.g:3069:1: ( rule__ColumnOrAlias__Group_0__0 )
                    // InternalSqlParser.g:3069:2: rule__ColumnOrAlias__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3073:6: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3073:6: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    // InternalSqlParser.g:3074:1: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    {
                     before(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 
                    // InternalSqlParser.g:3075:1: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    // InternalSqlParser.g:3075:2: rule__ColumnOrAlias__AllColsAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AllColsAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3079:6: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3079:6: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    // InternalSqlParser.g:3080:1: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    {
                     before(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 
                    // InternalSqlParser.g:3081:1: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    // InternalSqlParser.g:3081:2: rule__ColumnOrAlias__DbAllColsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__DbAllColsAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Alternatives"


    // $ANTLR start "rule__FromTableJoin__Alternatives_2"
    // InternalSqlParser.g:3090:1: rule__FromTableJoin__Alternatives_2 : ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) );
    public final void rule__FromTableJoin__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3094:1: ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==ON) ) {
                alt6=1;
            }
            else if ( (LA6_0==USING) ) {
                alt6=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSqlParser.g:3095:1: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    {
                    // InternalSqlParser.g:3095:1: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    // InternalSqlParser.g:3096:1: ( rule__FromTableJoin__Group_2_0__0 )
                    {
                     before(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 
                    // InternalSqlParser.g:3097:1: ( rule__FromTableJoin__Group_2_0__0 )
                    // InternalSqlParser.g:3097:2: rule__FromTableJoin__Group_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__Group_2_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3101:6: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:3101:6: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    // InternalSqlParser.g:3102:1: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    {
                     before(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 
                    // InternalSqlParser.g:3103:1: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    // InternalSqlParser.g:3103:2: rule__FromTableJoin__JoinCondAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__JoinCondAssignment_2_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Alternatives_2"


    // $ANTLR start "rule__TableOrAlias__Alternatives_0"
    // InternalSqlParser.g:3112:1: rule__TableOrAlias__Alternatives_0 : ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) | ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) ) );
    public final void rule__TableOrAlias__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3116:1: ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) | ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) ) )
            int alt7=3;
            int LA7_0 = input.LA(1);

            if ( ((LA7_0>=RULE_STRING && LA7_0<=RULE_ID)) ) {
                alt7=1;
            }
            else if ( (LA7_0==LeftParenthesis) ) {
                int LA7_2 = input.LA(2);

                if ( (LA7_2==VALUES) ) {
                    alt7=3;
                }
                else if ( (LA7_2==SELECT) ) {
                    alt7=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 2, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalSqlParser.g:3117:1: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    {
                    // InternalSqlParser.g:3117:1: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    // InternalSqlParser.g:3118:1: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    {
                     before(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 
                    // InternalSqlParser.g:3119:1: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    // InternalSqlParser.g:3119:2: rule__TableOrAlias__TfullAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TfullAssignment_0_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3123:6: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    {
                    // InternalSqlParser.g:3123:6: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    // InternalSqlParser.g:3124:1: ( rule__TableOrAlias__SqAssignment_0_1 )
                    {
                     before(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 
                    // InternalSqlParser.g:3125:1: ( rule__TableOrAlias__SqAssignment_0_1 )
                    // InternalSqlParser.g:3125:2: rule__TableOrAlias__SqAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__SqAssignment_0_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3129:6: ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) )
                    {
                    // InternalSqlParser.g:3129:6: ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) )
                    // InternalSqlParser.g:3130:1: ( rule__TableOrAlias__ValuesAssignment_0_2 )
                    {
                     before(grammarAccess.getTableOrAliasAccess().getValuesAssignment_0_2()); 
                    // InternalSqlParser.g:3131:1: ( rule__TableOrAlias__ValuesAssignment_0_2 )
                    // InternalSqlParser.g:3131:2: rule__TableOrAlias__ValuesAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__ValuesAssignment_0_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getTableOrAliasAccess().getValuesAssignment_0_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_0"


    // $ANTLR start "rule__TableOrAlias__Alternatives_1"
    // InternalSqlParser.g:3140:1: rule__TableOrAlias__Alternatives_1 : ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) );
    public final void rule__TableOrAlias__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3144:1: ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==PIVOT) ) {
                alt8=1;
            }
            else if ( (LA8_0==UNPIVOT) ) {
                alt8=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSqlParser.g:3145:1: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    {
                    // InternalSqlParser.g:3145:1: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    // InternalSqlParser.g:3146:1: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    {
                     before(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 
                    // InternalSqlParser.g:3147:1: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    // InternalSqlParser.g:3147:2: rule__TableOrAlias__PivotAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__PivotAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3151:6: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    {
                    // InternalSqlParser.g:3151:6: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    // InternalSqlParser.g:3152:1: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    {
                     before(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 
                    // InternalSqlParser.g:3153:1: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    // InternalSqlParser.g:3153:2: rule__TableOrAlias__UnpivotAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__UnpivotAssignment_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_1"


    // $ANTLR start "rule__RowValue__Alternatives"
    // InternalSqlParser.g:3162:1: rule__RowValue__Alternatives : ( ( ruleScalarNumberOperand ) | ( ( rule__RowValue__NullAssignment_1 ) ) );
    public final void rule__RowValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3166:1: ( ( ruleScalarNumberOperand ) | ( ( rule__RowValue__NullAssignment_1 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( ((LA9_0>=RULE_UNSIGNED && LA9_0<=RULE_SIGNED_DOUBLE)||LA9_0==RULE_STRING_) ) {
                alt9=1;
            }
            else if ( (LA9_0==NULL) ) {
                alt9=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalSqlParser.g:3167:1: ( ruleScalarNumberOperand )
                    {
                    // InternalSqlParser.g:3167:1: ( ruleScalarNumberOperand )
                    // InternalSqlParser.g:3168:1: ruleScalarNumberOperand
                    {
                     before(grammarAccess.getRowValueAccess().getScalarNumberOperandParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleScalarNumberOperand();

                    state._fsp--;

                     after(grammarAccess.getRowValueAccess().getScalarNumberOperandParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3173:6: ( ( rule__RowValue__NullAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3173:6: ( ( rule__RowValue__NullAssignment_1 ) )
                    // InternalSqlParser.g:3174:1: ( rule__RowValue__NullAssignment_1 )
                    {
                     before(grammarAccess.getRowValueAccess().getNullAssignment_1()); 
                    // InternalSqlParser.g:3175:1: ( rule__RowValue__NullAssignment_1 )
                    // InternalSqlParser.g:3175:2: rule__RowValue__NullAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__RowValue__NullAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getRowValueAccess().getNullAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValue__Alternatives"


    // $ANTLR start "rule__PivotInClause__Alternatives_2"
    // InternalSqlParser.g:3184:1: rule__PivotInClause__Alternatives_2 : ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) );
    public final void rule__PivotInClause__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3188:1: ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) )
            int alt10=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA10_1 = input.LA(2);

                if ( (LA10_1==SELECT) ) {
                    alt10=1;
                }
                else if ( ((LA10_1>=RULE_STRING && LA10_1<=RULE_ID)) ) {
                    alt10=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt10=2;
                }
                break;
            case ANY:
                {
                alt10=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalSqlParser.g:3189:1: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:3189:1: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    // InternalSqlParser.g:3190:1: ( rule__PivotInClause__SqAssignment_2_0 )
                    {
                     before(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 
                    // InternalSqlParser.g:3191:1: ( rule__PivotInClause__SqAssignment_2_0 )
                    // InternalSqlParser.g:3191:2: rule__PivotInClause__SqAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__SqAssignment_2_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3195:6: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:3195:6: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    // InternalSqlParser.g:3196:1: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    {
                     before(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 
                    // InternalSqlParser.g:3197:1: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    // InternalSqlParser.g:3197:2: rule__PivotInClause__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__ArgsAssignment_2_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3201:6: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    {
                    // InternalSqlParser.g:3201:6: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    // InternalSqlParser.g:3202:1: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    {
                     before(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 
                    // InternalSqlParser.g:3203:1: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    // InternalSqlParser.g:3203:2: rule__PivotInClause__PinanyAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__PinanyAssignment_2_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Alternatives_2"


    // $ANTLR start "rule__UnpivotTable__Alternatives_1_0"
    // InternalSqlParser.g:3212:1: rule__UnpivotTable__Alternatives_1_0 : ( ( INCLUDE ) | ( EXCLUDE ) );
    public final void rule__UnpivotTable__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3216:1: ( ( INCLUDE ) | ( EXCLUDE ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==INCLUDE) ) {
                alt11=1;
            }
            else if ( (LA11_0==EXCLUDE) ) {
                alt11=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalSqlParser.g:3217:1: ( INCLUDE )
                    {
                    // InternalSqlParser.g:3217:1: ( INCLUDE )
                    // InternalSqlParser.g:3218:1: INCLUDE
                    {
                     before(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 
                    match(input,INCLUDE,FOLLOW_2); 
                     after(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3225:6: ( EXCLUDE )
                    {
                    // InternalSqlParser.g:3225:6: ( EXCLUDE )
                    // InternalSqlParser.g:3226:1: EXCLUDE
                    {
                     before(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 
                    match(input,EXCLUDE,FOLLOW_2); 
                     after(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Alternatives_1_0"


    // $ANTLR start "rule__PivotForClause__Alternatives_1"
    // InternalSqlParser.g:3238:1: rule__PivotForClause__Alternatives_1 : ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) );
    public final void rule__PivotForClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3242:1: ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( ((LA12_0>=RULE_STRING && LA12_0<=RULE_ID)) ) {
                alt12=1;
            }
            else if ( (LA12_0==LeftParenthesis) ) {
                alt12=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalSqlParser.g:3243:1: ( ruleColumnFull )
                    {
                    // InternalSqlParser.g:3243:1: ( ruleColumnFull )
                    // InternalSqlParser.g:3244:1: ruleColumnFull
                    {
                     before(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 
                    pushFollow(FOLLOW_2);
                    ruleColumnFull();

                    state._fsp--;

                     after(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3249:6: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    {
                    // InternalSqlParser.g:3249:6: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    // InternalSqlParser.g:3250:1: ( rule__PivotForClause__Group_1_1__0 )
                    {
                     before(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 
                    // InternalSqlParser.g:3251:1: ( rule__PivotForClause__Group_1_1__0 )
                    // InternalSqlParser.g:3251:2: rule__PivotForClause__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotForClause__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Alternatives_1"


    // $ANTLR start "rule__PivotColumns__Alternatives"
    // InternalSqlParser.g:3260:1: rule__PivotColumns__Alternatives : ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) );
    public final void rule__PivotColumns__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3264:1: ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( ((LA13_0>=RULE_STRING && LA13_0<=RULE_ID)) ) {
                alt13=1;
            }
            else if ( (LA13_0==LeftParenthesis) ) {
                alt13=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalSqlParser.g:3265:1: ( rulePivotCol )
                    {
                    // InternalSqlParser.g:3265:1: ( rulePivotCol )
                    // InternalSqlParser.g:3266:1: rulePivotCol
                    {
                     before(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    rulePivotCol();

                    state._fsp--;

                     after(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3271:6: ( ( rule__PivotColumns__Group_1__0 ) )
                    {
                    // InternalSqlParser.g:3271:6: ( ( rule__PivotColumns__Group_1__0 ) )
                    // InternalSqlParser.g:3272:1: ( rule__PivotColumns__Group_1__0 )
                    {
                     before(grammarAccess.getPivotColumnsAccess().getGroup_1()); 
                    // InternalSqlParser.g:3273:1: ( rule__PivotColumns__Group_1__0 )
                    // InternalSqlParser.g:3273:2: rule__PivotColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotColumns__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPivotColumnsAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Alternatives"


    // $ANTLR start "rule__OrderByColumnFull__Alternatives_0"
    // InternalSqlParser.g:3282:1: rule__OrderByColumnFull__Alternatives_0 : ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) );
    public final void rule__OrderByColumnFull__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3286:1: ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( ((LA14_0>=RULE_STRING && LA14_0<=RULE_ID)) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_UNSIGNED) ) {
                alt14=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalSqlParser.g:3287:1: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    {
                    // InternalSqlParser.g:3287:1: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    // InternalSqlParser.g:3288:1: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    {
                     before(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 
                    // InternalSqlParser.g:3289:1: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    // InternalSqlParser.g:3289:2: rule__OrderByColumnFull__ColOrderAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderAssignment_0_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3293:6: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    {
                    // InternalSqlParser.g:3293:6: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    // InternalSqlParser.g:3294:1: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    {
                     before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 
                    // InternalSqlParser.g:3295:1: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    // InternalSqlParser.g:3295:2: rule__OrderByColumnFull__ColOrderIntAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderIntAssignment_0_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Alternatives_0"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAlternatives_1_0"
    // InternalSqlParser.g:3304:1: rule__OrderByColumnFull__DirectionAlternatives_1_0 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByColumnFull__DirectionAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3308:1: ( ( ASC ) | ( DESC ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==ASC) ) {
                alt15=1;
            }
            else if ( (LA15_0==DESC) ) {
                alt15=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalSqlParser.g:3309:1: ( ASC )
                    {
                    // InternalSqlParser.g:3309:1: ( ASC )
                    // InternalSqlParser.g:3310:1: ASC
                    {
                     before(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 
                    match(input,ASC,FOLLOW_2); 
                     after(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3317:6: ( DESC )
                    {
                    // InternalSqlParser.g:3317:6: ( DESC )
                    // InternalSqlParser.g:3318:1: DESC
                    {
                     before(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 
                    match(input,DESC,FOLLOW_2); 
                     after(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAlternatives_1_0"


    // $ANTLR start "rule__GroupByColumnFull__Alternatives"
    // InternalSqlParser.g:3330:1: rule__GroupByColumnFull__Alternatives : ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) );
    public final void rule__GroupByColumnFull__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3334:1: ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) )
            int alt16=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA16_1 = input.LA(2);

                if ( (LA16_1==EOF||LA16_1==FETCHFIRST||LA16_1==INTERSECT||LA16_1==ORDERBY||LA16_1==EXCEPT||LA16_1==HAVING||LA16_1==OFFSET||(LA16_1>=LIMIT && LA16_1<=MINUS)||LA16_1==UNION||LA16_1==RightParenthesis||LA16_1==Comma||LA16_1==FullStop) ) {
                    alt16=1;
                }
                else if ( (LA16_1==LeftParenthesis) ) {
                    alt16=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
                {
                alt16=1;
                }
                break;
            case RULE_UNSIGNED:
                {
                alt16=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalSqlParser.g:3335:1: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    {
                    // InternalSqlParser.g:3335:1: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    // InternalSqlParser.g:3336:1: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    {
                     before(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 
                    // InternalSqlParser.g:3337:1: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    // InternalSqlParser.g:3337:2: rule__GroupByColumnFull__ColGrByAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__ColGrByAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3341:6: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3341:6: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    // InternalSqlParser.g:3342:1: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    {
                     before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 
                    // InternalSqlParser.g:3343:1: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    // InternalSqlParser.g:3343:2: rule__GroupByColumnFull__GbFunctionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GbFunctionAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3347:6: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3347:6: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    // InternalSqlParser.g:3348:1: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    {
                     before(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 
                    // InternalSqlParser.g:3349:1: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    // InternalSqlParser.g:3349:2: rule__GroupByColumnFull__GrByIntAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GrByIntAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__Alternatives"
    // InternalSqlParser.g:3358:1: rule__ExpressionFragmentSecond__Alternatives : ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) );
    public final void rule__ExpressionFragmentSecond__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3362:1: ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==AND||LA17_0==OR) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_JRNPARAM) ) {
                alt17=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalSqlParser.g:3363:1: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    {
                    // InternalSqlParser.g:3363:1: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    // InternalSqlParser.g:3364:1: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    {
                     before(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 
                    // InternalSqlParser.g:3365:1: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    // InternalSqlParser.g:3365:2: rule__ExpressionFragmentSecond__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3369:6: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3369:6: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    // InternalSqlParser.g:3370:1: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    {
                     before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 
                    // InternalSqlParser.g:3371:1: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    // InternalSqlParser.g:3371:2: rule__ExpressionFragmentSecond__NotPrmAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__NotPrmAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"
    // InternalSqlParser.g:3380:1: rule__ExpressionFragmentSecond__CAlternatives_0_0_0 : ( ( AND ) | ( OR ) );
    public final void rule__ExpressionFragmentSecond__CAlternatives_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3384:1: ( ( AND ) | ( OR ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==AND) ) {
                alt18=1;
            }
            else if ( (LA18_0==OR) ) {
                alt18=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSqlParser.g:3385:1: ( AND )
                    {
                    // InternalSqlParser.g:3385:1: ( AND )
                    // InternalSqlParser.g:3386:1: AND
                    {
                     before(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 
                    match(input,AND,FOLLOW_2); 
                     after(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3393:6: ( OR )
                    {
                    // InternalSqlParser.g:3393:6: ( OR )
                    // InternalSqlParser.g:3394:1: OR
                    {
                     before(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 
                    match(input,OR,FOLLOW_2); 
                     after(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"


    // $ANTLR start "rule__ExpressionFragment__Alternatives"
    // InternalSqlParser.g:3406:1: rule__ExpressionFragment__Alternatives : ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) );
    public final void rule__ExpressionFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3410:1: ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) )
            int alt19=6;
            switch ( input.LA(1) ) {
            case NOT:
            case NOT_1:
                {
                alt19=1;
                }
                break;
            case LeftParenthesis:
                {
                int LA19_2 = input.LA(2);

                if ( (LA19_2==NOTEXISTS||LA19_2==EXTRACT||LA19_2==EXISTS||LA19_2==NOTIN_1||LA19_2==CAST||LA19_2==CASE||(LA19_2>=NOT && LA19_2<=NOT_1)||LA19_2==X||LA19_2==IN||LA19_2==LeftParenthesis||(LA19_2>=RULE_JRPARAM && LA19_2<=RULE_JRNPARAM)||(LA19_2>=RULE_UNSIGNED && LA19_2<=RULE_SIGNED_DOUBLE)||(LA19_2>=RULE_STRING_ && LA19_2<=RULE_ID)) ) {
                    alt19=1;
                }
                else if ( (LA19_2==SELECT) ) {
                    alt19=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 2, input);

                    throw nvae;
                }
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case RULE_JRPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt19=2;
                }
                break;
            case RULE_JRNPARAM:
                {
                int LA19_4 = input.LA(2);

                if ( (LA19_4==ISNOTNULL||LA19_4==NOTBETWEEN||LA19_4==NOTEXISTS||LA19_4==NOTLIKE||LA19_4==BETWEEN||LA19_4==ISNULL||LA19_4==EXISTS||LA19_4==NOTIN_1||LA19_4==LIKE||LA19_4==ExclamationMarkEqualsSign||(LA19_4>=LessThanSignEqualsSign && LA19_4<=GreaterThanSignEqualsSign)||LA19_4==IN||(LA19_4>=CircumflexAccentEqualsSign && LA19_4<=VerticalLineVerticalLine)||LA19_4==PlusSign||LA19_4==HyphenMinus||(LA19_4>=Solidus && LA19_4<=GreaterThanSign)||LA19_4==RULE_STAR) ) {
                    alt19=2;
                }
                else if ( (LA19_4==EOF||LA19_4==STRAIGHT_JOIN||LA19_4==FETCHFIRST||LA19_4==INTERSECT||LA19_4==GROUPBY||LA19_4==ORDERBY||LA19_4==NATURAL||LA19_4==EXCEPT||LA19_4==HAVING||LA19_4==OFFSET||LA19_4==CROSS||LA19_4==INNER||(LA19_4>=LIMIT && LA19_4<=MINUS)||(LA19_4>=RIGHT && LA19_4<=UNION)||LA19_4==WHERE||LA19_4==FULL||LA19_4==JOIN||LA19_4==LEFT||LA19_4==THEN||LA19_4==WHEN||LA19_4==AND||LA19_4==OR||LA19_4==RightParenthesis||LA19_4==Comma||LA19_4==RULE_JRNPARAM) ) {
                    alt19=4;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 4, input);

                    throw nvae;
                }
                }
                break;
            case X:
                {
                alt19=3;
                }
                break;
            case NOTIN_1:
            case IN:
                {
                alt19=5;
                }
                break;
            case NOTEXISTS:
            case EXISTS:
                {
                alt19=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalSqlParser.g:3411:1: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    {
                    // InternalSqlParser.g:3411:1: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    // InternalSqlParser.g:3412:1: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 
                    // InternalSqlParser.g:3413:1: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    // InternalSqlParser.g:3413:2: rule__ExpressionFragment__ExpgroupAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpgroupAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3417:6: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3417:6: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    // InternalSqlParser.g:3418:1: ( rule__ExpressionFragment__ExpAssignment_1 )
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 
                    // InternalSqlParser.g:3419:1: ( rule__ExpressionFragment__ExpAssignment_1 )
                    // InternalSqlParser.g:3419:2: rule__ExpressionFragment__ExpAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3423:6: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3423:6: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    // InternalSqlParser.g:3424:1: ( rule__ExpressionFragment__XexpAssignment_2 )
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 
                    // InternalSqlParser.g:3425:1: ( rule__ExpressionFragment__XexpAssignment_2 )
                    // InternalSqlParser.g:3425:2: rule__ExpressionFragment__XexpAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__XexpAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3429:6: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    {
                    // InternalSqlParser.g:3429:6: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    // InternalSqlParser.g:3430:1: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 
                    // InternalSqlParser.g:3431:1: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    // InternalSqlParser.g:3431:2: rule__ExpressionFragment__NotPrmAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__NotPrmAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3435:6: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    {
                    // InternalSqlParser.g:3435:6: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    // InternalSqlParser.g:3436:1: ( rule__ExpressionFragment__InAssignment_4 )
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 
                    // InternalSqlParser.g:3437:1: ( rule__ExpressionFragment__InAssignment_4 )
                    // InternalSqlParser.g:3437:2: rule__ExpressionFragment__InAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__InAssignment_4();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:3441:6: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    {
                    // InternalSqlParser.g:3441:6: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    // InternalSqlParser.g:3442:1: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 
                    // InternalSqlParser.g:3443:1: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    // InternalSqlParser.g:3443:2: rule__ExpressionFragment__ExistsAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExistsAssignment_5();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__Alternatives"


    // $ANTLR start "rule__ExpressionFragment__XexpAlternatives_2_0"
    // InternalSqlParser.g:3452:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );
    public final void rule__ExpressionFragment__XexpAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3456:1: ( ( ruleXExpression ) | ( ruleXExpression_ ) )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalSqlParser.g:3457:1: ( ruleXExpression )
                    {
                    // InternalSqlParser.g:3457:1: ( ruleXExpression )
                    // InternalSqlParser.g:3458:1: ruleXExpression
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;

                     after(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3463:6: ( ruleXExpression_ )
                    {
                    // InternalSqlParser.g:3463:6: ( ruleXExpression_ )
                    // InternalSqlParser.g:3464:1: ruleXExpression_
                    {
                     before(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 
                    pushFollow(FOLLOW_2);
                    ruleXExpression_();

                    state._fsp--;

                     after(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAlternatives_2_0"


    // $ANTLR start "rule__ExpressionGroup__IsnotAlternatives_1_0"
    // InternalSqlParser.g:3474:1: rule__ExpressionGroup__IsnotAlternatives_1_0 : ( ( NOT_1 ) | ( NOT ) );
    public final void rule__ExpressionGroup__IsnotAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3478:1: ( ( NOT_1 ) | ( NOT ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==NOT_1) ) {
                alt21=1;
            }
            else if ( (LA21_0==NOT) ) {
                alt21=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalSqlParser.g:3479:1: ( NOT_1 )
                    {
                    // InternalSqlParser.g:3479:1: ( NOT_1 )
                    // InternalSqlParser.g:3480:1: NOT_1
                    {
                     before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 
                    match(input,NOT_1,FOLLOW_2); 
                     after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3487:6: ( NOT )
                    {
                    // InternalSqlParser.g:3487:6: ( NOT )
                    // InternalSqlParser.g:3488:1: NOT
                    {
                     before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 
                    match(input,NOT,FOLLOW_2); 
                     after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAlternatives_1_0"


    // $ANTLR start "rule__Expression__Alternatives_1"
    // InternalSqlParser.g:3500:1: rule__Expression__Alternatives_1 : ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) );
    public final void rule__Expression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3504:1: ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) )
            int alt22=6;
            switch ( input.LA(1) ) {
            case ISNOTNULL:
            case ISNULL:
                {
                alt22=1;
                }
                break;
            case NOTIN_1:
            case IN:
                {
                alt22=2;
                }
                break;
            case NOTEXISTS:
            case EXISTS:
                {
                alt22=3;
                }
                break;
            case NOTBETWEEN:
            case BETWEEN:
                {
                alt22=4;
                }
                break;
            case NOTLIKE:
            case LIKE:
                {
                alt22=5;
                }
                break;
            case ExclamationMarkEqualsSign:
            case LessThanSignEqualsSign:
            case LessThanSignGreaterThanSign:
            case GreaterThanSignEqualsSign:
            case CircumflexAccentEqualsSign:
            case LessThanSign:
            case EqualsSign:
            case GreaterThanSign:
                {
                alt22=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSqlParser.g:3505:1: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    {
                    // InternalSqlParser.g:3505:1: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    // InternalSqlParser.g:3506:1: ( rule__Expression__IsnullAssignment_1_0 )
                    {
                     before(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 
                    // InternalSqlParser.g:3507:1: ( rule__Expression__IsnullAssignment_1_0 )
                    // InternalSqlParser.g:3507:2: rule__Expression__IsnullAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__IsnullAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3511:6: ( ( rule__Expression__InAssignment_1_1 ) )
                    {
                    // InternalSqlParser.g:3511:6: ( ( rule__Expression__InAssignment_1_1 ) )
                    // InternalSqlParser.g:3512:1: ( rule__Expression__InAssignment_1_1 )
                    {
                     before(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 
                    // InternalSqlParser.g:3513:1: ( rule__Expression__InAssignment_1_1 )
                    // InternalSqlParser.g:3513:2: rule__Expression__InAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__InAssignment_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3517:6: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    {
                    // InternalSqlParser.g:3517:6: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    // InternalSqlParser.g:3518:1: ( rule__Expression__ExistsAssignment_1_2 )
                    {
                     before(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 
                    // InternalSqlParser.g:3519:1: ( rule__Expression__ExistsAssignment_1_2 )
                    // InternalSqlParser.g:3519:2: rule__Expression__ExistsAssignment_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__ExistsAssignment_1_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3523:6: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    {
                    // InternalSqlParser.g:3523:6: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    // InternalSqlParser.g:3524:1: ( rule__Expression__BetweenAssignment_1_3 )
                    {
                     before(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 
                    // InternalSqlParser.g:3525:1: ( rule__Expression__BetweenAssignment_1_3 )
                    // InternalSqlParser.g:3525:2: rule__Expression__BetweenAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__BetweenAssignment_1_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3529:6: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    {
                    // InternalSqlParser.g:3529:6: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    // InternalSqlParser.g:3530:1: ( rule__Expression__LikeAssignment_1_4 )
                    {
                     before(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 
                    // InternalSqlParser.g:3531:1: ( rule__Expression__LikeAssignment_1_4 )
                    // InternalSqlParser.g:3531:2: rule__Expression__LikeAssignment_1_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__LikeAssignment_1_4();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:3535:6: ( ( rule__Expression__CompAssignment_1_5 ) )
                    {
                    // InternalSqlParser.g:3535:6: ( ( rule__Expression__CompAssignment_1_5 ) )
                    // InternalSqlParser.g:3536:1: ( rule__Expression__CompAssignment_1_5 )
                    {
                     before(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 
                    // InternalSqlParser.g:3537:1: ( rule__Expression__CompAssignment_1_5 )
                    // InternalSqlParser.g:3537:2: rule__Expression__CompAssignment_1_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__CompAssignment_1_5();

                    state._fsp--;


                    }

                     after(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Alternatives_1"


    // $ANTLR start "rule__Expression__IsnullAlternatives_1_0_0"
    // InternalSqlParser.g:3546:1: rule__Expression__IsnullAlternatives_1_0_0 : ( ( ISNULL ) | ( ISNOTNULL ) );
    public final void rule__Expression__IsnullAlternatives_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3550:1: ( ( ISNULL ) | ( ISNOTNULL ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==ISNULL) ) {
                alt23=1;
            }
            else if ( (LA23_0==ISNOTNULL) ) {
                alt23=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalSqlParser.g:3551:1: ( ISNULL )
                    {
                    // InternalSqlParser.g:3551:1: ( ISNULL )
                    // InternalSqlParser.g:3552:1: ISNULL
                    {
                     before(grammarAccess.getExpressionAccess().getIsnullISNULLKeyword_1_0_0_0()); 
                    match(input,ISNULL,FOLLOW_2); 
                     after(grammarAccess.getExpressionAccess().getIsnullISNULLKeyword_1_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3559:6: ( ISNOTNULL )
                    {
                    // InternalSqlParser.g:3559:6: ( ISNOTNULL )
                    // InternalSqlParser.g:3560:1: ISNOTNULL
                    {
                     before(grammarAccess.getExpressionAccess().getIsnullISNOTNULLKeyword_1_0_0_1()); 
                    match(input,ISNOTNULL,FOLLOW_2); 
                     after(grammarAccess.getExpressionAccess().getIsnullISNOTNULLKeyword_1_0_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__IsnullAlternatives_1_0_0"


    // $ANTLR start "rule__Comparison__OperatorAlternatives_0_0"
    // InternalSqlParser.g:3572:1: rule__Comparison__OperatorAlternatives_0_0 : ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) );
    public final void rule__Comparison__OperatorAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3576:1: ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) )
            int alt24=8;
            switch ( input.LA(1) ) {
            case GreaterThanSign:
                {
                alt24=1;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt24=2;
                }
                break;
            case LessThanSign:
                {
                alt24=3;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt24=4;
                }
                break;
            case EqualsSign:
                {
                alt24=5;
                }
                break;
            case LessThanSignGreaterThanSign:
                {
                alt24=6;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt24=7;
                }
                break;
            case CircumflexAccentEqualsSign:
                {
                alt24=8;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSqlParser.g:3577:1: ( GreaterThanSign )
                    {
                    // InternalSqlParser.g:3577:1: ( GreaterThanSign )
                    // InternalSqlParser.g:3578:1: GreaterThanSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 
                    match(input,GreaterThanSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3585:6: ( GreaterThanSignEqualsSign )
                    {
                    // InternalSqlParser.g:3585:6: ( GreaterThanSignEqualsSign )
                    // InternalSqlParser.g:3586:1: GreaterThanSignEqualsSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3593:6: ( LessThanSign )
                    {
                    // InternalSqlParser.g:3593:6: ( LessThanSign )
                    // InternalSqlParser.g:3594:1: LessThanSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 
                    match(input,LessThanSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3601:6: ( LessThanSignEqualsSign )
                    {
                    // InternalSqlParser.g:3601:6: ( LessThanSignEqualsSign )
                    // InternalSqlParser.g:3602:1: LessThanSignEqualsSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 
                    match(input,LessThanSignEqualsSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3609:6: ( EqualsSign )
                    {
                    // InternalSqlParser.g:3609:6: ( EqualsSign )
                    // InternalSqlParser.g:3610:1: EqualsSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 
                    match(input,EqualsSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:3617:6: ( LessThanSignGreaterThanSign )
                    {
                    // InternalSqlParser.g:3617:6: ( LessThanSignGreaterThanSign )
                    // InternalSqlParser.g:3618:1: LessThanSignGreaterThanSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalSqlParser.g:3625:6: ( ExclamationMarkEqualsSign )
                    {
                    // InternalSqlParser.g:3625:6: ( ExclamationMarkEqualsSign )
                    // InternalSqlParser.g:3626:1: ExclamationMarkEqualsSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 
                    match(input,ExclamationMarkEqualsSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 

                    }


                    }
                    break;
                case 8 :
                    // InternalSqlParser.g:3633:6: ( CircumflexAccentEqualsSign )
                    {
                    // InternalSqlParser.g:3633:6: ( CircumflexAccentEqualsSign )
                    // InternalSqlParser.g:3634:1: CircumflexAccentEqualsSign
                    {
                     before(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 
                    match(input,CircumflexAccentEqualsSign,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAlternatives_0_0"


    // $ANTLR start "rule__Comparison__SubOperatorAlternatives_1_0"
    // InternalSqlParser.g:3646:1: rule__Comparison__SubOperatorAlternatives_1_0 : ( ( ANY ) | ( ALL ) | ( SOME ) );
    public final void rule__Comparison__SubOperatorAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3650:1: ( ( ANY ) | ( ALL ) | ( SOME ) )
            int alt25=3;
            switch ( input.LA(1) ) {
            case ANY:
                {
                alt25=1;
                }
                break;
            case ALL:
                {
                alt25=2;
                }
                break;
            case SOME:
                {
                alt25=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalSqlParser.g:3651:1: ( ANY )
                    {
                    // InternalSqlParser.g:3651:1: ( ANY )
                    // InternalSqlParser.g:3652:1: ANY
                    {
                     before(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 
                    match(input,ANY,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3659:6: ( ALL )
                    {
                    // InternalSqlParser.g:3659:6: ( ALL )
                    // InternalSqlParser.g:3660:1: ALL
                    {
                     before(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 
                    match(input,ALL,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3667:6: ( SOME )
                    {
                    // InternalSqlParser.g:3667:6: ( SOME )
                    // InternalSqlParser.g:3668:1: SOME
                    {
                     before(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 
                    match(input,SOME,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAlternatives_1_0"


    // $ANTLR start "rule__Like__OpLikeAlternatives_0_0"
    // InternalSqlParser.g:3680:1: rule__Like__OpLikeAlternatives_0_0 : ( ( LIKE ) | ( NOTLIKE ) );
    public final void rule__Like__OpLikeAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3684:1: ( ( LIKE ) | ( NOTLIKE ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==LIKE) ) {
                alt26=1;
            }
            else if ( (LA26_0==NOTLIKE) ) {
                alt26=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalSqlParser.g:3685:1: ( LIKE )
                    {
                    // InternalSqlParser.g:3685:1: ( LIKE )
                    // InternalSqlParser.g:3686:1: LIKE
                    {
                     before(grammarAccess.getLikeAccess().getOpLikeLIKEKeyword_0_0_0()); 
                    match(input,LIKE,FOLLOW_2); 
                     after(grammarAccess.getLikeAccess().getOpLikeLIKEKeyword_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3693:6: ( NOTLIKE )
                    {
                    // InternalSqlParser.g:3693:6: ( NOTLIKE )
                    // InternalSqlParser.g:3694:1: NOTLIKE
                    {
                     before(grammarAccess.getLikeAccess().getOpLikeNOTLIKEKeyword_0_0_1()); 
                    match(input,NOTLIKE,FOLLOW_2); 
                     after(grammarAccess.getLikeAccess().getOpLikeNOTLIKEKeyword_0_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__OpLikeAlternatives_0_0"


    // $ANTLR start "rule__LikeOperand__Alternatives"
    // InternalSqlParser.g:3706:1: rule__LikeOperand__Alternatives : ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) );
    public final void rule__LikeOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3710:1: ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) )
            int alt27=4;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt27=1;
                }
                break;
            case RULE_ID:
                {
                alt27=2;
                }
                break;
            case CAST:
                {
                alt27=3;
                }
                break;
            case RULE_JRPARAM:
                {
                alt27=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalSqlParser.g:3711:1: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    {
                    // InternalSqlParser.g:3711:1: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    // InternalSqlParser.g:3712:1: ( rule__LikeOperand__Op2Assignment_0 )
                    {
                     before(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 
                    // InternalSqlParser.g:3713:1: ( rule__LikeOperand__Op2Assignment_0 )
                    // InternalSqlParser.g:3713:2: rule__LikeOperand__Op2Assignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Op2Assignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3717:6: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    {
                    // InternalSqlParser.g:3717:6: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    // InternalSqlParser.g:3718:1: ( rule__LikeOperand__Fop2Assignment_1 )
                    {
                     before(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 
                    // InternalSqlParser.g:3719:1: ( rule__LikeOperand__Fop2Assignment_1 )
                    // InternalSqlParser.g:3719:2: rule__LikeOperand__Fop2Assignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Fop2Assignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3723:6: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3723:6: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    // InternalSqlParser.g:3724:1: ( rule__LikeOperand__FcastAssignment_2 )
                    {
                     before(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 
                    // InternalSqlParser.g:3725:1: ( rule__LikeOperand__FcastAssignment_2 )
                    // InternalSqlParser.g:3725:2: rule__LikeOperand__FcastAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FcastAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3729:6: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    {
                    // InternalSqlParser.g:3729:6: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    // InternalSqlParser.g:3730:1: ( rule__LikeOperand__FparamAssignment_3 )
                    {
                     before(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 
                    // InternalSqlParser.g:3731:1: ( rule__LikeOperand__FparamAssignment_3 )
                    // InternalSqlParser.g:3731:2: rule__LikeOperand__FparamAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FparamAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Alternatives"


    // $ANTLR start "rule__Between__OpBetweenAlternatives_0_0"
    // InternalSqlParser.g:3740:1: rule__Between__OpBetweenAlternatives_0_0 : ( ( BETWEEN ) | ( NOTBETWEEN ) );
    public final void rule__Between__OpBetweenAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3744:1: ( ( BETWEEN ) | ( NOTBETWEEN ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==BETWEEN) ) {
                alt28=1;
            }
            else if ( (LA28_0==NOTBETWEEN) ) {
                alt28=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalSqlParser.g:3745:1: ( BETWEEN )
                    {
                    // InternalSqlParser.g:3745:1: ( BETWEEN )
                    // InternalSqlParser.g:3746:1: BETWEEN
                    {
                     before(grammarAccess.getBetweenAccess().getOpBetweenBETWEENKeyword_0_0_0()); 
                    match(input,BETWEEN,FOLLOW_2); 
                     after(grammarAccess.getBetweenAccess().getOpBetweenBETWEENKeyword_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3753:6: ( NOTBETWEEN )
                    {
                    // InternalSqlParser.g:3753:6: ( NOTBETWEEN )
                    // InternalSqlParser.g:3754:1: NOTBETWEEN
                    {
                     before(grammarAccess.getBetweenAccess().getOpBetweenNOTBETWEENKeyword_0_0_1()); 
                    match(input,NOTBETWEEN,FOLLOW_2); 
                     after(grammarAccess.getBetweenAccess().getOpBetweenNOTBETWEENKeyword_0_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__OpBetweenAlternatives_0_0"


    // $ANTLR start "rule__InOperator__OpAlternatives_1_0"
    // InternalSqlParser.g:3766:1: rule__InOperator__OpAlternatives_1_0 : ( ( NOTIN_1 ) | ( IN ) );
    public final void rule__InOperator__OpAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3770:1: ( ( NOTIN_1 ) | ( IN ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==NOTIN_1) ) {
                alt29=1;
            }
            else if ( (LA29_0==IN) ) {
                alt29=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalSqlParser.g:3771:1: ( NOTIN_1 )
                    {
                    // InternalSqlParser.g:3771:1: ( NOTIN_1 )
                    // InternalSqlParser.g:3772:1: NOTIN_1
                    {
                     before(grammarAccess.getInOperatorAccess().getOpNOTINKeyword_1_0_0()); 
                    match(input,NOTIN_1,FOLLOW_2); 
                     after(grammarAccess.getInOperatorAccess().getOpNOTINKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3779:6: ( IN )
                    {
                    // InternalSqlParser.g:3779:6: ( IN )
                    // InternalSqlParser.g:3780:1: IN
                    {
                     before(grammarAccess.getInOperatorAccess().getOpINKeyword_1_0_1()); 
                    match(input,IN,FOLLOW_2); 
                     after(grammarAccess.getInOperatorAccess().getOpINKeyword_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpAlternatives_1_0"


    // $ANTLR start "rule__InOperator__Alternatives_2"
    // InternalSqlParser.g:3792:1: rule__InOperator__Alternatives_2 : ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) );
    public final void rule__InOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3796:1: ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==LeftParenthesis) ) {
                int LA30_1 = input.LA(2);

                if ( ((LA30_1>=RULE_SIGNED_DOUBLE && LA30_1<=RULE_STRING_)) ) {
                    alt30=2;
                }
                else if ( (LA30_1==SELECT) ) {
                    alt30=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalSqlParser.g:3797:1: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:3797:1: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    // InternalSqlParser.g:3798:1: ( rule__InOperator__SubqueryAssignment_2_0 )
                    {
                     before(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 
                    // InternalSqlParser.g:3799:1: ( rule__InOperator__SubqueryAssignment_2_0 )
                    // InternalSqlParser.g:3799:2: rule__InOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__SubqueryAssignment_2_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3803:6: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:3803:6: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    // InternalSqlParser.g:3804:1: ( rule__InOperator__OpListAssignment_2_1 )
                    {
                     before(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 
                    // InternalSqlParser.g:3805:1: ( rule__InOperator__OpListAssignment_2_1 )
                    // InternalSqlParser.g:3805:2: rule__InOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__OpListAssignment_2_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Alternatives_2"


    // $ANTLR start "rule__ExistsOperator__OpAlternatives_1_0"
    // InternalSqlParser.g:3814:1: rule__ExistsOperator__OpAlternatives_1_0 : ( ( NOTEXISTS ) | ( EXISTS ) );
    public final void rule__ExistsOperator__OpAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3818:1: ( ( NOTEXISTS ) | ( EXISTS ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==NOTEXISTS) ) {
                alt31=1;
            }
            else if ( (LA31_0==EXISTS) ) {
                alt31=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalSqlParser.g:3819:1: ( NOTEXISTS )
                    {
                    // InternalSqlParser.g:3819:1: ( NOTEXISTS )
                    // InternalSqlParser.g:3820:1: NOTEXISTS
                    {
                     before(grammarAccess.getExistsOperatorAccess().getOpNOTEXISTSKeyword_1_0_0()); 
                    match(input,NOTEXISTS,FOLLOW_2); 
                     after(grammarAccess.getExistsOperatorAccess().getOpNOTEXISTSKeyword_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3827:6: ( EXISTS )
                    {
                    // InternalSqlParser.g:3827:6: ( EXISTS )
                    // InternalSqlParser.g:3828:1: EXISTS
                    {
                     before(grammarAccess.getExistsOperatorAccess().getOpEXISTSKeyword_1_0_1()); 
                    match(input,EXISTS,FOLLOW_2); 
                     after(grammarAccess.getExistsOperatorAccess().getOpEXISTSKeyword_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpAlternatives_1_0"


    // $ANTLR start "rule__ExistsOperator__Alternatives_2"
    // InternalSqlParser.g:3840:1: rule__ExistsOperator__Alternatives_2 : ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) );
    public final void rule__ExistsOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3844:1: ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==LeftParenthesis) ) {
                int LA32_1 = input.LA(2);

                if ( (LA32_1==SELECT) ) {
                    alt32=1;
                }
                else if ( ((LA32_1>=RULE_SIGNED_DOUBLE && LA32_1<=RULE_STRING_)) ) {
                    alt32=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalSqlParser.g:3845:1: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:3845:1: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    // InternalSqlParser.g:3846:1: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    {
                     before(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 
                    // InternalSqlParser.g:3847:1: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    // InternalSqlParser.g:3847:2: rule__ExistsOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__SubqueryAssignment_2_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3851:6: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:3851:6: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    // InternalSqlParser.g:3852:1: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    {
                     before(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 
                    // InternalSqlParser.g:3853:1: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    // InternalSqlParser.g:3853:2: rule__ExistsOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__OpListAssignment_2_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Alternatives_2"


    // $ANTLR start "rule__OperandGroup__Alternatives"
    // InternalSqlParser.g:3862:1: rule__OperandGroup__Alternatives : ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) );
    public final void rule__OperandGroup__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3866:1: ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==EXTRACT||LA33_0==CAST||LA33_0==CASE||(LA33_0>=RULE_JRPARAM && LA33_0<=RULE_JRNPARAM)||(LA33_0>=RULE_UNSIGNED && LA33_0<=RULE_SIGNED_DOUBLE)||(LA33_0>=RULE_STRING_ && LA33_0<=RULE_ID)) ) {
                alt33=1;
            }
            else if ( (LA33_0==LeftParenthesis) ) {
                int LA33_2 = input.LA(2);

                if ( (LA33_2==SELECT) ) {
                    alt33=1;
                }
                else if ( (LA33_2==EXTRACT||LA33_2==CAST||LA33_2==CASE||LA33_2==LeftParenthesis||(LA33_2>=RULE_JRPARAM && LA33_2<=RULE_JRNPARAM)||(LA33_2>=RULE_UNSIGNED && LA33_2<=RULE_SIGNED_DOUBLE)||(LA33_2>=RULE_STRING_ && LA33_2<=RULE_ID)) ) {
                    alt33=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 33, 2, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalSqlParser.g:3867:1: ( ruleOperand )
                    {
                    // InternalSqlParser.g:3867:1: ( ruleOperand )
                    // InternalSqlParser.g:3868:1: ruleOperand
                    {
                     before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;

                     after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3873:6: ( ( rule__OperandGroup__Group_1__0 ) )
                    {
                    // InternalSqlParser.g:3873:6: ( ( rule__OperandGroup__Group_1__0 ) )
                    // InternalSqlParser.g:3874:1: ( rule__OperandGroup__Group_1__0 )
                    {
                     before(grammarAccess.getOperandGroupAccess().getGroup_1()); 
                    // InternalSqlParser.g:3875:1: ( rule__OperandGroup__Group_1__0 )
                    // InternalSqlParser.g:3875:2: rule__OperandGroup__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandGroup__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandGroupAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Alternatives"


    // $ANTLR start "rule__Operand__Alternatives_1_0"
    // InternalSqlParser.g:3884:1: rule__Operand__Alternatives_1_0 : ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) );
    public final void rule__Operand__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3888:1: ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) )
            int alt34=5;
            switch ( input.LA(1) ) {
            case PlusSign:
                {
                alt34=1;
                }
                break;
            case HyphenMinus:
                {
                alt34=2;
                }
                break;
            case VerticalLineVerticalLine:
                {
                alt34=3;
                }
                break;
            case RULE_STAR:
                {
                alt34=4;
                }
                break;
            case Solidus:
                {
                alt34=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalSqlParser.g:3889:1: ( ( rule__Operand__Group_1_0_0__0 ) )
                    {
                    // InternalSqlParser.g:3889:1: ( ( rule__Operand__Group_1_0_0__0 ) )
                    // InternalSqlParser.g:3890:1: ( rule__Operand__Group_1_0_0__0 )
                    {
                     before(grammarAccess.getOperandAccess().getGroup_1_0_0()); 
                    // InternalSqlParser.g:3891:1: ( rule__Operand__Group_1_0_0__0 )
                    // InternalSqlParser.g:3891:2: rule__Operand__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandAccess().getGroup_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3895:6: ( ( rule__Operand__Group_1_0_1__0 ) )
                    {
                    // InternalSqlParser.g:3895:6: ( ( rule__Operand__Group_1_0_1__0 ) )
                    // InternalSqlParser.g:3896:1: ( rule__Operand__Group_1_0_1__0 )
                    {
                     before(grammarAccess.getOperandAccess().getGroup_1_0_1()); 
                    // InternalSqlParser.g:3897:1: ( rule__Operand__Group_1_0_1__0 )
                    // InternalSqlParser.g:3897:2: rule__Operand__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandAccess().getGroup_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3901:6: ( ( rule__Operand__Group_1_0_2__0 ) )
                    {
                    // InternalSqlParser.g:3901:6: ( ( rule__Operand__Group_1_0_2__0 ) )
                    // InternalSqlParser.g:3902:1: ( rule__Operand__Group_1_0_2__0 )
                    {
                     before(grammarAccess.getOperandAccess().getGroup_1_0_2()); 
                    // InternalSqlParser.g:3903:1: ( rule__Operand__Group_1_0_2__0 )
                    // InternalSqlParser.g:3903:2: rule__Operand__Group_1_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandAccess().getGroup_1_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3907:6: ( ( rule__Operand__Group_1_0_3__0 ) )
                    {
                    // InternalSqlParser.g:3907:6: ( ( rule__Operand__Group_1_0_3__0 ) )
                    // InternalSqlParser.g:3908:1: ( rule__Operand__Group_1_0_3__0 )
                    {
                     before(grammarAccess.getOperandAccess().getGroup_1_0_3()); 
                    // InternalSqlParser.g:3909:1: ( rule__Operand__Group_1_0_3__0 )
                    // InternalSqlParser.g:3909:2: rule__Operand__Group_1_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandAccess().getGroup_1_0_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3913:6: ( ( rule__Operand__Group_1_0_4__0 ) )
                    {
                    // InternalSqlParser.g:3913:6: ( ( rule__Operand__Group_1_0_4__0 ) )
                    // InternalSqlParser.g:3914:1: ( rule__Operand__Group_1_0_4__0 )
                    {
                     before(grammarAccess.getOperandAccess().getGroup_1_0_4()); 
                    // InternalSqlParser.g:3915:1: ( rule__Operand__Group_1_0_4__0 )
                    // InternalSqlParser.g:3915:2: rule__Operand__Group_1_0_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandAccess().getGroup_1_0_4()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Alternatives_1_0"


    // $ANTLR start "rule__OperandFragment__Alternatives"
    // InternalSqlParser.g:3924:1: rule__OperandFragment__Alternatives : ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) );
    public final void rule__OperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3928:1: ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) )
            int alt35=7;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA35_1 = input.LA(2);

                if ( (LA35_1==EOF||LA35_1==ORDERSIBLINGSBY||LA35_1==STRAIGHT_JOIN||LA35_1==FETCHFIRST||LA35_1==ISNOTNULL||LA35_1==NOTBETWEEN||LA35_1==NOTEXISTS||(LA35_1>=KW_FOLLOWING && LA35_1<=PRECEDING)||(LA35_1>=GROUPBY && LA35_1<=NOTLIKE)||LA35_1==ORDERBY||LA35_1==BETWEEN||(LA35_1>=ISNULL && LA35_1<=NATURAL)||(LA35_1>=EXCEPT && LA35_1<=HAVING)||(LA35_1>=NOTIN_1 && LA35_1<=OFFSET)||LA35_1==CROSS||LA35_1==INNER||(LA35_1>=LIMIT && LA35_1<=MINUS)||LA35_1==NULLS||(LA35_1>=RANGE && LA35_1<=UNION)||LA35_1==WHERE||(LA35_1>=DESC && LA35_1<=FULL)||LA35_1==JOIN||LA35_1==LEFT||LA35_1==LIKE||LA35_1==ROWS||LA35_1==THEN||LA35_1==WHEN||LA35_1==LeftParenthesisPlusSignRightParenthesis||LA35_1==AND||LA35_1==ASC||LA35_1==END||LA35_1==ExclamationMarkEqualsSign||(LA35_1>=LessThanSignEqualsSign && LA35_1<=IN)||(LA35_1>=OR && LA35_1<=VerticalLineVerticalLine)||(LA35_1>=RightParenthesis && LA35_1<=GreaterThanSign)||(LA35_1>=VerticalLine && LA35_1<=RightCurlyBracket)||(LA35_1>=RULE_JRNPARAM && LA35_1<=RULE_STAR)||(LA35_1>=RULE_STRING && LA35_1<=RULE_ID)) ) {
                    alt35=1;
                }
                else if ( (LA35_1==LeftParenthesis) ) {
                    alt35=6;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
                {
                alt35=1;
                }
                break;
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt35=2;
                }
                break;
            case LeftParenthesis:
                {
                alt35=3;
                }
                break;
            case CAST:
                {
                alt35=4;
                }
                break;
            case EXTRACT:
                {
                alt35=5;
                }
                break;
            case CASE:
                {
                alt35=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }

            switch (alt35) {
                case 1 :
                    // InternalSqlParser.g:3929:1: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    {
                    // InternalSqlParser.g:3929:1: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    // InternalSqlParser.g:3930:1: ( rule__OperandFragment__ColumnAssignment_0 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
                    // InternalSqlParser.g:3931:1: ( rule__OperandFragment__ColumnAssignment_0 )
                    // InternalSqlParser.g:3931:2: rule__OperandFragment__ColumnAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__ColumnAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3935:6: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3935:6: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    // InternalSqlParser.g:3936:1: ( rule__OperandFragment__XopAssignment_1 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 
                    // InternalSqlParser.g:3937:1: ( rule__OperandFragment__XopAssignment_1 )
                    // InternalSqlParser.g:3937:2: rule__OperandFragment__XopAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__XopAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3941:6: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3941:6: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    // InternalSqlParser.g:3942:1: ( rule__OperandFragment__SubqAssignment_2 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 
                    // InternalSqlParser.g:3943:1: ( rule__OperandFragment__SubqAssignment_2 )
                    // InternalSqlParser.g:3943:2: rule__OperandFragment__SubqAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SubqAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3947:6: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    {
                    // InternalSqlParser.g:3947:6: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    // InternalSqlParser.g:3948:1: ( rule__OperandFragment__FcastAssignment_3 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 
                    // InternalSqlParser.g:3949:1: ( rule__OperandFragment__FcastAssignment_3 )
                    // InternalSqlParser.g:3949:2: rule__OperandFragment__FcastAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FcastAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3953:6: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    {
                    // InternalSqlParser.g:3953:6: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    // InternalSqlParser.g:3954:1: ( rule__OperandFragment__FextAssignment_4 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 
                    // InternalSqlParser.g:3955:1: ( rule__OperandFragment__FextAssignment_4 )
                    // InternalSqlParser.g:3955:2: rule__OperandFragment__FextAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FextAssignment_4();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:3959:6: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    {
                    // InternalSqlParser.g:3959:6: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    // InternalSqlParser.g:3960:1: ( rule__OperandFragment__FuncAssignment_5 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
                    // InternalSqlParser.g:3961:1: ( rule__OperandFragment__FuncAssignment_5 )
                    // InternalSqlParser.g:3961:2: rule__OperandFragment__FuncAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FuncAssignment_5();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalSqlParser.g:3965:6: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    {
                    // InternalSqlParser.g:3965:6: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    // InternalSqlParser.g:3966:1: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    {
                     before(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 
                    // InternalSqlParser.g:3967:1: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    // InternalSqlParser.g:3967:2: rule__OperandFragment__SqlcaseAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SqlcaseAssignment_6();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__Alternatives"


    // $ANTLR start "rule__OperandFunction__Alternatives_2"
    // InternalSqlParser.g:3976:1: rule__OperandFunction__Alternatives_2 : ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) );
    public final void rule__OperandFunction__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3980:1: ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_STAR) ) {
                alt36=1;
            }
            else if ( (LA36_0==DISTINCT||LA36_0==EXTRACT||LA36_0==CAST||LA36_0==CASE||LA36_0==ALL||LA36_0==LeftParenthesis||(LA36_0>=RULE_JRPARAM && LA36_0<=RULE_JRNPARAM)||(LA36_0>=RULE_UNSIGNED && LA36_0<=RULE_SIGNED_DOUBLE)||(LA36_0>=RULE_STRING_ && LA36_0<=RULE_ID)) ) {
                alt36=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalSqlParser.g:3981:1: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:3981:1: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    // InternalSqlParser.g:3982:1: ( rule__OperandFunction__StarAssignment_2_0 )
                    {
                     before(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 
                    // InternalSqlParser.g:3983:1: ( rule__OperandFunction__StarAssignment_2_0 )
                    // InternalSqlParser.g:3983:2: rule__OperandFunction__StarAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__StarAssignment_2_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3987:6: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:3987:6: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    // InternalSqlParser.g:3988:1: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    {
                     before(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 
                    // InternalSqlParser.g:3989:1: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    // InternalSqlParser.g:3989:2: rule__OperandFunction__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__ArgsAssignment_2_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Alternatives_2"


    // $ANTLR start "rule__WindowingClause__Alternatives_0"
    // InternalSqlParser.g:3998:1: rule__WindowingClause__Alternatives_0 : ( ( ROWS ) | ( RANGE ) );
    public final void rule__WindowingClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4002:1: ( ( ROWS ) | ( RANGE ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==ROWS) ) {
                alt37=1;
            }
            else if ( (LA37_0==RANGE) ) {
                alt37=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalSqlParser.g:4003:1: ( ROWS )
                    {
                    // InternalSqlParser.g:4003:1: ( ROWS )
                    // InternalSqlParser.g:4004:1: ROWS
                    {
                     before(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 
                    match(input,ROWS,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4011:6: ( RANGE )
                    {
                    // InternalSqlParser.g:4011:6: ( RANGE )
                    // InternalSqlParser.g:4012:1: RANGE
                    {
                     before(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 
                    match(input,RANGE,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_0"


    // $ANTLR start "rule__WindowingClause__Alternatives_1"
    // InternalSqlParser.g:4024:1: rule__WindowingClause__Alternatives_1 : ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) );
    public final void rule__WindowingClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4028:1: ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==BETWEEN) ) {
                alt38=1;
            }
            else if ( (LA38_0==UNBOUNDEDPRECEDING||LA38_0==CURRENTROW||LA38_0==EXTRACT||LA38_0==CAST||LA38_0==CASE||LA38_0==LeftParenthesis||(LA38_0>=RULE_JRPARAM && LA38_0<=RULE_JRNPARAM)||(LA38_0>=RULE_UNSIGNED && LA38_0<=RULE_SIGNED_DOUBLE)||(LA38_0>=RULE_STRING_ && LA38_0<=RULE_ID)) ) {
                alt38=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalSqlParser.g:4029:1: ( ruleWindowingClauseBetween )
                    {
                    // InternalSqlParser.g:4029:1: ( ruleWindowingClauseBetween )
                    // InternalSqlParser.g:4030:1: ruleWindowingClauseBetween
                    {
                     before(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseBetween();

                    state._fsp--;

                     after(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4035:6: ( ruleWindowingClauseOperandPreceding )
                    {
                    // InternalSqlParser.g:4035:6: ( ruleWindowingClauseOperandPreceding )
                    // InternalSqlParser.g:4036:1: ruleWindowingClauseOperandPreceding
                    {
                     before(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseOperandPreceding();

                    state._fsp--;

                     after(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1"
    // InternalSqlParser.g:4046:1: rule__WindowingClauseOperandFollowing__Alternatives_1 : ( ( UNBOUNDEDFOLLOWING ) | ( CURRENTROW ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4050:1: ( ( UNBOUNDEDFOLLOWING ) | ( CURRENTROW ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) )
            int alt39=3;
            switch ( input.LA(1) ) {
            case UNBOUNDEDFOLLOWING:
                {
                alt39=1;
                }
                break;
            case CURRENTROW:
                {
                alt39=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt39=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalSqlParser.g:4051:1: ( UNBOUNDEDFOLLOWING )
                    {
                    // InternalSqlParser.g:4051:1: ( UNBOUNDEDFOLLOWING )
                    // InternalSqlParser.g:4052:1: UNBOUNDEDFOLLOWING
                    {
                     before(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDFOLLOWINGKeyword_1_0()); 
                    match(input,UNBOUNDEDFOLLOWING,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDFOLLOWINGKeyword_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4059:6: ( CURRENTROW )
                    {
                    // InternalSqlParser.g:4059:6: ( CURRENTROW )
                    // InternalSqlParser.g:4060:1: CURRENTROW
                    {
                     before(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTROWKeyword_1_1()); 
                    match(input,CURRENTROW,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTROWKeyword_1_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4067:6: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    {
                    // InternalSqlParser.g:4067:6: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    // InternalSqlParser.g:4068:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    {
                     before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 
                    // InternalSqlParser.g:4069:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    // InternalSqlParser.g:4069:2: rule__WindowingClauseOperandFollowing__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"
    // InternalSqlParser.g:4078:1: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4082:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==PRECEDING) ) {
                alt40=1;
            }
            else if ( (LA40_0==KW_FOLLOWING) ) {
                alt40=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalSqlParser.g:4083:1: ( PRECEDING )
                    {
                    // InternalSqlParser.g:4083:1: ( PRECEDING )
                    // InternalSqlParser.g:4084:1: PRECEDING
                    {
                     before(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    match(input,PRECEDING,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4091:6: ( KW_FOLLOWING )
                    {
                    // InternalSqlParser.g:4091:6: ( KW_FOLLOWING )
                    // InternalSqlParser.g:4092:1: KW_FOLLOWING
                    {
                     before(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    match(input,KW_FOLLOWING,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1"
    // InternalSqlParser.g:4104:1: rule__WindowingClauseOperandPreceding__Alternatives_1 : ( ( UNBOUNDEDPRECEDING ) | ( CURRENTROW ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4108:1: ( ( UNBOUNDEDPRECEDING ) | ( CURRENTROW ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) )
            int alt41=3;
            switch ( input.LA(1) ) {
            case UNBOUNDEDPRECEDING:
                {
                alt41=1;
                }
                break;
            case CURRENTROW:
                {
                alt41=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt41=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }

            switch (alt41) {
                case 1 :
                    // InternalSqlParser.g:4109:1: ( UNBOUNDEDPRECEDING )
                    {
                    // InternalSqlParser.g:4109:1: ( UNBOUNDEDPRECEDING )
                    // InternalSqlParser.g:4110:1: UNBOUNDEDPRECEDING
                    {
                     before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDPRECEDINGKeyword_1_0()); 
                    match(input,UNBOUNDEDPRECEDING,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDPRECEDINGKeyword_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4117:6: ( CURRENTROW )
                    {
                    // InternalSqlParser.g:4117:6: ( CURRENTROW )
                    // InternalSqlParser.g:4118:1: CURRENTROW
                    {
                     before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTROWKeyword_1_1()); 
                    match(input,CURRENTROW,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTROWKeyword_1_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4125:6: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    {
                    // InternalSqlParser.g:4125:6: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    // InternalSqlParser.g:4126:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    {
                     before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 
                    // InternalSqlParser.g:4127:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    // InternalSqlParser.g:4127:2: rule__WindowingClauseOperandPreceding__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"
    // InternalSqlParser.g:4136:1: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4140:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==PRECEDING) ) {
                alt42=1;
            }
            else if ( (LA42_0==KW_FOLLOWING) ) {
                alt42=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalSqlParser.g:4141:1: ( PRECEDING )
                    {
                    // InternalSqlParser.g:4141:1: ( PRECEDING )
                    // InternalSqlParser.g:4142:1: PRECEDING
                    {
                     before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    match(input,PRECEDING,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4149:6: ( KW_FOLLOWING )
                    {
                    // InternalSqlParser.g:4149:6: ( KW_FOLLOWING )
                    // InternalSqlParser.g:4150:1: KW_FOLLOWING
                    {
                     before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    match(input,KW_FOLLOWING,FOLLOW_2); 
                     after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"


    // $ANTLR start "rule__OrderByClause__Alternatives_0"
    // InternalSqlParser.g:4162:1: rule__OrderByClause__Alternatives_0 : ( ( ORDERBY ) | ( ORDERSIBLINGSBY ) );
    public final void rule__OrderByClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4166:1: ( ( ORDERBY ) | ( ORDERSIBLINGSBY ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==ORDERBY) ) {
                alt43=1;
            }
            else if ( (LA43_0==ORDERSIBLINGSBY) ) {
                alt43=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalSqlParser.g:4167:1: ( ORDERBY )
                    {
                    // InternalSqlParser.g:4167:1: ( ORDERBY )
                    // InternalSqlParser.g:4168:1: ORDERBY
                    {
                     before(grammarAccess.getOrderByClauseAccess().getORDERBYKeyword_0_0()); 
                    match(input,ORDERBY,FOLLOW_2); 
                     after(grammarAccess.getOrderByClauseAccess().getORDERBYKeyword_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4175:6: ( ORDERSIBLINGSBY )
                    {
                    // InternalSqlParser.g:4175:6: ( ORDERSIBLINGSBY )
                    // InternalSqlParser.g:4176:1: ORDERSIBLINGSBY
                    {
                     before(grammarAccess.getOrderByClauseAccess().getORDERSIBLINGSBYKeyword_0_1()); 
                    match(input,ORDERSIBLINGSBY,FOLLOW_2); 
                     after(grammarAccess.getOrderByClauseAccess().getORDERSIBLINGSBYKeyword_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Alternatives_0"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_1"
    // InternalSqlParser.g:4188:1: rule__OrderByClauseArg__Alternatives_1 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByClauseArg__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4192:1: ( ( ASC ) | ( DESC ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==ASC) ) {
                alt44=1;
            }
            else if ( (LA44_0==DESC) ) {
                alt44=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalSqlParser.g:4193:1: ( ASC )
                    {
                    // InternalSqlParser.g:4193:1: ( ASC )
                    // InternalSqlParser.g:4194:1: ASC
                    {
                     before(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 
                    match(input,ASC,FOLLOW_2); 
                     after(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4201:6: ( DESC )
                    {
                    // InternalSqlParser.g:4201:6: ( DESC )
                    // InternalSqlParser.g:4202:1: DESC
                    {
                     before(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 
                    match(input,DESC,FOLLOW_2); 
                     after(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_1"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_2_1"
    // InternalSqlParser.g:4214:1: rule__OrderByClauseArg__Alternatives_2_1 : ( ( FIRST ) | ( LAST ) );
    public final void rule__OrderByClauseArg__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4218:1: ( ( FIRST ) | ( LAST ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==FIRST) ) {
                alt45=1;
            }
            else if ( (LA45_0==LAST) ) {
                alt45=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalSqlParser.g:4219:1: ( FIRST )
                    {
                    // InternalSqlParser.g:4219:1: ( FIRST )
                    // InternalSqlParser.g:4220:1: FIRST
                    {
                     before(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 
                    match(input,FIRST,FOLLOW_2); 
                     after(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4227:6: ( LAST )
                    {
                    // InternalSqlParser.g:4227:6: ( LAST )
                    // InternalSqlParser.g:4228:1: LAST
                    {
                     before(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 
                    match(input,LAST,FOLLOW_2); 
                     after(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_2_1"


    // $ANTLR start "rule__QueryPartitionClause__Alternatives_1"
    // InternalSqlParser.g:4240:1: rule__QueryPartitionClause__Alternatives_1 : ( ( ( rule__QueryPartitionClause__ArgsAssignment_1_0 ) ) | ( ( rule__QueryPartitionClause__Group_1_1__0 ) ) );
    public final void rule__QueryPartitionClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4244:1: ( ( ( rule__QueryPartitionClause__ArgsAssignment_1_0 ) ) | ( ( rule__QueryPartitionClause__Group_1_1__0 ) ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==EXTRACT||LA46_0==CAST||LA46_0==CASE||(LA46_0>=RULE_JRPARAM && LA46_0<=RULE_JRNPARAM)||(LA46_0>=RULE_UNSIGNED && LA46_0<=RULE_SIGNED_DOUBLE)||(LA46_0>=RULE_STRING_ && LA46_0<=RULE_ID)) ) {
                alt46=1;
            }
            else if ( (LA46_0==LeftParenthesis) ) {
                int LA46_2 = input.LA(2);

                if ( (LA46_2==SELECT) ) {
                    alt46=1;
                }
                else if ( (LA46_2==EXTRACT||LA46_2==CAST||LA46_2==CASE||LA46_2==LeftParenthesis||(LA46_2>=RULE_JRPARAM && LA46_2<=RULE_JRNPARAM)||(LA46_2>=RULE_UNSIGNED && LA46_2<=RULE_SIGNED_DOUBLE)||(LA46_2>=RULE_STRING_ && LA46_2<=RULE_ID)) ) {
                    alt46=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 2, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalSqlParser.g:4245:1: ( ( rule__QueryPartitionClause__ArgsAssignment_1_0 ) )
                    {
                    // InternalSqlParser.g:4245:1: ( ( rule__QueryPartitionClause__ArgsAssignment_1_0 ) )
                    // InternalSqlParser.g:4246:1: ( rule__QueryPartitionClause__ArgsAssignment_1_0 )
                    {
                     before(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_1_0()); 
                    // InternalSqlParser.g:4247:1: ( rule__QueryPartitionClause__ArgsAssignment_1_0 )
                    // InternalSqlParser.g:4247:2: rule__QueryPartitionClause__ArgsAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__ArgsAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4251:6: ( ( rule__QueryPartitionClause__Group_1_1__0 ) )
                    {
                    // InternalSqlParser.g:4251:6: ( ( rule__QueryPartitionClause__Group_1_1__0 ) )
                    // InternalSqlParser.g:4252:1: ( rule__QueryPartitionClause__Group_1_1__0 )
                    {
                     before(grammarAccess.getQueryPartitionClauseAccess().getGroup_1_1()); 
                    // InternalSqlParser.g:4253:1: ( rule__QueryPartitionClause__Group_1_1__0 )
                    // InternalSqlParser.g:4253:2: rule__QueryPartitionClause__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getQueryPartitionClauseAccess().getGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Alternatives_1"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAlternatives_0"
    // InternalSqlParser.g:4262:1: rule__OpFunctionArgOperand__OpAlternatives_0 : ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) );
    public final void rule__OpFunctionArgOperand__OpAlternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4266:1: ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==DISTINCT||LA47_0==ALL) ) {
                alt47=1;
            }
            else if ( (LA47_0==EXTRACT||LA47_0==CAST||LA47_0==CASE||LA47_0==LeftParenthesis||(LA47_0>=RULE_JRPARAM && LA47_0<=RULE_JRNPARAM)||(LA47_0>=RULE_UNSIGNED && LA47_0<=RULE_SIGNED_DOUBLE)||(LA47_0>=RULE_STRING_ && LA47_0<=RULE_ID)) ) {
                alt47=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalSqlParser.g:4267:1: ( ruleOpFunctionArgAgregate )
                    {
                    // InternalSqlParser.g:4267:1: ( ruleOpFunctionArgAgregate )
                    // InternalSqlParser.g:4268:1: ruleOpFunctionArgAgregate
                    {
                     before(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 
                    pushFollow(FOLLOW_2);
                    ruleOpFunctionArgAgregate();

                    state._fsp--;

                     after(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4273:6: ( ruleOperand )
                    {
                    // InternalSqlParser.g:4273:6: ( ruleOperand )
                    // InternalSqlParser.g:4274:1: ruleOperand
                    {
                     before(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;

                     after(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAlternatives_0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Alternatives_0"
    // InternalSqlParser.g:4284:1: rule__OpFunctionArgAgregate__Alternatives_0 : ( ( ALL ) | ( DISTINCT ) );
    public final void rule__OpFunctionArgAgregate__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4288:1: ( ( ALL ) | ( DISTINCT ) )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==ALL) ) {
                alt48=1;
            }
            else if ( (LA48_0==DISTINCT) ) {
                alt48=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalSqlParser.g:4289:1: ( ALL )
                    {
                    // InternalSqlParser.g:4289:1: ( ALL )
                    // InternalSqlParser.g:4290:1: ALL
                    {
                     before(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 
                    match(input,ALL,FOLLOW_2); 
                     after(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4297:6: ( DISTINCT )
                    {
                    // InternalSqlParser.g:4297:6: ( DISTINCT )
                    // InternalSqlParser.g:4298:1: DISTINCT
                    {
                     before(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 
                    match(input,DISTINCT,FOLLOW_2); 
                     after(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Alternatives_0"


    // $ANTLR start "rule__XOperandFragment__Alternatives"
    // InternalSqlParser.g:4310:1: rule__XOperandFragment__Alternatives : ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) );
    public final void rule__XOperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4314:1: ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) )
            int alt49=3;
            switch ( input.LA(1) ) {
            case RULE_JRPARAM:
                {
                alt49=1;
                }
                break;
            case RULE_JRNPARAM:
                {
                alt49=2;
                }
                break;
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt49=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // InternalSqlParser.g:4315:1: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    {
                    // InternalSqlParser.g:4315:1: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    // InternalSqlParser.g:4316:1: ( rule__XOperandFragment__ParamAssignment_0 )
                    {
                     before(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 
                    // InternalSqlParser.g:4317:1: ( rule__XOperandFragment__ParamAssignment_0 )
                    // InternalSqlParser.g:4317:2: rule__XOperandFragment__ParamAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ParamAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4321:6: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    {
                    // InternalSqlParser.g:4321:6: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    // InternalSqlParser.g:4322:1: ( rule__XOperandFragment__EparamAssignment_1 )
                    {
                     before(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 
                    // InternalSqlParser.g:4323:1: ( rule__XOperandFragment__EparamAssignment_1 )
                    // InternalSqlParser.g:4323:2: rule__XOperandFragment__EparamAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__EparamAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4327:6: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    {
                    // InternalSqlParser.g:4327:6: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    // InternalSqlParser.g:4328:1: ( rule__XOperandFragment__ScalarAssignment_2 )
                    {
                     before(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 
                    // InternalSqlParser.g:4329:1: ( rule__XOperandFragment__ScalarAssignment_2 )
                    // InternalSqlParser.g:4329:2: rule__XOperandFragment__ScalarAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ScalarAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__Alternatives"


    // $ANTLR start "rule__ScalarOperand__Alternatives"
    // InternalSqlParser.g:4338:1: rule__ScalarOperand__Alternatives : ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) );
    public final void rule__ScalarOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4342:1: ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) )
            int alt50=5;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt50=1;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt50=2;
                }
                break;
            case RULE_DATE:
                {
                alt50=3;
                }
                break;
            case RULE_TIME:
                {
                alt50=4;
                }
                break;
            case RULE_TIMESTAMP:
                {
                alt50=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalSqlParser.g:4343:1: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    {
                    // InternalSqlParser.g:4343:1: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    // InternalSqlParser.g:4344:1: ( rule__ScalarOperand__SostrAssignment_0 )
                    {
                     before(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 
                    // InternalSqlParser.g:4345:1: ( rule__ScalarOperand__SostrAssignment_0 )
                    // InternalSqlParser.g:4345:2: rule__ScalarOperand__SostrAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SostrAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4349:6: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    {
                    // InternalSqlParser.g:4349:6: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    // InternalSqlParser.g:4350:1: ( rule__ScalarOperand__SodblAssignment_1 )
                    {
                     before(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 
                    // InternalSqlParser.g:4351:1: ( rule__ScalarOperand__SodblAssignment_1 )
                    // InternalSqlParser.g:4351:2: rule__ScalarOperand__SodblAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodblAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4355:6: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    {
                    // InternalSqlParser.g:4355:6: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    // InternalSqlParser.g:4356:1: ( rule__ScalarOperand__SodateAssignment_2 )
                    {
                     before(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 
                    // InternalSqlParser.g:4357:1: ( rule__ScalarOperand__SodateAssignment_2 )
                    // InternalSqlParser.g:4357:2: rule__ScalarOperand__SodateAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodateAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4361:6: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    {
                    // InternalSqlParser.g:4361:6: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    // InternalSqlParser.g:4362:1: ( rule__ScalarOperand__SotimeAssignment_3 )
                    {
                     before(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 
                    // InternalSqlParser.g:4363:1: ( rule__ScalarOperand__SotimeAssignment_3 )
                    // InternalSqlParser.g:4363:2: rule__ScalarOperand__SotimeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SotimeAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:4367:6: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    {
                    // InternalSqlParser.g:4367:6: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    // InternalSqlParser.g:4368:1: ( rule__ScalarOperand__SodtAssignment_4 )
                    {
                     before(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 
                    // InternalSqlParser.g:4369:1: ( rule__ScalarOperand__SodtAssignment_4 )
                    // InternalSqlParser.g:4369:2: rule__ScalarOperand__SodtAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodtAssignment_4();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__Alternatives"


    // $ANTLR start "rule__ScalarNumberOperand__Alternatives"
    // InternalSqlParser.g:4378:1: rule__ScalarNumberOperand__Alternatives : ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) );
    public final void rule__ScalarNumberOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4382:1: ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) )
            int alt51=4;
            switch ( input.LA(1) ) {
            case RULE_UNSIGNED:
                {
                alt51=1;
                }
                break;
            case RULE_INT:
                {
                alt51=2;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt51=3;
                }
                break;
            case RULE_STRING_:
                {
                alt51=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }

            switch (alt51) {
                case 1 :
                    // InternalSqlParser.g:4383:1: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    {
                    // InternalSqlParser.g:4383:1: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    // InternalSqlParser.g:4384:1: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    {
                     before(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 
                    // InternalSqlParser.g:4385:1: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    // InternalSqlParser.g:4385:2: rule__ScalarNumberOperand__SoUIntAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SoUIntAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4389:6: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    {
                    // InternalSqlParser.g:4389:6: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    // InternalSqlParser.g:4390:1: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    {
                     before(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 
                    // InternalSqlParser.g:4391:1: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    // InternalSqlParser.g:4391:2: rule__ScalarNumberOperand__SointAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SointAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4395:6: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    {
                    // InternalSqlParser.g:4395:6: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    // InternalSqlParser.g:4396:1: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    {
                     before(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 
                    // InternalSqlParser.g:4397:1: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    // InternalSqlParser.g:4397:2: rule__ScalarNumberOperand__SodblAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SodblAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4401:6: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    {
                    // InternalSqlParser.g:4401:6: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    // InternalSqlParser.g:4402:1: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    {
                     before(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 
                    // InternalSqlParser.g:4403:1: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    // InternalSqlParser.g:4403:2: rule__ScalarNumberOperand__SostrAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SostrAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__Alternatives"


    // $ANTLR start "rule__JoinType__Alternatives_1"
    // InternalSqlParser.g:4412:1: rule__JoinType__Alternatives_1 : ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) );
    public final void rule__JoinType__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4416:1: ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) )
            int alt52=4;
            switch ( input.LA(1) ) {
            case INNER:
                {
                alt52=1;
                }
                break;
            case RIGHT:
            case FULL:
            case LEFT:
                {
                alt52=2;
                }
                break;
            case CROSS:
                {
                alt52=3;
                }
                break;
            case STRAIGHT_JOIN:
                {
                alt52=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalSqlParser.g:4417:1: ( INNER )
                    {
                    // InternalSqlParser.g:4417:1: ( INNER )
                    // InternalSqlParser.g:4418:1: INNER
                    {
                     before(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 
                    match(input,INNER,FOLLOW_2); 
                     after(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4425:6: ( ( rule__JoinType__Group_1_1__0 ) )
                    {
                    // InternalSqlParser.g:4425:6: ( ( rule__JoinType__Group_1_1__0 ) )
                    // InternalSqlParser.g:4426:1: ( rule__JoinType__Group_1_1__0 )
                    {
                     before(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 
                    // InternalSqlParser.g:4427:1: ( rule__JoinType__Group_1_1__0 )
                    // InternalSqlParser.g:4427:2: rule__JoinType__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4431:6: ( CROSS )
                    {
                    // InternalSqlParser.g:4431:6: ( CROSS )
                    // InternalSqlParser.g:4432:1: CROSS
                    {
                     before(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 
                    match(input,CROSS,FOLLOW_2); 
                     after(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4439:6: ( STRAIGHT_JOIN )
                    {
                    // InternalSqlParser.g:4439:6: ( STRAIGHT_JOIN )
                    // InternalSqlParser.g:4440:1: STRAIGHT_JOIN
                    {
                     before(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 
                    match(input,STRAIGHT_JOIN,FOLLOW_2); 
                     after(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1"


    // $ANTLR start "rule__JoinType__Alternatives_1_1_0"
    // InternalSqlParser.g:4452:1: rule__JoinType__Alternatives_1_1_0 : ( ( LEFT ) | ( RIGHT ) | ( FULL ) );
    public final void rule__JoinType__Alternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4456:1: ( ( LEFT ) | ( RIGHT ) | ( FULL ) )
            int alt53=3;
            switch ( input.LA(1) ) {
            case LEFT:
                {
                alt53=1;
                }
                break;
            case RIGHT:
                {
                alt53=2;
                }
                break;
            case FULL:
                {
                alt53=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalSqlParser.g:4457:1: ( LEFT )
                    {
                    // InternalSqlParser.g:4457:1: ( LEFT )
                    // InternalSqlParser.g:4458:1: LEFT
                    {
                     before(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 
                    match(input,LEFT,FOLLOW_2); 
                     after(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4465:6: ( RIGHT )
                    {
                    // InternalSqlParser.g:4465:6: ( RIGHT )
                    // InternalSqlParser.g:4466:1: RIGHT
                    {
                     before(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 
                    match(input,RIGHT,FOLLOW_2); 
                     after(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4473:6: ( FULL )
                    {
                    // InternalSqlParser.g:4473:6: ( FULL )
                    // InternalSqlParser.g:4474:1: FULL
                    {
                     before(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 
                    match(input,FULL,FOLLOW_2); 
                     after(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1_1_0"


    // $ANTLR start "rule__DBID__Alternatives"
    // InternalSqlParser.g:4486:1: rule__DBID__Alternatives : ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) );
    public final void rule__DBID__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4490:1: ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) )
            int alt54=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt54=1;
                }
                break;
            case RULE_DBNAME:
                {
                alt54=2;
                }
                break;
            case RULE_STRING:
                {
                alt54=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }

            switch (alt54) {
                case 1 :
                    // InternalSqlParser.g:4491:1: ( RULE_ID )
                    {
                    // InternalSqlParser.g:4491:1: ( RULE_ID )
                    // InternalSqlParser.g:4492:1: RULE_ID
                    {
                     before(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 
                    match(input,RULE_ID,FOLLOW_2); 
                     after(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4497:6: ( RULE_DBNAME )
                    {
                    // InternalSqlParser.g:4497:6: ( RULE_DBNAME )
                    // InternalSqlParser.g:4498:1: RULE_DBNAME
                    {
                     before(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 
                    match(input,RULE_DBNAME,FOLLOW_2); 
                     after(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4503:6: ( RULE_STRING )
                    {
                    // InternalSqlParser.g:4503:6: ( RULE_STRING )
                    // InternalSqlParser.g:4504:1: RULE_STRING
                    {
                     before(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 
                    match(input,RULE_STRING,FOLLOW_2); 
                     after(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DBID__Alternatives"


    // $ANTLR start "rule__EXTRACT_VALUES__Alternatives"
    // InternalSqlParser.g:4514:1: rule__EXTRACT_VALUES__Alternatives : ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) );
    public final void rule__EXTRACT_VALUES__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4518:1: ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) )
            int alt55=20;
            switch ( input.LA(1) ) {
            case MICROSECOND:
                {
                alt55=1;
                }
                break;
            case SECOND:
                {
                alt55=2;
                }
                break;
            case MINUTE:
                {
                alt55=3;
                }
                break;
            case HOUR:
                {
                alt55=4;
                }
                break;
            case DAY:
                {
                alt55=5;
                }
                break;
            case WEEK:
                {
                alt55=6;
                }
                break;
            case MONTH:
                {
                alt55=7;
                }
                break;
            case QUARTER:
                {
                alt55=8;
                }
                break;
            case YEAR:
                {
                alt55=9;
                }
                break;
            case SECOND_MICROSECOND:
                {
                alt55=10;
                }
                break;
            case MINUTE_MICROSECOND:
                {
                alt55=11;
                }
                break;
            case MINUTE_SECOND:
                {
                alt55=12;
                }
                break;
            case HOUR_MICROSECOND:
                {
                alt55=13;
                }
                break;
            case HOUR_SECOND:
                {
                alt55=14;
                }
                break;
            case HOUR_MINUTE:
                {
                alt55=15;
                }
                break;
            case DAY_MICROSECOND:
                {
                alt55=16;
                }
                break;
            case DAY_SECOND:
                {
                alt55=17;
                }
                break;
            case DAY_MINUTE:
                {
                alt55=18;
                }
                break;
            case DAY_HOUR:
                {
                alt55=19;
                }
                break;
            case YEAR_MONTH:
                {
                alt55=20;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }

            switch (alt55) {
                case 1 :
                    // InternalSqlParser.g:4519:1: ( ( MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4519:1: ( ( MICROSECOND ) )
                    // InternalSqlParser.g:4520:1: ( MICROSECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 
                    // InternalSqlParser.g:4521:1: ( MICROSECOND )
                    // InternalSqlParser.g:4521:3: MICROSECOND
                    {
                    match(input,MICROSECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4526:6: ( ( SECOND ) )
                    {
                    // InternalSqlParser.g:4526:6: ( ( SECOND ) )
                    // InternalSqlParser.g:4527:1: ( SECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 
                    // InternalSqlParser.g:4528:1: ( SECOND )
                    // InternalSqlParser.g:4528:3: SECOND
                    {
                    match(input,SECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4533:6: ( ( MINUTE ) )
                    {
                    // InternalSqlParser.g:4533:6: ( ( MINUTE ) )
                    // InternalSqlParser.g:4534:1: ( MINUTE )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 
                    // InternalSqlParser.g:4535:1: ( MINUTE )
                    // InternalSqlParser.g:4535:3: MINUTE
                    {
                    match(input,MINUTE,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4540:6: ( ( HOUR ) )
                    {
                    // InternalSqlParser.g:4540:6: ( ( HOUR ) )
                    // InternalSqlParser.g:4541:1: ( HOUR )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 
                    // InternalSqlParser.g:4542:1: ( HOUR )
                    // InternalSqlParser.g:4542:3: HOUR
                    {
                    match(input,HOUR,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:4547:6: ( ( DAY ) )
                    {
                    // InternalSqlParser.g:4547:6: ( ( DAY ) )
                    // InternalSqlParser.g:4548:1: ( DAY )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 
                    // InternalSqlParser.g:4549:1: ( DAY )
                    // InternalSqlParser.g:4549:3: DAY
                    {
                    match(input,DAY,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:4554:6: ( ( WEEK ) )
                    {
                    // InternalSqlParser.g:4554:6: ( ( WEEK ) )
                    // InternalSqlParser.g:4555:1: ( WEEK )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 
                    // InternalSqlParser.g:4556:1: ( WEEK )
                    // InternalSqlParser.g:4556:3: WEEK
                    {
                    match(input,WEEK,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalSqlParser.g:4561:6: ( ( MONTH ) )
                    {
                    // InternalSqlParser.g:4561:6: ( ( MONTH ) )
                    // InternalSqlParser.g:4562:1: ( MONTH )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 
                    // InternalSqlParser.g:4563:1: ( MONTH )
                    // InternalSqlParser.g:4563:3: MONTH
                    {
                    match(input,MONTH,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 

                    }


                    }
                    break;
                case 8 :
                    // InternalSqlParser.g:4568:6: ( ( QUARTER ) )
                    {
                    // InternalSqlParser.g:4568:6: ( ( QUARTER ) )
                    // InternalSqlParser.g:4569:1: ( QUARTER )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 
                    // InternalSqlParser.g:4570:1: ( QUARTER )
                    // InternalSqlParser.g:4570:3: QUARTER
                    {
                    match(input,QUARTER,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 

                    }


                    }
                    break;
                case 9 :
                    // InternalSqlParser.g:4575:6: ( ( YEAR ) )
                    {
                    // InternalSqlParser.g:4575:6: ( ( YEAR ) )
                    // InternalSqlParser.g:4576:1: ( YEAR )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 
                    // InternalSqlParser.g:4577:1: ( YEAR )
                    // InternalSqlParser.g:4577:3: YEAR
                    {
                    match(input,YEAR,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 

                    }


                    }
                    break;
                case 10 :
                    // InternalSqlParser.g:4582:6: ( ( SECOND_MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4582:6: ( ( SECOND_MICROSECOND ) )
                    // InternalSqlParser.g:4583:1: ( SECOND_MICROSECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 
                    // InternalSqlParser.g:4584:1: ( SECOND_MICROSECOND )
                    // InternalSqlParser.g:4584:3: SECOND_MICROSECOND
                    {
                    match(input,SECOND_MICROSECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 

                    }


                    }
                    break;
                case 11 :
                    // InternalSqlParser.g:4589:6: ( ( MINUTE_MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4589:6: ( ( MINUTE_MICROSECOND ) )
                    // InternalSqlParser.g:4590:1: ( MINUTE_MICROSECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 
                    // InternalSqlParser.g:4591:1: ( MINUTE_MICROSECOND )
                    // InternalSqlParser.g:4591:3: MINUTE_MICROSECOND
                    {
                    match(input,MINUTE_MICROSECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 

                    }


                    }
                    break;
                case 12 :
                    // InternalSqlParser.g:4596:6: ( ( MINUTE_SECOND ) )
                    {
                    // InternalSqlParser.g:4596:6: ( ( MINUTE_SECOND ) )
                    // InternalSqlParser.g:4597:1: ( MINUTE_SECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 
                    // InternalSqlParser.g:4598:1: ( MINUTE_SECOND )
                    // InternalSqlParser.g:4598:3: MINUTE_SECOND
                    {
                    match(input,MINUTE_SECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 

                    }


                    }
                    break;
                case 13 :
                    // InternalSqlParser.g:4603:6: ( ( HOUR_MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4603:6: ( ( HOUR_MICROSECOND ) )
                    // InternalSqlParser.g:4604:1: ( HOUR_MICROSECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 
                    // InternalSqlParser.g:4605:1: ( HOUR_MICROSECOND )
                    // InternalSqlParser.g:4605:3: HOUR_MICROSECOND
                    {
                    match(input,HOUR_MICROSECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 

                    }


                    }
                    break;
                case 14 :
                    // InternalSqlParser.g:4610:6: ( ( HOUR_SECOND ) )
                    {
                    // InternalSqlParser.g:4610:6: ( ( HOUR_SECOND ) )
                    // InternalSqlParser.g:4611:1: ( HOUR_SECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 
                    // InternalSqlParser.g:4612:1: ( HOUR_SECOND )
                    // InternalSqlParser.g:4612:3: HOUR_SECOND
                    {
                    match(input,HOUR_SECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 

                    }


                    }
                    break;
                case 15 :
                    // InternalSqlParser.g:4617:6: ( ( HOUR_MINUTE ) )
                    {
                    // InternalSqlParser.g:4617:6: ( ( HOUR_MINUTE ) )
                    // InternalSqlParser.g:4618:1: ( HOUR_MINUTE )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 
                    // InternalSqlParser.g:4619:1: ( HOUR_MINUTE )
                    // InternalSqlParser.g:4619:3: HOUR_MINUTE
                    {
                    match(input,HOUR_MINUTE,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 

                    }


                    }
                    break;
                case 16 :
                    // InternalSqlParser.g:4624:6: ( ( DAY_MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4624:6: ( ( DAY_MICROSECOND ) )
                    // InternalSqlParser.g:4625:1: ( DAY_MICROSECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 
                    // InternalSqlParser.g:4626:1: ( DAY_MICROSECOND )
                    // InternalSqlParser.g:4626:3: DAY_MICROSECOND
                    {
                    match(input,DAY_MICROSECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 

                    }


                    }
                    break;
                case 17 :
                    // InternalSqlParser.g:4631:6: ( ( DAY_SECOND ) )
                    {
                    // InternalSqlParser.g:4631:6: ( ( DAY_SECOND ) )
                    // InternalSqlParser.g:4632:1: ( DAY_SECOND )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 
                    // InternalSqlParser.g:4633:1: ( DAY_SECOND )
                    // InternalSqlParser.g:4633:3: DAY_SECOND
                    {
                    match(input,DAY_SECOND,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 

                    }


                    }
                    break;
                case 18 :
                    // InternalSqlParser.g:4638:6: ( ( DAY_MINUTE ) )
                    {
                    // InternalSqlParser.g:4638:6: ( ( DAY_MINUTE ) )
                    // InternalSqlParser.g:4639:1: ( DAY_MINUTE )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 
                    // InternalSqlParser.g:4640:1: ( DAY_MINUTE )
                    // InternalSqlParser.g:4640:3: DAY_MINUTE
                    {
                    match(input,DAY_MINUTE,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 

                    }


                    }
                    break;
                case 19 :
                    // InternalSqlParser.g:4645:6: ( ( DAY_HOUR ) )
                    {
                    // InternalSqlParser.g:4645:6: ( ( DAY_HOUR ) )
                    // InternalSqlParser.g:4646:1: ( DAY_HOUR )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 
                    // InternalSqlParser.g:4647:1: ( DAY_HOUR )
                    // InternalSqlParser.g:4647:3: DAY_HOUR
                    {
                    match(input,DAY_HOUR,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 

                    }


                    }
                    break;
                case 20 :
                    // InternalSqlParser.g:4652:6: ( ( YEAR_MONTH ) )
                    {
                    // InternalSqlParser.g:4652:6: ( ( YEAR_MONTH ) )
                    // InternalSqlParser.g:4653:1: ( YEAR_MONTH )
                    {
                     before(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 
                    // InternalSqlParser.g:4654:1: ( YEAR_MONTH )
                    // InternalSqlParser.g:4654:3: YEAR_MONTH
                    {
                    match(input,YEAR_MONTH,FOLLOW_2); 

                    }

                     after(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EXTRACT_VALUES__Alternatives"


    // $ANTLR start "rule__XFunction__Alternatives"
    // InternalSqlParser.g:4664:1: rule__XFunction__Alternatives : ( ( ( IN ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( GREATER ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( BETWEEN ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) | ( ( BETWEEN_1 ) ) );
    public final void rule__XFunction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4668:1: ( ( ( IN ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( GREATER ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( BETWEEN ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) | ( ( BETWEEN_1 ) ) )
            int alt56=12;
            switch ( input.LA(1) ) {
            case IN:
                {
                alt56=1;
                }
                break;
            case NOTIN:
                {
                alt56=2;
                }
                break;
            case EQUAL:
                {
                alt56=3;
                }
                break;
            case NOTEQUAL:
                {
                alt56=4;
                }
                break;
            case LESS:
                {
                alt56=5;
                }
                break;
            case GREATER:
                {
                alt56=6;
                }
                break;
            case LESS_1:
                {
                alt56=7;
                }
                break;
            case GREATER_1:
                {
                alt56=8;
                }
                break;
            case BETWEEN:
                {
                alt56=9;
                }
                break;
            case BETWEEN_3:
                {
                alt56=10;
                }
                break;
            case BETWEEN_2:
                {
                alt56=11;
                }
                break;
            case BETWEEN_1:
                {
                alt56=12;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }

            switch (alt56) {
                case 1 :
                    // InternalSqlParser.g:4669:1: ( ( IN ) )
                    {
                    // InternalSqlParser.g:4669:1: ( ( IN ) )
                    // InternalSqlParser.g:4670:1: ( IN )
                    {
                     before(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 
                    // InternalSqlParser.g:4671:1: ( IN )
                    // InternalSqlParser.g:4671:3: IN
                    {
                    match(input,IN,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4676:6: ( ( NOTIN ) )
                    {
                    // InternalSqlParser.g:4676:6: ( ( NOTIN ) )
                    // InternalSqlParser.g:4677:1: ( NOTIN )
                    {
                     before(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 
                    // InternalSqlParser.g:4678:1: ( NOTIN )
                    // InternalSqlParser.g:4678:3: NOTIN
                    {
                    match(input,NOTIN,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4683:6: ( ( EQUAL ) )
                    {
                    // InternalSqlParser.g:4683:6: ( ( EQUAL ) )
                    // InternalSqlParser.g:4684:1: ( EQUAL )
                    {
                     before(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 
                    // InternalSqlParser.g:4685:1: ( EQUAL )
                    // InternalSqlParser.g:4685:3: EQUAL
                    {
                    match(input,EQUAL,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4690:6: ( ( NOTEQUAL ) )
                    {
                    // InternalSqlParser.g:4690:6: ( ( NOTEQUAL ) )
                    // InternalSqlParser.g:4691:1: ( NOTEQUAL )
                    {
                     before(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 
                    // InternalSqlParser.g:4692:1: ( NOTEQUAL )
                    // InternalSqlParser.g:4692:3: NOTEQUAL
                    {
                    match(input,NOTEQUAL,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:4697:6: ( ( LESS ) )
                    {
                    // InternalSqlParser.g:4697:6: ( ( LESS ) )
                    // InternalSqlParser.g:4698:1: ( LESS )
                    {
                     before(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 
                    // InternalSqlParser.g:4699:1: ( LESS )
                    // InternalSqlParser.g:4699:3: LESS
                    {
                    match(input,LESS,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:4704:6: ( ( GREATER ) )
                    {
                    // InternalSqlParser.g:4704:6: ( ( GREATER ) )
                    // InternalSqlParser.g:4705:1: ( GREATER )
                    {
                     before(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_5()); 
                    // InternalSqlParser.g:4706:1: ( GREATER )
                    // InternalSqlParser.g:4706:3: GREATER
                    {
                    match(input,GREATER,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalSqlParser.g:4711:6: ( ( LESS_1 ) )
                    {
                    // InternalSqlParser.g:4711:6: ( ( LESS_1 ) )
                    // InternalSqlParser.g:4712:1: ( LESS_1 )
                    {
                     before(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_6()); 
                    // InternalSqlParser.g:4713:1: ( LESS_1 )
                    // InternalSqlParser.g:4713:3: LESS_1
                    {
                    match(input,LESS_1,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_6()); 

                    }


                    }
                    break;
                case 8 :
                    // InternalSqlParser.g:4718:6: ( ( GREATER_1 ) )
                    {
                    // InternalSqlParser.g:4718:6: ( ( GREATER_1 ) )
                    // InternalSqlParser.g:4719:1: ( GREATER_1 )
                    {
                     before(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_7()); 
                    // InternalSqlParser.g:4720:1: ( GREATER_1 )
                    // InternalSqlParser.g:4720:3: GREATER_1
                    {
                    match(input,GREATER_1,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_7()); 

                    }


                    }
                    break;
                case 9 :
                    // InternalSqlParser.g:4725:6: ( ( BETWEEN ) )
                    {
                    // InternalSqlParser.g:4725:6: ( ( BETWEEN ) )
                    // InternalSqlParser.g:4726:1: ( BETWEEN )
                    {
                     before(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 
                    // InternalSqlParser.g:4727:1: ( BETWEEN )
                    // InternalSqlParser.g:4727:3: BETWEEN
                    {
                    match(input,BETWEEN,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 

                    }


                    }
                    break;
                case 10 :
                    // InternalSqlParser.g:4732:6: ( ( BETWEEN_3 ) )
                    {
                    // InternalSqlParser.g:4732:6: ( ( BETWEEN_3 ) )
                    // InternalSqlParser.g:4733:1: ( BETWEEN_3 )
                    {
                     before(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 
                    // InternalSqlParser.g:4734:1: ( BETWEEN_3 )
                    // InternalSqlParser.g:4734:3: BETWEEN_3
                    {
                    match(input,BETWEEN_3,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 

                    }


                    }
                    break;
                case 11 :
                    // InternalSqlParser.g:4739:6: ( ( BETWEEN_2 ) )
                    {
                    // InternalSqlParser.g:4739:6: ( ( BETWEEN_2 ) )
                    // InternalSqlParser.g:4740:1: ( BETWEEN_2 )
                    {
                     before(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 
                    // InternalSqlParser.g:4741:1: ( BETWEEN_2 )
                    // InternalSqlParser.g:4741:3: BETWEEN_2
                    {
                    match(input,BETWEEN_2,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 

                    }


                    }
                    break;
                case 12 :
                    // InternalSqlParser.g:4746:6: ( ( BETWEEN_1 ) )
                    {
                    // InternalSqlParser.g:4746:6: ( ( BETWEEN_1 ) )
                    // InternalSqlParser.g:4747:1: ( BETWEEN_1 )
                    {
                     before(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 
                    // InternalSqlParser.g:4748:1: ( BETWEEN_1 )
                    // InternalSqlParser.g:4748:3: BETWEEN_1
                    {
                    match(input,BETWEEN_1,FOLLOW_2); 

                    }

                     after(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XFunction__Alternatives"


    // $ANTLR start "rule__Model__Group__0"
    // InternalSqlParser.g:4760:1: rule__Model__Group__0 : rule__Model__Group__0__Impl rule__Model__Group__1 ;
    public final void rule__Model__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4764:1: ( rule__Model__Group__0__Impl rule__Model__Group__1 )
            // InternalSqlParser.g:4765:2: rule__Model__Group__0__Impl rule__Model__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Model__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Model__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__0"


    // $ANTLR start "rule__Model__Group__0__Impl"
    // InternalSqlParser.g:4772:1: rule__Model__Group__0__Impl : ( ( RULE_JRNPARAM )? ) ;
    public final void rule__Model__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4776:1: ( ( ( RULE_JRNPARAM )? ) )
            // InternalSqlParser.g:4777:1: ( ( RULE_JRNPARAM )? )
            {
            // InternalSqlParser.g:4777:1: ( ( RULE_JRNPARAM )? )
            // InternalSqlParser.g:4778:1: ( RULE_JRNPARAM )?
            {
             before(grammarAccess.getModelAccess().getJRNPARAMTerminalRuleCall_0()); 
            // InternalSqlParser.g:4779:1: ( RULE_JRNPARAM )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==RULE_JRNPARAM) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalSqlParser.g:4779:3: RULE_JRNPARAM
                    {
                    match(input,RULE_JRNPARAM,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getModelAccess().getJRNPARAMTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__0__Impl"


    // $ANTLR start "rule__Model__Group__1"
    // InternalSqlParser.g:4789:1: rule__Model__Group__1 : rule__Model__Group__1__Impl ;
    public final void rule__Model__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4793:1: ( rule__Model__Group__1__Impl )
            // InternalSqlParser.g:4794:2: rule__Model__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Model__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__1"


    // $ANTLR start "rule__Model__Group__1__Impl"
    // InternalSqlParser.g:4800:1: rule__Model__Group__1__Impl : ( ( rule__Model__QueryAssignment_1 ) ) ;
    public final void rule__Model__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4804:1: ( ( ( rule__Model__QueryAssignment_1 ) ) )
            // InternalSqlParser.g:4805:1: ( ( rule__Model__QueryAssignment_1 ) )
            {
            // InternalSqlParser.g:4805:1: ( ( rule__Model__QueryAssignment_1 ) )
            // InternalSqlParser.g:4806:1: ( rule__Model__QueryAssignment_1 )
            {
             before(grammarAccess.getModelAccess().getQueryAssignment_1()); 
            // InternalSqlParser.g:4807:1: ( rule__Model__QueryAssignment_1 )
            // InternalSqlParser.g:4807:2: rule__Model__QueryAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Model__QueryAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getModelAccess().getQueryAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__1__Impl"


    // $ANTLR start "rule__FetchFirst__Group__0"
    // InternalSqlParser.g:4821:1: rule__FetchFirst__Group__0 : rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 ;
    public final void rule__FetchFirst__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4825:1: ( rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 )
            // InternalSqlParser.g:4826:2: rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__FetchFirst__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0"


    // $ANTLR start "rule__FetchFirst__Group__0__Impl"
    // InternalSqlParser.g:4833:1: rule__FetchFirst__Group__0__Impl : ( ( rule__FetchFirst__FetchFirstAssignment_0 ) ) ;
    public final void rule__FetchFirst__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4837:1: ( ( ( rule__FetchFirst__FetchFirstAssignment_0 ) ) )
            // InternalSqlParser.g:4838:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 ) )
            {
            // InternalSqlParser.g:4838:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 ) )
            // InternalSqlParser.g:4839:1: ( rule__FetchFirst__FetchFirstAssignment_0 )
            {
             before(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 
            // InternalSqlParser.g:4840:1: ( rule__FetchFirst__FetchFirstAssignment_0 )
            // InternalSqlParser.g:4840:2: rule__FetchFirst__FetchFirstAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__FetchFirstAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0__Impl"


    // $ANTLR start "rule__FetchFirst__Group__1"
    // InternalSqlParser.g:4850:1: rule__FetchFirst__Group__1 : rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 ;
    public final void rule__FetchFirst__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4854:1: ( rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 )
            // InternalSqlParser.g:4855:2: rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__FetchFirst__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1"


    // $ANTLR start "rule__FetchFirst__Group__1__Impl"
    // InternalSqlParser.g:4862:1: rule__FetchFirst__Group__1__Impl : ( ( rule__FetchFirst__RowAssignment_1 ) ) ;
    public final void rule__FetchFirst__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4866:1: ( ( ( rule__FetchFirst__RowAssignment_1 ) ) )
            // InternalSqlParser.g:4867:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            {
            // InternalSqlParser.g:4867:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            // InternalSqlParser.g:4868:1: ( rule__FetchFirst__RowAssignment_1 )
            {
             before(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 
            // InternalSqlParser.g:4869:1: ( rule__FetchFirst__RowAssignment_1 )
            // InternalSqlParser.g:4869:2: rule__FetchFirst__RowAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1__Impl"


    // $ANTLR start "rule__FetchFirst__Group__2"
    // InternalSqlParser.g:4879:1: rule__FetchFirst__Group__2 : rule__FetchFirst__Group__2__Impl ;
    public final void rule__FetchFirst__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4883:1: ( rule__FetchFirst__Group__2__Impl )
            // InternalSqlParser.g:4884:2: rule__FetchFirst__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2"


    // $ANTLR start "rule__FetchFirst__Group__2__Impl"
    // InternalSqlParser.g:4890:1: rule__FetchFirst__Group__2__Impl : ( ONLY ) ;
    public final void rule__FetchFirst__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4894:1: ( ( ONLY ) )
            // InternalSqlParser.g:4895:1: ( ONLY )
            {
            // InternalSqlParser.g:4895:1: ( ONLY )
            // InternalSqlParser.g:4896:1: ONLY
            {
             before(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 
            match(input,ONLY,FOLLOW_2); 
             after(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2__Impl"


    // $ANTLR start "rule__Limit__Group_0__0"
    // InternalSqlParser.g:4915:1: rule__Limit__Group_0__0 : rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 ;
    public final void rule__Limit__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4919:1: ( rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 )
            // InternalSqlParser.g:4920:2: rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1
            {
            pushFollow(FOLLOW_6);
            rule__Limit__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0"


    // $ANTLR start "rule__Limit__Group_0__0__Impl"
    // InternalSqlParser.g:4927:1: rule__Limit__Group_0__0__Impl : ( () ) ;
    public final void rule__Limit__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4931:1: ( ( () ) )
            // InternalSqlParser.g:4932:1: ( () )
            {
            // InternalSqlParser.g:4932:1: ( () )
            // InternalSqlParser.g:4933:1: ()
            {
             before(grammarAccess.getLimitAccess().getLimitAction_0_0()); 
            // InternalSqlParser.g:4934:1: ()
            // InternalSqlParser.g:4936:1: 
            {
            }

             after(grammarAccess.getLimitAccess().getLimitAction_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0__Impl"


    // $ANTLR start "rule__Limit__Group_0__1"
    // InternalSqlParser.g:4946:1: rule__Limit__Group_0__1 : rule__Limit__Group_0__1__Impl ;
    public final void rule__Limit__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4950:1: ( rule__Limit__Group_0__1__Impl )
            // InternalSqlParser.g:4951:2: rule__Limit__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1"


    // $ANTLR start "rule__Limit__Group_0__1__Impl"
    // InternalSqlParser.g:4957:1: rule__Limit__Group_0__1__Impl : ( ALL ) ;
    public final void rule__Limit__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4961:1: ( ( ALL ) )
            // InternalSqlParser.g:4962:1: ( ALL )
            {
            // InternalSqlParser.g:4962:1: ( ALL )
            // InternalSqlParser.g:4963:1: ALL
            {
             before(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 
            match(input,ALL,FOLLOW_2); 
             after(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1__Impl"


    // $ANTLR start "rule__Limit__Group_1__0"
    // InternalSqlParser.g:4980:1: rule__Limit__Group_1__0 : rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 ;
    public final void rule__Limit__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4984:1: ( rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 )
            // InternalSqlParser.g:4985:2: rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Limit__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0"


    // $ANTLR start "rule__Limit__Group_1__0__Impl"
    // InternalSqlParser.g:4992:1: rule__Limit__Group_1__0__Impl : ( ( rule__Limit__L1Assignment_1_0 ) ) ;
    public final void rule__Limit__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4996:1: ( ( ( rule__Limit__L1Assignment_1_0 ) ) )
            // InternalSqlParser.g:4997:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            {
            // InternalSqlParser.g:4997:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            // InternalSqlParser.g:4998:1: ( rule__Limit__L1Assignment_1_0 )
            {
             before(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 
            // InternalSqlParser.g:4999:1: ( rule__Limit__L1Assignment_1_0 )
            // InternalSqlParser.g:4999:2: rule__Limit__L1Assignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L1Assignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1__1"
    // InternalSqlParser.g:5009:1: rule__Limit__Group_1__1 : rule__Limit__Group_1__1__Impl ;
    public final void rule__Limit__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5013:1: ( rule__Limit__Group_1__1__Impl )
            // InternalSqlParser.g:5014:2: rule__Limit__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1"


    // $ANTLR start "rule__Limit__Group_1__1__Impl"
    // InternalSqlParser.g:5020:1: rule__Limit__Group_1__1__Impl : ( ( rule__Limit__Group_1_1__0 )? ) ;
    public final void rule__Limit__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5024:1: ( ( ( rule__Limit__Group_1_1__0 )? ) )
            // InternalSqlParser.g:5025:1: ( ( rule__Limit__Group_1_1__0 )? )
            {
            // InternalSqlParser.g:5025:1: ( ( rule__Limit__Group_1_1__0 )? )
            // InternalSqlParser.g:5026:1: ( rule__Limit__Group_1_1__0 )?
            {
             before(grammarAccess.getLimitAccess().getGroup_1_1()); 
            // InternalSqlParser.g:5027:1: ( rule__Limit__Group_1_1__0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==Comma) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalSqlParser.g:5027:2: rule__Limit__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLimitAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__0"
    // InternalSqlParser.g:5041:1: rule__Limit__Group_1_1__0 : rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 ;
    public final void rule__Limit__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5045:1: ( rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 )
            // InternalSqlParser.g:5046:2: rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1
            {
            pushFollow(FOLLOW_8);
            rule__Limit__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0"


    // $ANTLR start "rule__Limit__Group_1_1__0__Impl"
    // InternalSqlParser.g:5053:1: rule__Limit__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Limit__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5057:1: ( ( Comma ) )
            // InternalSqlParser.g:5058:1: ( Comma )
            {
            // InternalSqlParser.g:5058:1: ( Comma )
            // InternalSqlParser.g:5059:1: Comma
            {
             before(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__1"
    // InternalSqlParser.g:5072:1: rule__Limit__Group_1_1__1 : rule__Limit__Group_1_1__1__Impl ;
    public final void rule__Limit__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5076:1: ( rule__Limit__Group_1_1__1__Impl )
            // InternalSqlParser.g:5077:2: rule__Limit__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1"


    // $ANTLR start "rule__Limit__Group_1_1__1__Impl"
    // InternalSqlParser.g:5083:1: rule__Limit__Group_1_1__1__Impl : ( ( rule__Limit__L2Assignment_1_1_1 ) ) ;
    public final void rule__Limit__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5087:1: ( ( ( rule__Limit__L2Assignment_1_1_1 ) ) )
            // InternalSqlParser.g:5088:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            {
            // InternalSqlParser.g:5088:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            // InternalSqlParser.g:5089:1: ( rule__Limit__L2Assignment_1_1_1 )
            {
             before(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 
            // InternalSqlParser.g:5090:1: ( rule__Limit__L2Assignment_1_1_1 )
            // InternalSqlParser.g:5090:2: rule__Limit__L2Assignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L2Assignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1__Impl"


    // $ANTLR start "rule__SelectQuery__Group__0"
    // InternalSqlParser.g:5104:1: rule__SelectQuery__Group__0 : rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 ;
    public final void rule__SelectQuery__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5108:1: ( rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 )
            // InternalSqlParser.g:5109:2: rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__SelectQuery__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0"


    // $ANTLR start "rule__SelectQuery__Group__0__Impl"
    // InternalSqlParser.g:5116:1: rule__SelectQuery__Group__0__Impl : ( ruleSelect ) ;
    public final void rule__SelectQuery__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5120:1: ( ( ruleSelect ) )
            // InternalSqlParser.g:5121:1: ( ruleSelect )
            {
            // InternalSqlParser.g:5121:1: ( ruleSelect )
            // InternalSqlParser.g:5122:1: ruleSelect
            {
             before(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;

             after(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0__Impl"


    // $ANTLR start "rule__SelectQuery__Group__1"
    // InternalSqlParser.g:5133:1: rule__SelectQuery__Group__1 : rule__SelectQuery__Group__1__Impl ;
    public final void rule__SelectQuery__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5137:1: ( rule__SelectQuery__Group__1__Impl )
            // InternalSqlParser.g:5138:2: rule__SelectQuery__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1"


    // $ANTLR start "rule__SelectQuery__Group__1__Impl"
    // InternalSqlParser.g:5144:1: rule__SelectQuery__Group__1__Impl : ( ( rule__SelectQuery__OpAssignment_1 )* ) ;
    public final void rule__SelectQuery__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5148:1: ( ( ( rule__SelectQuery__OpAssignment_1 )* ) )
            // InternalSqlParser.g:5149:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            {
            // InternalSqlParser.g:5149:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            // InternalSqlParser.g:5150:1: ( rule__SelectQuery__OpAssignment_1 )*
            {
             before(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 
            // InternalSqlParser.g:5151:1: ( rule__SelectQuery__OpAssignment_1 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==INTERSECT||LA59_0==EXCEPT||LA59_0==MINUS||LA59_0==UNION) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalSqlParser.g:5151:2: rule__SelectQuery__OpAssignment_1
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__SelectQuery__OpAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

             after(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__0"
    // InternalSqlParser.g:5165:1: rule__SelectSubSet__Group__0 : rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 ;
    public final void rule__SelectSubSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5169:1: ( rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 )
            // InternalSqlParser.g:5170:2: rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__SelectSubSet__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0"


    // $ANTLR start "rule__SelectSubSet__Group__0__Impl"
    // InternalSqlParser.g:5177:1: rule__SelectSubSet__Group__0__Impl : ( ( rule__SelectSubSet__OpAssignment_0 ) ) ;
    public final void rule__SelectSubSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5181:1: ( ( ( rule__SelectSubSet__OpAssignment_0 ) ) )
            // InternalSqlParser.g:5182:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            {
            // InternalSqlParser.g:5182:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            // InternalSqlParser.g:5183:1: ( rule__SelectSubSet__OpAssignment_0 )
            {
             before(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 
            // InternalSqlParser.g:5184:1: ( rule__SelectSubSet__OpAssignment_0 )
            // InternalSqlParser.g:5184:2: rule__SelectSubSet__OpAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__1"
    // InternalSqlParser.g:5194:1: rule__SelectSubSet__Group__1 : rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 ;
    public final void rule__SelectSubSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5198:1: ( rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 )
            // InternalSqlParser.g:5199:2: rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__SelectSubSet__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1"


    // $ANTLR start "rule__SelectSubSet__Group__1__Impl"
    // InternalSqlParser.g:5206:1: rule__SelectSubSet__Group__1__Impl : ( ( rule__SelectSubSet__AllAssignment_1 )? ) ;
    public final void rule__SelectSubSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5210:1: ( ( ( rule__SelectSubSet__AllAssignment_1 )? ) )
            // InternalSqlParser.g:5211:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            {
            // InternalSqlParser.g:5211:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            // InternalSqlParser.g:5212:1: ( rule__SelectSubSet__AllAssignment_1 )?
            {
             before(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 
            // InternalSqlParser.g:5213:1: ( rule__SelectSubSet__AllAssignment_1 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==ALL) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalSqlParser.g:5213:2: rule__SelectSubSet__AllAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SelectSubSet__AllAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__2"
    // InternalSqlParser.g:5223:1: rule__SelectSubSet__Group__2 : rule__SelectSubSet__Group__2__Impl ;
    public final void rule__SelectSubSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5227:1: ( rule__SelectSubSet__Group__2__Impl )
            // InternalSqlParser.g:5228:2: rule__SelectSubSet__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2"


    // $ANTLR start "rule__SelectSubSet__Group__2__Impl"
    // InternalSqlParser.g:5234:1: rule__SelectSubSet__Group__2__Impl : ( ( rule__SelectSubSet__QueryAssignment_2 ) ) ;
    public final void rule__SelectSubSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5238:1: ( ( ( rule__SelectSubSet__QueryAssignment_2 ) ) )
            // InternalSqlParser.g:5239:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            {
            // InternalSqlParser.g:5239:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            // InternalSqlParser.g:5240:1: ( rule__SelectSubSet__QueryAssignment_2 )
            {
             before(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 
            // InternalSqlParser.g:5241:1: ( rule__SelectSubSet__QueryAssignment_2 )
            // InternalSqlParser.g:5241:2: rule__SelectSubSet__QueryAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__QueryAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__0"
    // InternalSqlParser.g:5257:1: rule__Select__Group__0 : rule__Select__Group__0__Impl rule__Select__Group__1 ;
    public final void rule__Select__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5261:1: ( rule__Select__Group__0__Impl rule__Select__Group__1 )
            // InternalSqlParser.g:5262:2: rule__Select__Group__0__Impl rule__Select__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__Select__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0"


    // $ANTLR start "rule__Select__Group__0__Impl"
    // InternalSqlParser.g:5269:1: rule__Select__Group__0__Impl : ( ( rule__Select__SelectAssignment_0 ) ) ;
    public final void rule__Select__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5273:1: ( ( ( rule__Select__SelectAssignment_0 ) ) )
            // InternalSqlParser.g:5274:1: ( ( rule__Select__SelectAssignment_0 ) )
            {
            // InternalSqlParser.g:5274:1: ( ( rule__Select__SelectAssignment_0 ) )
            // InternalSqlParser.g:5275:1: ( rule__Select__SelectAssignment_0 )
            {
             before(grammarAccess.getSelectAccess().getSelectAssignment_0()); 
            // InternalSqlParser.g:5276:1: ( rule__Select__SelectAssignment_0 )
            // InternalSqlParser.g:5276:2: rule__Select__SelectAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Select__SelectAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getSelectAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0__Impl"


    // $ANTLR start "rule__Select__Group__1"
    // InternalSqlParser.g:5286:1: rule__Select__Group__1 : rule__Select__Group__1__Impl rule__Select__Group__2 ;
    public final void rule__Select__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5290:1: ( rule__Select__Group__1__Impl rule__Select__Group__2 )
            // InternalSqlParser.g:5291:2: rule__Select__Group__1__Impl rule__Select__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__Select__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1"


    // $ANTLR start "rule__Select__Group__1__Impl"
    // InternalSqlParser.g:5298:1: rule__Select__Group__1__Impl : ( ( DISTINCT )? ) ;
    public final void rule__Select__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5302:1: ( ( ( DISTINCT )? ) )
            // InternalSqlParser.g:5303:1: ( ( DISTINCT )? )
            {
            // InternalSqlParser.g:5303:1: ( ( DISTINCT )? )
            // InternalSqlParser.g:5304:1: ( DISTINCT )?
            {
             before(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 
            // InternalSqlParser.g:5305:1: ( DISTINCT )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==DISTINCT) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSqlParser.g:5306:2: DISTINCT
                    {
                    match(input,DISTINCT,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1__Impl"


    // $ANTLR start "rule__Select__Group__2"
    // InternalSqlParser.g:5317:1: rule__Select__Group__2 : rule__Select__Group__2__Impl rule__Select__Group__3 ;
    public final void rule__Select__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5321:1: ( rule__Select__Group__2__Impl rule__Select__Group__3 )
            // InternalSqlParser.g:5322:2: rule__Select__Group__2__Impl rule__Select__Group__3
            {
            pushFollow(FOLLOW_12);
            rule__Select__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2"


    // $ANTLR start "rule__Select__Group__2__Impl"
    // InternalSqlParser.g:5329:1: rule__Select__Group__2__Impl : ( ( rule__Select__Group_2__0 )? ) ;
    public final void rule__Select__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5333:1: ( ( ( rule__Select__Group_2__0 )? ) )
            // InternalSqlParser.g:5334:1: ( ( rule__Select__Group_2__0 )? )
            {
            // InternalSqlParser.g:5334:1: ( ( rule__Select__Group_2__0 )? )
            // InternalSqlParser.g:5335:1: ( rule__Select__Group_2__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_2()); 
            // InternalSqlParser.g:5336:1: ( rule__Select__Group_2__0 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==TOP) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalSqlParser.g:5336:2: rule__Select__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__3"
    // InternalSqlParser.g:5346:1: rule__Select__Group__3 : rule__Select__Group__3__Impl rule__Select__Group__4 ;
    public final void rule__Select__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5350:1: ( rule__Select__Group__3__Impl rule__Select__Group__4 )
            // InternalSqlParser.g:5351:2: rule__Select__Group__3__Impl rule__Select__Group__4
            {
            pushFollow(FOLLOW_13);
            rule__Select__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3"


    // $ANTLR start "rule__Select__Group__3__Impl"
    // InternalSqlParser.g:5358:1: rule__Select__Group__3__Impl : ( ( rule__Select__ColsAssignment_3 ) ) ;
    public final void rule__Select__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5362:1: ( ( ( rule__Select__ColsAssignment_3 ) ) )
            // InternalSqlParser.g:5363:1: ( ( rule__Select__ColsAssignment_3 ) )
            {
            // InternalSqlParser.g:5363:1: ( ( rule__Select__ColsAssignment_3 ) )
            // InternalSqlParser.g:5364:1: ( rule__Select__ColsAssignment_3 )
            {
             before(grammarAccess.getSelectAccess().getColsAssignment_3()); 
            // InternalSqlParser.g:5365:1: ( rule__Select__ColsAssignment_3 )
            // InternalSqlParser.g:5365:2: rule__Select__ColsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Select__ColsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getColsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3__Impl"


    // $ANTLR start "rule__Select__Group__4"
    // InternalSqlParser.g:5375:1: rule__Select__Group__4 : rule__Select__Group__4__Impl rule__Select__Group__5 ;
    public final void rule__Select__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5379:1: ( rule__Select__Group__4__Impl rule__Select__Group__5 )
            // InternalSqlParser.g:5380:2: rule__Select__Group__4__Impl rule__Select__Group__5
            {
            pushFollow(FOLLOW_14);
            rule__Select__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4"


    // $ANTLR start "rule__Select__Group__4__Impl"
    // InternalSqlParser.g:5387:1: rule__Select__Group__4__Impl : ( FROM ) ;
    public final void rule__Select__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5391:1: ( ( FROM ) )
            // InternalSqlParser.g:5392:1: ( FROM )
            {
            // InternalSqlParser.g:5392:1: ( FROM )
            // InternalSqlParser.g:5393:1: FROM
            {
             before(grammarAccess.getSelectAccess().getFROMKeyword_4()); 
            match(input,FROM,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getFROMKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4__Impl"


    // $ANTLR start "rule__Select__Group__5"
    // InternalSqlParser.g:5406:1: rule__Select__Group__5 : rule__Select__Group__5__Impl rule__Select__Group__6 ;
    public final void rule__Select__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5410:1: ( rule__Select__Group__5__Impl rule__Select__Group__6 )
            // InternalSqlParser.g:5411:2: rule__Select__Group__5__Impl rule__Select__Group__6
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5"


    // $ANTLR start "rule__Select__Group__5__Impl"
    // InternalSqlParser.g:5418:1: rule__Select__Group__5__Impl : ( ( rule__Select__TblAssignment_5 ) ) ;
    public final void rule__Select__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5422:1: ( ( ( rule__Select__TblAssignment_5 ) ) )
            // InternalSqlParser.g:5423:1: ( ( rule__Select__TblAssignment_5 ) )
            {
            // InternalSqlParser.g:5423:1: ( ( rule__Select__TblAssignment_5 ) )
            // InternalSqlParser.g:5424:1: ( rule__Select__TblAssignment_5 )
            {
             before(grammarAccess.getSelectAccess().getTblAssignment_5()); 
            // InternalSqlParser.g:5425:1: ( rule__Select__TblAssignment_5 )
            // InternalSqlParser.g:5425:2: rule__Select__TblAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__Select__TblAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getTblAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5__Impl"


    // $ANTLR start "rule__Select__Group__6"
    // InternalSqlParser.g:5435:1: rule__Select__Group__6 : rule__Select__Group__6__Impl rule__Select__Group__7 ;
    public final void rule__Select__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5439:1: ( rule__Select__Group__6__Impl rule__Select__Group__7 )
            // InternalSqlParser.g:5440:2: rule__Select__Group__6__Impl rule__Select__Group__7
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6"


    // $ANTLR start "rule__Select__Group__6__Impl"
    // InternalSqlParser.g:5447:1: rule__Select__Group__6__Impl : ( ( rule__Select__Group_6__0 )? ) ;
    public final void rule__Select__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5451:1: ( ( ( rule__Select__Group_6__0 )? ) )
            // InternalSqlParser.g:5452:1: ( ( rule__Select__Group_6__0 )? )
            {
            // InternalSqlParser.g:5452:1: ( ( rule__Select__Group_6__0 )? )
            // InternalSqlParser.g:5453:1: ( rule__Select__Group_6__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_6()); 
            // InternalSqlParser.g:5454:1: ( rule__Select__Group_6__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==WHERE) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalSqlParser.g:5454:2: rule__Select__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_6__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6__Impl"


    // $ANTLR start "rule__Select__Group__7"
    // InternalSqlParser.g:5464:1: rule__Select__Group__7 : rule__Select__Group__7__Impl rule__Select__Group__8 ;
    public final void rule__Select__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5468:1: ( rule__Select__Group__7__Impl rule__Select__Group__8 )
            // InternalSqlParser.g:5469:2: rule__Select__Group__7__Impl rule__Select__Group__8
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__7__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__8();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7"


    // $ANTLR start "rule__Select__Group__7__Impl"
    // InternalSqlParser.g:5476:1: rule__Select__Group__7__Impl : ( ( rule__Select__Group_7__0 )? ) ;
    public final void rule__Select__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5480:1: ( ( ( rule__Select__Group_7__0 )? ) )
            // InternalSqlParser.g:5481:1: ( ( rule__Select__Group_7__0 )? )
            {
            // InternalSqlParser.g:5481:1: ( ( rule__Select__Group_7__0 )? )
            // InternalSqlParser.g:5482:1: ( rule__Select__Group_7__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_7()); 
            // InternalSqlParser.g:5483:1: ( rule__Select__Group_7__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==GROUPBY) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSqlParser.g:5483:2: rule__Select__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_7__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7__Impl"


    // $ANTLR start "rule__Select__Group__8"
    // InternalSqlParser.g:5493:1: rule__Select__Group__8 : rule__Select__Group__8__Impl rule__Select__Group__9 ;
    public final void rule__Select__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5497:1: ( rule__Select__Group__8__Impl rule__Select__Group__9 )
            // InternalSqlParser.g:5498:2: rule__Select__Group__8__Impl rule__Select__Group__9
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__8__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__9();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8"


    // $ANTLR start "rule__Select__Group__8__Impl"
    // InternalSqlParser.g:5505:1: rule__Select__Group__8__Impl : ( ( rule__Select__Group_8__0 )? ) ;
    public final void rule__Select__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5509:1: ( ( ( rule__Select__Group_8__0 )? ) )
            // InternalSqlParser.g:5510:1: ( ( rule__Select__Group_8__0 )? )
            {
            // InternalSqlParser.g:5510:1: ( ( rule__Select__Group_8__0 )? )
            // InternalSqlParser.g:5511:1: ( rule__Select__Group_8__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_8()); 
            // InternalSqlParser.g:5512:1: ( rule__Select__Group_8__0 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==HAVING) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalSqlParser.g:5512:2: rule__Select__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_8__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_8()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8__Impl"


    // $ANTLR start "rule__Select__Group__9"
    // InternalSqlParser.g:5522:1: rule__Select__Group__9 : rule__Select__Group__9__Impl rule__Select__Group__10 ;
    public final void rule__Select__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5526:1: ( rule__Select__Group__9__Impl rule__Select__Group__10 )
            // InternalSqlParser.g:5527:2: rule__Select__Group__9__Impl rule__Select__Group__10
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__9__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__10();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9"


    // $ANTLR start "rule__Select__Group__9__Impl"
    // InternalSqlParser.g:5534:1: rule__Select__Group__9__Impl : ( ( rule__Select__Group_9__0 )? ) ;
    public final void rule__Select__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5538:1: ( ( ( rule__Select__Group_9__0 )? ) )
            // InternalSqlParser.g:5539:1: ( ( rule__Select__Group_9__0 )? )
            {
            // InternalSqlParser.g:5539:1: ( ( rule__Select__Group_9__0 )? )
            // InternalSqlParser.g:5540:1: ( rule__Select__Group_9__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_9()); 
            // InternalSqlParser.g:5541:1: ( rule__Select__Group_9__0 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==ORDERBY) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSqlParser.g:5541:2: rule__Select__Group_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_9__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_9()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9__Impl"


    // $ANTLR start "rule__Select__Group__10"
    // InternalSqlParser.g:5551:1: rule__Select__Group__10 : rule__Select__Group__10__Impl rule__Select__Group__11 ;
    public final void rule__Select__Group__10() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5555:1: ( rule__Select__Group__10__Impl rule__Select__Group__11 )
            // InternalSqlParser.g:5556:2: rule__Select__Group__10__Impl rule__Select__Group__11
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__10__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__11();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10"


    // $ANTLR start "rule__Select__Group__10__Impl"
    // InternalSqlParser.g:5563:1: rule__Select__Group__10__Impl : ( ( rule__Select__Group_10__0 )? ) ;
    public final void rule__Select__Group__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5567:1: ( ( ( rule__Select__Group_10__0 )? ) )
            // InternalSqlParser.g:5568:1: ( ( rule__Select__Group_10__0 )? )
            {
            // InternalSqlParser.g:5568:1: ( ( rule__Select__Group_10__0 )? )
            // InternalSqlParser.g:5569:1: ( rule__Select__Group_10__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_10()); 
            // InternalSqlParser.g:5570:1: ( rule__Select__Group_10__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==LIMIT) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSqlParser.g:5570:2: rule__Select__Group_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_10__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_10()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10__Impl"


    // $ANTLR start "rule__Select__Group__11"
    // InternalSqlParser.g:5580:1: rule__Select__Group__11 : rule__Select__Group__11__Impl rule__Select__Group__12 ;
    public final void rule__Select__Group__11() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5584:1: ( rule__Select__Group__11__Impl rule__Select__Group__12 )
            // InternalSqlParser.g:5585:2: rule__Select__Group__11__Impl rule__Select__Group__12
            {
            pushFollow(FOLLOW_15);
            rule__Select__Group__11__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group__12();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11"


    // $ANTLR start "rule__Select__Group__11__Impl"
    // InternalSqlParser.g:5592:1: rule__Select__Group__11__Impl : ( ( rule__Select__Group_11__0 )? ) ;
    public final void rule__Select__Group__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5596:1: ( ( ( rule__Select__Group_11__0 )? ) )
            // InternalSqlParser.g:5597:1: ( ( rule__Select__Group_11__0 )? )
            {
            // InternalSqlParser.g:5597:1: ( ( rule__Select__Group_11__0 )? )
            // InternalSqlParser.g:5598:1: ( rule__Select__Group_11__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_11()); 
            // InternalSqlParser.g:5599:1: ( rule__Select__Group_11__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==OFFSET) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSqlParser.g:5599:2: rule__Select__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_11__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_11()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11__Impl"


    // $ANTLR start "rule__Select__Group__12"
    // InternalSqlParser.g:5609:1: rule__Select__Group__12 : rule__Select__Group__12__Impl ;
    public final void rule__Select__Group__12() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5613:1: ( rule__Select__Group__12__Impl )
            // InternalSqlParser.g:5614:2: rule__Select__Group__12__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__12__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12"


    // $ANTLR start "rule__Select__Group__12__Impl"
    // InternalSqlParser.g:5620:1: rule__Select__Group__12__Impl : ( ( rule__Select__Group_12__0 )? ) ;
    public final void rule__Select__Group__12__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5624:1: ( ( ( rule__Select__Group_12__0 )? ) )
            // InternalSqlParser.g:5625:1: ( ( rule__Select__Group_12__0 )? )
            {
            // InternalSqlParser.g:5625:1: ( ( rule__Select__Group_12__0 )? )
            // InternalSqlParser.g:5626:1: ( rule__Select__Group_12__0 )?
            {
             before(grammarAccess.getSelectAccess().getGroup_12()); 
            // InternalSqlParser.g:5627:1: ( rule__Select__Group_12__0 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==FETCHFIRST) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalSqlParser.g:5627:2: rule__Select__Group_12__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_12__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getGroup_12()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12__Impl"


    // $ANTLR start "rule__Select__Group_2__0"
    // InternalSqlParser.g:5663:1: rule__Select__Group_2__0 : rule__Select__Group_2__0__Impl rule__Select__Group_2__1 ;
    public final void rule__Select__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5667:1: ( rule__Select__Group_2__0__Impl rule__Select__Group_2__1 )
            // InternalSqlParser.g:5668:2: rule__Select__Group_2__0__Impl rule__Select__Group_2__1
            {
            pushFollow(FOLLOW_16);
            rule__Select__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0"


    // $ANTLR start "rule__Select__Group_2__0__Impl"
    // InternalSqlParser.g:5675:1: rule__Select__Group_2__0__Impl : ( TOP ) ;
    public final void rule__Select__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5679:1: ( ( TOP ) )
            // InternalSqlParser.g:5680:1: ( TOP )
            {
            // InternalSqlParser.g:5680:1: ( TOP )
            // InternalSqlParser.g:5681:1: TOP
            {
             before(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 
            match(input,TOP,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0__Impl"


    // $ANTLR start "rule__Select__Group_2__1"
    // InternalSqlParser.g:5694:1: rule__Select__Group_2__1 : rule__Select__Group_2__1__Impl rule__Select__Group_2__2 ;
    public final void rule__Select__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5698:1: ( rule__Select__Group_2__1__Impl rule__Select__Group_2__2 )
            // InternalSqlParser.g:5699:2: rule__Select__Group_2__1__Impl rule__Select__Group_2__2
            {
            pushFollow(FOLLOW_17);
            rule__Select__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1"


    // $ANTLR start "rule__Select__Group_2__1__Impl"
    // InternalSqlParser.g:5706:1: rule__Select__Group_2__1__Impl : ( ( rule__Select__Alternatives_2_1 ) ) ;
    public final void rule__Select__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5710:1: ( ( ( rule__Select__Alternatives_2_1 ) ) )
            // InternalSqlParser.g:5711:1: ( ( rule__Select__Alternatives_2_1 ) )
            {
            // InternalSqlParser.g:5711:1: ( ( rule__Select__Alternatives_2_1 ) )
            // InternalSqlParser.g:5712:1: ( rule__Select__Alternatives_2_1 )
            {
             before(grammarAccess.getSelectAccess().getAlternatives_2_1()); 
            // InternalSqlParser.g:5713:1: ( rule__Select__Alternatives_2_1 )
            // InternalSqlParser.g:5713:2: rule__Select__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__Alternatives_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getAlternatives_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1__Impl"


    // $ANTLR start "rule__Select__Group_2__2"
    // InternalSqlParser.g:5723:1: rule__Select__Group_2__2 : rule__Select__Group_2__2__Impl rule__Select__Group_2__3 ;
    public final void rule__Select__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5727:1: ( rule__Select__Group_2__2__Impl rule__Select__Group_2__3 )
            // InternalSqlParser.g:5728:2: rule__Select__Group_2__2__Impl rule__Select__Group_2__3
            {
            pushFollow(FOLLOW_17);
            rule__Select__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2"


    // $ANTLR start "rule__Select__Group_2__2__Impl"
    // InternalSqlParser.g:5735:1: rule__Select__Group_2__2__Impl : ( ( PERCENT )? ) ;
    public final void rule__Select__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5739:1: ( ( ( PERCENT )? ) )
            // InternalSqlParser.g:5740:1: ( ( PERCENT )? )
            {
            // InternalSqlParser.g:5740:1: ( ( PERCENT )? )
            // InternalSqlParser.g:5741:1: ( PERCENT )?
            {
             before(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 
            // InternalSqlParser.g:5742:1: ( PERCENT )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==PERCENT) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSqlParser.g:5743:2: PERCENT
                    {
                    match(input,PERCENT,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2__Impl"


    // $ANTLR start "rule__Select__Group_2__3"
    // InternalSqlParser.g:5754:1: rule__Select__Group_2__3 : rule__Select__Group_2__3__Impl ;
    public final void rule__Select__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5758:1: ( rule__Select__Group_2__3__Impl )
            // InternalSqlParser.g:5759:2: rule__Select__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3"


    // $ANTLR start "rule__Select__Group_2__3__Impl"
    // InternalSqlParser.g:5765:1: rule__Select__Group_2__3__Impl : ( ( WITHTIES )? ) ;
    public final void rule__Select__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5769:1: ( ( ( WITHTIES )? ) )
            // InternalSqlParser.g:5770:1: ( ( WITHTIES )? )
            {
            // InternalSqlParser.g:5770:1: ( ( WITHTIES )? )
            // InternalSqlParser.g:5771:1: ( WITHTIES )?
            {
             before(grammarAccess.getSelectAccess().getWITHTIESKeyword_2_3()); 
            // InternalSqlParser.g:5772:1: ( WITHTIES )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==WITHTIES) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSqlParser.g:5773:2: WITHTIES
                    {
                    match(input,WITHTIES,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getSelectAccess().getWITHTIESKeyword_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3__Impl"


    // $ANTLR start "rule__Select__Group_6__0"
    // InternalSqlParser.g:5792:1: rule__Select__Group_6__0 : rule__Select__Group_6__0__Impl rule__Select__Group_6__1 ;
    public final void rule__Select__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5796:1: ( rule__Select__Group_6__0__Impl rule__Select__Group_6__1 )
            // InternalSqlParser.g:5797:2: rule__Select__Group_6__0__Impl rule__Select__Group_6__1
            {
            pushFollow(FOLLOW_18);
            rule__Select__Group_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0"


    // $ANTLR start "rule__Select__Group_6__0__Impl"
    // InternalSqlParser.g:5804:1: rule__Select__Group_6__0__Impl : ( WHERE ) ;
    public final void rule__Select__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5808:1: ( ( WHERE ) )
            // InternalSqlParser.g:5809:1: ( WHERE )
            {
            // InternalSqlParser.g:5809:1: ( WHERE )
            // InternalSqlParser.g:5810:1: WHERE
            {
             before(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 
            match(input,WHERE,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0__Impl"


    // $ANTLR start "rule__Select__Group_6__1"
    // InternalSqlParser.g:5823:1: rule__Select__Group_6__1 : rule__Select__Group_6__1__Impl ;
    public final void rule__Select__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5827:1: ( rule__Select__Group_6__1__Impl )
            // InternalSqlParser.g:5828:2: rule__Select__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1"


    // $ANTLR start "rule__Select__Group_6__1__Impl"
    // InternalSqlParser.g:5834:1: rule__Select__Group_6__1__Impl : ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) ;
    public final void rule__Select__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5838:1: ( ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) )
            // InternalSqlParser.g:5839:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            {
            // InternalSqlParser.g:5839:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            // InternalSqlParser.g:5840:1: ( rule__Select__WhereExpressionAssignment_6_1 )
            {
             before(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 
            // InternalSqlParser.g:5841:1: ( rule__Select__WhereExpressionAssignment_6_1 )
            // InternalSqlParser.g:5841:2: rule__Select__WhereExpressionAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__WhereExpressionAssignment_6_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1__Impl"


    // $ANTLR start "rule__Select__Group_7__0"
    // InternalSqlParser.g:5855:1: rule__Select__Group_7__0 : rule__Select__Group_7__0__Impl rule__Select__Group_7__1 ;
    public final void rule__Select__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5859:1: ( rule__Select__Group_7__0__Impl rule__Select__Group_7__1 )
            // InternalSqlParser.g:5860:2: rule__Select__Group_7__0__Impl rule__Select__Group_7__1
            {
            pushFollow(FOLLOW_19);
            rule__Select__Group_7__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_7__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0"


    // $ANTLR start "rule__Select__Group_7__0__Impl"
    // InternalSqlParser.g:5867:1: rule__Select__Group_7__0__Impl : ( GROUPBY ) ;
    public final void rule__Select__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5871:1: ( ( GROUPBY ) )
            // InternalSqlParser.g:5872:1: ( GROUPBY )
            {
            // InternalSqlParser.g:5872:1: ( GROUPBY )
            // InternalSqlParser.g:5873:1: GROUPBY
            {
             before(grammarAccess.getSelectAccess().getGROUPBYKeyword_7_0()); 
            match(input,GROUPBY,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getGROUPBYKeyword_7_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0__Impl"


    // $ANTLR start "rule__Select__Group_7__1"
    // InternalSqlParser.g:5886:1: rule__Select__Group_7__1 : rule__Select__Group_7__1__Impl ;
    public final void rule__Select__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5890:1: ( rule__Select__Group_7__1__Impl )
            // InternalSqlParser.g:5891:2: rule__Select__Group_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1"


    // $ANTLR start "rule__Select__Group_7__1__Impl"
    // InternalSqlParser.g:5897:1: rule__Select__Group_7__1__Impl : ( ( rule__Select__GroupByEntryAssignment_7_1 ) ) ;
    public final void rule__Select__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5901:1: ( ( ( rule__Select__GroupByEntryAssignment_7_1 ) ) )
            // InternalSqlParser.g:5902:1: ( ( rule__Select__GroupByEntryAssignment_7_1 ) )
            {
            // InternalSqlParser.g:5902:1: ( ( rule__Select__GroupByEntryAssignment_7_1 ) )
            // InternalSqlParser.g:5903:1: ( rule__Select__GroupByEntryAssignment_7_1 )
            {
             before(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_1()); 
            // InternalSqlParser.g:5904:1: ( rule__Select__GroupByEntryAssignment_7_1 )
            // InternalSqlParser.g:5904:2: rule__Select__GroupByEntryAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__GroupByEntryAssignment_7_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1__Impl"


    // $ANTLR start "rule__Select__Group_8__0"
    // InternalSqlParser.g:5918:1: rule__Select__Group_8__0 : rule__Select__Group_8__0__Impl rule__Select__Group_8__1 ;
    public final void rule__Select__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5922:1: ( rule__Select__Group_8__0__Impl rule__Select__Group_8__1 )
            // InternalSqlParser.g:5923:2: rule__Select__Group_8__0__Impl rule__Select__Group_8__1
            {
            pushFollow(FOLLOW_18);
            rule__Select__Group_8__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0"


    // $ANTLR start "rule__Select__Group_8__0__Impl"
    // InternalSqlParser.g:5930:1: rule__Select__Group_8__0__Impl : ( HAVING ) ;
    public final void rule__Select__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5934:1: ( ( HAVING ) )
            // InternalSqlParser.g:5935:1: ( HAVING )
            {
            // InternalSqlParser.g:5935:1: ( HAVING )
            // InternalSqlParser.g:5936:1: HAVING
            {
             before(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 
            match(input,HAVING,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0__Impl"


    // $ANTLR start "rule__Select__Group_8__1"
    // InternalSqlParser.g:5949:1: rule__Select__Group_8__1 : rule__Select__Group_8__1__Impl ;
    public final void rule__Select__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5953:1: ( rule__Select__Group_8__1__Impl )
            // InternalSqlParser.g:5954:2: rule__Select__Group_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1"


    // $ANTLR start "rule__Select__Group_8__1__Impl"
    // InternalSqlParser.g:5960:1: rule__Select__Group_8__1__Impl : ( ( rule__Select__HavingEntryAssignment_8_1 ) ) ;
    public final void rule__Select__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5964:1: ( ( ( rule__Select__HavingEntryAssignment_8_1 ) ) )
            // InternalSqlParser.g:5965:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            {
            // InternalSqlParser.g:5965:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            // InternalSqlParser.g:5966:1: ( rule__Select__HavingEntryAssignment_8_1 )
            {
             before(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 
            // InternalSqlParser.g:5967:1: ( rule__Select__HavingEntryAssignment_8_1 )
            // InternalSqlParser.g:5967:2: rule__Select__HavingEntryAssignment_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__HavingEntryAssignment_8_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1__Impl"


    // $ANTLR start "rule__Select__Group_9__0"
    // InternalSqlParser.g:5981:1: rule__Select__Group_9__0 : rule__Select__Group_9__0__Impl rule__Select__Group_9__1 ;
    public final void rule__Select__Group_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5985:1: ( rule__Select__Group_9__0__Impl rule__Select__Group_9__1 )
            // InternalSqlParser.g:5986:2: rule__Select__Group_9__0__Impl rule__Select__Group_9__1
            {
            pushFollow(FOLLOW_19);
            rule__Select__Group_9__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_9__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0"


    // $ANTLR start "rule__Select__Group_9__0__Impl"
    // InternalSqlParser.g:5993:1: rule__Select__Group_9__0__Impl : ( ORDERBY ) ;
    public final void rule__Select__Group_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5997:1: ( ( ORDERBY ) )
            // InternalSqlParser.g:5998:1: ( ORDERBY )
            {
            // InternalSqlParser.g:5998:1: ( ORDERBY )
            // InternalSqlParser.g:5999:1: ORDERBY
            {
             before(grammarAccess.getSelectAccess().getORDERBYKeyword_9_0()); 
            match(input,ORDERBY,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getORDERBYKeyword_9_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0__Impl"


    // $ANTLR start "rule__Select__Group_9__1"
    // InternalSqlParser.g:6012:1: rule__Select__Group_9__1 : rule__Select__Group_9__1__Impl ;
    public final void rule__Select__Group_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6016:1: ( rule__Select__Group_9__1__Impl )
            // InternalSqlParser.g:6017:2: rule__Select__Group_9__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1"


    // $ANTLR start "rule__Select__Group_9__1__Impl"
    // InternalSqlParser.g:6023:1: rule__Select__Group_9__1__Impl : ( ( rule__Select__OrderByEntryAssignment_9_1 ) ) ;
    public final void rule__Select__Group_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6027:1: ( ( ( rule__Select__OrderByEntryAssignment_9_1 ) ) )
            // InternalSqlParser.g:6028:1: ( ( rule__Select__OrderByEntryAssignment_9_1 ) )
            {
            // InternalSqlParser.g:6028:1: ( ( rule__Select__OrderByEntryAssignment_9_1 ) )
            // InternalSqlParser.g:6029:1: ( rule__Select__OrderByEntryAssignment_9_1 )
            {
             before(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_1()); 
            // InternalSqlParser.g:6030:1: ( rule__Select__OrderByEntryAssignment_9_1 )
            // InternalSqlParser.g:6030:2: rule__Select__OrderByEntryAssignment_9_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__OrderByEntryAssignment_9_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1__Impl"


    // $ANTLR start "rule__Select__Group_10__0"
    // InternalSqlParser.g:6044:1: rule__Select__Group_10__0 : rule__Select__Group_10__0__Impl rule__Select__Group_10__1 ;
    public final void rule__Select__Group_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6048:1: ( rule__Select__Group_10__0__Impl rule__Select__Group_10__1 )
            // InternalSqlParser.g:6049:2: rule__Select__Group_10__0__Impl rule__Select__Group_10__1
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group_10__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0"


    // $ANTLR start "rule__Select__Group_10__0__Impl"
    // InternalSqlParser.g:6056:1: rule__Select__Group_10__0__Impl : ( LIMIT ) ;
    public final void rule__Select__Group_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6060:1: ( ( LIMIT ) )
            // InternalSqlParser.g:6061:1: ( LIMIT )
            {
            // InternalSqlParser.g:6061:1: ( LIMIT )
            // InternalSqlParser.g:6062:1: LIMIT
            {
             before(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 
            match(input,LIMIT,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0__Impl"


    // $ANTLR start "rule__Select__Group_10__1"
    // InternalSqlParser.g:6075:1: rule__Select__Group_10__1 : rule__Select__Group_10__1__Impl ;
    public final void rule__Select__Group_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6079:1: ( rule__Select__Group_10__1__Impl )
            // InternalSqlParser.g:6080:2: rule__Select__Group_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1"


    // $ANTLR start "rule__Select__Group_10__1__Impl"
    // InternalSqlParser.g:6086:1: rule__Select__Group_10__1__Impl : ( ( rule__Select__LimAssignment_10_1 ) ) ;
    public final void rule__Select__Group_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6090:1: ( ( ( rule__Select__LimAssignment_10_1 ) ) )
            // InternalSqlParser.g:6091:1: ( ( rule__Select__LimAssignment_10_1 ) )
            {
            // InternalSqlParser.g:6091:1: ( ( rule__Select__LimAssignment_10_1 ) )
            // InternalSqlParser.g:6092:1: ( rule__Select__LimAssignment_10_1 )
            {
             before(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 
            // InternalSqlParser.g:6093:1: ( rule__Select__LimAssignment_10_1 )
            // InternalSqlParser.g:6093:2: rule__Select__LimAssignment_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__LimAssignment_10_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1__Impl"


    // $ANTLR start "rule__Select__Group_11__0"
    // InternalSqlParser.g:6107:1: rule__Select__Group_11__0 : rule__Select__Group_11__0__Impl rule__Select__Group_11__1 ;
    public final void rule__Select__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6111:1: ( rule__Select__Group_11__0__Impl rule__Select__Group_11__1 )
            // InternalSqlParser.g:6112:2: rule__Select__Group_11__0__Impl rule__Select__Group_11__1
            {
            pushFollow(FOLLOW_21);
            rule__Select__Group_11__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0"


    // $ANTLR start "rule__Select__Group_11__0__Impl"
    // InternalSqlParser.g:6119:1: rule__Select__Group_11__0__Impl : ( OFFSET ) ;
    public final void rule__Select__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6123:1: ( ( OFFSET ) )
            // InternalSqlParser.g:6124:1: ( OFFSET )
            {
            // InternalSqlParser.g:6124:1: ( OFFSET )
            // InternalSqlParser.g:6125:1: OFFSET
            {
             before(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 
            match(input,OFFSET,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0__Impl"


    // $ANTLR start "rule__Select__Group_11__1"
    // InternalSqlParser.g:6138:1: rule__Select__Group_11__1 : rule__Select__Group_11__1__Impl ;
    public final void rule__Select__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6142:1: ( rule__Select__Group_11__1__Impl )
            // InternalSqlParser.g:6143:2: rule__Select__Group_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1"


    // $ANTLR start "rule__Select__Group_11__1__Impl"
    // InternalSqlParser.g:6149:1: rule__Select__Group_11__1__Impl : ( ( rule__Select__OffsetAssignment_11_1 ) ) ;
    public final void rule__Select__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6153:1: ( ( ( rule__Select__OffsetAssignment_11_1 ) ) )
            // InternalSqlParser.g:6154:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            {
            // InternalSqlParser.g:6154:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            // InternalSqlParser.g:6155:1: ( rule__Select__OffsetAssignment_11_1 )
            {
             before(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 
            // InternalSqlParser.g:6156:1: ( rule__Select__OffsetAssignment_11_1 )
            // InternalSqlParser.g:6156:2: rule__Select__OffsetAssignment_11_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__OffsetAssignment_11_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1__Impl"


    // $ANTLR start "rule__Select__Group_12__0"
    // InternalSqlParser.g:6170:1: rule__Select__Group_12__0 : rule__Select__Group_12__0__Impl rule__Select__Group_12__1 ;
    public final void rule__Select__Group_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6174:1: ( rule__Select__Group_12__0__Impl rule__Select__Group_12__1 )
            // InternalSqlParser.g:6175:2: rule__Select__Group_12__0__Impl rule__Select__Group_12__1
            {
            pushFollow(FOLLOW_8);
            rule__Select__Group_12__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Select__Group_12__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0"


    // $ANTLR start "rule__Select__Group_12__0__Impl"
    // InternalSqlParser.g:6182:1: rule__Select__Group_12__0__Impl : ( FETCHFIRST ) ;
    public final void rule__Select__Group_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6186:1: ( ( FETCHFIRST ) )
            // InternalSqlParser.g:6187:1: ( FETCHFIRST )
            {
            // InternalSqlParser.g:6187:1: ( FETCHFIRST )
            // InternalSqlParser.g:6188:1: FETCHFIRST
            {
             before(grammarAccess.getSelectAccess().getFETCHFIRSTKeyword_12_0()); 
            match(input,FETCHFIRST,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getFETCHFIRSTKeyword_12_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0__Impl"


    // $ANTLR start "rule__Select__Group_12__1"
    // InternalSqlParser.g:6201:1: rule__Select__Group_12__1 : rule__Select__Group_12__1__Impl ;
    public final void rule__Select__Group_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6205:1: ( rule__Select__Group_12__1__Impl )
            // InternalSqlParser.g:6206:2: rule__Select__Group_12__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1"


    // $ANTLR start "rule__Select__Group_12__1__Impl"
    // InternalSqlParser.g:6212:1: rule__Select__Group_12__1__Impl : ( ( rule__Select__FetchFirstAssignment_12_1 ) ) ;
    public final void rule__Select__Group_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6216:1: ( ( ( rule__Select__FetchFirstAssignment_12_1 ) ) )
            // InternalSqlParser.g:6217:1: ( ( rule__Select__FetchFirstAssignment_12_1 ) )
            {
            // InternalSqlParser.g:6217:1: ( ( rule__Select__FetchFirstAssignment_12_1 ) )
            // InternalSqlParser.g:6218:1: ( rule__Select__FetchFirstAssignment_12_1 )
            {
             before(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_1()); 
            // InternalSqlParser.g:6219:1: ( rule__Select__FetchFirstAssignment_12_1 )
            // InternalSqlParser.g:6219:2: rule__Select__FetchFirstAssignment_12_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__FetchFirstAssignment_12_1();

            state._fsp--;


            }

             after(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1__Impl"


    // $ANTLR start "rule__Columns__Group__0"
    // InternalSqlParser.g:6233:1: rule__Columns__Group__0 : rule__Columns__Group__0__Impl rule__Columns__Group__1 ;
    public final void rule__Columns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6237:1: ( rule__Columns__Group__0__Impl rule__Columns__Group__1 )
            // InternalSqlParser.g:6238:2: rule__Columns__Group__0__Impl rule__Columns__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Columns__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Columns__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0"


    // $ANTLR start "rule__Columns__Group__0__Impl"
    // InternalSqlParser.g:6245:1: rule__Columns__Group__0__Impl : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6249:1: ( ( ruleColumnOrAlias ) )
            // InternalSqlParser.g:6250:1: ( ruleColumnOrAlias )
            {
            // InternalSqlParser.g:6250:1: ( ruleColumnOrAlias )
            // InternalSqlParser.g:6251:1: ruleColumnOrAlias
            {
             before(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;

             after(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0__Impl"


    // $ANTLR start "rule__Columns__Group__1"
    // InternalSqlParser.g:6262:1: rule__Columns__Group__1 : rule__Columns__Group__1__Impl ;
    public final void rule__Columns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6266:1: ( rule__Columns__Group__1__Impl )
            // InternalSqlParser.g:6267:2: rule__Columns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1"


    // $ANTLR start "rule__Columns__Group__1__Impl"
    // InternalSqlParser.g:6273:1: rule__Columns__Group__1__Impl : ( ( rule__Columns__Group_1__0 )? ) ;
    public final void rule__Columns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6277:1: ( ( ( rule__Columns__Group_1__0 )? ) )
            // InternalSqlParser.g:6278:1: ( ( rule__Columns__Group_1__0 )? )
            {
            // InternalSqlParser.g:6278:1: ( ( rule__Columns__Group_1__0 )? )
            // InternalSqlParser.g:6279:1: ( rule__Columns__Group_1__0 )?
            {
             before(grammarAccess.getColumnsAccess().getGroup_1()); 
            // InternalSqlParser.g:6280:1: ( rule__Columns__Group_1__0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==Comma) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSqlParser.g:6280:2: rule__Columns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Columns__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getColumnsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1__Impl"


    // $ANTLR start "rule__Columns__Group_1__0"
    // InternalSqlParser.g:6294:1: rule__Columns__Group_1__0 : rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 ;
    public final void rule__Columns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6298:1: ( rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 )
            // InternalSqlParser.g:6299:2: rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Columns__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0"


    // $ANTLR start "rule__Columns__Group_1__0__Impl"
    // InternalSqlParser.g:6306:1: rule__Columns__Group_1__0__Impl : ( () ) ;
    public final void rule__Columns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6310:1: ( ( () ) )
            // InternalSqlParser.g:6311:1: ( () )
            {
            // InternalSqlParser.g:6311:1: ( () )
            // InternalSqlParser.g:6312:1: ()
            {
             before(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 
            // InternalSqlParser.g:6313:1: ()
            // InternalSqlParser.g:6315:1: 
            {
            }

             after(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1__1"
    // InternalSqlParser.g:6325:1: rule__Columns__Group_1__1 : rule__Columns__Group_1__1__Impl ;
    public final void rule__Columns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6329:1: ( rule__Columns__Group_1__1__Impl )
            // InternalSqlParser.g:6330:2: rule__Columns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1"


    // $ANTLR start "rule__Columns__Group_1__1__Impl"
    // InternalSqlParser.g:6336:1: rule__Columns__Group_1__1__Impl : ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) ;
    public final void rule__Columns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6340:1: ( ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:6341:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:6341:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            // InternalSqlParser.g:6342:1: ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:6342:1: ( ( rule__Columns__Group_1_1__0 ) )
            // InternalSqlParser.g:6343:1: ( rule__Columns__Group_1_1__0 )
            {
             before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:6344:1: ( rule__Columns__Group_1_1__0 )
            // InternalSqlParser.g:6344:2: rule__Columns__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__Columns__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getColumnsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:6347:1: ( ( rule__Columns__Group_1_1__0 )* )
            // InternalSqlParser.g:6348:1: ( rule__Columns__Group_1_1__0 )*
            {
             before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:6349:1: ( rule__Columns__Group_1_1__0 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==Comma) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalSqlParser.g:6349:2: rule__Columns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__Columns__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

             after(grammarAccess.getColumnsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__0"
    // InternalSqlParser.g:6364:1: rule__Columns__Group_1_1__0 : rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 ;
    public final void rule__Columns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6368:1: ( rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 )
            // InternalSqlParser.g:6369:2: rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Columns__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0"


    // $ANTLR start "rule__Columns__Group_1_1__0__Impl"
    // InternalSqlParser.g:6376:1: rule__Columns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Columns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6380:1: ( ( Comma ) )
            // InternalSqlParser.g:6381:1: ( Comma )
            {
            // InternalSqlParser.g:6381:1: ( Comma )
            // InternalSqlParser.g:6382:1: Comma
            {
             before(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__1"
    // InternalSqlParser.g:6395:1: rule__Columns__Group_1_1__1 : rule__Columns__Group_1_1__1__Impl ;
    public final void rule__Columns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6399:1: ( rule__Columns__Group_1_1__1__Impl )
            // InternalSqlParser.g:6400:2: rule__Columns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1"


    // $ANTLR start "rule__Columns__Group_1_1__1__Impl"
    // InternalSqlParser.g:6406:1: rule__Columns__Group_1_1__1__Impl : ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Columns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6410:1: ( ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:6411:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:6411:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:6412:1: ( rule__Columns__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:6413:1: ( rule__Columns__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:6413:2: rule__Columns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Columns__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0"
    // InternalSqlParser.g:6427:1: rule__ColumnOrAlias__Group_0__0 : rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 ;
    public final void rule__ColumnOrAlias__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6431:1: ( rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 )
            // InternalSqlParser.g:6432:2: rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1
            {
            pushFollow(FOLLOW_23);
            rule__ColumnOrAlias__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0__Impl"
    // InternalSqlParser.g:6439:1: rule__ColumnOrAlias__Group_0__0__Impl : ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) ;
    public final void rule__ColumnOrAlias__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6443:1: ( ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) )
            // InternalSqlParser.g:6444:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            {
            // InternalSqlParser.g:6444:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            // InternalSqlParser.g:6445:1: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            {
             before(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 
            // InternalSqlParser.g:6446:1: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            // InternalSqlParser.g:6446:2: rule__ColumnOrAlias__CeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__CeAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1"
    // InternalSqlParser.g:6456:1: rule__ColumnOrAlias__Group_0__1 : rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 ;
    public final void rule__ColumnOrAlias__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6460:1: ( rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 )
            // InternalSqlParser.g:6461:2: rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2
            {
            pushFollow(FOLLOW_23);
            rule__ColumnOrAlias__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1__Impl"
    // InternalSqlParser.g:6468:1: rule__ColumnOrAlias__Group_0__1__Impl : ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6472:1: ( ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) )
            // InternalSqlParser.g:6473:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            {
            // InternalSqlParser.g:6473:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            // InternalSqlParser.g:6474:1: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            {
             before(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 
            // InternalSqlParser.g:6475:1: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==AS) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalSqlParser.g:6475:2: rule__ColumnOrAlias__AliasAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AliasAssignment_0_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2"
    // InternalSqlParser.g:6485:1: rule__ColumnOrAlias__Group_0__2 : rule__ColumnOrAlias__Group_0__2__Impl ;
    public final void rule__ColumnOrAlias__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6489:1: ( rule__ColumnOrAlias__Group_0__2__Impl )
            // InternalSqlParser.g:6490:2: rule__ColumnOrAlias__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2__Impl"
    // InternalSqlParser.g:6496:1: rule__ColumnOrAlias__Group_0__2__Impl : ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6500:1: ( ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) )
            // InternalSqlParser.g:6501:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            {
            // InternalSqlParser.g:6501:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            // InternalSqlParser.g:6502:1: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            {
             before(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 
            // InternalSqlParser.g:6503:1: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( ((LA75_0>=RULE_STRING && LA75_0<=RULE_ID)) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalSqlParser.g:6503:2: rule__ColumnOrAlias__ColAliasAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__ColAliasAssignment_0_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2__Impl"


    // $ANTLR start "rule__ColumnFull__Group__0"
    // InternalSqlParser.g:6519:1: rule__ColumnFull__Group__0 : rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 ;
    public final void rule__ColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6523:1: ( rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 )
            // InternalSqlParser.g:6524:2: rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__ColumnFull__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0"


    // $ANTLR start "rule__ColumnFull__Group__0__Impl"
    // InternalSqlParser.g:6531:1: rule__ColumnFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6535:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:6536:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:6536:1: ( ruleDbObjectName )
            // InternalSqlParser.g:6537:1: ruleDbObjectName
            {
             before(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group__1"
    // InternalSqlParser.g:6548:1: rule__ColumnFull__Group__1 : rule__ColumnFull__Group__1__Impl ;
    public final void rule__ColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6552:1: ( rule__ColumnFull__Group__1__Impl )
            // InternalSqlParser.g:6553:2: rule__ColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1"


    // $ANTLR start "rule__ColumnFull__Group__1__Impl"
    // InternalSqlParser.g:6559:1: rule__ColumnFull__Group__1__Impl : ( ( rule__ColumnFull__Group_1__0 )? ) ;
    public final void rule__ColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6563:1: ( ( ( rule__ColumnFull__Group_1__0 )? ) )
            // InternalSqlParser.g:6564:1: ( ( rule__ColumnFull__Group_1__0 )? )
            {
            // InternalSqlParser.g:6564:1: ( ( rule__ColumnFull__Group_1__0 )? )
            // InternalSqlParser.g:6565:1: ( rule__ColumnFull__Group_1__0 )?
            {
             before(grammarAccess.getColumnFullAccess().getGroup_1()); 
            // InternalSqlParser.g:6566:1: ( rule__ColumnFull__Group_1__0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==FullStop) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSqlParser.g:6566:2: rule__ColumnFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnFull__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getColumnFullAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__0"
    // InternalSqlParser.g:6580:1: rule__ColumnFull__Group_1__0 : rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 ;
    public final void rule__ColumnFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6584:1: ( rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 )
            // InternalSqlParser.g:6585:2: rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1
            {
            pushFollow(FOLLOW_24);
            rule__ColumnFull__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1__0__Impl"
    // InternalSqlParser.g:6592:1: rule__ColumnFull__Group_1__0__Impl : ( () ) ;
    public final void rule__ColumnFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6596:1: ( ( () ) )
            // InternalSqlParser.g:6597:1: ( () )
            {
            // InternalSqlParser.g:6597:1: ( () )
            // InternalSqlParser.g:6598:1: ()
            {
             before(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 
            // InternalSqlParser.g:6599:1: ()
            // InternalSqlParser.g:6601:1: 
            {
            }

             after(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__1"
    // InternalSqlParser.g:6611:1: rule__ColumnFull__Group_1__1 : rule__ColumnFull__Group_1__1__Impl ;
    public final void rule__ColumnFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6615:1: ( rule__ColumnFull__Group_1__1__Impl )
            // InternalSqlParser.g:6616:2: rule__ColumnFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1__1__Impl"
    // InternalSqlParser.g:6622:1: rule__ColumnFull__Group_1__1__Impl : ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) ;
    public final void rule__ColumnFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6626:1: ( ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:6627:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:6627:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            // InternalSqlParser.g:6628:1: ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:6628:1: ( ( rule__ColumnFull__Group_1_1__0 ) )
            // InternalSqlParser.g:6629:1: ( rule__ColumnFull__Group_1_1__0 )
            {
             before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            // InternalSqlParser.g:6630:1: ( rule__ColumnFull__Group_1_1__0 )
            // InternalSqlParser.g:6630:2: rule__ColumnFull__Group_1_1__0
            {
            pushFollow(FOLLOW_25);
            rule__ColumnFull__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:6633:1: ( ( rule__ColumnFull__Group_1_1__0 )* )
            // InternalSqlParser.g:6634:1: ( rule__ColumnFull__Group_1_1__0 )*
            {
             before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            // InternalSqlParser.g:6635:1: ( rule__ColumnFull__Group_1_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==FullStop) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalSqlParser.g:6635:2: rule__ColumnFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_25);
            	    rule__ColumnFull__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

             after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0"
    // InternalSqlParser.g:6650:1: rule__ColumnFull__Group_1_1__0 : rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 ;
    public final void rule__ColumnFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6654:1: ( rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 )
            // InternalSqlParser.g:6655:2: rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__ColumnFull__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0__Impl"
    // InternalSqlParser.g:6662:1: rule__ColumnFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__ColumnFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6666:1: ( ( FullStop ) )
            // InternalSqlParser.g:6667:1: ( FullStop )
            {
            // InternalSqlParser.g:6667:1: ( FullStop )
            // InternalSqlParser.g:6668:1: FullStop
            {
             before(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 
            match(input,FullStop,FOLLOW_2); 
             after(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1"
    // InternalSqlParser.g:6681:1: rule__ColumnFull__Group_1_1__1 : rule__ColumnFull__Group_1_1__1__Impl ;
    public final void rule__ColumnFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6685:1: ( rule__ColumnFull__Group_1_1__1__Impl )
            // InternalSqlParser.g:6686:2: rule__ColumnFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1__Impl"
    // InternalSqlParser.g:6692:1: rule__ColumnFull__Group_1_1__1__Impl : ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__ColumnFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6696:1: ( ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:6697:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:6697:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:6698:1: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:6699:1: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:6699:2: rule__ColumnFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__Tables__Group__0"
    // InternalSqlParser.g:6713:1: rule__Tables__Group__0 : rule__Tables__Group__0__Impl rule__Tables__Group__1 ;
    public final void rule__Tables__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6717:1: ( rule__Tables__Group__0__Impl rule__Tables__Group__1 )
            // InternalSqlParser.g:6718:2: rule__Tables__Group__0__Impl rule__Tables__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Tables__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Tables__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0"


    // $ANTLR start "rule__Tables__Group__0__Impl"
    // InternalSqlParser.g:6725:1: rule__Tables__Group__0__Impl : ( ruleFromTable ) ;
    public final void rule__Tables__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6729:1: ( ( ruleFromTable ) )
            // InternalSqlParser.g:6730:1: ( ruleFromTable )
            {
            // InternalSqlParser.g:6730:1: ( ruleFromTable )
            // InternalSqlParser.g:6731:1: ruleFromTable
            {
             before(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;

             after(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0__Impl"


    // $ANTLR start "rule__Tables__Group__1"
    // InternalSqlParser.g:6742:1: rule__Tables__Group__1 : rule__Tables__Group__1__Impl ;
    public final void rule__Tables__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6746:1: ( rule__Tables__Group__1__Impl )
            // InternalSqlParser.g:6747:2: rule__Tables__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1"


    // $ANTLR start "rule__Tables__Group__1__Impl"
    // InternalSqlParser.g:6753:1: rule__Tables__Group__1__Impl : ( ( rule__Tables__Group_1__0 )? ) ;
    public final void rule__Tables__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6757:1: ( ( ( rule__Tables__Group_1__0 )? ) )
            // InternalSqlParser.g:6758:1: ( ( rule__Tables__Group_1__0 )? )
            {
            // InternalSqlParser.g:6758:1: ( ( rule__Tables__Group_1__0 )? )
            // InternalSqlParser.g:6759:1: ( rule__Tables__Group_1__0 )?
            {
             before(grammarAccess.getTablesAccess().getGroup_1()); 
            // InternalSqlParser.g:6760:1: ( rule__Tables__Group_1__0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==Comma) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalSqlParser.g:6760:2: rule__Tables__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Tables__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getTablesAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1__Impl"


    // $ANTLR start "rule__Tables__Group_1__0"
    // InternalSqlParser.g:6774:1: rule__Tables__Group_1__0 : rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 ;
    public final void rule__Tables__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6778:1: ( rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 )
            // InternalSqlParser.g:6779:2: rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Tables__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0"


    // $ANTLR start "rule__Tables__Group_1__0__Impl"
    // InternalSqlParser.g:6786:1: rule__Tables__Group_1__0__Impl : ( () ) ;
    public final void rule__Tables__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6790:1: ( ( () ) )
            // InternalSqlParser.g:6791:1: ( () )
            {
            // InternalSqlParser.g:6791:1: ( () )
            // InternalSqlParser.g:6792:1: ()
            {
             before(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 
            // InternalSqlParser.g:6793:1: ()
            // InternalSqlParser.g:6795:1: 
            {
            }

             after(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1__1"
    // InternalSqlParser.g:6805:1: rule__Tables__Group_1__1 : rule__Tables__Group_1__1__Impl ;
    public final void rule__Tables__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6809:1: ( rule__Tables__Group_1__1__Impl )
            // InternalSqlParser.g:6810:2: rule__Tables__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1"


    // $ANTLR start "rule__Tables__Group_1__1__Impl"
    // InternalSqlParser.g:6816:1: rule__Tables__Group_1__1__Impl : ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) ;
    public final void rule__Tables__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6820:1: ( ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:6821:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:6821:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            // InternalSqlParser.g:6822:1: ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:6822:1: ( ( rule__Tables__Group_1_1__0 ) )
            // InternalSqlParser.g:6823:1: ( rule__Tables__Group_1_1__0 )
            {
             before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            // InternalSqlParser.g:6824:1: ( rule__Tables__Group_1_1__0 )
            // InternalSqlParser.g:6824:2: rule__Tables__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__Tables__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getTablesAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:6827:1: ( ( rule__Tables__Group_1_1__0 )* )
            // InternalSqlParser.g:6828:1: ( rule__Tables__Group_1_1__0 )*
            {
             before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            // InternalSqlParser.g:6829:1: ( rule__Tables__Group_1_1__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==Comma) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalSqlParser.g:6829:2: rule__Tables__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__Tables__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

             after(grammarAccess.getTablesAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__0"
    // InternalSqlParser.g:6844:1: rule__Tables__Group_1_1__0 : rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 ;
    public final void rule__Tables__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6848:1: ( rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 )
            // InternalSqlParser.g:6849:2: rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1
            {
            pushFollow(FOLLOW_14);
            rule__Tables__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0"


    // $ANTLR start "rule__Tables__Group_1_1__0__Impl"
    // InternalSqlParser.g:6856:1: rule__Tables__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Tables__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6860:1: ( ( Comma ) )
            // InternalSqlParser.g:6861:1: ( Comma )
            {
            // InternalSqlParser.g:6861:1: ( Comma )
            // InternalSqlParser.g:6862:1: Comma
            {
             before(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__1"
    // InternalSqlParser.g:6875:1: rule__Tables__Group_1_1__1 : rule__Tables__Group_1_1__1__Impl ;
    public final void rule__Tables__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6879:1: ( rule__Tables__Group_1_1__1__Impl )
            // InternalSqlParser.g:6880:2: rule__Tables__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1"


    // $ANTLR start "rule__Tables__Group_1_1__1__Impl"
    // InternalSqlParser.g:6886:1: rule__Tables__Group_1_1__1__Impl : ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Tables__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6890:1: ( ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:6891:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:6891:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:6892:1: ( rule__Tables__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:6893:1: ( rule__Tables__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:6893:2: rule__Tables__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Tables__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1__Impl"


    // $ANTLR start "rule__FromTable__Group__0"
    // InternalSqlParser.g:6907:1: rule__FromTable__Group__0 : rule__FromTable__Group__0__Impl rule__FromTable__Group__1 ;
    public final void rule__FromTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6911:1: ( rule__FromTable__Group__0__Impl rule__FromTable__Group__1 )
            // InternalSqlParser.g:6912:2: rule__FromTable__Group__0__Impl rule__FromTable__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__FromTable__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0"


    // $ANTLR start "rule__FromTable__Group__0__Impl"
    // InternalSqlParser.g:6919:1: rule__FromTable__Group__0__Impl : ( ( rule__FromTable__TableAssignment_0 ) ) ;
    public final void rule__FromTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6923:1: ( ( ( rule__FromTable__TableAssignment_0 ) ) )
            // InternalSqlParser.g:6924:1: ( ( rule__FromTable__TableAssignment_0 ) )
            {
            // InternalSqlParser.g:6924:1: ( ( rule__FromTable__TableAssignment_0 ) )
            // InternalSqlParser.g:6925:1: ( rule__FromTable__TableAssignment_0 )
            {
             before(grammarAccess.getFromTableAccess().getTableAssignment_0()); 
            // InternalSqlParser.g:6926:1: ( rule__FromTable__TableAssignment_0 )
            // InternalSqlParser.g:6926:2: rule__FromTable__TableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__TableAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getFromTableAccess().getTableAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0__Impl"


    // $ANTLR start "rule__FromTable__Group__1"
    // InternalSqlParser.g:6936:1: rule__FromTable__Group__1 : rule__FromTable__Group__1__Impl ;
    public final void rule__FromTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6940:1: ( rule__FromTable__Group__1__Impl )
            // InternalSqlParser.g:6941:2: rule__FromTable__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1"


    // $ANTLR start "rule__FromTable__Group__1__Impl"
    // InternalSqlParser.g:6947:1: rule__FromTable__Group__1__Impl : ( ( rule__FromTable__FjoinAssignment_1 )* ) ;
    public final void rule__FromTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6951:1: ( ( ( rule__FromTable__FjoinAssignment_1 )* ) )
            // InternalSqlParser.g:6952:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            {
            // InternalSqlParser.g:6952:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            // InternalSqlParser.g:6953:1: ( rule__FromTable__FjoinAssignment_1 )*
            {
             before(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 
            // InternalSqlParser.g:6954:1: ( rule__FromTable__FjoinAssignment_1 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==STRAIGHT_JOIN||LA80_0==NATURAL||LA80_0==CROSS||LA80_0==INNER||LA80_0==RIGHT||LA80_0==FULL||LA80_0==JOIN||LA80_0==LEFT) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalSqlParser.g:6954:2: rule__FromTable__FjoinAssignment_1
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__FromTable__FjoinAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

             after(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__0"
    // InternalSqlParser.g:6968:1: rule__FromTableJoin__Group__0 : rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 ;
    public final void rule__FromTableJoin__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6972:1: ( rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 )
            // InternalSqlParser.g:6973:2: rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__FromTableJoin__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0"


    // $ANTLR start "rule__FromTableJoin__Group__0__Impl"
    // InternalSqlParser.g:6980:1: rule__FromTableJoin__Group__0__Impl : ( ( rule__FromTableJoin__JoinAssignment_0 ) ) ;
    public final void rule__FromTableJoin__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6984:1: ( ( ( rule__FromTableJoin__JoinAssignment_0 ) ) )
            // InternalSqlParser.g:6985:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            {
            // InternalSqlParser.g:6985:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            // InternalSqlParser.g:6986:1: ( rule__FromTableJoin__JoinAssignment_0 )
            {
             before(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 
            // InternalSqlParser.g:6987:1: ( rule__FromTableJoin__JoinAssignment_0 )
            // InternalSqlParser.g:6987:2: rule__FromTableJoin__JoinAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__1"
    // InternalSqlParser.g:6997:1: rule__FromTableJoin__Group__1 : rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 ;
    public final void rule__FromTableJoin__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7001:1: ( rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 )
            // InternalSqlParser.g:7002:2: rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2
            {
            pushFollow(FOLLOW_29);
            rule__FromTableJoin__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1"


    // $ANTLR start "rule__FromTableJoin__Group__1__Impl"
    // InternalSqlParser.g:7009:1: rule__FromTableJoin__Group__1__Impl : ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) ;
    public final void rule__FromTableJoin__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7013:1: ( ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) )
            // InternalSqlParser.g:7014:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            {
            // InternalSqlParser.g:7014:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            // InternalSqlParser.g:7015:1: ( rule__FromTableJoin__OnTableAssignment_1 )
            {
             before(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 
            // InternalSqlParser.g:7016:1: ( rule__FromTableJoin__OnTableAssignment_1 )
            // InternalSqlParser.g:7016:2: rule__FromTableJoin__OnTableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__OnTableAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__2"
    // InternalSqlParser.g:7026:1: rule__FromTableJoin__Group__2 : rule__FromTableJoin__Group__2__Impl ;
    public final void rule__FromTableJoin__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7030:1: ( rule__FromTableJoin__Group__2__Impl )
            // InternalSqlParser.g:7031:2: rule__FromTableJoin__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2"


    // $ANTLR start "rule__FromTableJoin__Group__2__Impl"
    // InternalSqlParser.g:7037:1: rule__FromTableJoin__Group__2__Impl : ( ( rule__FromTableJoin__Alternatives_2 ) ) ;
    public final void rule__FromTableJoin__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7041:1: ( ( ( rule__FromTableJoin__Alternatives_2 ) ) )
            // InternalSqlParser.g:7042:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            {
            // InternalSqlParser.g:7042:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            // InternalSqlParser.g:7043:1: ( rule__FromTableJoin__Alternatives_2 )
            {
             before(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 
            // InternalSqlParser.g:7044:1: ( rule__FromTableJoin__Alternatives_2 )
            // InternalSqlParser.g:7044:2: rule__FromTableJoin__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Alternatives_2();

            state._fsp--;


            }

             after(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0"
    // InternalSqlParser.g:7060:1: rule__FromTableJoin__Group_2_0__0 : rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 ;
    public final void rule__FromTableJoin__Group_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7064:1: ( rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 )
            // InternalSqlParser.g:7065:2: rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1
            {
            pushFollow(FOLLOW_18);
            rule__FromTableJoin__Group_2_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0__Impl"
    // InternalSqlParser.g:7072:1: rule__FromTableJoin__Group_2_0__0__Impl : ( ON ) ;
    public final void rule__FromTableJoin__Group_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7076:1: ( ( ON ) )
            // InternalSqlParser.g:7077:1: ( ON )
            {
            // InternalSqlParser.g:7077:1: ( ON )
            // InternalSqlParser.g:7078:1: ON
            {
             before(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 
            match(input,ON,FOLLOW_2); 
             after(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1"
    // InternalSqlParser.g:7091:1: rule__FromTableJoin__Group_2_0__1 : rule__FromTableJoin__Group_2_0__1__Impl ;
    public final void rule__FromTableJoin__Group_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7095:1: ( rule__FromTableJoin__Group_2_0__1__Impl )
            // InternalSqlParser.g:7096:2: rule__FromTableJoin__Group_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1__Impl"
    // InternalSqlParser.g:7102:1: rule__FromTableJoin__Group_2_0__1__Impl : ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) ;
    public final void rule__FromTableJoin__Group_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7106:1: ( ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) )
            // InternalSqlParser.g:7107:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            {
            // InternalSqlParser.g:7107:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            // InternalSqlParser.g:7108:1: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            {
             before(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 
            // InternalSqlParser.g:7109:1: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            // InternalSqlParser.g:7109:2: rule__FromTableJoin__JoinExprAssignment_2_0_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinExprAssignment_2_0_1();

            state._fsp--;


            }

             after(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__0"
    // InternalSqlParser.g:7123:1: rule__JoinCondition__Group__0 : rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 ;
    public final void rule__JoinCondition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7127:1: ( rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 )
            // InternalSqlParser.g:7128:2: rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__JoinCondition__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0"


    // $ANTLR start "rule__JoinCondition__Group__0__Impl"
    // InternalSqlParser.g:7135:1: rule__JoinCondition__Group__0__Impl : ( USING ) ;
    public final void rule__JoinCondition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7139:1: ( ( USING ) )
            // InternalSqlParser.g:7140:1: ( USING )
            {
            // InternalSqlParser.g:7140:1: ( USING )
            // InternalSqlParser.g:7141:1: USING
            {
             before(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 
            match(input,USING,FOLLOW_2); 
             after(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0__Impl"


    // $ANTLR start "rule__JoinCondition__Group__1"
    // InternalSqlParser.g:7154:1: rule__JoinCondition__Group__1 : rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 ;
    public final void rule__JoinCondition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7158:1: ( rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 )
            // InternalSqlParser.g:7159:2: rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2
            {
            pushFollow(FOLLOW_26);
            rule__JoinCondition__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1"


    // $ANTLR start "rule__JoinCondition__Group__1__Impl"
    // InternalSqlParser.g:7166:1: rule__JoinCondition__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__JoinCondition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7170:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:7171:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:7171:1: ( LeftParenthesis )
            // InternalSqlParser.g:7172:1: LeftParenthesis
            {
             before(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__2"
    // InternalSqlParser.g:7185:1: rule__JoinCondition__Group__2 : rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 ;
    public final void rule__JoinCondition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7189:1: ( rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 )
            // InternalSqlParser.g:7190:2: rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__JoinCondition__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2"


    // $ANTLR start "rule__JoinCondition__Group__2__Impl"
    // InternalSqlParser.g:7197:1: rule__JoinCondition__Group__2__Impl : ( ( rule__JoinCondition__UseColsAssignment_2 ) ) ;
    public final void rule__JoinCondition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7201:1: ( ( ( rule__JoinCondition__UseColsAssignment_2 ) ) )
            // InternalSqlParser.g:7202:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            {
            // InternalSqlParser.g:7202:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            // InternalSqlParser.g:7203:1: ( rule__JoinCondition__UseColsAssignment_2 )
            {
             before(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 
            // InternalSqlParser.g:7204:1: ( rule__JoinCondition__UseColsAssignment_2 )
            // InternalSqlParser.g:7204:2: rule__JoinCondition__UseColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__UseColsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2__Impl"


    // $ANTLR start "rule__JoinCondition__Group__3"
    // InternalSqlParser.g:7214:1: rule__JoinCondition__Group__3 : rule__JoinCondition__Group__3__Impl ;
    public final void rule__JoinCondition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7218:1: ( rule__JoinCondition__Group__3__Impl )
            // InternalSqlParser.g:7219:2: rule__JoinCondition__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3"


    // $ANTLR start "rule__JoinCondition__Group__3__Impl"
    // InternalSqlParser.g:7225:1: rule__JoinCondition__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__JoinCondition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7229:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:7230:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:7230:1: ( RightParenthesis )
            // InternalSqlParser.g:7231:1: RightParenthesis
            {
             before(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3__Impl"


    // $ANTLR start "rule__UsingCols__Group__0"
    // InternalSqlParser.g:7252:1: rule__UsingCols__Group__0 : rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 ;
    public final void rule__UsingCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7256:1: ( rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 )
            // InternalSqlParser.g:7257:2: rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__UsingCols__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0"


    // $ANTLR start "rule__UsingCols__Group__0__Impl"
    // InternalSqlParser.g:7264:1: rule__UsingCols__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7268:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:7269:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:7269:1: ( ruleDbObjectName )
            // InternalSqlParser.g:7270:1: ruleDbObjectName
            {
             before(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0__Impl"


    // $ANTLR start "rule__UsingCols__Group__1"
    // InternalSqlParser.g:7281:1: rule__UsingCols__Group__1 : rule__UsingCols__Group__1__Impl ;
    public final void rule__UsingCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7285:1: ( rule__UsingCols__Group__1__Impl )
            // InternalSqlParser.g:7286:2: rule__UsingCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1"


    // $ANTLR start "rule__UsingCols__Group__1__Impl"
    // InternalSqlParser.g:7292:1: rule__UsingCols__Group__1__Impl : ( ( rule__UsingCols__Group_1__0 )? ) ;
    public final void rule__UsingCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7296:1: ( ( ( rule__UsingCols__Group_1__0 )? ) )
            // InternalSqlParser.g:7297:1: ( ( rule__UsingCols__Group_1__0 )? )
            {
            // InternalSqlParser.g:7297:1: ( ( rule__UsingCols__Group_1__0 )? )
            // InternalSqlParser.g:7298:1: ( rule__UsingCols__Group_1__0 )?
            {
             before(grammarAccess.getUsingColsAccess().getGroup_1()); 
            // InternalSqlParser.g:7299:1: ( rule__UsingCols__Group_1__0 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==Comma) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSqlParser.g:7299:2: rule__UsingCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UsingCols__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getUsingColsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__0"
    // InternalSqlParser.g:7313:1: rule__UsingCols__Group_1__0 : rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 ;
    public final void rule__UsingCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7317:1: ( rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 )
            // InternalSqlParser.g:7318:2: rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__UsingCols__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0"


    // $ANTLR start "rule__UsingCols__Group_1__0__Impl"
    // InternalSqlParser.g:7325:1: rule__UsingCols__Group_1__0__Impl : ( () ) ;
    public final void rule__UsingCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7329:1: ( ( () ) )
            // InternalSqlParser.g:7330:1: ( () )
            {
            // InternalSqlParser.g:7330:1: ( () )
            // InternalSqlParser.g:7331:1: ()
            {
             before(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 
            // InternalSqlParser.g:7332:1: ()
            // InternalSqlParser.g:7334:1: 
            {
            }

             after(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__1"
    // InternalSqlParser.g:7344:1: rule__UsingCols__Group_1__1 : rule__UsingCols__Group_1__1__Impl ;
    public final void rule__UsingCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7348:1: ( rule__UsingCols__Group_1__1__Impl )
            // InternalSqlParser.g:7349:2: rule__UsingCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1"


    // $ANTLR start "rule__UsingCols__Group_1__1__Impl"
    // InternalSqlParser.g:7355:1: rule__UsingCols__Group_1__1__Impl : ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) ;
    public final void rule__UsingCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7359:1: ( ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:7360:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:7360:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            // InternalSqlParser.g:7361:1: ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:7361:1: ( ( rule__UsingCols__Group_1_1__0 ) )
            // InternalSqlParser.g:7362:1: ( rule__UsingCols__Group_1_1__0 )
            {
             before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:7363:1: ( rule__UsingCols__Group_1_1__0 )
            // InternalSqlParser.g:7363:2: rule__UsingCols__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__UsingCols__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:7366:1: ( ( rule__UsingCols__Group_1_1__0 )* )
            // InternalSqlParser.g:7367:1: ( rule__UsingCols__Group_1_1__0 )*
            {
             before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:7368:1: ( rule__UsingCols__Group_1_1__0 )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==Comma) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalSqlParser.g:7368:2: rule__UsingCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__UsingCols__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

             after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__0"
    // InternalSqlParser.g:7383:1: rule__UsingCols__Group_1_1__0 : rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 ;
    public final void rule__UsingCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7387:1: ( rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 )
            // InternalSqlParser.g:7388:2: rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__UsingCols__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0"


    // $ANTLR start "rule__UsingCols__Group_1_1__0__Impl"
    // InternalSqlParser.g:7395:1: rule__UsingCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UsingCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7399:1: ( ( Comma ) )
            // InternalSqlParser.g:7400:1: ( Comma )
            {
            // InternalSqlParser.g:7400:1: ( Comma )
            // InternalSqlParser.g:7401:1: Comma
            {
             before(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__1"
    // InternalSqlParser.g:7414:1: rule__UsingCols__Group_1_1__1 : rule__UsingCols__Group_1_1__1__Impl ;
    public final void rule__UsingCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7418:1: ( rule__UsingCols__Group_1_1__1__Impl )
            // InternalSqlParser.g:7419:2: rule__UsingCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1"


    // $ANTLR start "rule__UsingCols__Group_1_1__1__Impl"
    // InternalSqlParser.g:7425:1: rule__UsingCols__Group_1_1__1__Impl : ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UsingCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7429:1: ( ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:7430:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:7430:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:7431:1: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:7432:1: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:7432:2: rule__UsingCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__0"
    // InternalSqlParser.g:7446:1: rule__TableOrAlias__Group__0 : rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 ;
    public final void rule__TableOrAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7450:1: ( rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 )
            // InternalSqlParser.g:7451:2: rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__TableOrAlias__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0"


    // $ANTLR start "rule__TableOrAlias__Group__0__Impl"
    // InternalSqlParser.g:7458:1: rule__TableOrAlias__Group__0__Impl : ( ( rule__TableOrAlias__Alternatives_0 ) ) ;
    public final void rule__TableOrAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7462:1: ( ( ( rule__TableOrAlias__Alternatives_0 ) ) )
            // InternalSqlParser.g:7463:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            {
            // InternalSqlParser.g:7463:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            // InternalSqlParser.g:7464:1: ( rule__TableOrAlias__Alternatives_0 )
            {
             before(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 
            // InternalSqlParser.g:7465:1: ( rule__TableOrAlias__Alternatives_0 )
            // InternalSqlParser.g:7465:2: rule__TableOrAlias__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Alternatives_0();

            state._fsp--;


            }

             after(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__1"
    // InternalSqlParser.g:7475:1: rule__TableOrAlias__Group__1 : rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 ;
    public final void rule__TableOrAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7479:1: ( rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 )
            // InternalSqlParser.g:7480:2: rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2
            {
            pushFollow(FOLLOW_32);
            rule__TableOrAlias__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1"


    // $ANTLR start "rule__TableOrAlias__Group__1__Impl"
    // InternalSqlParser.g:7487:1: rule__TableOrAlias__Group__1__Impl : ( ( rule__TableOrAlias__Alternatives_1 )? ) ;
    public final void rule__TableOrAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7491:1: ( ( ( rule__TableOrAlias__Alternatives_1 )? ) )
            // InternalSqlParser.g:7492:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            {
            // InternalSqlParser.g:7492:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            // InternalSqlParser.g:7493:1: ( rule__TableOrAlias__Alternatives_1 )?
            {
             before(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 
            // InternalSqlParser.g:7494:1: ( rule__TableOrAlias__Alternatives_1 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==UNPIVOT||LA83_0==PIVOT) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSqlParser.g:7494:2: rule__TableOrAlias__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__2"
    // InternalSqlParser.g:7504:1: rule__TableOrAlias__Group__2 : rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 ;
    public final void rule__TableOrAlias__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7508:1: ( rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 )
            // InternalSqlParser.g:7509:2: rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__TableOrAlias__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2"


    // $ANTLR start "rule__TableOrAlias__Group__2__Impl"
    // InternalSqlParser.g:7516:1: rule__TableOrAlias__Group__2__Impl : ( ( rule__TableOrAlias__AliasAssignment_2 )? ) ;
    public final void rule__TableOrAlias__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7520:1: ( ( ( rule__TableOrAlias__AliasAssignment_2 )? ) )
            // InternalSqlParser.g:7521:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            {
            // InternalSqlParser.g:7521:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            // InternalSqlParser.g:7522:1: ( rule__TableOrAlias__AliasAssignment_2 )?
            {
             before(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 
            // InternalSqlParser.g:7523:1: ( rule__TableOrAlias__AliasAssignment_2 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==AS) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSqlParser.g:7523:2: rule__TableOrAlias__AliasAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__AliasAssignment_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__3"
    // InternalSqlParser.g:7533:1: rule__TableOrAlias__Group__3 : rule__TableOrAlias__Group__3__Impl ;
    public final void rule__TableOrAlias__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7537:1: ( rule__TableOrAlias__Group__3__Impl )
            // InternalSqlParser.g:7538:2: rule__TableOrAlias__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3"


    // $ANTLR start "rule__TableOrAlias__Group__3__Impl"
    // InternalSqlParser.g:7544:1: rule__TableOrAlias__Group__3__Impl : ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) ;
    public final void rule__TableOrAlias__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7548:1: ( ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) )
            // InternalSqlParser.g:7549:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            {
            // InternalSqlParser.g:7549:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            // InternalSqlParser.g:7550:1: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            {
             before(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 
            // InternalSqlParser.g:7551:1: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( ((LA85_0>=RULE_STRING && LA85_0<=RULE_ID)) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSqlParser.g:7551:2: rule__TableOrAlias__TblAliasAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TblAliasAssignment_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3__Impl"


    // $ANTLR start "rule__FromValues__Group__0"
    // InternalSqlParser.g:7569:1: rule__FromValues__Group__0 : rule__FromValues__Group__0__Impl rule__FromValues__Group__1 ;
    public final void rule__FromValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7573:1: ( rule__FromValues__Group__0__Impl rule__FromValues__Group__1 )
            // InternalSqlParser.g:7574:2: rule__FromValues__Group__0__Impl rule__FromValues__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__FromValues__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromValues__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__0"


    // $ANTLR start "rule__FromValues__Group__0__Impl"
    // InternalSqlParser.g:7581:1: rule__FromValues__Group__0__Impl : ( ( rule__FromValues__ValuesAssignment_0 ) ) ;
    public final void rule__FromValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7585:1: ( ( ( rule__FromValues__ValuesAssignment_0 ) ) )
            // InternalSqlParser.g:7586:1: ( ( rule__FromValues__ValuesAssignment_0 ) )
            {
            // InternalSqlParser.g:7586:1: ( ( rule__FromValues__ValuesAssignment_0 ) )
            // InternalSqlParser.g:7587:1: ( rule__FromValues__ValuesAssignment_0 )
            {
             before(grammarAccess.getFromValuesAccess().getValuesAssignment_0()); 
            // InternalSqlParser.g:7588:1: ( rule__FromValues__ValuesAssignment_0 )
            // InternalSqlParser.g:7588:2: rule__FromValues__ValuesAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__ValuesAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getFromValuesAccess().getValuesAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__0__Impl"


    // $ANTLR start "rule__FromValues__Group__1"
    // InternalSqlParser.g:7598:1: rule__FromValues__Group__1 : rule__FromValues__Group__1__Impl ;
    public final void rule__FromValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7602:1: ( rule__FromValues__Group__1__Impl )
            // InternalSqlParser.g:7603:2: rule__FromValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__1"


    // $ANTLR start "rule__FromValues__Group__1__Impl"
    // InternalSqlParser.g:7609:1: rule__FromValues__Group__1__Impl : ( ( rule__FromValues__CAssignment_1 )? ) ;
    public final void rule__FromValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7613:1: ( ( ( rule__FromValues__CAssignment_1 )? ) )
            // InternalSqlParser.g:7614:1: ( ( rule__FromValues__CAssignment_1 )? )
            {
            // InternalSqlParser.g:7614:1: ( ( rule__FromValues__CAssignment_1 )? )
            // InternalSqlParser.g:7615:1: ( rule__FromValues__CAssignment_1 )?
            {
             before(grammarAccess.getFromValuesAccess().getCAssignment_1()); 
            // InternalSqlParser.g:7616:1: ( rule__FromValues__CAssignment_1 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==RULE_ID) ) {
                int LA86_1 = input.LA(2);

                if ( (LA86_1==LeftParenthesis) ) {
                    alt86=1;
                }
            }
            switch (alt86) {
                case 1 :
                    // InternalSqlParser.g:7616:2: rule__FromValues__CAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromValues__CAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFromValuesAccess().getCAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__0"
    // InternalSqlParser.g:7630:1: rule__FromValuesColumns__Group__0 : rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1 ;
    public final void rule__FromValuesColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7634:1: ( rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1 )
            // InternalSqlParser.g:7635:2: rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__FromValuesColumns__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__0"


    // $ANTLR start "rule__FromValuesColumns__Group__0__Impl"
    // InternalSqlParser.g:7642:1: rule__FromValuesColumns__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FromValuesColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7646:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:7647:1: ( RULE_ID )
            {
            // InternalSqlParser.g:7647:1: ( RULE_ID )
            // InternalSqlParser.g:7648:1: RULE_ID
            {
             before(grammarAccess.getFromValuesColumnsAccess().getIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getFromValuesColumnsAccess().getIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__0__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__1"
    // InternalSqlParser.g:7659:1: rule__FromValuesColumns__Group__1 : rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2 ;
    public final void rule__FromValuesColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7663:1: ( rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2 )
            // InternalSqlParser.g:7664:2: rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__FromValuesColumns__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__1"


    // $ANTLR start "rule__FromValuesColumns__Group__1__Impl"
    // InternalSqlParser.g:7671:1: rule__FromValuesColumns__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FromValuesColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7675:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:7676:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:7676:1: ( LeftParenthesis )
            // InternalSqlParser.g:7677:1: LeftParenthesis
            {
             before(grammarAccess.getFromValuesColumnsAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getFromValuesColumnsAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__2"
    // InternalSqlParser.g:7690:1: rule__FromValuesColumns__Group__2 : rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3 ;
    public final void rule__FromValuesColumns__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7694:1: ( rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3 )
            // InternalSqlParser.g:7695:2: rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__FromValuesColumns__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__2"


    // $ANTLR start "rule__FromValuesColumns__Group__2__Impl"
    // InternalSqlParser.g:7702:1: rule__FromValuesColumns__Group__2__Impl : ( ( rule__FromValuesColumns__FvColsAssignment_2 ) ) ;
    public final void rule__FromValuesColumns__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7706:1: ( ( ( rule__FromValuesColumns__FvColsAssignment_2 ) ) )
            // InternalSqlParser.g:7707:1: ( ( rule__FromValuesColumns__FvColsAssignment_2 ) )
            {
            // InternalSqlParser.g:7707:1: ( ( rule__FromValuesColumns__FvColsAssignment_2 ) )
            // InternalSqlParser.g:7708:1: ( rule__FromValuesColumns__FvColsAssignment_2 )
            {
             before(grammarAccess.getFromValuesColumnsAccess().getFvColsAssignment_2()); 
            // InternalSqlParser.g:7709:1: ( rule__FromValuesColumns__FvColsAssignment_2 )
            // InternalSqlParser.g:7709:2: rule__FromValuesColumns__FvColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__FvColsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getFromValuesColumnsAccess().getFvColsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__2__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__3"
    // InternalSqlParser.g:7719:1: rule__FromValuesColumns__Group__3 : rule__FromValuesColumns__Group__3__Impl ;
    public final void rule__FromValuesColumns__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7723:1: ( rule__FromValuesColumns__Group__3__Impl )
            // InternalSqlParser.g:7724:2: rule__FromValuesColumns__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__3"


    // $ANTLR start "rule__FromValuesColumns__Group__3__Impl"
    // InternalSqlParser.g:7730:1: rule__FromValuesColumns__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FromValuesColumns__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7734:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:7735:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:7735:1: ( RightParenthesis )
            // InternalSqlParser.g:7736:1: RightParenthesis
            {
             before(grammarAccess.getFromValuesColumnsAccess().getRightParenthesisKeyword_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getFromValuesColumnsAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__3__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group__0"
    // InternalSqlParser.g:7757:1: rule__FromValuesColumnNames__Group__0 : rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1 ;
    public final void rule__FromValuesColumnNames__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7761:1: ( rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1 )
            // InternalSqlParser.g:7762:2: rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__FromValuesColumnNames__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group__0__Impl"
    // InternalSqlParser.g:7769:1: rule__FromValuesColumnNames__Group__0__Impl : ( ruleColumnName ) ;
    public final void rule__FromValuesColumnNames__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7773:1: ( ( ruleColumnName ) )
            // InternalSqlParser.g:7774:1: ( ruleColumnName )
            {
            // InternalSqlParser.g:7774:1: ( ruleColumnName )
            // InternalSqlParser.g:7775:1: ruleColumnName
            {
             before(grammarAccess.getFromValuesColumnNamesAccess().getColumnNameParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;

             after(grammarAccess.getFromValuesColumnNamesAccess().getColumnNameParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group__1"
    // InternalSqlParser.g:7786:1: rule__FromValuesColumnNames__Group__1 : rule__FromValuesColumnNames__Group__1__Impl ;
    public final void rule__FromValuesColumnNames__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7790:1: ( rule__FromValuesColumnNames__Group__1__Impl )
            // InternalSqlParser.g:7791:2: rule__FromValuesColumnNames__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group__1__Impl"
    // InternalSqlParser.g:7797:1: rule__FromValuesColumnNames__Group__1__Impl : ( ( rule__FromValuesColumnNames__Group_1__0 )? ) ;
    public final void rule__FromValuesColumnNames__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7801:1: ( ( ( rule__FromValuesColumnNames__Group_1__0 )? ) )
            // InternalSqlParser.g:7802:1: ( ( rule__FromValuesColumnNames__Group_1__0 )? )
            {
            // InternalSqlParser.g:7802:1: ( ( rule__FromValuesColumnNames__Group_1__0 )? )
            // InternalSqlParser.g:7803:1: ( rule__FromValuesColumnNames__Group_1__0 )?
            {
             before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1()); 
            // InternalSqlParser.g:7804:1: ( rule__FromValuesColumnNames__Group_1__0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==Comma) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalSqlParser.g:7804:2: rule__FromValuesColumnNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromValuesColumnNames__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__0"
    // InternalSqlParser.g:7818:1: rule__FromValuesColumnNames__Group_1__0 : rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1 ;
    public final void rule__FromValuesColumnNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7822:1: ( rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1 )
            // InternalSqlParser.g:7823:2: rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__FromValuesColumnNames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__0__Impl"
    // InternalSqlParser.g:7830:1: rule__FromValuesColumnNames__Group_1__0__Impl : ( () ) ;
    public final void rule__FromValuesColumnNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7834:1: ( ( () ) )
            // InternalSqlParser.g:7835:1: ( () )
            {
            // InternalSqlParser.g:7835:1: ( () )
            // InternalSqlParser.g:7836:1: ()
            {
             before(grammarAccess.getFromValuesColumnNamesAccess().getAbcEntriesAction_1_0()); 
            // InternalSqlParser.g:7837:1: ()
            // InternalSqlParser.g:7839:1: 
            {
            }

             after(grammarAccess.getFromValuesColumnNamesAccess().getAbcEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__1"
    // InternalSqlParser.g:7849:1: rule__FromValuesColumnNames__Group_1__1 : rule__FromValuesColumnNames__Group_1__1__Impl ;
    public final void rule__FromValuesColumnNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7853:1: ( rule__FromValuesColumnNames__Group_1__1__Impl )
            // InternalSqlParser.g:7854:2: rule__FromValuesColumnNames__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__1__Impl"
    // InternalSqlParser.g:7860:1: rule__FromValuesColumnNames__Group_1__1__Impl : ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) ) ;
    public final void rule__FromValuesColumnNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7864:1: ( ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:7865:1: ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:7865:1: ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) )
            // InternalSqlParser.g:7866:1: ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:7866:1: ( ( rule__FromValuesColumnNames__Group_1_1__0 ) )
            // InternalSqlParser.g:7867:1: ( rule__FromValuesColumnNames__Group_1_1__0 )
            {
             before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            // InternalSqlParser.g:7868:1: ( rule__FromValuesColumnNames__Group_1_1__0 )
            // InternalSqlParser.g:7868:2: rule__FromValuesColumnNames__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__FromValuesColumnNames__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:7871:1: ( ( rule__FromValuesColumnNames__Group_1_1__0 )* )
            // InternalSqlParser.g:7872:1: ( rule__FromValuesColumnNames__Group_1_1__0 )*
            {
             before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            // InternalSqlParser.g:7873:1: ( rule__FromValuesColumnNames__Group_1_1__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==Comma) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalSqlParser.g:7873:2: rule__FromValuesColumnNames__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__FromValuesColumnNames__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

             after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__1__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__0"
    // InternalSqlParser.g:7888:1: rule__FromValuesColumnNames__Group_1_1__0 : rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1 ;
    public final void rule__FromValuesColumnNames__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7892:1: ( rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1 )
            // InternalSqlParser.g:7893:2: rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1
            {
            pushFollow(FOLLOW_34);
            rule__FromValuesColumnNames__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__0__Impl"
    // InternalSqlParser.g:7900:1: rule__FromValuesColumnNames__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__FromValuesColumnNames__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7904:1: ( ( Comma ) )
            // InternalSqlParser.g:7905:1: ( Comma )
            {
            // InternalSqlParser.g:7905:1: ( Comma )
            // InternalSqlParser.g:7906:1: Comma
            {
             before(grammarAccess.getFromValuesColumnNamesAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getFromValuesColumnNamesAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__1"
    // InternalSqlParser.g:7919:1: rule__FromValuesColumnNames__Group_1_1__1 : rule__FromValuesColumnNames__Group_1_1__1__Impl ;
    public final void rule__FromValuesColumnNames__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7923:1: ( rule__FromValuesColumnNames__Group_1_1__1__Impl )
            // InternalSqlParser.g:7924:2: rule__FromValuesColumnNames__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__1__Impl"
    // InternalSqlParser.g:7930:1: rule__FromValuesColumnNames__Group_1_1__1__Impl : ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__FromValuesColumnNames__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7934:1: ( ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:7935:1: ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:7935:1: ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:7936:1: ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getFromValuesColumnNamesAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:7937:1: ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:7937:2: rule__FromValuesColumnNames__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getFromValuesColumnNamesAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__1__Impl"


    // $ANTLR start "rule__Values__Group__0"
    // InternalSqlParser.g:7951:1: rule__Values__Group__0 : rule__Values__Group__0__Impl rule__Values__Group__1 ;
    public final void rule__Values__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7955:1: ( rule__Values__Group__0__Impl rule__Values__Group__1 )
            // InternalSqlParser.g:7956:2: rule__Values__Group__0__Impl rule__Values__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__Values__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Values__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__0"


    // $ANTLR start "rule__Values__Group__0__Impl"
    // InternalSqlParser.g:7963:1: rule__Values__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Values__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7967:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:7968:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:7968:1: ( LeftParenthesis )
            // InternalSqlParser.g:7969:1: LeftParenthesis
            {
             before(grammarAccess.getValuesAccess().getLeftParenthesisKeyword_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getValuesAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__0__Impl"


    // $ANTLR start "rule__Values__Group__1"
    // InternalSqlParser.g:7982:1: rule__Values__Group__1 : rule__Values__Group__1__Impl rule__Values__Group__2 ;
    public final void rule__Values__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7986:1: ( rule__Values__Group__1__Impl rule__Values__Group__2 )
            // InternalSqlParser.g:7987:2: rule__Values__Group__1__Impl rule__Values__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__Values__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Values__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__1"


    // $ANTLR start "rule__Values__Group__1__Impl"
    // InternalSqlParser.g:7994:1: rule__Values__Group__1__Impl : ( VALUES ) ;
    public final void rule__Values__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7998:1: ( ( VALUES ) )
            // InternalSqlParser.g:7999:1: ( VALUES )
            {
            // InternalSqlParser.g:7999:1: ( VALUES )
            // InternalSqlParser.g:8000:1: VALUES
            {
             before(grammarAccess.getValuesAccess().getVALUESKeyword_1()); 
            match(input,VALUES,FOLLOW_2); 
             after(grammarAccess.getValuesAccess().getVALUESKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__1__Impl"


    // $ANTLR start "rule__Values__Group__2"
    // InternalSqlParser.g:8013:1: rule__Values__Group__2 : rule__Values__Group__2__Impl rule__Values__Group__3 ;
    public final void rule__Values__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8017:1: ( rule__Values__Group__2__Impl rule__Values__Group__3 )
            // InternalSqlParser.g:8018:2: rule__Values__Group__2__Impl rule__Values__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__Values__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Values__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__2"


    // $ANTLR start "rule__Values__Group__2__Impl"
    // InternalSqlParser.g:8025:1: rule__Values__Group__2__Impl : ( ( rule__Values__RowsAssignment_2 ) ) ;
    public final void rule__Values__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8029:1: ( ( ( rule__Values__RowsAssignment_2 ) ) )
            // InternalSqlParser.g:8030:1: ( ( rule__Values__RowsAssignment_2 ) )
            {
            // InternalSqlParser.g:8030:1: ( ( rule__Values__RowsAssignment_2 ) )
            // InternalSqlParser.g:8031:1: ( rule__Values__RowsAssignment_2 )
            {
             before(grammarAccess.getValuesAccess().getRowsAssignment_2()); 
            // InternalSqlParser.g:8032:1: ( rule__Values__RowsAssignment_2 )
            // InternalSqlParser.g:8032:2: rule__Values__RowsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Values__RowsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getValuesAccess().getRowsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__2__Impl"


    // $ANTLR start "rule__Values__Group__3"
    // InternalSqlParser.g:8042:1: rule__Values__Group__3 : rule__Values__Group__3__Impl ;
    public final void rule__Values__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8046:1: ( rule__Values__Group__3__Impl )
            // InternalSqlParser.g:8047:2: rule__Values__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Values__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__3"


    // $ANTLR start "rule__Values__Group__3__Impl"
    // InternalSqlParser.g:8053:1: rule__Values__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__Values__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8057:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:8058:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:8058:1: ( RightParenthesis )
            // InternalSqlParser.g:8059:1: RightParenthesis
            {
             before(grammarAccess.getValuesAccess().getRightParenthesisKeyword_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getValuesAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__3__Impl"


    // $ANTLR start "rule__Rows__Group__0"
    // InternalSqlParser.g:8080:1: rule__Rows__Group__0 : rule__Rows__Group__0__Impl rule__Rows__Group__1 ;
    public final void rule__Rows__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8084:1: ( rule__Rows__Group__0__Impl rule__Rows__Group__1 )
            // InternalSqlParser.g:8085:2: rule__Rows__Group__0__Impl rule__Rows__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Rows__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Rows__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__0"


    // $ANTLR start "rule__Rows__Group__0__Impl"
    // InternalSqlParser.g:8092:1: rule__Rows__Group__0__Impl : ( ruleRow ) ;
    public final void rule__Rows__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8096:1: ( ( ruleRow ) )
            // InternalSqlParser.g:8097:1: ( ruleRow )
            {
            // InternalSqlParser.g:8097:1: ( ruleRow )
            // InternalSqlParser.g:8098:1: ruleRow
            {
             before(grammarAccess.getRowsAccess().getRowParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleRow();

            state._fsp--;

             after(grammarAccess.getRowsAccess().getRowParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__0__Impl"


    // $ANTLR start "rule__Rows__Group__1"
    // InternalSqlParser.g:8109:1: rule__Rows__Group__1 : rule__Rows__Group__1__Impl ;
    public final void rule__Rows__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8113:1: ( rule__Rows__Group__1__Impl )
            // InternalSqlParser.g:8114:2: rule__Rows__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__1"


    // $ANTLR start "rule__Rows__Group__1__Impl"
    // InternalSqlParser.g:8120:1: rule__Rows__Group__1__Impl : ( ( rule__Rows__Group_1__0 )? ) ;
    public final void rule__Rows__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8124:1: ( ( ( rule__Rows__Group_1__0 )? ) )
            // InternalSqlParser.g:8125:1: ( ( rule__Rows__Group_1__0 )? )
            {
            // InternalSqlParser.g:8125:1: ( ( rule__Rows__Group_1__0 )? )
            // InternalSqlParser.g:8126:1: ( rule__Rows__Group_1__0 )?
            {
             before(grammarAccess.getRowsAccess().getGroup_1()); 
            // InternalSqlParser.g:8127:1: ( rule__Rows__Group_1__0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==Comma) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalSqlParser.g:8127:2: rule__Rows__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Rows__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getRowsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__1__Impl"


    // $ANTLR start "rule__Rows__Group_1__0"
    // InternalSqlParser.g:8141:1: rule__Rows__Group_1__0 : rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1 ;
    public final void rule__Rows__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8145:1: ( rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1 )
            // InternalSqlParser.g:8146:2: rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Rows__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Rows__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__0"


    // $ANTLR start "rule__Rows__Group_1__0__Impl"
    // InternalSqlParser.g:8153:1: rule__Rows__Group_1__0__Impl : ( () ) ;
    public final void rule__Rows__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8157:1: ( ( () ) )
            // InternalSqlParser.g:8158:1: ( () )
            {
            // InternalSqlParser.g:8158:1: ( () )
            // InternalSqlParser.g:8159:1: ()
            {
             before(grammarAccess.getRowsAccess().getRowsEntriesAction_1_0()); 
            // InternalSqlParser.g:8160:1: ()
            // InternalSqlParser.g:8162:1: 
            {
            }

             after(grammarAccess.getRowsAccess().getRowsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__0__Impl"


    // $ANTLR start "rule__Rows__Group_1__1"
    // InternalSqlParser.g:8172:1: rule__Rows__Group_1__1 : rule__Rows__Group_1__1__Impl ;
    public final void rule__Rows__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8176:1: ( rule__Rows__Group_1__1__Impl )
            // InternalSqlParser.g:8177:2: rule__Rows__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__1"


    // $ANTLR start "rule__Rows__Group_1__1__Impl"
    // InternalSqlParser.g:8183:1: rule__Rows__Group_1__1__Impl : ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) ) ;
    public final void rule__Rows__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8187:1: ( ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:8188:1: ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:8188:1: ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) )
            // InternalSqlParser.g:8189:1: ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:8189:1: ( ( rule__Rows__Group_1_1__0 ) )
            // InternalSqlParser.g:8190:1: ( rule__Rows__Group_1_1__0 )
            {
             before(grammarAccess.getRowsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:8191:1: ( rule__Rows__Group_1_1__0 )
            // InternalSqlParser.g:8191:2: rule__Rows__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__Rows__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getRowsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:8194:1: ( ( rule__Rows__Group_1_1__0 )* )
            // InternalSqlParser.g:8195:1: ( rule__Rows__Group_1_1__0 )*
            {
             before(grammarAccess.getRowsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:8196:1: ( rule__Rows__Group_1_1__0 )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==Comma) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalSqlParser.g:8196:2: rule__Rows__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__Rows__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

             after(grammarAccess.getRowsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__1__Impl"


    // $ANTLR start "rule__Rows__Group_1_1__0"
    // InternalSqlParser.g:8211:1: rule__Rows__Group_1_1__0 : rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1 ;
    public final void rule__Rows__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8215:1: ( rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1 )
            // InternalSqlParser.g:8216:2: rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1
            {
            pushFollow(FOLLOW_30);
            rule__Rows__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Rows__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__0"


    // $ANTLR start "rule__Rows__Group_1_1__0__Impl"
    // InternalSqlParser.g:8223:1: rule__Rows__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Rows__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8227:1: ( ( Comma ) )
            // InternalSqlParser.g:8228:1: ( Comma )
            {
            // InternalSqlParser.g:8228:1: ( Comma )
            // InternalSqlParser.g:8229:1: Comma
            {
             before(grammarAccess.getRowsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getRowsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__0__Impl"


    // $ANTLR start "rule__Rows__Group_1_1__1"
    // InternalSqlParser.g:8242:1: rule__Rows__Group_1_1__1 : rule__Rows__Group_1_1__1__Impl ;
    public final void rule__Rows__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8246:1: ( rule__Rows__Group_1_1__1__Impl )
            // InternalSqlParser.g:8247:2: rule__Rows__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__1"


    // $ANTLR start "rule__Rows__Group_1_1__1__Impl"
    // InternalSqlParser.g:8253:1: rule__Rows__Group_1_1__1__Impl : ( ( rule__Rows__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Rows__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8257:1: ( ( ( rule__Rows__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:8258:1: ( ( rule__Rows__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:8258:1: ( ( rule__Rows__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:8259:1: ( rule__Rows__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getRowsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:8260:1: ( rule__Rows__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:8260:2: rule__Rows__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Rows__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getRowsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__1__Impl"


    // $ANTLR start "rule__Row__Group__0"
    // InternalSqlParser.g:8274:1: rule__Row__Group__0 : rule__Row__Group__0__Impl rule__Row__Group__1 ;
    public final void rule__Row__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8278:1: ( rule__Row__Group__0__Impl rule__Row__Group__1 )
            // InternalSqlParser.g:8279:2: rule__Row__Group__0__Impl rule__Row__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__Row__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Row__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__0"


    // $ANTLR start "rule__Row__Group__0__Impl"
    // InternalSqlParser.g:8286:1: rule__Row__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Row__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8290:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:8291:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:8291:1: ( LeftParenthesis )
            // InternalSqlParser.g:8292:1: LeftParenthesis
            {
             before(grammarAccess.getRowAccess().getLeftParenthesisKeyword_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getRowAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__0__Impl"


    // $ANTLR start "rule__Row__Group__1"
    // InternalSqlParser.g:8305:1: rule__Row__Group__1 : rule__Row__Group__1__Impl rule__Row__Group__2 ;
    public final void rule__Row__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8309:1: ( rule__Row__Group__1__Impl rule__Row__Group__2 )
            // InternalSqlParser.g:8310:2: rule__Row__Group__1__Impl rule__Row__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__Row__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Row__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__1"


    // $ANTLR start "rule__Row__Group__1__Impl"
    // InternalSqlParser.g:8317:1: rule__Row__Group__1__Impl : ( ( rule__Row__RowValuesAssignment_1 ) ) ;
    public final void rule__Row__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8321:1: ( ( ( rule__Row__RowValuesAssignment_1 ) ) )
            // InternalSqlParser.g:8322:1: ( ( rule__Row__RowValuesAssignment_1 ) )
            {
            // InternalSqlParser.g:8322:1: ( ( rule__Row__RowValuesAssignment_1 ) )
            // InternalSqlParser.g:8323:1: ( rule__Row__RowValuesAssignment_1 )
            {
             before(grammarAccess.getRowAccess().getRowValuesAssignment_1()); 
            // InternalSqlParser.g:8324:1: ( rule__Row__RowValuesAssignment_1 )
            // InternalSqlParser.g:8324:2: rule__Row__RowValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Row__RowValuesAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getRowAccess().getRowValuesAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__1__Impl"


    // $ANTLR start "rule__Row__Group__2"
    // InternalSqlParser.g:8334:1: rule__Row__Group__2 : rule__Row__Group__2__Impl ;
    public final void rule__Row__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8338:1: ( rule__Row__Group__2__Impl )
            // InternalSqlParser.g:8339:2: rule__Row__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Row__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__2"


    // $ANTLR start "rule__Row__Group__2__Impl"
    // InternalSqlParser.g:8345:1: rule__Row__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__Row__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8349:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:8350:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:8350:1: ( RightParenthesis )
            // InternalSqlParser.g:8351:1: RightParenthesis
            {
             before(grammarAccess.getRowAccess().getRightParenthesisKeyword_2()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getRowAccess().getRightParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__2__Impl"


    // $ANTLR start "rule__RowValues__Group__0"
    // InternalSqlParser.g:8370:1: rule__RowValues__Group__0 : rule__RowValues__Group__0__Impl rule__RowValues__Group__1 ;
    public final void rule__RowValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8374:1: ( rule__RowValues__Group__0__Impl rule__RowValues__Group__1 )
            // InternalSqlParser.g:8375:2: rule__RowValues__Group__0__Impl rule__RowValues__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__RowValues__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RowValues__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__0"


    // $ANTLR start "rule__RowValues__Group__0__Impl"
    // InternalSqlParser.g:8382:1: rule__RowValues__Group__0__Impl : ( ruleRowValue ) ;
    public final void rule__RowValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8386:1: ( ( ruleRowValue ) )
            // InternalSqlParser.g:8387:1: ( ruleRowValue )
            {
            // InternalSqlParser.g:8387:1: ( ruleRowValue )
            // InternalSqlParser.g:8388:1: ruleRowValue
            {
             before(grammarAccess.getRowValuesAccess().getRowValueParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleRowValue();

            state._fsp--;

             after(grammarAccess.getRowValuesAccess().getRowValueParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__0__Impl"


    // $ANTLR start "rule__RowValues__Group__1"
    // InternalSqlParser.g:8399:1: rule__RowValues__Group__1 : rule__RowValues__Group__1__Impl ;
    public final void rule__RowValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8403:1: ( rule__RowValues__Group__1__Impl )
            // InternalSqlParser.g:8404:2: rule__RowValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__1"


    // $ANTLR start "rule__RowValues__Group__1__Impl"
    // InternalSqlParser.g:8410:1: rule__RowValues__Group__1__Impl : ( ( rule__RowValues__Group_1__0 )? ) ;
    public final void rule__RowValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8414:1: ( ( ( rule__RowValues__Group_1__0 )? ) )
            // InternalSqlParser.g:8415:1: ( ( rule__RowValues__Group_1__0 )? )
            {
            // InternalSqlParser.g:8415:1: ( ( rule__RowValues__Group_1__0 )? )
            // InternalSqlParser.g:8416:1: ( rule__RowValues__Group_1__0 )?
            {
             before(grammarAccess.getRowValuesAccess().getGroup_1()); 
            // InternalSqlParser.g:8417:1: ( rule__RowValues__Group_1__0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==Comma) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalSqlParser.g:8417:2: rule__RowValues__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RowValues__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getRowValuesAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__1__Impl"


    // $ANTLR start "rule__RowValues__Group_1__0"
    // InternalSqlParser.g:8431:1: rule__RowValues__Group_1__0 : rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1 ;
    public final void rule__RowValues__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8435:1: ( rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1 )
            // InternalSqlParser.g:8436:2: rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__RowValues__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__0"


    // $ANTLR start "rule__RowValues__Group_1__0__Impl"
    // InternalSqlParser.g:8443:1: rule__RowValues__Group_1__0__Impl : ( () ) ;
    public final void rule__RowValues__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8447:1: ( ( () ) )
            // InternalSqlParser.g:8448:1: ( () )
            {
            // InternalSqlParser.g:8448:1: ( () )
            // InternalSqlParser.g:8449:1: ()
            {
             before(grammarAccess.getRowValuesAccess().getRowValuesEntriesAction_1_0()); 
            // InternalSqlParser.g:8450:1: ()
            // InternalSqlParser.g:8452:1: 
            {
            }

             after(grammarAccess.getRowValuesAccess().getRowValuesEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__0__Impl"


    // $ANTLR start "rule__RowValues__Group_1__1"
    // InternalSqlParser.g:8462:1: rule__RowValues__Group_1__1 : rule__RowValues__Group_1__1__Impl ;
    public final void rule__RowValues__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8466:1: ( rule__RowValues__Group_1__1__Impl )
            // InternalSqlParser.g:8467:2: rule__RowValues__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__1"


    // $ANTLR start "rule__RowValues__Group_1__1__Impl"
    // InternalSqlParser.g:8473:1: rule__RowValues__Group_1__1__Impl : ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) ) ;
    public final void rule__RowValues__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8477:1: ( ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:8478:1: ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:8478:1: ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) )
            // InternalSqlParser.g:8479:1: ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:8479:1: ( ( rule__RowValues__Group_1_1__0 ) )
            // InternalSqlParser.g:8480:1: ( rule__RowValues__Group_1_1__0 )
            {
             before(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            // InternalSqlParser.g:8481:1: ( rule__RowValues__Group_1_1__0 )
            // InternalSqlParser.g:8481:2: rule__RowValues__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__RowValues__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getRowValuesAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:8484:1: ( ( rule__RowValues__Group_1_1__0 )* )
            // InternalSqlParser.g:8485:1: ( rule__RowValues__Group_1_1__0 )*
            {
             before(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            // InternalSqlParser.g:8486:1: ( rule__RowValues__Group_1_1__0 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==Comma) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalSqlParser.g:8486:2: rule__RowValues__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__RowValues__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

             after(grammarAccess.getRowValuesAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__1__Impl"


    // $ANTLR start "rule__RowValues__Group_1_1__0"
    // InternalSqlParser.g:8501:1: rule__RowValues__Group_1_1__0 : rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1 ;
    public final void rule__RowValues__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8505:1: ( rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1 )
            // InternalSqlParser.g:8506:2: rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1
            {
            pushFollow(FOLLOW_36);
            rule__RowValues__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__0"


    // $ANTLR start "rule__RowValues__Group_1_1__0__Impl"
    // InternalSqlParser.g:8513:1: rule__RowValues__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__RowValues__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8517:1: ( ( Comma ) )
            // InternalSqlParser.g:8518:1: ( Comma )
            {
            // InternalSqlParser.g:8518:1: ( Comma )
            // InternalSqlParser.g:8519:1: Comma
            {
             before(grammarAccess.getRowValuesAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getRowValuesAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__0__Impl"


    // $ANTLR start "rule__RowValues__Group_1_1__1"
    // InternalSqlParser.g:8532:1: rule__RowValues__Group_1_1__1 : rule__RowValues__Group_1_1__1__Impl ;
    public final void rule__RowValues__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8536:1: ( rule__RowValues__Group_1_1__1__Impl )
            // InternalSqlParser.g:8537:2: rule__RowValues__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__1"


    // $ANTLR start "rule__RowValues__Group_1_1__1__Impl"
    // InternalSqlParser.g:8543:1: rule__RowValues__Group_1_1__1__Impl : ( ( rule__RowValues__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__RowValues__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8547:1: ( ( ( rule__RowValues__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:8548:1: ( ( rule__RowValues__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:8548:1: ( ( rule__RowValues__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:8549:1: ( rule__RowValues__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getRowValuesAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:8550:1: ( rule__RowValues__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:8550:2: rule__RowValues__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getRowValuesAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__0"
    // InternalSqlParser.g:8564:1: rule__PivotTable__Group__0 : rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 ;
    public final void rule__PivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8568:1: ( rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 )
            // InternalSqlParser.g:8569:2: rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__PivotTable__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0"


    // $ANTLR start "rule__PivotTable__Group__0__Impl"
    // InternalSqlParser.g:8576:1: rule__PivotTable__Group__0__Impl : ( PIVOT ) ;
    public final void rule__PivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8580:1: ( ( PIVOT ) )
            // InternalSqlParser.g:8581:1: ( PIVOT )
            {
            // InternalSqlParser.g:8581:1: ( PIVOT )
            // InternalSqlParser.g:8582:1: PIVOT
            {
             before(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 
            match(input,PIVOT,FOLLOW_2); 
             after(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0__Impl"


    // $ANTLR start "rule__PivotTable__Group__1"
    // InternalSqlParser.g:8595:1: rule__PivotTable__Group__1 : rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 ;
    public final void rule__PivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8599:1: ( rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 )
            // InternalSqlParser.g:8600:2: rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2
            {
            pushFollow(FOLLOW_37);
            rule__PivotTable__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1"


    // $ANTLR start "rule__PivotTable__Group__1__Impl"
    // InternalSqlParser.g:8607:1: rule__PivotTable__Group__1__Impl : ( ( XML )? ) ;
    public final void rule__PivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8611:1: ( ( ( XML )? ) )
            // InternalSqlParser.g:8612:1: ( ( XML )? )
            {
            // InternalSqlParser.g:8612:1: ( ( XML )? )
            // InternalSqlParser.g:8613:1: ( XML )?
            {
             before(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 
            // InternalSqlParser.g:8614:1: ( XML )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==XML) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalSqlParser.g:8615:2: XML
                    {
                    match(input,XML,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__2"
    // InternalSqlParser.g:8626:1: rule__PivotTable__Group__2 : rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 ;
    public final void rule__PivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8630:1: ( rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 )
            // InternalSqlParser.g:8631:2: rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__PivotTable__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2"


    // $ANTLR start "rule__PivotTable__Group__2__Impl"
    // InternalSqlParser.g:8638:1: rule__PivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8642:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:8643:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:8643:1: ( LeftParenthesis )
            // InternalSqlParser.g:8644:1: LeftParenthesis
            {
             before(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2__Impl"


    // $ANTLR start "rule__PivotTable__Group__3"
    // InternalSqlParser.g:8657:1: rule__PivotTable__Group__3 : rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 ;
    public final void rule__PivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8661:1: ( rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 )
            // InternalSqlParser.g:8662:2: rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4
            {
            pushFollow(FOLLOW_38);
            rule__PivotTable__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3"


    // $ANTLR start "rule__PivotTable__Group__3__Impl"
    // InternalSqlParser.g:8669:1: rule__PivotTable__Group__3__Impl : ( ( rule__PivotTable__PfunAssignment_3 ) ) ;
    public final void rule__PivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8673:1: ( ( ( rule__PivotTable__PfunAssignment_3 ) ) )
            // InternalSqlParser.g:8674:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            {
            // InternalSqlParser.g:8674:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            // InternalSqlParser.g:8675:1: ( rule__PivotTable__PfunAssignment_3 )
            {
             before(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 
            // InternalSqlParser.g:8676:1: ( rule__PivotTable__PfunAssignment_3 )
            // InternalSqlParser.g:8676:2: rule__PivotTable__PfunAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PfunAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3__Impl"


    // $ANTLR start "rule__PivotTable__Group__4"
    // InternalSqlParser.g:8686:1: rule__PivotTable__Group__4 : rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 ;
    public final void rule__PivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8690:1: ( rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 )
            // InternalSqlParser.g:8691:2: rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5
            {
            pushFollow(FOLLOW_39);
            rule__PivotTable__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4"


    // $ANTLR start "rule__PivotTable__Group__4__Impl"
    // InternalSqlParser.g:8698:1: rule__PivotTable__Group__4__Impl : ( ( rule__PivotTable__PforAssignment_4 ) ) ;
    public final void rule__PivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8702:1: ( ( ( rule__PivotTable__PforAssignment_4 ) ) )
            // InternalSqlParser.g:8703:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            {
            // InternalSqlParser.g:8703:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            // InternalSqlParser.g:8704:1: ( rule__PivotTable__PforAssignment_4 )
            {
             before(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 
            // InternalSqlParser.g:8705:1: ( rule__PivotTable__PforAssignment_4 )
            // InternalSqlParser.g:8705:2: rule__PivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PforAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4__Impl"


    // $ANTLR start "rule__PivotTable__Group__5"
    // InternalSqlParser.g:8715:1: rule__PivotTable__Group__5 : rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 ;
    public final void rule__PivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8719:1: ( rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 )
            // InternalSqlParser.g:8720:2: rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6
            {
            pushFollow(FOLLOW_31);
            rule__PivotTable__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5"


    // $ANTLR start "rule__PivotTable__Group__5__Impl"
    // InternalSqlParser.g:8727:1: rule__PivotTable__Group__5__Impl : ( ( rule__PivotTable__PinAssignment_5 ) ) ;
    public final void rule__PivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8731:1: ( ( ( rule__PivotTable__PinAssignment_5 ) ) )
            // InternalSqlParser.g:8732:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            {
            // InternalSqlParser.g:8732:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            // InternalSqlParser.g:8733:1: ( rule__PivotTable__PinAssignment_5 )
            {
             before(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 
            // InternalSqlParser.g:8734:1: ( rule__PivotTable__PinAssignment_5 )
            // InternalSqlParser.g:8734:2: rule__PivotTable__PinAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PinAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5__Impl"


    // $ANTLR start "rule__PivotTable__Group__6"
    // InternalSqlParser.g:8744:1: rule__PivotTable__Group__6 : rule__PivotTable__Group__6__Impl ;
    public final void rule__PivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8748:1: ( rule__PivotTable__Group__6__Impl )
            // InternalSqlParser.g:8749:2: rule__PivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6"


    // $ANTLR start "rule__PivotTable__Group__6__Impl"
    // InternalSqlParser.g:8755:1: rule__PivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__PivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8759:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:8760:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:8760:1: ( RightParenthesis )
            // InternalSqlParser.g:8761:1: RightParenthesis
            {
             before(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6__Impl"


    // $ANTLR start "rule__PivotInClause__Group__0"
    // InternalSqlParser.g:8789:1: rule__PivotInClause__Group__0 : rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 ;
    public final void rule__PivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8793:1: ( rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 )
            // InternalSqlParser.g:8794:2: rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__PivotInClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0"


    // $ANTLR start "rule__PivotInClause__Group__0__Impl"
    // InternalSqlParser.g:8801:1: rule__PivotInClause__Group__0__Impl : ( IN ) ;
    public final void rule__PivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8805:1: ( ( IN ) )
            // InternalSqlParser.g:8806:1: ( IN )
            {
            // InternalSqlParser.g:8806:1: ( IN )
            // InternalSqlParser.g:8807:1: IN
            {
             before(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 
            match(input,IN,FOLLOW_2); 
             after(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0__Impl"


    // $ANTLR start "rule__PivotInClause__Group__1"
    // InternalSqlParser.g:8820:1: rule__PivotInClause__Group__1 : rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 ;
    public final void rule__PivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8824:1: ( rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 )
            // InternalSqlParser.g:8825:2: rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2
            {
            pushFollow(FOLLOW_40);
            rule__PivotInClause__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1"


    // $ANTLR start "rule__PivotInClause__Group__1__Impl"
    // InternalSqlParser.g:8832:1: rule__PivotInClause__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8836:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:8837:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:8837:1: ( LeftParenthesis )
            // InternalSqlParser.g:8838:1: LeftParenthesis
            {
             before(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1__Impl"


    // $ANTLR start "rule__PivotInClause__Group__2"
    // InternalSqlParser.g:8851:1: rule__PivotInClause__Group__2 : rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 ;
    public final void rule__PivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8855:1: ( rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 )
            // InternalSqlParser.g:8856:2: rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__PivotInClause__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2"


    // $ANTLR start "rule__PivotInClause__Group__2__Impl"
    // InternalSqlParser.g:8863:1: rule__PivotInClause__Group__2__Impl : ( ( rule__PivotInClause__Alternatives_2 ) ) ;
    public final void rule__PivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8867:1: ( ( ( rule__PivotInClause__Alternatives_2 ) ) )
            // InternalSqlParser.g:8868:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            {
            // InternalSqlParser.g:8868:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            // InternalSqlParser.g:8869:1: ( rule__PivotInClause__Alternatives_2 )
            {
             before(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 
            // InternalSqlParser.g:8870:1: ( rule__PivotInClause__Alternatives_2 )
            // InternalSqlParser.g:8870:2: rule__PivotInClause__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Alternatives_2();

            state._fsp--;


            }

             after(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2__Impl"


    // $ANTLR start "rule__PivotInClause__Group__3"
    // InternalSqlParser.g:8880:1: rule__PivotInClause__Group__3 : rule__PivotInClause__Group__3__Impl ;
    public final void rule__PivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8884:1: ( rule__PivotInClause__Group__3__Impl )
            // InternalSqlParser.g:8885:2: rule__PivotInClause__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3"


    // $ANTLR start "rule__PivotInClause__Group__3__Impl"
    // InternalSqlParser.g:8891:1: rule__PivotInClause__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__PivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8895:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:8896:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:8896:1: ( RightParenthesis )
            // InternalSqlParser.g:8897:1: RightParenthesis
            {
             before(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__0"
    // InternalSqlParser.g:8918:1: rule__PivotInClauseAny__Group__0 : rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 ;
    public final void rule__PivotInClauseAny__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8922:1: ( rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 )
            // InternalSqlParser.g:8923:2: rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__PivotInClauseAny__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0"


    // $ANTLR start "rule__PivotInClauseAny__Group__0__Impl"
    // InternalSqlParser.g:8930:1: rule__PivotInClauseAny__Group__0__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8934:1: ( ( ANY ) )
            // InternalSqlParser.g:8935:1: ( ANY )
            {
            // InternalSqlParser.g:8935:1: ( ANY )
            // InternalSqlParser.g:8936:1: ANY
            {
             before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 
            match(input,ANY,FOLLOW_2); 
             after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__1"
    // InternalSqlParser.g:8949:1: rule__PivotInClauseAny__Group__1 : rule__PivotInClauseAny__Group__1__Impl ;
    public final void rule__PivotInClauseAny__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8953:1: ( rule__PivotInClauseAny__Group__1__Impl )
            // InternalSqlParser.g:8954:2: rule__PivotInClauseAny__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1"


    // $ANTLR start "rule__PivotInClauseAny__Group__1__Impl"
    // InternalSqlParser.g:8960:1: rule__PivotInClauseAny__Group__1__Impl : ( ( rule__PivotInClauseAny__Group_1__0 )* ) ;
    public final void rule__PivotInClauseAny__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8964:1: ( ( ( rule__PivotInClauseAny__Group_1__0 )* ) )
            // InternalSqlParser.g:8965:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            {
            // InternalSqlParser.g:8965:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            // InternalSqlParser.g:8966:1: ( rule__PivotInClauseAny__Group_1__0 )*
            {
             before(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 
            // InternalSqlParser.g:8967:1: ( rule__PivotInClauseAny__Group_1__0 )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==Comma) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // InternalSqlParser.g:8967:2: rule__PivotInClauseAny__Group_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__PivotInClauseAny__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

             after(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0"
    // InternalSqlParser.g:8981:1: rule__PivotInClauseAny__Group_1__0 : rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 ;
    public final void rule__PivotInClauseAny__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8985:1: ( rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 )
            // InternalSqlParser.g:8986:2: rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1
            {
            pushFollow(FOLLOW_41);
            rule__PivotInClauseAny__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0__Impl"
    // InternalSqlParser.g:8993:1: rule__PivotInClauseAny__Group_1__0__Impl : ( Comma ) ;
    public final void rule__PivotInClauseAny__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8997:1: ( ( Comma ) )
            // InternalSqlParser.g:8998:1: ( Comma )
            {
            // InternalSqlParser.g:8998:1: ( Comma )
            // InternalSqlParser.g:8999:1: Comma
            {
             before(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1"
    // InternalSqlParser.g:9012:1: rule__PivotInClauseAny__Group_1__1 : rule__PivotInClauseAny__Group_1__1__Impl ;
    public final void rule__PivotInClauseAny__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9016:1: ( rule__PivotInClauseAny__Group_1__1__Impl )
            // InternalSqlParser.g:9017:2: rule__PivotInClauseAny__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1__Impl"
    // InternalSqlParser.g:9023:1: rule__PivotInClauseAny__Group_1__1__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9027:1: ( ( ANY ) )
            // InternalSqlParser.g:9028:1: ( ANY )
            {
            // InternalSqlParser.g:9028:1: ( ANY )
            // InternalSqlParser.g:9029:1: ANY
            {
             before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 
            match(input,ANY,FOLLOW_2); 
             after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__0"
    // InternalSqlParser.g:9046:1: rule__UnpivotTable__Group__0 : rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 ;
    public final void rule__UnpivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9050:1: ( rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 )
            // InternalSqlParser.g:9051:2: rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__UnpivotTable__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0"


    // $ANTLR start "rule__UnpivotTable__Group__0__Impl"
    // InternalSqlParser.g:9058:1: rule__UnpivotTable__Group__0__Impl : ( UNPIVOT ) ;
    public final void rule__UnpivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9062:1: ( ( UNPIVOT ) )
            // InternalSqlParser.g:9063:1: ( UNPIVOT )
            {
            // InternalSqlParser.g:9063:1: ( UNPIVOT )
            // InternalSqlParser.g:9064:1: UNPIVOT
            {
             before(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 
            match(input,UNPIVOT,FOLLOW_2); 
             after(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__1"
    // InternalSqlParser.g:9077:1: rule__UnpivotTable__Group__1 : rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 ;
    public final void rule__UnpivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9081:1: ( rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 )
            // InternalSqlParser.g:9082:2: rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__UnpivotTable__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1"


    // $ANTLR start "rule__UnpivotTable__Group__1__Impl"
    // InternalSqlParser.g:9089:1: rule__UnpivotTable__Group__1__Impl : ( ( rule__UnpivotTable__Group_1__0 )? ) ;
    public final void rule__UnpivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9093:1: ( ( ( rule__UnpivotTable__Group_1__0 )? ) )
            // InternalSqlParser.g:9094:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            {
            // InternalSqlParser.g:9094:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            // InternalSqlParser.g:9095:1: ( rule__UnpivotTable__Group_1__0 )?
            {
             before(grammarAccess.getUnpivotTableAccess().getGroup_1()); 
            // InternalSqlParser.g:9096:1: ( rule__UnpivotTable__Group_1__0 )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==EXCLUDE||LA95_0==INCLUDE) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalSqlParser.g:9096:2: rule__UnpivotTable__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotTable__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getUnpivotTableAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__2"
    // InternalSqlParser.g:9106:1: rule__UnpivotTable__Group__2 : rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 ;
    public final void rule__UnpivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9110:1: ( rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 )
            // InternalSqlParser.g:9111:2: rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__UnpivotTable__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2"


    // $ANTLR start "rule__UnpivotTable__Group__2__Impl"
    // InternalSqlParser.g:9118:1: rule__UnpivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9122:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:9123:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:9123:1: ( LeftParenthesis )
            // InternalSqlParser.g:9124:1: LeftParenthesis
            {
             before(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__3"
    // InternalSqlParser.g:9137:1: rule__UnpivotTable__Group__3 : rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 ;
    public final void rule__UnpivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9141:1: ( rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 )
            // InternalSqlParser.g:9142:2: rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4
            {
            pushFollow(FOLLOW_38);
            rule__UnpivotTable__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3"


    // $ANTLR start "rule__UnpivotTable__Group__3__Impl"
    // InternalSqlParser.g:9149:1: rule__UnpivotTable__Group__3__Impl : ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) ;
    public final void rule__UnpivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9153:1: ( ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) )
            // InternalSqlParser.g:9154:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            {
            // InternalSqlParser.g:9154:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            // InternalSqlParser.g:9155:1: ( rule__UnpivotTable__PcolsAssignment_3 )
            {
             before(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 
            // InternalSqlParser.g:9156:1: ( rule__UnpivotTable__PcolsAssignment_3 )
            // InternalSqlParser.g:9156:2: rule__UnpivotTable__PcolsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PcolsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__4"
    // InternalSqlParser.g:9166:1: rule__UnpivotTable__Group__4 : rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 ;
    public final void rule__UnpivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9170:1: ( rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 )
            // InternalSqlParser.g:9171:2: rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5
            {
            pushFollow(FOLLOW_39);
            rule__UnpivotTable__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4"


    // $ANTLR start "rule__UnpivotTable__Group__4__Impl"
    // InternalSqlParser.g:9178:1: rule__UnpivotTable__Group__4__Impl : ( ( rule__UnpivotTable__PforAssignment_4 ) ) ;
    public final void rule__UnpivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9182:1: ( ( ( rule__UnpivotTable__PforAssignment_4 ) ) )
            // InternalSqlParser.g:9183:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            {
            // InternalSqlParser.g:9183:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            // InternalSqlParser.g:9184:1: ( rule__UnpivotTable__PforAssignment_4 )
            {
             before(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 
            // InternalSqlParser.g:9185:1: ( rule__UnpivotTable__PforAssignment_4 )
            // InternalSqlParser.g:9185:2: rule__UnpivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PforAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__5"
    // InternalSqlParser.g:9195:1: rule__UnpivotTable__Group__5 : rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 ;
    public final void rule__UnpivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9199:1: ( rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 )
            // InternalSqlParser.g:9200:2: rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6
            {
            pushFollow(FOLLOW_31);
            rule__UnpivotTable__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5"


    // $ANTLR start "rule__UnpivotTable__Group__5__Impl"
    // InternalSqlParser.g:9207:1: rule__UnpivotTable__Group__5__Impl : ( ( rule__UnpivotTable__InopAssignment_5 ) ) ;
    public final void rule__UnpivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9211:1: ( ( ( rule__UnpivotTable__InopAssignment_5 ) ) )
            // InternalSqlParser.g:9212:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            {
            // InternalSqlParser.g:9212:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            // InternalSqlParser.g:9213:1: ( rule__UnpivotTable__InopAssignment_5 )
            {
             before(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 
            // InternalSqlParser.g:9214:1: ( rule__UnpivotTable__InopAssignment_5 )
            // InternalSqlParser.g:9214:2: rule__UnpivotTable__InopAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__InopAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__6"
    // InternalSqlParser.g:9224:1: rule__UnpivotTable__Group__6 : rule__UnpivotTable__Group__6__Impl ;
    public final void rule__UnpivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9228:1: ( rule__UnpivotTable__Group__6__Impl )
            // InternalSqlParser.g:9229:2: rule__UnpivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6"


    // $ANTLR start "rule__UnpivotTable__Group__6__Impl"
    // InternalSqlParser.g:9235:1: rule__UnpivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9239:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:9240:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:9240:1: ( RightParenthesis )
            // InternalSqlParser.g:9241:1: RightParenthesis
            {
             before(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__0"
    // InternalSqlParser.g:9268:1: rule__UnpivotTable__Group_1__0 : rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 ;
    public final void rule__UnpivotTable__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9272:1: ( rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 )
            // InternalSqlParser.g:9273:2: rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1
            {
            pushFollow(FOLLOW_43);
            rule__UnpivotTable__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0"


    // $ANTLR start "rule__UnpivotTable__Group_1__0__Impl"
    // InternalSqlParser.g:9280:1: rule__UnpivotTable__Group_1__0__Impl : ( ( rule__UnpivotTable__Alternatives_1_0 ) ) ;
    public final void rule__UnpivotTable__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9284:1: ( ( ( rule__UnpivotTable__Alternatives_1_0 ) ) )
            // InternalSqlParser.g:9285:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            {
            // InternalSqlParser.g:9285:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            // InternalSqlParser.g:9286:1: ( rule__UnpivotTable__Alternatives_1_0 )
            {
             before(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 
            // InternalSqlParser.g:9287:1: ( rule__UnpivotTable__Alternatives_1_0 )
            // InternalSqlParser.g:9287:2: rule__UnpivotTable__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Alternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__1"
    // InternalSqlParser.g:9297:1: rule__UnpivotTable__Group_1__1 : rule__UnpivotTable__Group_1__1__Impl ;
    public final void rule__UnpivotTable__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9301:1: ( rule__UnpivotTable__Group_1__1__Impl )
            // InternalSqlParser.g:9302:2: rule__UnpivotTable__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1"


    // $ANTLR start "rule__UnpivotTable__Group_1__1__Impl"
    // InternalSqlParser.g:9308:1: rule__UnpivotTable__Group_1__1__Impl : ( NULLS ) ;
    public final void rule__UnpivotTable__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9312:1: ( ( NULLS ) )
            // InternalSqlParser.g:9313:1: ( NULLS )
            {
            // InternalSqlParser.g:9313:1: ( NULLS )
            // InternalSqlParser.g:9314:1: NULLS
            {
             before(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 
            match(input,NULLS,FOLLOW_2); 
             after(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__0"
    // InternalSqlParser.g:9331:1: rule__UnpivotInClause__Group__0 : rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 ;
    public final void rule__UnpivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9335:1: ( rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 )
            // InternalSqlParser.g:9336:2: rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__UnpivotInClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0"


    // $ANTLR start "rule__UnpivotInClause__Group__0__Impl"
    // InternalSqlParser.g:9343:1: rule__UnpivotInClause__Group__0__Impl : ( () ) ;
    public final void rule__UnpivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9347:1: ( ( () ) )
            // InternalSqlParser.g:9348:1: ( () )
            {
            // InternalSqlParser.g:9348:1: ( () )
            // InternalSqlParser.g:9349:1: ()
            {
             before(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 
            // InternalSqlParser.g:9350:1: ()
            // InternalSqlParser.g:9352:1: 
            {
            }

             after(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__1"
    // InternalSqlParser.g:9362:1: rule__UnpivotInClause__Group__1 : rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 ;
    public final void rule__UnpivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9366:1: ( rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 )
            // InternalSqlParser.g:9367:2: rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__UnpivotInClause__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1"


    // $ANTLR start "rule__UnpivotInClause__Group__1__Impl"
    // InternalSqlParser.g:9374:1: rule__UnpivotInClause__Group__1__Impl : ( ( rule__UnpivotInClause__OpAssignment_1 ) ) ;
    public final void rule__UnpivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9378:1: ( ( ( rule__UnpivotInClause__OpAssignment_1 ) ) )
            // InternalSqlParser.g:9379:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            {
            // InternalSqlParser.g:9379:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            // InternalSqlParser.g:9380:1: ( rule__UnpivotInClause__OpAssignment_1 )
            {
             before(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 
            // InternalSqlParser.g:9381:1: ( rule__UnpivotInClause__OpAssignment_1 )
            // InternalSqlParser.g:9381:2: rule__UnpivotInClause__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__OpAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__2"
    // InternalSqlParser.g:9391:1: rule__UnpivotInClause__Group__2 : rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 ;
    public final void rule__UnpivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9395:1: ( rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 )
            // InternalSqlParser.g:9396:2: rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__UnpivotInClause__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2"


    // $ANTLR start "rule__UnpivotInClause__Group__2__Impl"
    // InternalSqlParser.g:9403:1: rule__UnpivotInClause__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9407:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:9408:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:9408:1: ( LeftParenthesis )
            // InternalSqlParser.g:9409:1: LeftParenthesis
            {
             before(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__3"
    // InternalSqlParser.g:9422:1: rule__UnpivotInClause__Group__3 : rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 ;
    public final void rule__UnpivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9426:1: ( rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 )
            // InternalSqlParser.g:9427:2: rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__UnpivotInClause__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3"


    // $ANTLR start "rule__UnpivotInClause__Group__3__Impl"
    // InternalSqlParser.g:9434:1: rule__UnpivotInClause__Group__3__Impl : ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) ;
    public final void rule__UnpivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9438:1: ( ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) )
            // InternalSqlParser.g:9439:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            {
            // InternalSqlParser.g:9439:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            // InternalSqlParser.g:9440:1: ( rule__UnpivotInClause__ArgsAssignment_3 )
            {
             before(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 
            // InternalSqlParser.g:9441:1: ( rule__UnpivotInClause__ArgsAssignment_3 )
            // InternalSqlParser.g:9441:2: rule__UnpivotInClause__ArgsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__ArgsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__4"
    // InternalSqlParser.g:9451:1: rule__UnpivotInClause__Group__4 : rule__UnpivotInClause__Group__4__Impl ;
    public final void rule__UnpivotInClause__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9455:1: ( rule__UnpivotInClause__Group__4__Impl )
            // InternalSqlParser.g:9456:2: rule__UnpivotInClause__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4"


    // $ANTLR start "rule__UnpivotInClause__Group__4__Impl"
    // InternalSqlParser.g:9462:1: rule__UnpivotInClause__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotInClause__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9466:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:9467:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:9467:1: ( RightParenthesis )
            // InternalSqlParser.g:9468:1: RightParenthesis
            {
             before(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0"
    // InternalSqlParser.g:9491:1: rule__UnpivotInClauseArgs__Group__0 : rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 ;
    public final void rule__UnpivotInClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9495:1: ( rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 )
            // InternalSqlParser.g:9496:2: rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__UnpivotInClauseArgs__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0__Impl"
    // InternalSqlParser.g:9503:1: rule__UnpivotInClauseArgs__Group__0__Impl : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9507:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSqlParser.g:9508:1: ( ruleUnpivotInClauseArg )
            {
            // InternalSqlParser.g:9508:1: ( ruleUnpivotInClauseArg )
            // InternalSqlParser.g:9509:1: ruleUnpivotInClauseArg
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1"
    // InternalSqlParser.g:9520:1: rule__UnpivotInClauseArgs__Group__1 : rule__UnpivotInClauseArgs__Group__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9524:1: ( rule__UnpivotInClauseArgs__Group__1__Impl )
            // InternalSqlParser.g:9525:2: rule__UnpivotInClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1__Impl"
    // InternalSqlParser.g:9531:1: rule__UnpivotInClauseArgs__Group__1__Impl : ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9535:1: ( ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) )
            // InternalSqlParser.g:9536:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            {
            // InternalSqlParser.g:9536:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            // InternalSqlParser.g:9537:1: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 
            // InternalSqlParser.g:9538:1: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==Comma) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalSqlParser.g:9538:2: rule__UnpivotInClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArgs__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0"
    // InternalSqlParser.g:9552:1: rule__UnpivotInClauseArgs__Group_1__0 : rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9556:1: ( rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 )
            // InternalSqlParser.g:9557:2: rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__UnpivotInClauseArgs__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0__Impl"
    // InternalSqlParser.g:9564:1: rule__UnpivotInClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9568:1: ( ( () ) )
            // InternalSqlParser.g:9569:1: ( () )
            {
            // InternalSqlParser.g:9569:1: ( () )
            // InternalSqlParser.g:9570:1: ()
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 
            // InternalSqlParser.g:9571:1: ()
            // InternalSqlParser.g:9573:1: 
            {
            }

             after(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1"
    // InternalSqlParser.g:9583:1: rule__UnpivotInClauseArgs__Group_1__1 : rule__UnpivotInClauseArgs__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9587:1: ( rule__UnpivotInClauseArgs__Group_1__1__Impl )
            // InternalSqlParser.g:9588:2: rule__UnpivotInClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1__Impl"
    // InternalSqlParser.g:9594:1: rule__UnpivotInClauseArgs__Group_1__1__Impl : ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9598:1: ( ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:9599:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:9599:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            // InternalSqlParser.g:9600:1: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:9600:1: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) )
            // InternalSqlParser.g:9601:1: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:9602:1: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            // InternalSqlParser.g:9602:2: rule__UnpivotInClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__UnpivotInClauseArgs__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:9605:1: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            // InternalSqlParser.g:9606:1: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:9607:1: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==Comma) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalSqlParser.g:9607:2: rule__UnpivotInClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__UnpivotInClauseArgs__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

             after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0"
    // InternalSqlParser.g:9622:1: rule__UnpivotInClauseArgs__Group_1_1__0 : rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9626:1: ( rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 )
            // InternalSqlParser.g:9627:2: rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_14);
            rule__UnpivotInClauseArgs__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"
    // InternalSqlParser.g:9634:1: rule__UnpivotInClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9638:1: ( ( Comma ) )
            // InternalSqlParser.g:9639:1: ( Comma )
            {
            // InternalSqlParser.g:9639:1: ( Comma )
            // InternalSqlParser.g:9640:1: Comma
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1"
    // InternalSqlParser.g:9653:1: rule__UnpivotInClauseArgs__Group_1_1__1 : rule__UnpivotInClauseArgs__Group_1_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9657:1: ( rule__UnpivotInClauseArgs__Group_1_1__1__Impl )
            // InternalSqlParser.g:9658:2: rule__UnpivotInClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"
    // InternalSqlParser.g:9664:1: rule__UnpivotInClauseArgs__Group_1_1__1__Impl : ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9668:1: ( ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:9669:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:9669:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:9670:1: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:9671:1: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:9671:2: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0"
    // InternalSqlParser.g:9685:1: rule__UnpivotInClauseArg__Group__0 : rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 ;
    public final void rule__UnpivotInClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9689:1: ( rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 )
            // InternalSqlParser.g:9690:2: rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1
            {
            pushFollow(FOLLOW_44);
            rule__UnpivotInClauseArg__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0__Impl"
    // InternalSqlParser.g:9697:1: rule__UnpivotInClauseArg__Group__0__Impl : ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) ;
    public final void rule__UnpivotInClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9701:1: ( ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) )
            // InternalSqlParser.g:9702:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            {
            // InternalSqlParser.g:9702:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            // InternalSqlParser.g:9703:1: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 
            // InternalSqlParser.g:9704:1: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            // InternalSqlParser.g:9704:2: rule__UnpivotInClauseArg__PcolsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__PcolsAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1"
    // InternalSqlParser.g:9714:1: rule__UnpivotInClauseArg__Group__1 : rule__UnpivotInClauseArg__Group__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9718:1: ( rule__UnpivotInClauseArg__Group__1__Impl )
            // InternalSqlParser.g:9719:2: rule__UnpivotInClauseArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1__Impl"
    // InternalSqlParser.g:9725:1: rule__UnpivotInClauseArg__Group__1__Impl : ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9729:1: ( ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) )
            // InternalSqlParser.g:9730:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            {
            // InternalSqlParser.g:9730:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            // InternalSqlParser.g:9731:1: ( rule__UnpivotInClauseArg__Group_1__0 )?
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 
            // InternalSqlParser.g:9732:1: ( rule__UnpivotInClauseArg__Group_1__0 )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==AS) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalSqlParser.g:9732:2: rule__UnpivotInClauseArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArg__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0"
    // InternalSqlParser.g:9746:1: rule__UnpivotInClauseArg__Group_1__0 : rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 ;
    public final void rule__UnpivotInClauseArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9750:1: ( rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 )
            // InternalSqlParser.g:9751:2: rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__UnpivotInClauseArg__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0__Impl"
    // InternalSqlParser.g:9758:1: rule__UnpivotInClauseArg__Group_1__0__Impl : ( AS ) ;
    public final void rule__UnpivotInClauseArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9762:1: ( ( AS ) )
            // InternalSqlParser.g:9763:1: ( AS )
            {
            // InternalSqlParser.g:9763:1: ( AS )
            // InternalSqlParser.g:9764:1: AS
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 
            match(input,AS,FOLLOW_2); 
             after(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1"
    // InternalSqlParser.g:9777:1: rule__UnpivotInClauseArg__Group_1__1 : rule__UnpivotInClauseArg__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9781:1: ( rule__UnpivotInClauseArg__Group_1__1__Impl )
            // InternalSqlParser.g:9782:2: rule__UnpivotInClauseArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1__Impl"
    // InternalSqlParser.g:9788:1: rule__UnpivotInClauseArg__Group_1__1__Impl : ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) ;
    public final void rule__UnpivotInClauseArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9792:1: ( ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) )
            // InternalSqlParser.g:9793:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            {
            // InternalSqlParser.g:9793:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            // InternalSqlParser.g:9794:1: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 
            // InternalSqlParser.g:9795:1: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            // InternalSqlParser.g:9795:2: rule__UnpivotInClauseArg__CfulsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__CfulsAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group__0"
    // InternalSqlParser.g:9809:1: rule__PivotForClause__Group__0 : rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 ;
    public final void rule__PivotForClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9813:1: ( rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 )
            // InternalSqlParser.g:9814:2: rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__PivotForClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0"


    // $ANTLR start "rule__PivotForClause__Group__0__Impl"
    // InternalSqlParser.g:9821:1: rule__PivotForClause__Group__0__Impl : ( FOR ) ;
    public final void rule__PivotForClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9825:1: ( ( FOR ) )
            // InternalSqlParser.g:9826:1: ( FOR )
            {
            // InternalSqlParser.g:9826:1: ( FOR )
            // InternalSqlParser.g:9827:1: FOR
            {
             before(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 
            match(input,FOR,FOLLOW_2); 
             after(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group__1"
    // InternalSqlParser.g:9840:1: rule__PivotForClause__Group__1 : rule__PivotForClause__Group__1__Impl ;
    public final void rule__PivotForClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9844:1: ( rule__PivotForClause__Group__1__Impl )
            // InternalSqlParser.g:9845:2: rule__PivotForClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1"


    // $ANTLR start "rule__PivotForClause__Group__1__Impl"
    // InternalSqlParser.g:9851:1: rule__PivotForClause__Group__1__Impl : ( ( rule__PivotForClause__Alternatives_1 ) ) ;
    public final void rule__PivotForClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9855:1: ( ( ( rule__PivotForClause__Alternatives_1 ) ) )
            // InternalSqlParser.g:9856:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            {
            // InternalSqlParser.g:9856:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            // InternalSqlParser.g:9857:1: ( rule__PivotForClause__Alternatives_1 )
            {
             before(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 
            // InternalSqlParser.g:9858:1: ( rule__PivotForClause__Alternatives_1 )
            // InternalSqlParser.g:9858:2: rule__PivotForClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0"
    // InternalSqlParser.g:9872:1: rule__PivotForClause__Group_1_1__0 : rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 ;
    public final void rule__PivotForClause__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9876:1: ( rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 )
            // InternalSqlParser.g:9877:2: rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1
            {
            pushFollow(FOLLOW_12);
            rule__PivotForClause__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0__Impl"
    // InternalSqlParser.g:9884:1: rule__PivotForClause__Group_1_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9888:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:9889:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:9889:1: ( LeftParenthesis )
            // InternalSqlParser.g:9890:1: LeftParenthesis
            {
             before(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1"
    // InternalSqlParser.g:9903:1: rule__PivotForClause__Group_1_1__1 : rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 ;
    public final void rule__PivotForClause__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9907:1: ( rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 )
            // InternalSqlParser.g:9908:2: rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2
            {
            pushFollow(FOLLOW_31);
            rule__PivotForClause__Group_1_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1__Impl"
    // InternalSqlParser.g:9915:1: rule__PivotForClause__Group_1_1__1__Impl : ( ruleColumns ) ;
    public final void rule__PivotForClause__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9919:1: ( ( ruleColumns ) )
            // InternalSqlParser.g:9920:1: ( ruleColumns )
            {
            // InternalSqlParser.g:9920:1: ( ruleColumns )
            // InternalSqlParser.g:9921:1: ruleColumns
            {
             before(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;

             after(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2"
    // InternalSqlParser.g:9932:1: rule__PivotForClause__Group_1_1__2 : rule__PivotForClause__Group_1_1__2__Impl ;
    public final void rule__PivotForClause__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9936:1: ( rule__PivotForClause__Group_1_1__2__Impl )
            // InternalSqlParser.g:9937:2: rule__PivotForClause__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2__Impl"
    // InternalSqlParser.g:9943:1: rule__PivotForClause__Group_1_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9947:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:9948:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:9948:1: ( RightParenthesis )
            // InternalSqlParser.g:9949:1: RightParenthesis
            {
             before(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__0"
    // InternalSqlParser.g:9968:1: rule__PivotColumns__Group_1__0 : rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 ;
    public final void rule__PivotColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9972:1: ( rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 )
            // InternalSqlParser.g:9973:2: rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1
            {
            pushFollow(FOLLOW_26);
            rule__PivotColumns__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0"


    // $ANTLR start "rule__PivotColumns__Group_1__0__Impl"
    // InternalSqlParser.g:9980:1: rule__PivotColumns__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9984:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:9985:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:9985:1: ( LeftParenthesis )
            // InternalSqlParser.g:9986:1: LeftParenthesis
            {
             before(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__1"
    // InternalSqlParser.g:9999:1: rule__PivotColumns__Group_1__1 : rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 ;
    public final void rule__PivotColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10003:1: ( rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 )
            // InternalSqlParser.g:10004:2: rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__PivotColumns__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1"


    // $ANTLR start "rule__PivotColumns__Group_1__1__Impl"
    // InternalSqlParser.g:10011:1: rule__PivotColumns__Group_1__1__Impl : ( rulePivotCols ) ;
    public final void rule__PivotColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10015:1: ( ( rulePivotCols ) )
            // InternalSqlParser.g:10016:1: ( rulePivotCols )
            {
            // InternalSqlParser.g:10016:1: ( rulePivotCols )
            // InternalSqlParser.g:10017:1: rulePivotCols
            {
             before(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 
            pushFollow(FOLLOW_2);
            rulePivotCols();

            state._fsp--;

             after(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__2"
    // InternalSqlParser.g:10028:1: rule__PivotColumns__Group_1__2 : rule__PivotColumns__Group_1__2__Impl ;
    public final void rule__PivotColumns__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10032:1: ( rule__PivotColumns__Group_1__2__Impl )
            // InternalSqlParser.g:10033:2: rule__PivotColumns__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2"


    // $ANTLR start "rule__PivotColumns__Group_1__2__Impl"
    // InternalSqlParser.g:10039:1: rule__PivotColumns__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotColumns__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10043:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:10044:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:10044:1: ( RightParenthesis )
            // InternalSqlParser.g:10045:1: RightParenthesis
            {
             before(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2__Impl"


    // $ANTLR start "rule__PivotCols__Group__0"
    // InternalSqlParser.g:10064:1: rule__PivotCols__Group__0 : rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 ;
    public final void rule__PivotCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10068:1: ( rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 )
            // InternalSqlParser.g:10069:2: rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__PivotCols__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0"


    // $ANTLR start "rule__PivotCols__Group__0__Impl"
    // InternalSqlParser.g:10076:1: rule__PivotCols__Group__0__Impl : ( rulePivotCol ) ;
    public final void rule__PivotCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10080:1: ( ( rulePivotCol ) )
            // InternalSqlParser.g:10081:1: ( rulePivotCol )
            {
            // InternalSqlParser.g:10081:1: ( rulePivotCol )
            // InternalSqlParser.g:10082:1: rulePivotCol
            {
             before(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;

             after(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0__Impl"


    // $ANTLR start "rule__PivotCols__Group__1"
    // InternalSqlParser.g:10093:1: rule__PivotCols__Group__1 : rule__PivotCols__Group__1__Impl ;
    public final void rule__PivotCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10097:1: ( rule__PivotCols__Group__1__Impl )
            // InternalSqlParser.g:10098:2: rule__PivotCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1"


    // $ANTLR start "rule__PivotCols__Group__1__Impl"
    // InternalSqlParser.g:10104:1: rule__PivotCols__Group__1__Impl : ( ( rule__PivotCols__Group_1__0 )? ) ;
    public final void rule__PivotCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10108:1: ( ( ( rule__PivotCols__Group_1__0 )? ) )
            // InternalSqlParser.g:10109:1: ( ( rule__PivotCols__Group_1__0 )? )
            {
            // InternalSqlParser.g:10109:1: ( ( rule__PivotCols__Group_1__0 )? )
            // InternalSqlParser.g:10110:1: ( rule__PivotCols__Group_1__0 )?
            {
             before(grammarAccess.getPivotColsAccess().getGroup_1()); 
            // InternalSqlParser.g:10111:1: ( rule__PivotCols__Group_1__0 )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==Comma) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalSqlParser.g:10111:2: rule__PivotCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCols__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPivotColsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__0"
    // InternalSqlParser.g:10125:1: rule__PivotCols__Group_1__0 : rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 ;
    public final void rule__PivotCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10129:1: ( rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 )
            // InternalSqlParser.g:10130:2: rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__PivotCols__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0"


    // $ANTLR start "rule__PivotCols__Group_1__0__Impl"
    // InternalSqlParser.g:10137:1: rule__PivotCols__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10141:1: ( ( () ) )
            // InternalSqlParser.g:10142:1: ( () )
            {
            // InternalSqlParser.g:10142:1: ( () )
            // InternalSqlParser.g:10143:1: ()
            {
             before(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 
            // InternalSqlParser.g:10144:1: ()
            // InternalSqlParser.g:10146:1: 
            {
            }

             after(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__1"
    // InternalSqlParser.g:10156:1: rule__PivotCols__Group_1__1 : rule__PivotCols__Group_1__1__Impl ;
    public final void rule__PivotCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10160:1: ( rule__PivotCols__Group_1__1__Impl )
            // InternalSqlParser.g:10161:2: rule__PivotCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1"


    // $ANTLR start "rule__PivotCols__Group_1__1__Impl"
    // InternalSqlParser.g:10167:1: rule__PivotCols__Group_1__1__Impl : ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10171:1: ( ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:10172:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:10172:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            // InternalSqlParser.g:10173:1: ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:10173:1: ( ( rule__PivotCols__Group_1_1__0 ) )
            // InternalSqlParser.g:10174:1: ( rule__PivotCols__Group_1_1__0 )
            {
             before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:10175:1: ( rule__PivotCols__Group_1_1__0 )
            // InternalSqlParser.g:10175:2: rule__PivotCols__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__PivotCols__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:10178:1: ( ( rule__PivotCols__Group_1_1__0 )* )
            // InternalSqlParser.g:10179:1: ( rule__PivotCols__Group_1_1__0 )*
            {
             before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:10180:1: ( rule__PivotCols__Group_1_1__0 )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==Comma) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalSqlParser.g:10180:2: rule__PivotCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__PivotCols__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);

             after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__0"
    // InternalSqlParser.g:10195:1: rule__PivotCols__Group_1_1__0 : rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 ;
    public final void rule__PivotCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10199:1: ( rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 )
            // InternalSqlParser.g:10200:2: rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__PivotCols__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0"


    // $ANTLR start "rule__PivotCols__Group_1_1__0__Impl"
    // InternalSqlParser.g:10207:1: rule__PivotCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__PivotCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10211:1: ( ( Comma ) )
            // InternalSqlParser.g:10212:1: ( Comma )
            {
            // InternalSqlParser.g:10212:1: ( Comma )
            // InternalSqlParser.g:10213:1: Comma
            {
             before(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__1"
    // InternalSqlParser.g:10226:1: rule__PivotCols__Group_1_1__1 : rule__PivotCols__Group_1_1__1__Impl ;
    public final void rule__PivotCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10230:1: ( rule__PivotCols__Group_1_1__1__Impl )
            // InternalSqlParser.g:10231:2: rule__PivotCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1"


    // $ANTLR start "rule__PivotCols__Group_1_1__1__Impl"
    // InternalSqlParser.g:10237:1: rule__PivotCols__Group_1_1__1__Impl : ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10241:1: ( ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:10242:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:10242:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:10243:1: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:10244:1: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:10244:2: rule__PivotCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group__0"
    // InternalSqlParser.g:10258:1: rule__PivotCol__Group__0 : rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 ;
    public final void rule__PivotCol__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10262:1: ( rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 )
            // InternalSqlParser.g:10263:2: rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__PivotCol__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0"


    // $ANTLR start "rule__PivotCol__Group__0__Impl"
    // InternalSqlParser.g:10270:1: rule__PivotCol__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10274:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:10275:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:10275:1: ( ruleDbObjectName )
            // InternalSqlParser.g:10276:1: ruleDbObjectName
            {
             before(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0__Impl"


    // $ANTLR start "rule__PivotCol__Group__1"
    // InternalSqlParser.g:10287:1: rule__PivotCol__Group__1 : rule__PivotCol__Group__1__Impl ;
    public final void rule__PivotCol__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10291:1: ( rule__PivotCol__Group__1__Impl )
            // InternalSqlParser.g:10292:2: rule__PivotCol__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1"


    // $ANTLR start "rule__PivotCol__Group__1__Impl"
    // InternalSqlParser.g:10298:1: rule__PivotCol__Group__1__Impl : ( ( rule__PivotCol__Group_1__0 )? ) ;
    public final void rule__PivotCol__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10302:1: ( ( ( rule__PivotCol__Group_1__0 )? ) )
            // InternalSqlParser.g:10303:1: ( ( rule__PivotCol__Group_1__0 )? )
            {
            // InternalSqlParser.g:10303:1: ( ( rule__PivotCol__Group_1__0 )? )
            // InternalSqlParser.g:10304:1: ( rule__PivotCol__Group_1__0 )?
            {
             before(grammarAccess.getPivotColAccess().getGroup_1()); 
            // InternalSqlParser.g:10305:1: ( rule__PivotCol__Group_1__0 )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==FullStop) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalSqlParser.g:10305:2: rule__PivotCol__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCol__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPivotColAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__0"
    // InternalSqlParser.g:10319:1: rule__PivotCol__Group_1__0 : rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 ;
    public final void rule__PivotCol__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10323:1: ( rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 )
            // InternalSqlParser.g:10324:2: rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1
            {
            pushFollow(FOLLOW_24);
            rule__PivotCol__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0"


    // $ANTLR start "rule__PivotCol__Group_1__0__Impl"
    // InternalSqlParser.g:10331:1: rule__PivotCol__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCol__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10335:1: ( ( () ) )
            // InternalSqlParser.g:10336:1: ( () )
            {
            // InternalSqlParser.g:10336:1: ( () )
            // InternalSqlParser.g:10337:1: ()
            {
             before(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 
            // InternalSqlParser.g:10338:1: ()
            // InternalSqlParser.g:10340:1: 
            {
            }

             after(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__1"
    // InternalSqlParser.g:10350:1: rule__PivotCol__Group_1__1 : rule__PivotCol__Group_1__1__Impl ;
    public final void rule__PivotCol__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10354:1: ( rule__PivotCol__Group_1__1__Impl )
            // InternalSqlParser.g:10355:2: rule__PivotCol__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1"


    // $ANTLR start "rule__PivotCol__Group_1__1__Impl"
    // InternalSqlParser.g:10361:1: rule__PivotCol__Group_1__1__Impl : ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCol__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10365:1: ( ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:10366:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:10366:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            // InternalSqlParser.g:10367:1: ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:10367:1: ( ( rule__PivotCol__Group_1_1__0 ) )
            // InternalSqlParser.g:10368:1: ( rule__PivotCol__Group_1_1__0 )
            {
             before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            // InternalSqlParser.g:10369:1: ( rule__PivotCol__Group_1_1__0 )
            // InternalSqlParser.g:10369:2: rule__PivotCol__Group_1_1__0
            {
            pushFollow(FOLLOW_25);
            rule__PivotCol__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getPivotColAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:10372:1: ( ( rule__PivotCol__Group_1_1__0 )* )
            // InternalSqlParser.g:10373:1: ( rule__PivotCol__Group_1_1__0 )*
            {
             before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            // InternalSqlParser.g:10374:1: ( rule__PivotCol__Group_1_1__0 )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==FullStop) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalSqlParser.g:10374:2: rule__PivotCol__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_25);
            	    rule__PivotCol__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

             after(grammarAccess.getPivotColAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__0"
    // InternalSqlParser.g:10389:1: rule__PivotCol__Group_1_1__0 : rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 ;
    public final void rule__PivotCol__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10393:1: ( rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 )
            // InternalSqlParser.g:10394:2: rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__PivotCol__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0"


    // $ANTLR start "rule__PivotCol__Group_1_1__0__Impl"
    // InternalSqlParser.g:10401:1: rule__PivotCol__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__PivotCol__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10405:1: ( ( FullStop ) )
            // InternalSqlParser.g:10406:1: ( FullStop )
            {
            // InternalSqlParser.g:10406:1: ( FullStop )
            // InternalSqlParser.g:10407:1: FullStop
            {
             before(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 
            match(input,FullStop,FOLLOW_2); 
             after(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__1"
    // InternalSqlParser.g:10420:1: rule__PivotCol__Group_1_1__1 : rule__PivotCol__Group_1_1__1__Impl ;
    public final void rule__PivotCol__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10424:1: ( rule__PivotCol__Group_1_1__1__Impl )
            // InternalSqlParser.g:10425:2: rule__PivotCol__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1"


    // $ANTLR start "rule__PivotCol__Group_1_1__1__Impl"
    // InternalSqlParser.g:10431:1: rule__PivotCol__Group_1_1__1__Impl : ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCol__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10435:1: ( ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:10436:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:10436:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:10437:1: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:10438:1: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:10438:2: rule__PivotCol__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group__0"
    // InternalSqlParser.g:10452:1: rule__TableFull__Group__0 : rule__TableFull__Group__0__Impl rule__TableFull__Group__1 ;
    public final void rule__TableFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10456:1: ( rule__TableFull__Group__0__Impl rule__TableFull__Group__1 )
            // InternalSqlParser.g:10457:2: rule__TableFull__Group__0__Impl rule__TableFull__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__TableFull__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0"


    // $ANTLR start "rule__TableFull__Group__0__Impl"
    // InternalSqlParser.g:10464:1: rule__TableFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__TableFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10468:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:10469:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:10469:1: ( ruleDbObjectName )
            // InternalSqlParser.g:10470:1: ruleDbObjectName
            {
             before(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0__Impl"


    // $ANTLR start "rule__TableFull__Group__1"
    // InternalSqlParser.g:10481:1: rule__TableFull__Group__1 : rule__TableFull__Group__1__Impl ;
    public final void rule__TableFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10485:1: ( rule__TableFull__Group__1__Impl )
            // InternalSqlParser.g:10486:2: rule__TableFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1"


    // $ANTLR start "rule__TableFull__Group__1__Impl"
    // InternalSqlParser.g:10492:1: rule__TableFull__Group__1__Impl : ( ( rule__TableFull__Group_1__0 )? ) ;
    public final void rule__TableFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10496:1: ( ( ( rule__TableFull__Group_1__0 )? ) )
            // InternalSqlParser.g:10497:1: ( ( rule__TableFull__Group_1__0 )? )
            {
            // InternalSqlParser.g:10497:1: ( ( rule__TableFull__Group_1__0 )? )
            // InternalSqlParser.g:10498:1: ( rule__TableFull__Group_1__0 )?
            {
             before(grammarAccess.getTableFullAccess().getGroup_1()); 
            // InternalSqlParser.g:10499:1: ( rule__TableFull__Group_1__0 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==FullStop) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalSqlParser.g:10499:2: rule__TableFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableFull__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getTableFullAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1__0"
    // InternalSqlParser.g:10513:1: rule__TableFull__Group_1__0 : rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 ;
    public final void rule__TableFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10517:1: ( rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 )
            // InternalSqlParser.g:10518:2: rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1
            {
            pushFollow(FOLLOW_24);
            rule__TableFull__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0"


    // $ANTLR start "rule__TableFull__Group_1__0__Impl"
    // InternalSqlParser.g:10525:1: rule__TableFull__Group_1__0__Impl : ( () ) ;
    public final void rule__TableFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10529:1: ( ( () ) )
            // InternalSqlParser.g:10530:1: ( () )
            {
            // InternalSqlParser.g:10530:1: ( () )
            // InternalSqlParser.g:10531:1: ()
            {
             before(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 
            // InternalSqlParser.g:10532:1: ()
            // InternalSqlParser.g:10534:1: 
            {
            }

             after(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1__1"
    // InternalSqlParser.g:10544:1: rule__TableFull__Group_1__1 : rule__TableFull__Group_1__1__Impl ;
    public final void rule__TableFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10548:1: ( rule__TableFull__Group_1__1__Impl )
            // InternalSqlParser.g:10549:2: rule__TableFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1"


    // $ANTLR start "rule__TableFull__Group_1__1__Impl"
    // InternalSqlParser.g:10555:1: rule__TableFull__Group_1__1__Impl : ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) ;
    public final void rule__TableFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10559:1: ( ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:10560:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:10560:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            // InternalSqlParser.g:10561:1: ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:10561:1: ( ( rule__TableFull__Group_1_1__0 ) )
            // InternalSqlParser.g:10562:1: ( rule__TableFull__Group_1_1__0 )
            {
             before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            // InternalSqlParser.g:10563:1: ( rule__TableFull__Group_1_1__0 )
            // InternalSqlParser.g:10563:2: rule__TableFull__Group_1_1__0
            {
            pushFollow(FOLLOW_25);
            rule__TableFull__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getTableFullAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:10566:1: ( ( rule__TableFull__Group_1_1__0 )* )
            // InternalSqlParser.g:10567:1: ( rule__TableFull__Group_1_1__0 )*
            {
             before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            // InternalSqlParser.g:10568:1: ( rule__TableFull__Group_1_1__0 )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==FullStop) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // InternalSqlParser.g:10568:2: rule__TableFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_25);
            	    rule__TableFull__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);

             after(grammarAccess.getTableFullAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__0"
    // InternalSqlParser.g:10583:1: rule__TableFull__Group_1_1__0 : rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 ;
    public final void rule__TableFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10587:1: ( rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 )
            // InternalSqlParser.g:10588:2: rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__TableFull__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0"


    // $ANTLR start "rule__TableFull__Group_1_1__0__Impl"
    // InternalSqlParser.g:10595:1: rule__TableFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__TableFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10599:1: ( ( FullStop ) )
            // InternalSqlParser.g:10600:1: ( FullStop )
            {
            // InternalSqlParser.g:10600:1: ( FullStop )
            // InternalSqlParser.g:10601:1: FullStop
            {
             before(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 
            match(input,FullStop,FOLLOW_2); 
             after(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__1"
    // InternalSqlParser.g:10614:1: rule__TableFull__Group_1_1__1 : rule__TableFull__Group_1_1__1__Impl ;
    public final void rule__TableFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10618:1: ( rule__TableFull__Group_1_1__1__Impl )
            // InternalSqlParser.g:10619:2: rule__TableFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1"


    // $ANTLR start "rule__TableFull__Group_1_1__1__Impl"
    // InternalSqlParser.g:10625:1: rule__TableFull__Group_1_1__1__Impl : ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__TableFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10629:1: ( ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:10630:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:10630:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:10631:1: ( rule__TableFull__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:10632:1: ( rule__TableFull__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:10632:2: rule__TableFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__0"
    // InternalSqlParser.g:10646:1: rule__DbObjectNameAll__Group__0 : rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 ;
    public final void rule__DbObjectNameAll__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10650:1: ( rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 )
            // InternalSqlParser.g:10651:2: rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__DbObjectNameAll__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0"


    // $ANTLR start "rule__DbObjectNameAll__Group__0__Impl"
    // InternalSqlParser.g:10658:1: rule__DbObjectNameAll__Group__0__Impl : ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) ;
    public final void rule__DbObjectNameAll__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10662:1: ( ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) )
            // InternalSqlParser.g:10663:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            {
            // InternalSqlParser.g:10663:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            // InternalSqlParser.g:10664:1: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            {
             before(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 
            // InternalSqlParser.g:10665:1: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            // InternalSqlParser.g:10665:2: rule__DbObjectNameAll__DbnameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__DbnameAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__1"
    // InternalSqlParser.g:10675:1: rule__DbObjectNameAll__Group__1 : rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 ;
    public final void rule__DbObjectNameAll__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10679:1: ( rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 )
            // InternalSqlParser.g:10680:2: rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2
            {
            pushFollow(FOLLOW_45);
            rule__DbObjectNameAll__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1"


    // $ANTLR start "rule__DbObjectNameAll__Group__1__Impl"
    // InternalSqlParser.g:10687:1: rule__DbObjectNameAll__Group__1__Impl : ( FullStop ) ;
    public final void rule__DbObjectNameAll__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10691:1: ( ( FullStop ) )
            // InternalSqlParser.g:10692:1: ( FullStop )
            {
            // InternalSqlParser.g:10692:1: ( FullStop )
            // InternalSqlParser.g:10693:1: FullStop
            {
             before(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 
            match(input,FullStop,FOLLOW_2); 
             after(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__2"
    // InternalSqlParser.g:10706:1: rule__DbObjectNameAll__Group__2 : rule__DbObjectNameAll__Group__2__Impl ;
    public final void rule__DbObjectNameAll__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10710:1: ( rule__DbObjectNameAll__Group__2__Impl )
            // InternalSqlParser.g:10711:2: rule__DbObjectNameAll__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2"


    // $ANTLR start "rule__DbObjectNameAll__Group__2__Impl"
    // InternalSqlParser.g:10717:1: rule__DbObjectNameAll__Group__2__Impl : ( RULE_STAR ) ;
    public final void rule__DbObjectNameAll__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10721:1: ( ( RULE_STAR ) )
            // InternalSqlParser.g:10722:1: ( RULE_STAR )
            {
            // InternalSqlParser.g:10722:1: ( RULE_STAR )
            // InternalSqlParser.g:10723:1: RULE_STAR
            {
             before(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 
            match(input,RULE_STAR,FOLLOW_2); 
             after(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__0"
    // InternalSqlParser.g:10740:1: rule__OrderByColumns__Group__0 : rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 ;
    public final void rule__OrderByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10744:1: ( rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 )
            // InternalSqlParser.g:10745:2: rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__OrderByColumns__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0"


    // $ANTLR start "rule__OrderByColumns__Group__0__Impl"
    // InternalSqlParser.g:10752:1: rule__OrderByColumns__Group__0__Impl : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10756:1: ( ( ruleOrderByColumnFull ) )
            // InternalSqlParser.g:10757:1: ( ruleOrderByColumnFull )
            {
            // InternalSqlParser.g:10757:1: ( ruleOrderByColumnFull )
            // InternalSqlParser.g:10758:1: ruleOrderByColumnFull
            {
             before(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;

             after(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__1"
    // InternalSqlParser.g:10769:1: rule__OrderByColumns__Group__1 : rule__OrderByColumns__Group__1__Impl ;
    public final void rule__OrderByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10773:1: ( rule__OrderByColumns__Group__1__Impl )
            // InternalSqlParser.g:10774:2: rule__OrderByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1"


    // $ANTLR start "rule__OrderByColumns__Group__1__Impl"
    // InternalSqlParser.g:10780:1: rule__OrderByColumns__Group__1__Impl : ( ( rule__OrderByColumns__Group_1__0 )? ) ;
    public final void rule__OrderByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10784:1: ( ( ( rule__OrderByColumns__Group_1__0 )? ) )
            // InternalSqlParser.g:10785:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            {
            // InternalSqlParser.g:10785:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            // InternalSqlParser.g:10786:1: ( rule__OrderByColumns__Group_1__0 )?
            {
             before(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 
            // InternalSqlParser.g:10787:1: ( rule__OrderByColumns__Group_1__0 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==Comma) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalSqlParser.g:10787:2: rule__OrderByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumns__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__0"
    // InternalSqlParser.g:10801:1: rule__OrderByColumns__Group_1__0 : rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 ;
    public final void rule__OrderByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10805:1: ( rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 )
            // InternalSqlParser.g:10806:2: rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__OrderByColumns__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1__0__Impl"
    // InternalSqlParser.g:10813:1: rule__OrderByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10817:1: ( ( () ) )
            // InternalSqlParser.g:10818:1: ( () )
            {
            // InternalSqlParser.g:10818:1: ( () )
            // InternalSqlParser.g:10819:1: ()
            {
             before(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 
            // InternalSqlParser.g:10820:1: ()
            // InternalSqlParser.g:10822:1: 
            {
            }

             after(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__1"
    // InternalSqlParser.g:10832:1: rule__OrderByColumns__Group_1__1 : rule__OrderByColumns__Group_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10836:1: ( rule__OrderByColumns__Group_1__1__Impl )
            // InternalSqlParser.g:10837:2: rule__OrderByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1__1__Impl"
    // InternalSqlParser.g:10843:1: rule__OrderByColumns__Group_1__1__Impl : ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10847:1: ( ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:10848:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:10848:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            // InternalSqlParser.g:10849:1: ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:10849:1: ( ( rule__OrderByColumns__Group_1_1__0 ) )
            // InternalSqlParser.g:10850:1: ( rule__OrderByColumns__Group_1_1__0 )
            {
             before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:10851:1: ( rule__OrderByColumns__Group_1_1__0 )
            // InternalSqlParser.g:10851:2: rule__OrderByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__OrderByColumns__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:10854:1: ( ( rule__OrderByColumns__Group_1_1__0 )* )
            // InternalSqlParser.g:10855:1: ( rule__OrderByColumns__Group_1_1__0 )*
            {
             before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:10856:1: ( rule__OrderByColumns__Group_1_1__0 )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==Comma) ) {
                    alt106=1;
                }


                switch (alt106) {
            	case 1 :
            	    // InternalSqlParser.g:10856:2: rule__OrderByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__OrderByColumns__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);

             after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0"
    // InternalSqlParser.g:10871:1: rule__OrderByColumns__Group_1_1__0 : rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 ;
    public final void rule__OrderByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10875:1: ( rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 )
            // InternalSqlParser.g:10876:2: rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_19);
            rule__OrderByColumns__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0__Impl"
    // InternalSqlParser.g:10883:1: rule__OrderByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10887:1: ( ( Comma ) )
            // InternalSqlParser.g:10888:1: ( Comma )
            {
            // InternalSqlParser.g:10888:1: ( Comma )
            // InternalSqlParser.g:10889:1: Comma
            {
             before(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1"
    // InternalSqlParser.g:10902:1: rule__OrderByColumns__Group_1_1__1 : rule__OrderByColumns__Group_1_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10906:1: ( rule__OrderByColumns__Group_1_1__1__Impl )
            // InternalSqlParser.g:10907:2: rule__OrderByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1__Impl"
    // InternalSqlParser.g:10913:1: rule__OrderByColumns__Group_1_1__1__Impl : ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10917:1: ( ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:10918:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:10918:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:10919:1: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:10920:1: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:10920:2: rule__OrderByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__0"
    // InternalSqlParser.g:10934:1: rule__OrderByColumnFull__Group__0 : rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 ;
    public final void rule__OrderByColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10938:1: ( rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 )
            // InternalSqlParser.g:10939:2: rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__OrderByColumnFull__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0"


    // $ANTLR start "rule__OrderByColumnFull__Group__0__Impl"
    // InternalSqlParser.g:10946:1: rule__OrderByColumnFull__Group__0__Impl : ( ( rule__OrderByColumnFull__Alternatives_0 ) ) ;
    public final void rule__OrderByColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10950:1: ( ( ( rule__OrderByColumnFull__Alternatives_0 ) ) )
            // InternalSqlParser.g:10951:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            {
            // InternalSqlParser.g:10951:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            // InternalSqlParser.g:10952:1: ( rule__OrderByColumnFull__Alternatives_0 )
            {
             before(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 
            // InternalSqlParser.g:10953:1: ( rule__OrderByColumnFull__Alternatives_0 )
            // InternalSqlParser.g:10953:2: rule__OrderByColumnFull__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Alternatives_0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__1"
    // InternalSqlParser.g:10963:1: rule__OrderByColumnFull__Group__1 : rule__OrderByColumnFull__Group__1__Impl ;
    public final void rule__OrderByColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10967:1: ( rule__OrderByColumnFull__Group__1__Impl )
            // InternalSqlParser.g:10968:2: rule__OrderByColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1"


    // $ANTLR start "rule__OrderByColumnFull__Group__1__Impl"
    // InternalSqlParser.g:10974:1: rule__OrderByColumnFull__Group__1__Impl : ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) ;
    public final void rule__OrderByColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10978:1: ( ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) )
            // InternalSqlParser.g:10979:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            {
            // InternalSqlParser.g:10979:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            // InternalSqlParser.g:10980:1: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            {
             before(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 
            // InternalSqlParser.g:10981:1: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==DESC||LA107_0==ASC) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalSqlParser.g:10981:2: rule__OrderByColumnFull__DirectionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__DirectionAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__0"
    // InternalSqlParser.g:10995:1: rule__GroupByColumns__Group__0 : rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 ;
    public final void rule__GroupByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10999:1: ( rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 )
            // InternalSqlParser.g:11000:2: rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__GroupByColumns__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0"


    // $ANTLR start "rule__GroupByColumns__Group__0__Impl"
    // InternalSqlParser.g:11007:1: rule__GroupByColumns__Group__0__Impl : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11011:1: ( ( ruleGroupByColumnFull ) )
            // InternalSqlParser.g:11012:1: ( ruleGroupByColumnFull )
            {
            // InternalSqlParser.g:11012:1: ( ruleGroupByColumnFull )
            // InternalSqlParser.g:11013:1: ruleGroupByColumnFull
            {
             before(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;

             after(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__1"
    // InternalSqlParser.g:11024:1: rule__GroupByColumns__Group__1 : rule__GroupByColumns__Group__1__Impl ;
    public final void rule__GroupByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11028:1: ( rule__GroupByColumns__Group__1__Impl )
            // InternalSqlParser.g:11029:2: rule__GroupByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1"


    // $ANTLR start "rule__GroupByColumns__Group__1__Impl"
    // InternalSqlParser.g:11035:1: rule__GroupByColumns__Group__1__Impl : ( ( rule__GroupByColumns__Group_1__0 )? ) ;
    public final void rule__GroupByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11039:1: ( ( ( rule__GroupByColumns__Group_1__0 )? ) )
            // InternalSqlParser.g:11040:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            {
            // InternalSqlParser.g:11040:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            // InternalSqlParser.g:11041:1: ( rule__GroupByColumns__Group_1__0 )?
            {
             before(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 
            // InternalSqlParser.g:11042:1: ( rule__GroupByColumns__Group_1__0 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==Comma) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSqlParser.g:11042:2: rule__GroupByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumns__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__0"
    // InternalSqlParser.g:11056:1: rule__GroupByColumns__Group_1__0 : rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 ;
    public final void rule__GroupByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11060:1: ( rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 )
            // InternalSqlParser.g:11061:2: rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__GroupByColumns__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1__0__Impl"
    // InternalSqlParser.g:11068:1: rule__GroupByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__GroupByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11072:1: ( ( () ) )
            // InternalSqlParser.g:11073:1: ( () )
            {
            // InternalSqlParser.g:11073:1: ( () )
            // InternalSqlParser.g:11074:1: ()
            {
             before(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 
            // InternalSqlParser.g:11075:1: ()
            // InternalSqlParser.g:11077:1: 
            {
            }

             after(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__1"
    // InternalSqlParser.g:11087:1: rule__GroupByColumns__Group_1__1 : rule__GroupByColumns__Group_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11091:1: ( rule__GroupByColumns__Group_1__1__Impl )
            // InternalSqlParser.g:11092:2: rule__GroupByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1__1__Impl"
    // InternalSqlParser.g:11098:1: rule__GroupByColumns__Group_1__1__Impl : ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__GroupByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11102:1: ( ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:11103:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:11103:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            // InternalSqlParser.g:11104:1: ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:11104:1: ( ( rule__GroupByColumns__Group_1_1__0 ) )
            // InternalSqlParser.g:11105:1: ( rule__GroupByColumns__Group_1_1__0 )
            {
             before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:11106:1: ( rule__GroupByColumns__Group_1_1__0 )
            // InternalSqlParser.g:11106:2: rule__GroupByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__GroupByColumns__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:11109:1: ( ( rule__GroupByColumns__Group_1_1__0 )* )
            // InternalSqlParser.g:11110:1: ( rule__GroupByColumns__Group_1_1__0 )*
            {
             before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:11111:1: ( rule__GroupByColumns__Group_1_1__0 )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==Comma) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalSqlParser.g:11111:2: rule__GroupByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__GroupByColumns__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

             after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0"
    // InternalSqlParser.g:11126:1: rule__GroupByColumns__Group_1_1__0 : rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 ;
    public final void rule__GroupByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11130:1: ( rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 )
            // InternalSqlParser.g:11131:2: rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_19);
            rule__GroupByColumns__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0__Impl"
    // InternalSqlParser.g:11138:1: rule__GroupByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__GroupByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11142:1: ( ( Comma ) )
            // InternalSqlParser.g:11143:1: ( Comma )
            {
            // InternalSqlParser.g:11143:1: ( Comma )
            // InternalSqlParser.g:11144:1: Comma
            {
             before(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1"
    // InternalSqlParser.g:11157:1: rule__GroupByColumns__Group_1_1__1 : rule__GroupByColumns__Group_1_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11161:1: ( rule__GroupByColumns__Group_1_1__1__Impl )
            // InternalSqlParser.g:11162:2: rule__GroupByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1__Impl"
    // InternalSqlParser.g:11168:1: rule__GroupByColumns__Group_1_1__1__Impl : ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__GroupByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11172:1: ( ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:11173:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:11173:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:11174:1: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:11175:1: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:11175:2: rule__GroupByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__FullExpression__Group__0"
    // InternalSqlParser.g:11189:1: rule__FullExpression__Group__0 : rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 ;
    public final void rule__FullExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11193:1: ( rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 )
            // InternalSqlParser.g:11194:2: rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__FullExpression__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0"


    // $ANTLR start "rule__FullExpression__Group__0__Impl"
    // InternalSqlParser.g:11201:1: rule__FullExpression__Group__0__Impl : ( ruleExpressionFragment ) ;
    public final void rule__FullExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11205:1: ( ( ruleExpressionFragment ) )
            // InternalSqlParser.g:11206:1: ( ruleExpressionFragment )
            {
            // InternalSqlParser.g:11206:1: ( ruleExpressionFragment )
            // InternalSqlParser.g:11207:1: ruleExpressionFragment
            {
             before(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;

             after(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0__Impl"


    // $ANTLR start "rule__FullExpression__Group__1"
    // InternalSqlParser.g:11218:1: rule__FullExpression__Group__1 : rule__FullExpression__Group__1__Impl ;
    public final void rule__FullExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11222:1: ( rule__FullExpression__Group__1__Impl )
            // InternalSqlParser.g:11223:2: rule__FullExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1"


    // $ANTLR start "rule__FullExpression__Group__1__Impl"
    // InternalSqlParser.g:11229:1: rule__FullExpression__Group__1__Impl : ( ( rule__FullExpression__Group_1__0 )? ) ;
    public final void rule__FullExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11233:1: ( ( ( rule__FullExpression__Group_1__0 )? ) )
            // InternalSqlParser.g:11234:1: ( ( rule__FullExpression__Group_1__0 )? )
            {
            // InternalSqlParser.g:11234:1: ( ( rule__FullExpression__Group_1__0 )? )
            // InternalSqlParser.g:11235:1: ( rule__FullExpression__Group_1__0 )?
            {
             before(grammarAccess.getFullExpressionAccess().getGroup_1()); 
            // InternalSqlParser.g:11236:1: ( rule__FullExpression__Group_1__0 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==AND||LA110_0==OR||LA110_0==RULE_JRNPARAM) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalSqlParser.g:11236:2: rule__FullExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FullExpression__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFullExpressionAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__0"
    // InternalSqlParser.g:11250:1: rule__FullExpression__Group_1__0 : rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 ;
    public final void rule__FullExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11254:1: ( rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 )
            // InternalSqlParser.g:11255:2: rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1
            {
            pushFollow(FOLLOW_47);
            rule__FullExpression__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0"


    // $ANTLR start "rule__FullExpression__Group_1__0__Impl"
    // InternalSqlParser.g:11262:1: rule__FullExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__FullExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11266:1: ( ( () ) )
            // InternalSqlParser.g:11267:1: ( () )
            {
            // InternalSqlParser.g:11267:1: ( () )
            // InternalSqlParser.g:11268:1: ()
            {
             before(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 
            // InternalSqlParser.g:11269:1: ()
            // InternalSqlParser.g:11271:1: 
            {
            }

             after(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__1"
    // InternalSqlParser.g:11281:1: rule__FullExpression__Group_1__1 : rule__FullExpression__Group_1__1__Impl ;
    public final void rule__FullExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11285:1: ( rule__FullExpression__Group_1__1__Impl )
            // InternalSqlParser.g:11286:2: rule__FullExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1"


    // $ANTLR start "rule__FullExpression__Group_1__1__Impl"
    // InternalSqlParser.g:11292:1: rule__FullExpression__Group_1__1__Impl : ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__FullExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11296:1: ( ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) )
            // InternalSqlParser.g:11297:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            {
            // InternalSqlParser.g:11297:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            // InternalSqlParser.g:11298:1: ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            {
            // InternalSqlParser.g:11298:1: ( ( rule__FullExpression__EntriesAssignment_1_1 ) )
            // InternalSqlParser.g:11299:1: ( rule__FullExpression__EntriesAssignment_1_1 )
            {
             before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            // InternalSqlParser.g:11300:1: ( rule__FullExpression__EntriesAssignment_1_1 )
            // InternalSqlParser.g:11300:2: rule__FullExpression__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_48);
            rule__FullExpression__EntriesAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 

            }

            // InternalSqlParser.g:11303:1: ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            // InternalSqlParser.g:11304:1: ( rule__FullExpression__EntriesAssignment_1_1 )*
            {
             before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            // InternalSqlParser.g:11305:1: ( rule__FullExpression__EntriesAssignment_1_1 )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==AND||LA111_0==OR||LA111_0==RULE_JRNPARAM) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // InternalSqlParser.g:11305:2: rule__FullExpression__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__FullExpression__EntriesAssignment_1_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

             after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0"
    // InternalSqlParser.g:11320:1: rule__ExpressionFragmentSecond__Group_0__0 : rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 ;
    public final void rule__ExpressionFragmentSecond__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11324:1: ( rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 )
            // InternalSqlParser.g:11325:2: rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1
            {
            pushFollow(FOLLOW_18);
            rule__ExpressionFragmentSecond__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0__Impl"
    // InternalSqlParser.g:11332:1: rule__ExpressionFragmentSecond__Group_0__0__Impl : ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11336:1: ( ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) )
            // InternalSqlParser.g:11337:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            {
            // InternalSqlParser.g:11337:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            // InternalSqlParser.g:11338:1: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            {
             before(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 
            // InternalSqlParser.g:11339:1: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            // InternalSqlParser.g:11339:2: rule__ExpressionFragmentSecond__CAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1"
    // InternalSqlParser.g:11349:1: rule__ExpressionFragmentSecond__Group_0__1 : rule__ExpressionFragmentSecond__Group_0__1__Impl ;
    public final void rule__ExpressionFragmentSecond__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11353:1: ( rule__ExpressionFragmentSecond__Group_0__1__Impl )
            // InternalSqlParser.g:11354:2: rule__ExpressionFragmentSecond__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1__Impl"
    // InternalSqlParser.g:11360:1: rule__ExpressionFragmentSecond__Group_0__1__Impl : ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11364:1: ( ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) )
            // InternalSqlParser.g:11365:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            {
            // InternalSqlParser.g:11365:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            // InternalSqlParser.g:11366:1: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            {
             before(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 
            // InternalSqlParser.g:11367:1: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            // InternalSqlParser.g:11367:2: rule__ExpressionFragmentSecond__EfragAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__EfragAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__0"
    // InternalSqlParser.g:11381:1: rule__ExpressionGroup__Group__0 : rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 ;
    public final void rule__ExpressionGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11385:1: ( rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 )
            // InternalSqlParser.g:11386:2: rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__ExpressionGroup__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0"


    // $ANTLR start "rule__ExpressionGroup__Group__0__Impl"
    // InternalSqlParser.g:11393:1: rule__ExpressionGroup__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11397:1: ( ( () ) )
            // InternalSqlParser.g:11398:1: ( () )
            {
            // InternalSqlParser.g:11398:1: ( () )
            // InternalSqlParser.g:11399:1: ()
            {
             before(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 
            // InternalSqlParser.g:11400:1: ()
            // InternalSqlParser.g:11402:1: 
            {
            }

             after(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__1"
    // InternalSqlParser.g:11412:1: rule__ExpressionGroup__Group__1 : rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 ;
    public final void rule__ExpressionGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11416:1: ( rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 )
            // InternalSqlParser.g:11417:2: rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2
            {
            pushFollow(FOLLOW_49);
            rule__ExpressionGroup__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1"


    // $ANTLR start "rule__ExpressionGroup__Group__1__Impl"
    // InternalSqlParser.g:11424:1: rule__ExpressionGroup__Group__1__Impl : ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) ;
    public final void rule__ExpressionGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11428:1: ( ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) )
            // InternalSqlParser.g:11429:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            {
            // InternalSqlParser.g:11429:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            // InternalSqlParser.g:11430:1: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            {
             before(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 
            // InternalSqlParser.g:11431:1: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( ((LA112_0>=NOT && LA112_0<=NOT_1)) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSqlParser.g:11431:2: rule__ExpressionGroup__IsnotAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionGroup__IsnotAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__2"
    // InternalSqlParser.g:11441:1: rule__ExpressionGroup__Group__2 : rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 ;
    public final void rule__ExpressionGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11445:1: ( rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 )
            // InternalSqlParser.g:11446:2: rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__ExpressionGroup__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2"


    // $ANTLR start "rule__ExpressionGroup__Group__2__Impl"
    // InternalSqlParser.g:11453:1: rule__ExpressionGroup__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__ExpressionGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11457:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:11458:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:11458:1: ( LeftParenthesis )
            // InternalSqlParser.g:11459:1: LeftParenthesis
            {
             before(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__3"
    // InternalSqlParser.g:11472:1: rule__ExpressionGroup__Group__3 : rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 ;
    public final void rule__ExpressionGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11476:1: ( rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 )
            // InternalSqlParser.g:11477:2: rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__ExpressionGroup__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3"


    // $ANTLR start "rule__ExpressionGroup__Group__3__Impl"
    // InternalSqlParser.g:11484:1: rule__ExpressionGroup__Group__3__Impl : ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) ;
    public final void rule__ExpressionGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11488:1: ( ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) )
            // InternalSqlParser.g:11489:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            {
            // InternalSqlParser.g:11489:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            // InternalSqlParser.g:11490:1: ( rule__ExpressionGroup__ExprAssignment_3 )
            {
             before(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 
            // InternalSqlParser.g:11491:1: ( rule__ExpressionGroup__ExprAssignment_3 )
            // InternalSqlParser.g:11491:2: rule__ExpressionGroup__ExprAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__ExprAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__4"
    // InternalSqlParser.g:11501:1: rule__ExpressionGroup__Group__4 : rule__ExpressionGroup__Group__4__Impl ;
    public final void rule__ExpressionGroup__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11505:1: ( rule__ExpressionGroup__Group__4__Impl )
            // InternalSqlParser.g:11506:2: rule__ExpressionGroup__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4"


    // $ANTLR start "rule__ExpressionGroup__Group__4__Impl"
    // InternalSqlParser.g:11512:1: rule__ExpressionGroup__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__ExpressionGroup__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11516:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:11517:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:11517:1: ( RightParenthesis )
            // InternalSqlParser.g:11518:1: RightParenthesis
            {
             before(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__0"
    // InternalSqlParser.g:11541:1: rule__XExpression__Group__0 : rule__XExpression__Group__0__Impl rule__XExpression__Group__1 ;
    public final void rule__XExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11545:1: ( rule__XExpression__Group__0__Impl rule__XExpression__Group__1 )
            // InternalSqlParser.g:11546:2: rule__XExpression__Group__0__Impl rule__XExpression__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__XExpression__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0"


    // $ANTLR start "rule__XExpression__Group__0__Impl"
    // InternalSqlParser.g:11553:1: rule__XExpression__Group__0__Impl : ( X ) ;
    public final void rule__XExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11557:1: ( ( X ) )
            // InternalSqlParser.g:11558:1: ( X )
            {
            // InternalSqlParser.g:11558:1: ( X )
            // InternalSqlParser.g:11559:1: X
            {
             before(grammarAccess.getXExpressionAccess().getXKeyword_0()); 
            match(input,X,FOLLOW_2); 
             after(grammarAccess.getXExpressionAccess().getXKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0__Impl"


    // $ANTLR start "rule__XExpression__Group__1"
    // InternalSqlParser.g:11572:1: rule__XExpression__Group__1 : rule__XExpression__Group__1__Impl rule__XExpression__Group__2 ;
    public final void rule__XExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11576:1: ( rule__XExpression__Group__1__Impl rule__XExpression__Group__2 )
            // InternalSqlParser.g:11577:2: rule__XExpression__Group__1__Impl rule__XExpression__Group__2
            {
            pushFollow(FOLLOW_50);
            rule__XExpression__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1"


    // $ANTLR start "rule__XExpression__Group__1__Impl"
    // InternalSqlParser.g:11584:1: rule__XExpression__Group__1__Impl : ( () ) ;
    public final void rule__XExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11588:1: ( ( () ) )
            // InternalSqlParser.g:11589:1: ( () )
            {
            // InternalSqlParser.g:11589:1: ( () )
            // InternalSqlParser.g:11590:1: ()
            {
             before(grammarAccess.getXExpressionAccess().getXExprAction_1()); 
            // InternalSqlParser.g:11591:1: ()
            // InternalSqlParser.g:11593:1: 
            {
            }

             after(grammarAccess.getXExpressionAccess().getXExprAction_1()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1__Impl"


    // $ANTLR start "rule__XExpression__Group__2"
    // InternalSqlParser.g:11603:1: rule__XExpression__Group__2 : rule__XExpression__Group__2__Impl rule__XExpression__Group__3 ;
    public final void rule__XExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11607:1: ( rule__XExpression__Group__2__Impl rule__XExpression__Group__3 )
            // InternalSqlParser.g:11608:2: rule__XExpression__Group__2__Impl rule__XExpression__Group__3
            {
            pushFollow(FOLLOW_51);
            rule__XExpression__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2"


    // $ANTLR start "rule__XExpression__Group__2__Impl"
    // InternalSqlParser.g:11615:1: rule__XExpression__Group__2__Impl : ( LeftCurlyBracket ) ;
    public final void rule__XExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11619:1: ( ( LeftCurlyBracket ) )
            // InternalSqlParser.g:11620:1: ( LeftCurlyBracket )
            {
            // InternalSqlParser.g:11620:1: ( LeftCurlyBracket )
            // InternalSqlParser.g:11621:1: LeftCurlyBracket
            {
             before(grammarAccess.getXExpressionAccess().getLeftCurlyBracketKeyword_2()); 
            match(input,LeftCurlyBracket,FOLLOW_2); 
             after(grammarAccess.getXExpressionAccess().getLeftCurlyBracketKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2__Impl"


    // $ANTLR start "rule__XExpression__Group__3"
    // InternalSqlParser.g:11634:1: rule__XExpression__Group__3 : rule__XExpression__Group__3__Impl rule__XExpression__Group__4 ;
    public final void rule__XExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11638:1: ( rule__XExpression__Group__3__Impl rule__XExpression__Group__4 )
            // InternalSqlParser.g:11639:2: rule__XExpression__Group__3__Impl rule__XExpression__Group__4
            {
            pushFollow(FOLLOW_7);
            rule__XExpression__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3"


    // $ANTLR start "rule__XExpression__Group__3__Impl"
    // InternalSqlParser.g:11646:1: rule__XExpression__Group__3__Impl : ( ( rule__XExpression__XfAssignment_3 ) ) ;
    public final void rule__XExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11650:1: ( ( ( rule__XExpression__XfAssignment_3 ) ) )
            // InternalSqlParser.g:11651:1: ( ( rule__XExpression__XfAssignment_3 ) )
            {
            // InternalSqlParser.g:11651:1: ( ( rule__XExpression__XfAssignment_3 ) )
            // InternalSqlParser.g:11652:1: ( rule__XExpression__XfAssignment_3 )
            {
             before(grammarAccess.getXExpressionAccess().getXfAssignment_3()); 
            // InternalSqlParser.g:11653:1: ( rule__XExpression__XfAssignment_3 )
            // InternalSqlParser.g:11653:2: rule__XExpression__XfAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__XfAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionAccess().getXfAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3__Impl"


    // $ANTLR start "rule__XExpression__Group__4"
    // InternalSqlParser.g:11663:1: rule__XExpression__Group__4 : rule__XExpression__Group__4__Impl rule__XExpression__Group__5 ;
    public final void rule__XExpression__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11667:1: ( rule__XExpression__Group__4__Impl rule__XExpression__Group__5 )
            // InternalSqlParser.g:11668:2: rule__XExpression__Group__4__Impl rule__XExpression__Group__5
            {
            pushFollow(FOLLOW_52);
            rule__XExpression__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4"


    // $ANTLR start "rule__XExpression__Group__4__Impl"
    // InternalSqlParser.g:11675:1: rule__XExpression__Group__4__Impl : ( Comma ) ;
    public final void rule__XExpression__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11679:1: ( ( Comma ) )
            // InternalSqlParser.g:11680:1: ( Comma )
            {
            // InternalSqlParser.g:11680:1: ( Comma )
            // InternalSqlParser.g:11681:1: Comma
            {
             before(grammarAccess.getXExpressionAccess().getCommaKeyword_4()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getXExpressionAccess().getCommaKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__5"
    // InternalSqlParser.g:11694:1: rule__XExpression__Group__5 : rule__XExpression__Group__5__Impl rule__XExpression__Group__6 ;
    public final void rule__XExpression__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11698:1: ( rule__XExpression__Group__5__Impl rule__XExpression__Group__6 )
            // InternalSqlParser.g:11699:2: rule__XExpression__Group__5__Impl rule__XExpression__Group__6
            {
            pushFollow(FOLLOW_53);
            rule__XExpression__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5"


    // $ANTLR start "rule__XExpression__Group__5__Impl"
    // InternalSqlParser.g:11706:1: rule__XExpression__Group__5__Impl : ( ( rule__XExpression__ColAssignment_5 ) ) ;
    public final void rule__XExpression__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11710:1: ( ( ( rule__XExpression__ColAssignment_5 ) ) )
            // InternalSqlParser.g:11711:1: ( ( rule__XExpression__ColAssignment_5 ) )
            {
            // InternalSqlParser.g:11711:1: ( ( rule__XExpression__ColAssignment_5 ) )
            // InternalSqlParser.g:11712:1: ( rule__XExpression__ColAssignment_5 )
            {
             before(grammarAccess.getXExpressionAccess().getColAssignment_5()); 
            // InternalSqlParser.g:11713:1: ( rule__XExpression__ColAssignment_5 )
            // InternalSqlParser.g:11713:2: rule__XExpression__ColAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__ColAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionAccess().getColAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5__Impl"


    // $ANTLR start "rule__XExpression__Group__6"
    // InternalSqlParser.g:11723:1: rule__XExpression__Group__6 : rule__XExpression__Group__6__Impl rule__XExpression__Group__7 ;
    public final void rule__XExpression__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11727:1: ( rule__XExpression__Group__6__Impl rule__XExpression__Group__7 )
            // InternalSqlParser.g:11728:2: rule__XExpression__Group__6__Impl rule__XExpression__Group__7
            {
            pushFollow(FOLLOW_53);
            rule__XExpression__Group__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6"


    // $ANTLR start "rule__XExpression__Group__6__Impl"
    // InternalSqlParser.g:11735:1: rule__XExpression__Group__6__Impl : ( ( rule__XExpression__Group_6__0 )? ) ;
    public final void rule__XExpression__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11739:1: ( ( ( rule__XExpression__Group_6__0 )? ) )
            // InternalSqlParser.g:11740:1: ( ( rule__XExpression__Group_6__0 )? )
            {
            // InternalSqlParser.g:11740:1: ( ( rule__XExpression__Group_6__0 )? )
            // InternalSqlParser.g:11741:1: ( rule__XExpression__Group_6__0 )?
            {
             before(grammarAccess.getXExpressionAccess().getGroup_6()); 
            // InternalSqlParser.g:11742:1: ( rule__XExpression__Group_6__0 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==Comma) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSqlParser.g:11742:2: rule__XExpression__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression__Group_6__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getXExpressionAccess().getGroup_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6__Impl"


    // $ANTLR start "rule__XExpression__Group__7"
    // InternalSqlParser.g:11752:1: rule__XExpression__Group__7 : rule__XExpression__Group__7__Impl ;
    public final void rule__XExpression__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11756:1: ( rule__XExpression__Group__7__Impl )
            // InternalSqlParser.g:11757:2: rule__XExpression__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__7__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__7"


    // $ANTLR start "rule__XExpression__Group__7__Impl"
    // InternalSqlParser.g:11763:1: rule__XExpression__Group__7__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11767:1: ( ( RightCurlyBracket ) )
            // InternalSqlParser.g:11768:1: ( RightCurlyBracket )
            {
            // InternalSqlParser.g:11768:1: ( RightCurlyBracket )
            // InternalSqlParser.g:11769:1: RightCurlyBracket
            {
             before(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_7()); 
            match(input,RightCurlyBracket,FOLLOW_2); 
             after(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__7__Impl"


    // $ANTLR start "rule__XExpression__Group_6__0"
    // InternalSqlParser.g:11798:1: rule__XExpression__Group_6__0 : rule__XExpression__Group_6__0__Impl rule__XExpression__Group_6__1 ;
    public final void rule__XExpression__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11802:1: ( rule__XExpression__Group_6__0__Impl rule__XExpression__Group_6__1 )
            // InternalSqlParser.g:11803:2: rule__XExpression__Group_6__0__Impl rule__XExpression__Group_6__1
            {
            pushFollow(FOLLOW_33);
            rule__XExpression__Group_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression__Group_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_6__0"


    // $ANTLR start "rule__XExpression__Group_6__0__Impl"
    // InternalSqlParser.g:11810:1: rule__XExpression__Group_6__0__Impl : ( Comma ) ;
    public final void rule__XExpression__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11814:1: ( ( Comma ) )
            // InternalSqlParser.g:11815:1: ( Comma )
            {
            // InternalSqlParser.g:11815:1: ( Comma )
            // InternalSqlParser.g:11816:1: Comma
            {
             before(grammarAccess.getXExpressionAccess().getCommaKeyword_6_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getXExpressionAccess().getCommaKeyword_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_6__0__Impl"


    // $ANTLR start "rule__XExpression__Group_6__1"
    // InternalSqlParser.g:11829:1: rule__XExpression__Group_6__1 : rule__XExpression__Group_6__1__Impl ;
    public final void rule__XExpression__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11833:1: ( rule__XExpression__Group_6__1__Impl )
            // InternalSqlParser.g:11834:2: rule__XExpression__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_6__1"


    // $ANTLR start "rule__XExpression__Group_6__1__Impl"
    // InternalSqlParser.g:11840:1: rule__XExpression__Group_6__1__Impl : ( ( rule__XExpression__PrmAssignment_6_1 ) ) ;
    public final void rule__XExpression__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11844:1: ( ( ( rule__XExpression__PrmAssignment_6_1 ) ) )
            // InternalSqlParser.g:11845:1: ( ( rule__XExpression__PrmAssignment_6_1 ) )
            {
            // InternalSqlParser.g:11845:1: ( ( rule__XExpression__PrmAssignment_6_1 ) )
            // InternalSqlParser.g:11846:1: ( rule__XExpression__PrmAssignment_6_1 )
            {
             before(grammarAccess.getXExpressionAccess().getPrmAssignment_6_1()); 
            // InternalSqlParser.g:11847:1: ( rule__XExpression__PrmAssignment_6_1 )
            // InternalSqlParser.g:11847:2: rule__XExpression__PrmAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__PrmAssignment_6_1();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionAccess().getPrmAssignment_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_6__1__Impl"


    // $ANTLR start "rule__XExpression___Group__0"
    // InternalSqlParser.g:11861:1: rule__XExpression___Group__0 : rule__XExpression___Group__0__Impl rule__XExpression___Group__1 ;
    public final void rule__XExpression___Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11865:1: ( rule__XExpression___Group__0__Impl rule__XExpression___Group__1 )
            // InternalSqlParser.g:11866:2: rule__XExpression___Group__0__Impl rule__XExpression___Group__1
            {
            pushFollow(FOLLOW_50);
            rule__XExpression___Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0"


    // $ANTLR start "rule__XExpression___Group__0__Impl"
    // InternalSqlParser.g:11873:1: rule__XExpression___Group__0__Impl : ( X ) ;
    public final void rule__XExpression___Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11877:1: ( ( X ) )
            // InternalSqlParser.g:11878:1: ( X )
            {
            // InternalSqlParser.g:11878:1: ( X )
            // InternalSqlParser.g:11879:1: X
            {
             before(grammarAccess.getXExpression_Access().getXKeyword_0()); 
            match(input,X,FOLLOW_2); 
             after(grammarAccess.getXExpression_Access().getXKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0__Impl"


    // $ANTLR start "rule__XExpression___Group__1"
    // InternalSqlParser.g:11892:1: rule__XExpression___Group__1 : rule__XExpression___Group__1__Impl rule__XExpression___Group__2 ;
    public final void rule__XExpression___Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11896:1: ( rule__XExpression___Group__1__Impl rule__XExpression___Group__2 )
            // InternalSqlParser.g:11897:2: rule__XExpression___Group__1__Impl rule__XExpression___Group__2
            {
            pushFollow(FOLLOW_50);
            rule__XExpression___Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1"


    // $ANTLR start "rule__XExpression___Group__1__Impl"
    // InternalSqlParser.g:11904:1: rule__XExpression___Group__1__Impl : ( () ) ;
    public final void rule__XExpression___Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11908:1: ( ( () ) )
            // InternalSqlParser.g:11909:1: ( () )
            {
            // InternalSqlParser.g:11909:1: ( () )
            // InternalSqlParser.g:11910:1: ()
            {
             before(grammarAccess.getXExpression_Access().getXExprAction_1()); 
            // InternalSqlParser.g:11911:1: ()
            // InternalSqlParser.g:11913:1: 
            {
            }

             after(grammarAccess.getXExpression_Access().getXExprAction_1()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1__Impl"


    // $ANTLR start "rule__XExpression___Group__2"
    // InternalSqlParser.g:11923:1: rule__XExpression___Group__2 : rule__XExpression___Group__2__Impl rule__XExpression___Group__3 ;
    public final void rule__XExpression___Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11927:1: ( rule__XExpression___Group__2__Impl rule__XExpression___Group__3 )
            // InternalSqlParser.g:11928:2: rule__XExpression___Group__2__Impl rule__XExpression___Group__3
            {
            pushFollow(FOLLOW_51);
            rule__XExpression___Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2"


    // $ANTLR start "rule__XExpression___Group__2__Impl"
    // InternalSqlParser.g:11935:1: rule__XExpression___Group__2__Impl : ( LeftCurlyBracket ) ;
    public final void rule__XExpression___Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11939:1: ( ( LeftCurlyBracket ) )
            // InternalSqlParser.g:11940:1: ( LeftCurlyBracket )
            {
            // InternalSqlParser.g:11940:1: ( LeftCurlyBracket )
            // InternalSqlParser.g:11941:1: LeftCurlyBracket
            {
             before(grammarAccess.getXExpression_Access().getLeftCurlyBracketKeyword_2()); 
            match(input,LeftCurlyBracket,FOLLOW_2); 
             after(grammarAccess.getXExpression_Access().getLeftCurlyBracketKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2__Impl"


    // $ANTLR start "rule__XExpression___Group__3"
    // InternalSqlParser.g:11954:1: rule__XExpression___Group__3 : rule__XExpression___Group__3__Impl rule__XExpression___Group__4 ;
    public final void rule__XExpression___Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11958:1: ( rule__XExpression___Group__3__Impl rule__XExpression___Group__4 )
            // InternalSqlParser.g:11959:2: rule__XExpression___Group__3__Impl rule__XExpression___Group__4
            {
            pushFollow(FOLLOW_54);
            rule__XExpression___Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3"


    // $ANTLR start "rule__XExpression___Group__3__Impl"
    // InternalSqlParser.g:11966:1: rule__XExpression___Group__3__Impl : ( ( rule__XExpression___XfAssignment_3 ) ) ;
    public final void rule__XExpression___Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11970:1: ( ( ( rule__XExpression___XfAssignment_3 ) ) )
            // InternalSqlParser.g:11971:1: ( ( rule__XExpression___XfAssignment_3 ) )
            {
            // InternalSqlParser.g:11971:1: ( ( rule__XExpression___XfAssignment_3 ) )
            // InternalSqlParser.g:11972:1: ( rule__XExpression___XfAssignment_3 )
            {
             before(grammarAccess.getXExpression_Access().getXfAssignment_3()); 
            // InternalSqlParser.g:11973:1: ( rule__XExpression___XfAssignment_3 )
            // InternalSqlParser.g:11973:2: rule__XExpression___XfAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___XfAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getXExpression_Access().getXfAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3__Impl"


    // $ANTLR start "rule__XExpression___Group__4"
    // InternalSqlParser.g:11983:1: rule__XExpression___Group__4 : rule__XExpression___Group__4__Impl rule__XExpression___Group__5 ;
    public final void rule__XExpression___Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11987:1: ( rule__XExpression___Group__4__Impl rule__XExpression___Group__5 )
            // InternalSqlParser.g:11988:2: rule__XExpression___Group__4__Impl rule__XExpression___Group__5
            {
            pushFollow(FOLLOW_52);
            rule__XExpression___Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4"


    // $ANTLR start "rule__XExpression___Group__4__Impl"
    // InternalSqlParser.g:11995:1: rule__XExpression___Group__4__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11999:1: ( ( VerticalLine ) )
            // InternalSqlParser.g:12000:1: ( VerticalLine )
            {
            // InternalSqlParser.g:12000:1: ( VerticalLine )
            // InternalSqlParser.g:12001:1: VerticalLine
            {
             before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_4()); 
            match(input,VerticalLine,FOLLOW_2); 
             after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4__Impl"


    // $ANTLR start "rule__XExpression___Group__5"
    // InternalSqlParser.g:12014:1: rule__XExpression___Group__5 : rule__XExpression___Group__5__Impl rule__XExpression___Group__6 ;
    public final void rule__XExpression___Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12018:1: ( rule__XExpression___Group__5__Impl rule__XExpression___Group__6 )
            // InternalSqlParser.g:12019:2: rule__XExpression___Group__5__Impl rule__XExpression___Group__6
            {
            pushFollow(FOLLOW_55);
            rule__XExpression___Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5"


    // $ANTLR start "rule__XExpression___Group__5__Impl"
    // InternalSqlParser.g:12026:1: rule__XExpression___Group__5__Impl : ( ( rule__XExpression___ColAssignment_5 ) ) ;
    public final void rule__XExpression___Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12030:1: ( ( ( rule__XExpression___ColAssignment_5 ) ) )
            // InternalSqlParser.g:12031:1: ( ( rule__XExpression___ColAssignment_5 ) )
            {
            // InternalSqlParser.g:12031:1: ( ( rule__XExpression___ColAssignment_5 ) )
            // InternalSqlParser.g:12032:1: ( rule__XExpression___ColAssignment_5 )
            {
             before(grammarAccess.getXExpression_Access().getColAssignment_5()); 
            // InternalSqlParser.g:12033:1: ( rule__XExpression___ColAssignment_5 )
            // InternalSqlParser.g:12033:2: rule__XExpression___ColAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___ColAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getXExpression_Access().getColAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5__Impl"


    // $ANTLR start "rule__XExpression___Group__6"
    // InternalSqlParser.g:12043:1: rule__XExpression___Group__6 : rule__XExpression___Group__6__Impl rule__XExpression___Group__7 ;
    public final void rule__XExpression___Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12047:1: ( rule__XExpression___Group__6__Impl rule__XExpression___Group__7 )
            // InternalSqlParser.g:12048:2: rule__XExpression___Group__6__Impl rule__XExpression___Group__7
            {
            pushFollow(FOLLOW_55);
            rule__XExpression___Group__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6"


    // $ANTLR start "rule__XExpression___Group__6__Impl"
    // InternalSqlParser.g:12055:1: rule__XExpression___Group__6__Impl : ( ( rule__XExpression___Group_6__0 )? ) ;
    public final void rule__XExpression___Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12059:1: ( ( ( rule__XExpression___Group_6__0 )? ) )
            // InternalSqlParser.g:12060:1: ( ( rule__XExpression___Group_6__0 )? )
            {
            // InternalSqlParser.g:12060:1: ( ( rule__XExpression___Group_6__0 )? )
            // InternalSqlParser.g:12061:1: ( rule__XExpression___Group_6__0 )?
            {
             before(grammarAccess.getXExpression_Access().getGroup_6()); 
            // InternalSqlParser.g:12062:1: ( rule__XExpression___Group_6__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==VerticalLine) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSqlParser.g:12062:2: rule__XExpression___Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression___Group_6__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getXExpression_Access().getGroup_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6__Impl"


    // $ANTLR start "rule__XExpression___Group__7"
    // InternalSqlParser.g:12072:1: rule__XExpression___Group__7 : rule__XExpression___Group__7__Impl ;
    public final void rule__XExpression___Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12076:1: ( rule__XExpression___Group__7__Impl )
            // InternalSqlParser.g:12077:2: rule__XExpression___Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__7__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__7"


    // $ANTLR start "rule__XExpression___Group__7__Impl"
    // InternalSqlParser.g:12083:1: rule__XExpression___Group__7__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression___Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12087:1: ( ( RightCurlyBracket ) )
            // InternalSqlParser.g:12088:1: ( RightCurlyBracket )
            {
            // InternalSqlParser.g:12088:1: ( RightCurlyBracket )
            // InternalSqlParser.g:12089:1: RightCurlyBracket
            {
             before(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_7()); 
            match(input,RightCurlyBracket,FOLLOW_2); 
             after(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__7__Impl"


    // $ANTLR start "rule__XExpression___Group_6__0"
    // InternalSqlParser.g:12118:1: rule__XExpression___Group_6__0 : rule__XExpression___Group_6__0__Impl rule__XExpression___Group_6__1 ;
    public final void rule__XExpression___Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12122:1: ( rule__XExpression___Group_6__0__Impl rule__XExpression___Group_6__1 )
            // InternalSqlParser.g:12123:2: rule__XExpression___Group_6__0__Impl rule__XExpression___Group_6__1
            {
            pushFollow(FOLLOW_33);
            rule__XExpression___Group_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpression___Group_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_6__0"


    // $ANTLR start "rule__XExpression___Group_6__0__Impl"
    // InternalSqlParser.g:12130:1: rule__XExpression___Group_6__0__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12134:1: ( ( VerticalLine ) )
            // InternalSqlParser.g:12135:1: ( VerticalLine )
            {
            // InternalSqlParser.g:12135:1: ( VerticalLine )
            // InternalSqlParser.g:12136:1: VerticalLine
            {
             before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_6_0()); 
            match(input,VerticalLine,FOLLOW_2); 
             after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_6__0__Impl"


    // $ANTLR start "rule__XExpression___Group_6__1"
    // InternalSqlParser.g:12149:1: rule__XExpression___Group_6__1 : rule__XExpression___Group_6__1__Impl ;
    public final void rule__XExpression___Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12153:1: ( rule__XExpression___Group_6__1__Impl )
            // InternalSqlParser.g:12154:2: rule__XExpression___Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_6__1"


    // $ANTLR start "rule__XExpression___Group_6__1__Impl"
    // InternalSqlParser.g:12160:1: rule__XExpression___Group_6__1__Impl : ( ( rule__XExpression___PrmAssignment_6_1 ) ) ;
    public final void rule__XExpression___Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12164:1: ( ( ( rule__XExpression___PrmAssignment_6_1 ) ) )
            // InternalSqlParser.g:12165:1: ( ( rule__XExpression___PrmAssignment_6_1 ) )
            {
            // InternalSqlParser.g:12165:1: ( ( rule__XExpression___PrmAssignment_6_1 ) )
            // InternalSqlParser.g:12166:1: ( rule__XExpression___PrmAssignment_6_1 )
            {
             before(grammarAccess.getXExpression_Access().getPrmAssignment_6_1()); 
            // InternalSqlParser.g:12167:1: ( rule__XExpression___PrmAssignment_6_1 )
            // InternalSqlParser.g:12167:2: rule__XExpression___PrmAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___PrmAssignment_6_1();

            state._fsp--;


            }

             after(grammarAccess.getXExpression_Access().getPrmAssignment_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_6__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__0"
    // InternalSqlParser.g:12181:1: rule__XExpressionParams__Group__0 : rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 ;
    public final void rule__XExpressionParams__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12185:1: ( rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 )
            // InternalSqlParser.g:12186:2: rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__XExpressionParams__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0"


    // $ANTLR start "rule__XExpressionParams__Group__0__Impl"
    // InternalSqlParser.g:12193:1: rule__XExpressionParams__Group__0__Impl : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12197:1: ( ( ruleJRParameter ) )
            // InternalSqlParser.g:12198:1: ( ruleJRParameter )
            {
            // InternalSqlParser.g:12198:1: ( ruleJRParameter )
            // InternalSqlParser.g:12199:1: ruleJRParameter
            {
             before(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;

             after(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__1"
    // InternalSqlParser.g:12210:1: rule__XExpressionParams__Group__1 : rule__XExpressionParams__Group__1__Impl ;
    public final void rule__XExpressionParams__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12214:1: ( rule__XExpressionParams__Group__1__Impl )
            // InternalSqlParser.g:12215:2: rule__XExpressionParams__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1"


    // $ANTLR start "rule__XExpressionParams__Group__1__Impl"
    // InternalSqlParser.g:12221:1: rule__XExpressionParams__Group__1__Impl : ( ( rule__XExpressionParams__Group_1__0 )? ) ;
    public final void rule__XExpressionParams__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12225:1: ( ( ( rule__XExpressionParams__Group_1__0 )? ) )
            // InternalSqlParser.g:12226:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            {
            // InternalSqlParser.g:12226:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            // InternalSqlParser.g:12227:1: ( rule__XExpressionParams__Group_1__0 )?
            {
             before(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 
            // InternalSqlParser.g:12228:1: ( rule__XExpressionParams__Group_1__0 )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==Comma) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSqlParser.g:12228:2: rule__XExpressionParams__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpressionParams__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__0"
    // InternalSqlParser.g:12242:1: rule__XExpressionParams__Group_1__0 : rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 ;
    public final void rule__XExpressionParams__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12246:1: ( rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 )
            // InternalSqlParser.g:12247:2: rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__XExpressionParams__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1__0__Impl"
    // InternalSqlParser.g:12254:1: rule__XExpressionParams__Group_1__0__Impl : ( () ) ;
    public final void rule__XExpressionParams__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12258:1: ( ( () ) )
            // InternalSqlParser.g:12259:1: ( () )
            {
            // InternalSqlParser.g:12259:1: ( () )
            // InternalSqlParser.g:12260:1: ()
            {
             before(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 
            // InternalSqlParser.g:12261:1: ()
            // InternalSqlParser.g:12263:1: 
            {
            }

             after(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__1"
    // InternalSqlParser.g:12273:1: rule__XExpressionParams__Group_1__1 : rule__XExpressionParams__Group_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12277:1: ( rule__XExpressionParams__Group_1__1__Impl )
            // InternalSqlParser.g:12278:2: rule__XExpressionParams__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1__1__Impl"
    // InternalSqlParser.g:12284:1: rule__XExpressionParams__Group_1__1__Impl : ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) ;
    public final void rule__XExpressionParams__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12288:1: ( ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:12289:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:12289:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            // InternalSqlParser.g:12290:1: ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:12290:1: ( ( rule__XExpressionParams__Group_1_1__0 ) )
            // InternalSqlParser.g:12291:1: ( rule__XExpressionParams__Group_1_1__0 )
            {
             before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:12292:1: ( rule__XExpressionParams__Group_1_1__0 )
            // InternalSqlParser.g:12292:2: rule__XExpressionParams__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__XExpressionParams__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:12295:1: ( ( rule__XExpressionParams__Group_1_1__0 )* )
            // InternalSqlParser.g:12296:1: ( rule__XExpressionParams__Group_1_1__0 )*
            {
             before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:12297:1: ( rule__XExpressionParams__Group_1_1__0 )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==Comma) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalSqlParser.g:12297:2: rule__XExpressionParams__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__XExpressionParams__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

             after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0"
    // InternalSqlParser.g:12312:1: rule__XExpressionParams__Group_1_1__0 : rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 ;
    public final void rule__XExpressionParams__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12316:1: ( rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 )
            // InternalSqlParser.g:12317:2: rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1
            {
            pushFollow(FOLLOW_33);
            rule__XExpressionParams__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0__Impl"
    // InternalSqlParser.g:12324:1: rule__XExpressionParams__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__XExpressionParams__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12328:1: ( ( Comma ) )
            // InternalSqlParser.g:12329:1: ( Comma )
            {
            // InternalSqlParser.g:12329:1: ( Comma )
            // InternalSqlParser.g:12330:1: Comma
            {
             before(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1"
    // InternalSqlParser.g:12343:1: rule__XExpressionParams__Group_1_1__1 : rule__XExpressionParams__Group_1_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12347:1: ( rule__XExpressionParams__Group_1_1__1__Impl )
            // InternalSqlParser.g:12348:2: rule__XExpressionParams__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1__Impl"
    // InternalSqlParser.g:12354:1: rule__XExpressionParams__Group_1_1__1__Impl : ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__XExpressionParams__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12358:1: ( ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:12359:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:12359:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:12360:1: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:12361:1: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:12361:2: rule__XExpressionParams__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1__Impl"


    // $ANTLR start "rule__Expression__Group__0"
    // InternalSqlParser.g:12375:1: rule__Expression__Group__0 : rule__Expression__Group__0__Impl rule__Expression__Group__1 ;
    public final void rule__Expression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12379:1: ( rule__Expression__Group__0__Impl rule__Expression__Group__1 )
            // InternalSqlParser.g:12380:2: rule__Expression__Group__0__Impl rule__Expression__Group__1
            {
            pushFollow(FOLLOW_56);
            rule__Expression__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Expression__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0"


    // $ANTLR start "rule__Expression__Group__0__Impl"
    // InternalSqlParser.g:12387:1: rule__Expression__Group__0__Impl : ( ( rule__Expression__Op1Assignment_0 ) ) ;
    public final void rule__Expression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12391:1: ( ( ( rule__Expression__Op1Assignment_0 ) ) )
            // InternalSqlParser.g:12392:1: ( ( rule__Expression__Op1Assignment_0 ) )
            {
            // InternalSqlParser.g:12392:1: ( ( rule__Expression__Op1Assignment_0 ) )
            // InternalSqlParser.g:12393:1: ( rule__Expression__Op1Assignment_0 )
            {
             before(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 
            // InternalSqlParser.g:12394:1: ( rule__Expression__Op1Assignment_0 )
            // InternalSqlParser.g:12394:2: rule__Expression__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Op1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0__Impl"


    // $ANTLR start "rule__Expression__Group__1"
    // InternalSqlParser.g:12404:1: rule__Expression__Group__1 : rule__Expression__Group__1__Impl ;
    public final void rule__Expression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12408:1: ( rule__Expression__Group__1__Impl )
            // InternalSqlParser.g:12409:2: rule__Expression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1"


    // $ANTLR start "rule__Expression__Group__1__Impl"
    // InternalSqlParser.g:12415:1: rule__Expression__Group__1__Impl : ( ( rule__Expression__Alternatives_1 ) ) ;
    public final void rule__Expression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12419:1: ( ( ( rule__Expression__Alternatives_1 ) ) )
            // InternalSqlParser.g:12420:1: ( ( rule__Expression__Alternatives_1 ) )
            {
            // InternalSqlParser.g:12420:1: ( ( rule__Expression__Alternatives_1 ) )
            // InternalSqlParser.g:12421:1: ( rule__Expression__Alternatives_1 )
            {
             before(grammarAccess.getExpressionAccess().getAlternatives_1()); 
            // InternalSqlParser.g:12422:1: ( rule__Expression__Alternatives_1 )
            // InternalSqlParser.g:12422:2: rule__Expression__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getExpressionAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalSqlParser.g:12436:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12440:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalSqlParser.g:12441:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__Comparison__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalSqlParser.g:12448:1: rule__Comparison__Group__0__Impl : ( ( rule__Comparison__OperatorAssignment_0 ) ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12452:1: ( ( ( rule__Comparison__OperatorAssignment_0 ) ) )
            // InternalSqlParser.g:12453:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            {
            // InternalSqlParser.g:12453:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            // InternalSqlParser.g:12454:1: ( rule__Comparison__OperatorAssignment_0 )
            {
             before(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 
            // InternalSqlParser.g:12455:1: ( rule__Comparison__OperatorAssignment_0 )
            // InternalSqlParser.g:12455:2: rule__Comparison__OperatorAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalSqlParser.g:12465:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl rule__Comparison__Group__2 ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12469:1: ( rule__Comparison__Group__1__Impl rule__Comparison__Group__2 )
            // InternalSqlParser.g:12470:2: rule__Comparison__Group__1__Impl rule__Comparison__Group__2
            {
            pushFollow(FOLLOW_57);
            rule__Comparison__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalSqlParser.g:12477:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__SubOperatorAssignment_1 )? ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12481:1: ( ( ( rule__Comparison__SubOperatorAssignment_1 )? ) )
            // InternalSqlParser.g:12482:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            {
            // InternalSqlParser.g:12482:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            // InternalSqlParser.g:12483:1: ( rule__Comparison__SubOperatorAssignment_1 )?
            {
             before(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 
            // InternalSqlParser.g:12484:1: ( rule__Comparison__SubOperatorAssignment_1 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==SOME||LA117_0==ALL||LA117_0==ANY) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSqlParser.g:12484:2: rule__Comparison__SubOperatorAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Comparison__SubOperatorAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group__2"
    // InternalSqlParser.g:12494:1: rule__Comparison__Group__2 : rule__Comparison__Group__2__Impl ;
    public final void rule__Comparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12498:1: ( rule__Comparison__Group__2__Impl )
            // InternalSqlParser.g:12499:2: rule__Comparison__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2"


    // $ANTLR start "rule__Comparison__Group__2__Impl"
    // InternalSqlParser.g:12505:1: rule__Comparison__Group__2__Impl : ( ( rule__Comparison__Op2Assignment_2 ) ) ;
    public final void rule__Comparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12509:1: ( ( ( rule__Comparison__Op2Assignment_2 ) ) )
            // InternalSqlParser.g:12510:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            {
            // InternalSqlParser.g:12510:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            // InternalSqlParser.g:12511:1: ( rule__Comparison__Op2Assignment_2 )
            {
             before(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 
            // InternalSqlParser.g:12512:1: ( rule__Comparison__Op2Assignment_2 )
            // InternalSqlParser.g:12512:2: rule__Comparison__Op2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Op2Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2__Impl"


    // $ANTLR start "rule__Like__Group__0"
    // InternalSqlParser.g:12528:1: rule__Like__Group__0 : rule__Like__Group__0__Impl rule__Like__Group__1 ;
    public final void rule__Like__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12532:1: ( rule__Like__Group__0__Impl rule__Like__Group__1 )
            // InternalSqlParser.g:12533:2: rule__Like__Group__0__Impl rule__Like__Group__1
            {
            pushFollow(FOLLOW_58);
            rule__Like__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Like__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0"


    // $ANTLR start "rule__Like__Group__0__Impl"
    // InternalSqlParser.g:12540:1: rule__Like__Group__0__Impl : ( ( rule__Like__OpLikeAssignment_0 ) ) ;
    public final void rule__Like__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12544:1: ( ( ( rule__Like__OpLikeAssignment_0 ) ) )
            // InternalSqlParser.g:12545:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            {
            // InternalSqlParser.g:12545:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            // InternalSqlParser.g:12546:1: ( rule__Like__OpLikeAssignment_0 )
            {
             before(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 
            // InternalSqlParser.g:12547:1: ( rule__Like__OpLikeAssignment_0 )
            // InternalSqlParser.g:12547:2: rule__Like__OpLikeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Like__OpLikeAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0__Impl"


    // $ANTLR start "rule__Like__Group__1"
    // InternalSqlParser.g:12557:1: rule__Like__Group__1 : rule__Like__Group__1__Impl ;
    public final void rule__Like__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12561:1: ( rule__Like__Group__1__Impl )
            // InternalSqlParser.g:12562:2: rule__Like__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1"


    // $ANTLR start "rule__Like__Group__1__Impl"
    // InternalSqlParser.g:12568:1: rule__Like__Group__1__Impl : ( ( rule__Like__Op2Assignment_1 ) ) ;
    public final void rule__Like__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12572:1: ( ( ( rule__Like__Op2Assignment_1 ) ) )
            // InternalSqlParser.g:12573:1: ( ( rule__Like__Op2Assignment_1 ) )
            {
            // InternalSqlParser.g:12573:1: ( ( rule__Like__Op2Assignment_1 ) )
            // InternalSqlParser.g:12574:1: ( rule__Like__Op2Assignment_1 )
            {
             before(grammarAccess.getLikeAccess().getOp2Assignment_1()); 
            // InternalSqlParser.g:12575:1: ( rule__Like__Op2Assignment_1 )
            // InternalSqlParser.g:12575:2: rule__Like__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Like__Op2Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLikeAccess().getOp2Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__0"
    // InternalSqlParser.g:12589:1: rule__Between__Group__0 : rule__Between__Group__0__Impl rule__Between__Group__1 ;
    public final void rule__Between__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12593:1: ( rule__Between__Group__0__Impl rule__Between__Group__1 )
            // InternalSqlParser.g:12594:2: rule__Between__Group__0__Impl rule__Between__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__Between__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Between__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0"


    // $ANTLR start "rule__Between__Group__0__Impl"
    // InternalSqlParser.g:12601:1: rule__Between__Group__0__Impl : ( ( rule__Between__OpBetweenAssignment_0 ) ) ;
    public final void rule__Between__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12605:1: ( ( ( rule__Between__OpBetweenAssignment_0 ) ) )
            // InternalSqlParser.g:12606:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            {
            // InternalSqlParser.g:12606:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            // InternalSqlParser.g:12607:1: ( rule__Between__OpBetweenAssignment_0 )
            {
             before(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 
            // InternalSqlParser.g:12608:1: ( rule__Between__OpBetweenAssignment_0 )
            // InternalSqlParser.g:12608:2: rule__Between__OpBetweenAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Between__OpBetweenAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0__Impl"


    // $ANTLR start "rule__Between__Group__1"
    // InternalSqlParser.g:12618:1: rule__Between__Group__1 : rule__Between__Group__1__Impl rule__Between__Group__2 ;
    public final void rule__Between__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12622:1: ( rule__Between__Group__1__Impl rule__Between__Group__2 )
            // InternalSqlParser.g:12623:2: rule__Between__Group__1__Impl rule__Between__Group__2
            {
            pushFollow(FOLLOW_59);
            rule__Between__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Between__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1"


    // $ANTLR start "rule__Between__Group__1__Impl"
    // InternalSqlParser.g:12630:1: rule__Between__Group__1__Impl : ( ( rule__Between__Op2Assignment_1 ) ) ;
    public final void rule__Between__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12634:1: ( ( ( rule__Between__Op2Assignment_1 ) ) )
            // InternalSqlParser.g:12635:1: ( ( rule__Between__Op2Assignment_1 ) )
            {
            // InternalSqlParser.g:12635:1: ( ( rule__Between__Op2Assignment_1 ) )
            // InternalSqlParser.g:12636:1: ( rule__Between__Op2Assignment_1 )
            {
             before(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 
            // InternalSqlParser.g:12637:1: ( rule__Between__Op2Assignment_1 )
            // InternalSqlParser.g:12637:2: rule__Between__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op2Assignment_1();

            state._fsp--;


            }

             after(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__2"
    // InternalSqlParser.g:12647:1: rule__Between__Group__2 : rule__Between__Group__2__Impl rule__Between__Group__3 ;
    public final void rule__Between__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12651:1: ( rule__Between__Group__2__Impl rule__Between__Group__3 )
            // InternalSqlParser.g:12652:2: rule__Between__Group__2__Impl rule__Between__Group__3
            {
            pushFollow(FOLLOW_52);
            rule__Between__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Between__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2"


    // $ANTLR start "rule__Between__Group__2__Impl"
    // InternalSqlParser.g:12659:1: rule__Between__Group__2__Impl : ( AND ) ;
    public final void rule__Between__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12663:1: ( ( AND ) )
            // InternalSqlParser.g:12664:1: ( AND )
            {
            // InternalSqlParser.g:12664:1: ( AND )
            // InternalSqlParser.g:12665:1: AND
            {
             before(grammarAccess.getBetweenAccess().getANDKeyword_2()); 
            match(input,AND,FOLLOW_2); 
             after(grammarAccess.getBetweenAccess().getANDKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2__Impl"


    // $ANTLR start "rule__Between__Group__3"
    // InternalSqlParser.g:12678:1: rule__Between__Group__3 : rule__Between__Group__3__Impl ;
    public final void rule__Between__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12682:1: ( rule__Between__Group__3__Impl )
            // InternalSqlParser.g:12683:2: rule__Between__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3"


    // $ANTLR start "rule__Between__Group__3__Impl"
    // InternalSqlParser.g:12689:1: rule__Between__Group__3__Impl : ( ( rule__Between__Op3Assignment_3 ) ) ;
    public final void rule__Between__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12693:1: ( ( ( rule__Between__Op3Assignment_3 ) ) )
            // InternalSqlParser.g:12694:1: ( ( rule__Between__Op3Assignment_3 ) )
            {
            // InternalSqlParser.g:12694:1: ( ( rule__Between__Op3Assignment_3 ) )
            // InternalSqlParser.g:12695:1: ( rule__Between__Op3Assignment_3 )
            {
             before(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 
            // InternalSqlParser.g:12696:1: ( rule__Between__Op3Assignment_3 )
            // InternalSqlParser.g:12696:2: rule__Between__Op3Assignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op3Assignment_3();

            state._fsp--;


            }

             after(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3__Impl"


    // $ANTLR start "rule__InOperator__Group__0"
    // InternalSqlParser.g:12714:1: rule__InOperator__Group__0 : rule__InOperator__Group__0__Impl rule__InOperator__Group__1 ;
    public final void rule__InOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12718:1: ( rule__InOperator__Group__0__Impl rule__InOperator__Group__1 )
            // InternalSqlParser.g:12719:2: rule__InOperator__Group__0__Impl rule__InOperator__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__InOperator__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__InOperator__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0"


    // $ANTLR start "rule__InOperator__Group__0__Impl"
    // InternalSqlParser.g:12726:1: rule__InOperator__Group__0__Impl : ( () ) ;
    public final void rule__InOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12730:1: ( ( () ) )
            // InternalSqlParser.g:12731:1: ( () )
            {
            // InternalSqlParser.g:12731:1: ( () )
            // InternalSqlParser.g:12732:1: ()
            {
             before(grammarAccess.getInOperatorAccess().getInOperAction_0()); 
            // InternalSqlParser.g:12733:1: ()
            // InternalSqlParser.g:12735:1: 
            {
            }

             after(grammarAccess.getInOperatorAccess().getInOperAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0__Impl"


    // $ANTLR start "rule__InOperator__Group__1"
    // InternalSqlParser.g:12745:1: rule__InOperator__Group__1 : rule__InOperator__Group__1__Impl rule__InOperator__Group__2 ;
    public final void rule__InOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12749:1: ( rule__InOperator__Group__1__Impl rule__InOperator__Group__2 )
            // InternalSqlParser.g:12750:2: rule__InOperator__Group__1__Impl rule__InOperator__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__InOperator__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1"


    // $ANTLR start "rule__InOperator__Group__1__Impl"
    // InternalSqlParser.g:12757:1: rule__InOperator__Group__1__Impl : ( ( rule__InOperator__OpAssignment_1 ) ) ;
    public final void rule__InOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12761:1: ( ( ( rule__InOperator__OpAssignment_1 ) ) )
            // InternalSqlParser.g:12762:1: ( ( rule__InOperator__OpAssignment_1 ) )
            {
            // InternalSqlParser.g:12762:1: ( ( rule__InOperator__OpAssignment_1 ) )
            // InternalSqlParser.g:12763:1: ( rule__InOperator__OpAssignment_1 )
            {
             before(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 
            // InternalSqlParser.g:12764:1: ( rule__InOperator__OpAssignment_1 )
            // InternalSqlParser.g:12764:2: rule__InOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__OpAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1__Impl"


    // $ANTLR start "rule__InOperator__Group__2"
    // InternalSqlParser.g:12774:1: rule__InOperator__Group__2 : rule__InOperator__Group__2__Impl ;
    public final void rule__InOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12778:1: ( rule__InOperator__Group__2__Impl )
            // InternalSqlParser.g:12779:2: rule__InOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2"


    // $ANTLR start "rule__InOperator__Group__2__Impl"
    // InternalSqlParser.g:12785:1: rule__InOperator__Group__2__Impl : ( ( rule__InOperator__Alternatives_2 ) ) ;
    public final void rule__InOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12789:1: ( ( ( rule__InOperator__Alternatives_2 ) ) )
            // InternalSqlParser.g:12790:1: ( ( rule__InOperator__Alternatives_2 ) )
            {
            // InternalSqlParser.g:12790:1: ( ( rule__InOperator__Alternatives_2 ) )
            // InternalSqlParser.g:12791:1: ( rule__InOperator__Alternatives_2 )
            {
             before(grammarAccess.getInOperatorAccess().getAlternatives_2()); 
            // InternalSqlParser.g:12792:1: ( rule__InOperator__Alternatives_2 )
            // InternalSqlParser.g:12792:2: rule__InOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Alternatives_2();

            state._fsp--;


            }

             after(grammarAccess.getInOperatorAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__0"
    // InternalSqlParser.g:12808:1: rule__ExistsOperator__Group__0 : rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 ;
    public final void rule__ExistsOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12812:1: ( rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 )
            // InternalSqlParser.g:12813:2: rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__ExistsOperator__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0"


    // $ANTLR start "rule__ExistsOperator__Group__0__Impl"
    // InternalSqlParser.g:12820:1: rule__ExistsOperator__Group__0__Impl : ( () ) ;
    public final void rule__ExistsOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12824:1: ( ( () ) )
            // InternalSqlParser.g:12825:1: ( () )
            {
            // InternalSqlParser.g:12825:1: ( () )
            // InternalSqlParser.g:12826:1: ()
            {
             before(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 
            // InternalSqlParser.g:12827:1: ()
            // InternalSqlParser.g:12829:1: 
            {
            }

             after(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__1"
    // InternalSqlParser.g:12839:1: rule__ExistsOperator__Group__1 : rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 ;
    public final void rule__ExistsOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12843:1: ( rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 )
            // InternalSqlParser.g:12844:2: rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__ExistsOperator__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1"


    // $ANTLR start "rule__ExistsOperator__Group__1__Impl"
    // InternalSqlParser.g:12851:1: rule__ExistsOperator__Group__1__Impl : ( ( rule__ExistsOperator__OpAssignment_1 ) ) ;
    public final void rule__ExistsOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12855:1: ( ( ( rule__ExistsOperator__OpAssignment_1 ) ) )
            // InternalSqlParser.g:12856:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            {
            // InternalSqlParser.g:12856:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            // InternalSqlParser.g:12857:1: ( rule__ExistsOperator__OpAssignment_1 )
            {
             before(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 
            // InternalSqlParser.g:12858:1: ( rule__ExistsOperator__OpAssignment_1 )
            // InternalSqlParser.g:12858:2: rule__ExistsOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__OpAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__2"
    // InternalSqlParser.g:12868:1: rule__ExistsOperator__Group__2 : rule__ExistsOperator__Group__2__Impl ;
    public final void rule__ExistsOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12872:1: ( rule__ExistsOperator__Group__2__Impl )
            // InternalSqlParser.g:12873:2: rule__ExistsOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2"


    // $ANTLR start "rule__ExistsOperator__Group__2__Impl"
    // InternalSqlParser.g:12879:1: rule__ExistsOperator__Group__2__Impl : ( ( rule__ExistsOperator__Alternatives_2 ) ) ;
    public final void rule__ExistsOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12883:1: ( ( ( rule__ExistsOperator__Alternatives_2 ) ) )
            // InternalSqlParser.g:12884:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            {
            // InternalSqlParser.g:12884:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            // InternalSqlParser.g:12885:1: ( rule__ExistsOperator__Alternatives_2 )
            {
             before(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 
            // InternalSqlParser.g:12886:1: ( rule__ExistsOperator__Alternatives_2 )
            // InternalSqlParser.g:12886:2: rule__ExistsOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Alternatives_2();

            state._fsp--;


            }

             after(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__0"
    // InternalSqlParser.g:12902:1: rule__OperandListGroup__Group__0 : rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 ;
    public final void rule__OperandListGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12906:1: ( rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 )
            // InternalSqlParser.g:12907:2: rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__OperandListGroup__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0"


    // $ANTLR start "rule__OperandListGroup__Group__0__Impl"
    // InternalSqlParser.g:12914:1: rule__OperandListGroup__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandListGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12918:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:12919:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:12919:1: ( LeftParenthesis )
            // InternalSqlParser.g:12920:1: LeftParenthesis
            {
             before(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__1"
    // InternalSqlParser.g:12933:1: rule__OperandListGroup__Group__1 : rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 ;
    public final void rule__OperandListGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12937:1: ( rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 )
            // InternalSqlParser.g:12938:2: rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__OperandListGroup__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1"


    // $ANTLR start "rule__OperandListGroup__Group__1__Impl"
    // InternalSqlParser.g:12945:1: rule__OperandListGroup__Group__1__Impl : ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) ;
    public final void rule__OperandListGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12949:1: ( ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) )
            // InternalSqlParser.g:12950:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            {
            // InternalSqlParser.g:12950:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            // InternalSqlParser.g:12951:1: ( rule__OperandListGroup__OpGroupAssignment_1 )
            {
             before(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 
            // InternalSqlParser.g:12952:1: ( rule__OperandListGroup__OpGroupAssignment_1 )
            // InternalSqlParser.g:12952:2: rule__OperandListGroup__OpGroupAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__OpGroupAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__2"
    // InternalSqlParser.g:12962:1: rule__OperandListGroup__Group__2 : rule__OperandListGroup__Group__2__Impl ;
    public final void rule__OperandListGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12966:1: ( rule__OperandListGroup__Group__2__Impl )
            // InternalSqlParser.g:12967:2: rule__OperandListGroup__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2"


    // $ANTLR start "rule__OperandListGroup__Group__2__Impl"
    // InternalSqlParser.g:12973:1: rule__OperandListGroup__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandListGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12977:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:12978:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:12978:1: ( RightParenthesis )
            // InternalSqlParser.g:12979:1: RightParenthesis
            {
             before(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2__Impl"


    // $ANTLR start "rule__OperandList__Group__0"
    // InternalSqlParser.g:12998:1: rule__OperandList__Group__0 : rule__OperandList__Group__0__Impl rule__OperandList__Group__1 ;
    public final void rule__OperandList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13002:1: ( rule__OperandList__Group__0__Impl rule__OperandList__Group__1 )
            // InternalSqlParser.g:13003:2: rule__OperandList__Group__0__Impl rule__OperandList__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__OperandList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0"


    // $ANTLR start "rule__OperandList__Group__0__Impl"
    // InternalSqlParser.g:13010:1: rule__OperandList__Group__0__Impl : ( ruleScalarOperand ) ;
    public final void rule__OperandList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13014:1: ( ( ruleScalarOperand ) )
            // InternalSqlParser.g:13015:1: ( ruleScalarOperand )
            {
            // InternalSqlParser.g:13015:1: ( ruleScalarOperand )
            // InternalSqlParser.g:13016:1: ruleScalarOperand
            {
             before(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;

             after(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0__Impl"


    // $ANTLR start "rule__OperandList__Group__1"
    // InternalSqlParser.g:13027:1: rule__OperandList__Group__1 : rule__OperandList__Group__1__Impl ;
    public final void rule__OperandList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13031:1: ( rule__OperandList__Group__1__Impl )
            // InternalSqlParser.g:13032:2: rule__OperandList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1"


    // $ANTLR start "rule__OperandList__Group__1__Impl"
    // InternalSqlParser.g:13038:1: rule__OperandList__Group__1__Impl : ( ( rule__OperandList__Group_1__0 )? ) ;
    public final void rule__OperandList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13042:1: ( ( ( rule__OperandList__Group_1__0 )? ) )
            // InternalSqlParser.g:13043:1: ( ( rule__OperandList__Group_1__0 )? )
            {
            // InternalSqlParser.g:13043:1: ( ( rule__OperandList__Group_1__0 )? )
            // InternalSqlParser.g:13044:1: ( rule__OperandList__Group_1__0 )?
            {
             before(grammarAccess.getOperandListAccess().getGroup_1()); 
            // InternalSqlParser.g:13045:1: ( rule__OperandList__Group_1__0 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==Comma) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSqlParser.g:13045:2: rule__OperandList__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandList__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOperandListAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1__0"
    // InternalSqlParser.g:13059:1: rule__OperandList__Group_1__0 : rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 ;
    public final void rule__OperandList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13063:1: ( rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 )
            // InternalSqlParser.g:13064:2: rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__OperandList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0"


    // $ANTLR start "rule__OperandList__Group_1__0__Impl"
    // InternalSqlParser.g:13071:1: rule__OperandList__Group_1__0__Impl : ( () ) ;
    public final void rule__OperandList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13075:1: ( ( () ) )
            // InternalSqlParser.g:13076:1: ( () )
            {
            // InternalSqlParser.g:13076:1: ( () )
            // InternalSqlParser.g:13077:1: ()
            {
             before(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 
            // InternalSqlParser.g:13078:1: ()
            // InternalSqlParser.g:13080:1: 
            {
            }

             after(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1__1"
    // InternalSqlParser.g:13090:1: rule__OperandList__Group_1__1 : rule__OperandList__Group_1__1__Impl ;
    public final void rule__OperandList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13094:1: ( rule__OperandList__Group_1__1__Impl )
            // InternalSqlParser.g:13095:2: rule__OperandList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1"


    // $ANTLR start "rule__OperandList__Group_1__1__Impl"
    // InternalSqlParser.g:13101:1: rule__OperandList__Group_1__1__Impl : ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) ;
    public final void rule__OperandList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13105:1: ( ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:13106:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:13106:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            // InternalSqlParser.g:13107:1: ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:13107:1: ( ( rule__OperandList__Group_1_1__0 ) )
            // InternalSqlParser.g:13108:1: ( rule__OperandList__Group_1_1__0 )
            {
             before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            // InternalSqlParser.g:13109:1: ( rule__OperandList__Group_1_1__0 )
            // InternalSqlParser.g:13109:2: rule__OperandList__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__OperandList__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getOperandListAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:13112:1: ( ( rule__OperandList__Group_1_1__0 )* )
            // InternalSqlParser.g:13113:1: ( rule__OperandList__Group_1_1__0 )*
            {
             before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            // InternalSqlParser.g:13114:1: ( rule__OperandList__Group_1_1__0 )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==Comma) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalSqlParser.g:13114:2: rule__OperandList__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__OperandList__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

             after(grammarAccess.getOperandListAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__0"
    // InternalSqlParser.g:13129:1: rule__OperandList__Group_1_1__0 : rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 ;
    public final void rule__OperandList__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13133:1: ( rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 )
            // InternalSqlParser.g:13134:2: rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1
            {
            pushFollow(FOLLOW_61);
            rule__OperandList__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0"


    // $ANTLR start "rule__OperandList__Group_1_1__0__Impl"
    // InternalSqlParser.g:13141:1: rule__OperandList__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OperandList__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13145:1: ( ( Comma ) )
            // InternalSqlParser.g:13146:1: ( Comma )
            {
            // InternalSqlParser.g:13146:1: ( Comma )
            // InternalSqlParser.g:13147:1: Comma
            {
             before(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__1"
    // InternalSqlParser.g:13160:1: rule__OperandList__Group_1_1__1 : rule__OperandList__Group_1_1__1__Impl ;
    public final void rule__OperandList__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13164:1: ( rule__OperandList__Group_1_1__1__Impl )
            // InternalSqlParser.g:13165:2: rule__OperandList__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1"


    // $ANTLR start "rule__OperandList__Group_1_1__1__Impl"
    // InternalSqlParser.g:13171:1: rule__OperandList__Group_1_1__1__Impl : ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OperandList__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13175:1: ( ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:13176:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:13176:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:13177:1: ( rule__OperandList__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:13178:1: ( rule__OperandList__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:13178:2: rule__OperandList__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__0"
    // InternalSqlParser.g:13192:1: rule__OperandGroup__Group_1__0 : rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 ;
    public final void rule__OperandGroup__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13196:1: ( rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 )
            // InternalSqlParser.g:13197:2: rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1
            {
            pushFollow(FOLLOW_52);
            rule__OperandGroup__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0"


    // $ANTLR start "rule__OperandGroup__Group_1__0__Impl"
    // InternalSqlParser.g:13204:1: rule__OperandGroup__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandGroup__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13208:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:13209:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:13209:1: ( LeftParenthesis )
            // InternalSqlParser.g:13210:1: LeftParenthesis
            {
             before(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__1"
    // InternalSqlParser.g:13223:1: rule__OperandGroup__Group_1__1 : rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 ;
    public final void rule__OperandGroup__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13227:1: ( rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 )
            // InternalSqlParser.g:13228:2: rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2
            {
            pushFollow(FOLLOW_31);
            rule__OperandGroup__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1"


    // $ANTLR start "rule__OperandGroup__Group_1__1__Impl"
    // InternalSqlParser.g:13235:1: rule__OperandGroup__Group_1__1__Impl : ( ruleOperand ) ;
    public final void rule__OperandGroup__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13239:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:13240:1: ( ruleOperand )
            {
            // InternalSqlParser.g:13240:1: ( ruleOperand )
            // InternalSqlParser.g:13241:1: ruleOperand
            {
             before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;

             after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__2"
    // InternalSqlParser.g:13252:1: rule__OperandGroup__Group_1__2 : rule__OperandGroup__Group_1__2__Impl ;
    public final void rule__OperandGroup__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13256:1: ( rule__OperandGroup__Group_1__2__Impl )
            // InternalSqlParser.g:13257:2: rule__OperandGroup__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2"


    // $ANTLR start "rule__OperandGroup__Group_1__2__Impl"
    // InternalSqlParser.g:13263:1: rule__OperandGroup__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandGroup__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13267:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:13268:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:13268:1: ( RightParenthesis )
            // InternalSqlParser.g:13269:1: RightParenthesis
            {
             before(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2__Impl"


    // $ANTLR start "rule__Operand__Group__0"
    // InternalSqlParser.g:13288:1: rule__Operand__Group__0 : rule__Operand__Group__0__Impl rule__Operand__Group__1 ;
    public final void rule__Operand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13292:1: ( rule__Operand__Group__0__Impl rule__Operand__Group__1 )
            // InternalSqlParser.g:13293:2: rule__Operand__Group__0__Impl rule__Operand__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__Operand__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0"


    // $ANTLR start "rule__Operand__Group__0__Impl"
    // InternalSqlParser.g:13300:1: rule__Operand__Group__0__Impl : ( ( rule__Operand__Op1Assignment_0 ) ) ;
    public final void rule__Operand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13304:1: ( ( ( rule__Operand__Op1Assignment_0 ) ) )
            // InternalSqlParser.g:13305:1: ( ( rule__Operand__Op1Assignment_0 ) )
            {
            // InternalSqlParser.g:13305:1: ( ( rule__Operand__Op1Assignment_0 ) )
            // InternalSqlParser.g:13306:1: ( rule__Operand__Op1Assignment_0 )
            {
             before(grammarAccess.getOperandAccess().getOp1Assignment_0()); 
            // InternalSqlParser.g:13307:1: ( rule__Operand__Op1Assignment_0 )
            // InternalSqlParser.g:13307:2: rule__Operand__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Op1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getOperandAccess().getOp1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0__Impl"


    // $ANTLR start "rule__Operand__Group__1"
    // InternalSqlParser.g:13317:1: rule__Operand__Group__1 : rule__Operand__Group__1__Impl ;
    public final void rule__Operand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13321:1: ( rule__Operand__Group__1__Impl )
            // InternalSqlParser.g:13322:2: rule__Operand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1"


    // $ANTLR start "rule__Operand__Group__1__Impl"
    // InternalSqlParser.g:13328:1: rule__Operand__Group__1__Impl : ( ( rule__Operand__Group_1__0 )* ) ;
    public final void rule__Operand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13332:1: ( ( ( rule__Operand__Group_1__0 )* ) )
            // InternalSqlParser.g:13333:1: ( ( rule__Operand__Group_1__0 )* )
            {
            // InternalSqlParser.g:13333:1: ( ( rule__Operand__Group_1__0 )* )
            // InternalSqlParser.g:13334:1: ( rule__Operand__Group_1__0 )*
            {
             before(grammarAccess.getOperandAccess().getGroup_1()); 
            // InternalSqlParser.g:13335:1: ( rule__Operand__Group_1__0 )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==VerticalLineVerticalLine||LA120_0==PlusSign||LA120_0==HyphenMinus||LA120_0==Solidus||LA120_0==RULE_STAR) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalSqlParser.g:13335:2: rule__Operand__Group_1__0
            	    {
            	    pushFollow(FOLLOW_63);
            	    rule__Operand__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);

             after(grammarAccess.getOperandAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1__Impl"


    // $ANTLR start "rule__Operand__Group_1__0"
    // InternalSqlParser.g:13349:1: rule__Operand__Group_1__0 : rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 ;
    public final void rule__Operand__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13353:1: ( rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 )
            // InternalSqlParser.g:13354:2: rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1
            {
            pushFollow(FOLLOW_52);
            rule__Operand__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0"


    // $ANTLR start "rule__Operand__Group_1__0__Impl"
    // InternalSqlParser.g:13361:1: rule__Operand__Group_1__0__Impl : ( ( rule__Operand__Alternatives_1_0 ) ) ;
    public final void rule__Operand__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13365:1: ( ( ( rule__Operand__Alternatives_1_0 ) ) )
            // InternalSqlParser.g:13366:1: ( ( rule__Operand__Alternatives_1_0 ) )
            {
            // InternalSqlParser.g:13366:1: ( ( rule__Operand__Alternatives_1_0 ) )
            // InternalSqlParser.g:13367:1: ( rule__Operand__Alternatives_1_0 )
            {
             before(grammarAccess.getOperandAccess().getAlternatives_1_0()); 
            // InternalSqlParser.g:13368:1: ( rule__Operand__Alternatives_1_0 )
            // InternalSqlParser.g:13368:2: rule__Operand__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Alternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getOperandAccess().getAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1__1"
    // InternalSqlParser.g:13378:1: rule__Operand__Group_1__1 : rule__Operand__Group_1__1__Impl ;
    public final void rule__Operand__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13382:1: ( rule__Operand__Group_1__1__Impl )
            // InternalSqlParser.g:13383:2: rule__Operand__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1"


    // $ANTLR start "rule__Operand__Group_1__1__Impl"
    // InternalSqlParser.g:13389:1: rule__Operand__Group_1__1__Impl : ( ( rule__Operand__RightAssignment_1_1 ) ) ;
    public final void rule__Operand__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13393:1: ( ( ( rule__Operand__RightAssignment_1_1 ) ) )
            // InternalSqlParser.g:13394:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            {
            // InternalSqlParser.g:13394:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            // InternalSqlParser.g:13395:1: ( rule__Operand__RightAssignment_1_1 )
            {
             before(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 
            // InternalSqlParser.g:13396:1: ( rule__Operand__RightAssignment_1_1 )
            // InternalSqlParser.g:13396:2: rule__Operand__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Operand__RightAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__0"
    // InternalSqlParser.g:13410:1: rule__Operand__Group_1_0_0__0 : rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 ;
    public final void rule__Operand__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13414:1: ( rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 )
            // InternalSqlParser.g:13415:2: rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1
            {
            pushFollow(FOLLOW_64);
            rule__Operand__Group_1_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0"


    // $ANTLR start "rule__Operand__Group_1_0_0__0__Impl"
    // InternalSqlParser.g:13422:1: rule__Operand__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13426:1: ( ( () ) )
            // InternalSqlParser.g:13427:1: ( () )
            {
            // InternalSqlParser.g:13427:1: ( () )
            // InternalSqlParser.g:13428:1: ()
            {
             before(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 
            // InternalSqlParser.g:13429:1: ()
            // InternalSqlParser.g:13431:1: 
            {
            }

             after(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__1"
    // InternalSqlParser.g:13441:1: rule__Operand__Group_1_0_0__1 : rule__Operand__Group_1_0_0__1__Impl ;
    public final void rule__Operand__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13445:1: ( rule__Operand__Group_1_0_0__1__Impl )
            // InternalSqlParser.g:13446:2: rule__Operand__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1"


    // $ANTLR start "rule__Operand__Group_1_0_0__1__Impl"
    // InternalSqlParser.g:13452:1: rule__Operand__Group_1_0_0__1__Impl : ( PlusSign ) ;
    public final void rule__Operand__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13456:1: ( ( PlusSign ) )
            // InternalSqlParser.g:13457:1: ( PlusSign )
            {
            // InternalSqlParser.g:13457:1: ( PlusSign )
            // InternalSqlParser.g:13458:1: PlusSign
            {
             before(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 
            match(input,PlusSign,FOLLOW_2); 
             after(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__0"
    // InternalSqlParser.g:13475:1: rule__Operand__Group_1_0_1__0 : rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 ;
    public final void rule__Operand__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13479:1: ( rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 )
            // InternalSqlParser.g:13480:2: rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1
            {
            pushFollow(FOLLOW_65);
            rule__Operand__Group_1_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0"


    // $ANTLR start "rule__Operand__Group_1_0_1__0__Impl"
    // InternalSqlParser.g:13487:1: rule__Operand__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13491:1: ( ( () ) )
            // InternalSqlParser.g:13492:1: ( () )
            {
            // InternalSqlParser.g:13492:1: ( () )
            // InternalSqlParser.g:13493:1: ()
            {
             before(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 
            // InternalSqlParser.g:13494:1: ()
            // InternalSqlParser.g:13496:1: 
            {
            }

             after(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__1"
    // InternalSqlParser.g:13506:1: rule__Operand__Group_1_0_1__1 : rule__Operand__Group_1_0_1__1__Impl ;
    public final void rule__Operand__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13510:1: ( rule__Operand__Group_1_0_1__1__Impl )
            // InternalSqlParser.g:13511:2: rule__Operand__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1"


    // $ANTLR start "rule__Operand__Group_1_0_1__1__Impl"
    // InternalSqlParser.g:13517:1: rule__Operand__Group_1_0_1__1__Impl : ( HyphenMinus ) ;
    public final void rule__Operand__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13521:1: ( ( HyphenMinus ) )
            // InternalSqlParser.g:13522:1: ( HyphenMinus )
            {
            // InternalSqlParser.g:13522:1: ( HyphenMinus )
            // InternalSqlParser.g:13523:1: HyphenMinus
            {
             before(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 
            match(input,HyphenMinus,FOLLOW_2); 
             after(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__0"
    // InternalSqlParser.g:13540:1: rule__Operand__Group_1_0_2__0 : rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 ;
    public final void rule__Operand__Group_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13544:1: ( rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 )
            // InternalSqlParser.g:13545:2: rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1
            {
            pushFollow(FOLLOW_66);
            rule__Operand__Group_1_0_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0"


    // $ANTLR start "rule__Operand__Group_1_0_2__0__Impl"
    // InternalSqlParser.g:13552:1: rule__Operand__Group_1_0_2__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13556:1: ( ( () ) )
            // InternalSqlParser.g:13557:1: ( () )
            {
            // InternalSqlParser.g:13557:1: ( () )
            // InternalSqlParser.g:13558:1: ()
            {
             before(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 
            // InternalSqlParser.g:13559:1: ()
            // InternalSqlParser.g:13561:1: 
            {
            }

             after(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__1"
    // InternalSqlParser.g:13571:1: rule__Operand__Group_1_0_2__1 : rule__Operand__Group_1_0_2__1__Impl ;
    public final void rule__Operand__Group_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13575:1: ( rule__Operand__Group_1_0_2__1__Impl )
            // InternalSqlParser.g:13576:2: rule__Operand__Group_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1"


    // $ANTLR start "rule__Operand__Group_1_0_2__1__Impl"
    // InternalSqlParser.g:13582:1: rule__Operand__Group_1_0_2__1__Impl : ( VerticalLineVerticalLine ) ;
    public final void rule__Operand__Group_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13586:1: ( ( VerticalLineVerticalLine ) )
            // InternalSqlParser.g:13587:1: ( VerticalLineVerticalLine )
            {
            // InternalSqlParser.g:13587:1: ( VerticalLineVerticalLine )
            // InternalSqlParser.g:13588:1: VerticalLineVerticalLine
            {
             before(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 
            match(input,VerticalLineVerticalLine,FOLLOW_2); 
             after(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__0"
    // InternalSqlParser.g:13605:1: rule__Operand__Group_1_0_3__0 : rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 ;
    public final void rule__Operand__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13609:1: ( rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 )
            // InternalSqlParser.g:13610:2: rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1
            {
            pushFollow(FOLLOW_45);
            rule__Operand__Group_1_0_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0"


    // $ANTLR start "rule__Operand__Group_1_0_3__0__Impl"
    // InternalSqlParser.g:13617:1: rule__Operand__Group_1_0_3__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13621:1: ( ( () ) )
            // InternalSqlParser.g:13622:1: ( () )
            {
            // InternalSqlParser.g:13622:1: ( () )
            // InternalSqlParser.g:13623:1: ()
            {
             before(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 
            // InternalSqlParser.g:13624:1: ()
            // InternalSqlParser.g:13626:1: 
            {
            }

             after(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__1"
    // InternalSqlParser.g:13636:1: rule__Operand__Group_1_0_3__1 : rule__Operand__Group_1_0_3__1__Impl ;
    public final void rule__Operand__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13640:1: ( rule__Operand__Group_1_0_3__1__Impl )
            // InternalSqlParser.g:13641:2: rule__Operand__Group_1_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1"


    // $ANTLR start "rule__Operand__Group_1_0_3__1__Impl"
    // InternalSqlParser.g:13647:1: rule__Operand__Group_1_0_3__1__Impl : ( RULE_STAR ) ;
    public final void rule__Operand__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13651:1: ( ( RULE_STAR ) )
            // InternalSqlParser.g:13652:1: ( RULE_STAR )
            {
            // InternalSqlParser.g:13652:1: ( RULE_STAR )
            // InternalSqlParser.g:13653:1: RULE_STAR
            {
             before(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 
            match(input,RULE_STAR,FOLLOW_2); 
             after(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__0"
    // InternalSqlParser.g:13668:1: rule__Operand__Group_1_0_4__0 : rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 ;
    public final void rule__Operand__Group_1_0_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13672:1: ( rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 )
            // InternalSqlParser.g:13673:2: rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1
            {
            pushFollow(FOLLOW_62);
            rule__Operand__Group_1_0_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0"


    // $ANTLR start "rule__Operand__Group_1_0_4__0__Impl"
    // InternalSqlParser.g:13680:1: rule__Operand__Group_1_0_4__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13684:1: ( ( () ) )
            // InternalSqlParser.g:13685:1: ( () )
            {
            // InternalSqlParser.g:13685:1: ( () )
            // InternalSqlParser.g:13686:1: ()
            {
             before(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 
            // InternalSqlParser.g:13687:1: ()
            // InternalSqlParser.g:13689:1: 
            {
            }

             after(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__1"
    // InternalSqlParser.g:13699:1: rule__Operand__Group_1_0_4__1 : rule__Operand__Group_1_0_4__1__Impl ;
    public final void rule__Operand__Group_1_0_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13703:1: ( rule__Operand__Group_1_0_4__1__Impl )
            // InternalSqlParser.g:13704:2: rule__Operand__Group_1_0_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1"


    // $ANTLR start "rule__Operand__Group_1_0_4__1__Impl"
    // InternalSqlParser.g:13710:1: rule__Operand__Group_1_0_4__1__Impl : ( Solidus ) ;
    public final void rule__Operand__Group_1_0_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13714:1: ( ( Solidus ) )
            // InternalSqlParser.g:13715:1: ( Solidus )
            {
            // InternalSqlParser.g:13715:1: ( Solidus )
            // InternalSqlParser.g:13716:1: Solidus
            {
             before(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 
            match(input,Solidus,FOLLOW_2); 
             after(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__0"
    // InternalSqlParser.g:13733:1: rule__OperandFunction__Group__0 : rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 ;
    public final void rule__OperandFunction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13737:1: ( rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 )
            // InternalSqlParser.g:13738:2: rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__OperandFunction__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0"


    // $ANTLR start "rule__OperandFunction__Group__0__Impl"
    // InternalSqlParser.g:13745:1: rule__OperandFunction__Group__0__Impl : ( () ) ;
    public final void rule__OperandFunction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13749:1: ( ( () ) )
            // InternalSqlParser.g:13750:1: ( () )
            {
            // InternalSqlParser.g:13750:1: ( () )
            // InternalSqlParser.g:13751:1: ()
            {
             before(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 
            // InternalSqlParser.g:13752:1: ()
            // InternalSqlParser.g:13754:1: 
            {
            }

             after(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0__Impl"


    // $ANTLR start "rule__OperandFunction__Group__1"
    // InternalSqlParser.g:13764:1: rule__OperandFunction__Group__1 : rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 ;
    public final void rule__OperandFunction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13768:1: ( rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 )
            // InternalSqlParser.g:13769:2: rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2
            {
            pushFollow(FOLLOW_67);
            rule__OperandFunction__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1"


    // $ANTLR start "rule__OperandFunction__Group__1__Impl"
    // InternalSqlParser.g:13776:1: rule__OperandFunction__Group__1__Impl : ( ( rule__OperandFunction__FnameAssignment_1 ) ) ;
    public final void rule__OperandFunction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13780:1: ( ( ( rule__OperandFunction__FnameAssignment_1 ) ) )
            // InternalSqlParser.g:13781:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            {
            // InternalSqlParser.g:13781:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            // InternalSqlParser.g:13782:1: ( rule__OperandFunction__FnameAssignment_1 )
            {
             before(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 
            // InternalSqlParser.g:13783:1: ( rule__OperandFunction__FnameAssignment_1 )
            // InternalSqlParser.g:13783:2: rule__OperandFunction__FnameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__FnameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__2"
    // InternalSqlParser.g:13793:1: rule__OperandFunction__Group__2 : rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 ;
    public final void rule__OperandFunction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13797:1: ( rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 )
            // InternalSqlParser.g:13798:2: rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3
            {
            pushFollow(FOLLOW_67);
            rule__OperandFunction__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2"


    // $ANTLR start "rule__OperandFunction__Group__2__Impl"
    // InternalSqlParser.g:13805:1: rule__OperandFunction__Group__2__Impl : ( ( rule__OperandFunction__Alternatives_2 )? ) ;
    public final void rule__OperandFunction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13809:1: ( ( ( rule__OperandFunction__Alternatives_2 )? ) )
            // InternalSqlParser.g:13810:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            {
            // InternalSqlParser.g:13810:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            // InternalSqlParser.g:13811:1: ( rule__OperandFunction__Alternatives_2 )?
            {
             before(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 
            // InternalSqlParser.g:13812:1: ( rule__OperandFunction__Alternatives_2 )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==DISTINCT||LA121_0==EXTRACT||LA121_0==CAST||LA121_0==CASE||LA121_0==ALL||LA121_0==LeftParenthesis||(LA121_0>=RULE_JRPARAM && LA121_0<=RULE_SIGNED_DOUBLE)||(LA121_0>=RULE_STRING_ && LA121_0<=RULE_ID)) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSqlParser.g:13812:2: rule__OperandFunction__Alternatives_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__Alternatives_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2__Impl"


    // $ANTLR start "rule__OperandFunction__Group__3"
    // InternalSqlParser.g:13822:1: rule__OperandFunction__Group__3 : rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 ;
    public final void rule__OperandFunction__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13826:1: ( rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 )
            // InternalSqlParser.g:13827:2: rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4
            {
            pushFollow(FOLLOW_68);
            rule__OperandFunction__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3"


    // $ANTLR start "rule__OperandFunction__Group__3__Impl"
    // InternalSqlParser.g:13834:1: rule__OperandFunction__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__OperandFunction__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13838:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:13839:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:13839:1: ( RightParenthesis )
            // InternalSqlParser.g:13840:1: RightParenthesis
            {
             before(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3__Impl"


    // $ANTLR start "rule__OperandFunction__Group__4"
    // InternalSqlParser.g:13853:1: rule__OperandFunction__Group__4 : rule__OperandFunction__Group__4__Impl ;
    public final void rule__OperandFunction__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13857:1: ( rule__OperandFunction__Group__4__Impl )
            // InternalSqlParser.g:13858:2: rule__OperandFunction__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4"


    // $ANTLR start "rule__OperandFunction__Group__4__Impl"
    // InternalSqlParser.g:13864:1: rule__OperandFunction__Group__4__Impl : ( ( rule__OperandFunction__FanAssignment_4 )? ) ;
    public final void rule__OperandFunction__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13868:1: ( ( ( rule__OperandFunction__FanAssignment_4 )? ) )
            // InternalSqlParser.g:13869:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            {
            // InternalSqlParser.g:13869:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            // InternalSqlParser.g:13870:1: ( rule__OperandFunction__FanAssignment_4 )?
            {
             before(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 
            // InternalSqlParser.g:13871:1: ( rule__OperandFunction__FanAssignment_4 )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==OVER) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSqlParser.g:13871:2: rule__OperandFunction__FanAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__FanAssignment_4();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__0"
    // InternalSqlParser.g:13891:1: rule__FunctionExtract__Group__0 : rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 ;
    public final void rule__FunctionExtract__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13895:1: ( rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 )
            // InternalSqlParser.g:13896:2: rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__FunctionExtract__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0"


    // $ANTLR start "rule__FunctionExtract__Group__0__Impl"
    // InternalSqlParser.g:13903:1: rule__FunctionExtract__Group__0__Impl : ( EXTRACT ) ;
    public final void rule__FunctionExtract__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13907:1: ( ( EXTRACT ) )
            // InternalSqlParser.g:13908:1: ( EXTRACT )
            {
            // InternalSqlParser.g:13908:1: ( EXTRACT )
            // InternalSqlParser.g:13909:1: EXTRACT
            {
             before(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 
            match(input,EXTRACT,FOLLOW_2); 
             after(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__1"
    // InternalSqlParser.g:13922:1: rule__FunctionExtract__Group__1 : rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 ;
    public final void rule__FunctionExtract__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13926:1: ( rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 )
            // InternalSqlParser.g:13927:2: rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2
            {
            pushFollow(FOLLOW_69);
            rule__FunctionExtract__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1"


    // $ANTLR start "rule__FunctionExtract__Group__1__Impl"
    // InternalSqlParser.g:13934:1: rule__FunctionExtract__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionExtract__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13938:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:13939:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:13939:1: ( LeftParenthesis )
            // InternalSqlParser.g:13940:1: LeftParenthesis
            {
             before(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__2"
    // InternalSqlParser.g:13953:1: rule__FunctionExtract__Group__2 : rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 ;
    public final void rule__FunctionExtract__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13957:1: ( rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 )
            // InternalSqlParser.g:13958:2: rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3
            {
            pushFollow(FOLLOW_13);
            rule__FunctionExtract__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2"


    // $ANTLR start "rule__FunctionExtract__Group__2__Impl"
    // InternalSqlParser.g:13965:1: rule__FunctionExtract__Group__2__Impl : ( ( rule__FunctionExtract__VAssignment_2 ) ) ;
    public final void rule__FunctionExtract__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13969:1: ( ( ( rule__FunctionExtract__VAssignment_2 ) ) )
            // InternalSqlParser.g:13970:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            {
            // InternalSqlParser.g:13970:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            // InternalSqlParser.g:13971:1: ( rule__FunctionExtract__VAssignment_2 )
            {
             before(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 
            // InternalSqlParser.g:13972:1: ( rule__FunctionExtract__VAssignment_2 )
            // InternalSqlParser.g:13972:2: rule__FunctionExtract__VAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__VAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__3"
    // InternalSqlParser.g:13982:1: rule__FunctionExtract__Group__3 : rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 ;
    public final void rule__FunctionExtract__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13986:1: ( rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 )
            // InternalSqlParser.g:13987:2: rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4
            {
            pushFollow(FOLLOW_52);
            rule__FunctionExtract__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3"


    // $ANTLR start "rule__FunctionExtract__Group__3__Impl"
    // InternalSqlParser.g:13994:1: rule__FunctionExtract__Group__3__Impl : ( FROM ) ;
    public final void rule__FunctionExtract__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13998:1: ( ( FROM ) )
            // InternalSqlParser.g:13999:1: ( FROM )
            {
            // InternalSqlParser.g:13999:1: ( FROM )
            // InternalSqlParser.g:14000:1: FROM
            {
             before(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 
            match(input,FROM,FOLLOW_2); 
             after(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__4"
    // InternalSqlParser.g:14013:1: rule__FunctionExtract__Group__4 : rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 ;
    public final void rule__FunctionExtract__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14017:1: ( rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 )
            // InternalSqlParser.g:14018:2: rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5
            {
            pushFollow(FOLLOW_31);
            rule__FunctionExtract__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4"


    // $ANTLR start "rule__FunctionExtract__Group__4__Impl"
    // InternalSqlParser.g:14025:1: rule__FunctionExtract__Group__4__Impl : ( ( rule__FunctionExtract__OperandAssignment_4 ) ) ;
    public final void rule__FunctionExtract__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14029:1: ( ( ( rule__FunctionExtract__OperandAssignment_4 ) ) )
            // InternalSqlParser.g:14030:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            {
            // InternalSqlParser.g:14030:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            // InternalSqlParser.g:14031:1: ( rule__FunctionExtract__OperandAssignment_4 )
            {
             before(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 
            // InternalSqlParser.g:14032:1: ( rule__FunctionExtract__OperandAssignment_4 )
            // InternalSqlParser.g:14032:2: rule__FunctionExtract__OperandAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__OperandAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__5"
    // InternalSqlParser.g:14042:1: rule__FunctionExtract__Group__5 : rule__FunctionExtract__Group__5__Impl ;
    public final void rule__FunctionExtract__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14046:1: ( rule__FunctionExtract__Group__5__Impl )
            // InternalSqlParser.g:14047:2: rule__FunctionExtract__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5"


    // $ANTLR start "rule__FunctionExtract__Group__5__Impl"
    // InternalSqlParser.g:14053:1: rule__FunctionExtract__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionExtract__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14057:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:14058:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:14058:1: ( RightParenthesis )
            // InternalSqlParser.g:14059:1: RightParenthesis
            {
             before(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__0"
    // InternalSqlParser.g:14084:1: rule__FunctionAnalytical__Group__0 : rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 ;
    public final void rule__FunctionAnalytical__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14088:1: ( rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 )
            // InternalSqlParser.g:14089:2: rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__FunctionAnalytical__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0"


    // $ANTLR start "rule__FunctionAnalytical__Group__0__Impl"
    // InternalSqlParser.g:14096:1: rule__FunctionAnalytical__Group__0__Impl : ( OVER ) ;
    public final void rule__FunctionAnalytical__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14100:1: ( ( OVER ) )
            // InternalSqlParser.g:14101:1: ( OVER )
            {
            // InternalSqlParser.g:14101:1: ( OVER )
            // InternalSqlParser.g:14102:1: OVER
            {
             before(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 
            match(input,OVER,FOLLOW_2); 
             after(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__1"
    // InternalSqlParser.g:14115:1: rule__FunctionAnalytical__Group__1 : rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 ;
    public final void rule__FunctionAnalytical__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14119:1: ( rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 )
            // InternalSqlParser.g:14120:2: rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2
            {
            pushFollow(FOLLOW_70);
            rule__FunctionAnalytical__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1"


    // $ANTLR start "rule__FunctionAnalytical__Group__1__Impl"
    // InternalSqlParser.g:14127:1: rule__FunctionAnalytical__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14131:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:14132:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:14132:1: ( LeftParenthesis )
            // InternalSqlParser.g:14133:1: LeftParenthesis
            {
             before(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__2"
    // InternalSqlParser.g:14146:1: rule__FunctionAnalytical__Group__2 : rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 ;
    public final void rule__FunctionAnalytical__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14150:1: ( rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 )
            // InternalSqlParser.g:14151:2: rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__FunctionAnalytical__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2"


    // $ANTLR start "rule__FunctionAnalytical__Group__2__Impl"
    // InternalSqlParser.g:14158:1: rule__FunctionAnalytical__Group__2__Impl : ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) ;
    public final void rule__FunctionAnalytical__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14162:1: ( ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) )
            // InternalSqlParser.g:14163:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            {
            // InternalSqlParser.g:14163:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            // InternalSqlParser.g:14164:1: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            {
             before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 
            // InternalSqlParser.g:14165:1: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            // InternalSqlParser.g:14165:2: rule__FunctionAnalytical__AnClauseAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__AnClauseAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__3"
    // InternalSqlParser.g:14175:1: rule__FunctionAnalytical__Group__3 : rule__FunctionAnalytical__Group__3__Impl ;
    public final void rule__FunctionAnalytical__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14179:1: ( rule__FunctionAnalytical__Group__3__Impl )
            // InternalSqlParser.g:14180:2: rule__FunctionAnalytical__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3"


    // $ANTLR start "rule__FunctionAnalytical__Group__3__Impl"
    // InternalSqlParser.g:14186:1: rule__FunctionAnalytical__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14190:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:14191:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:14191:1: ( RightParenthesis )
            // InternalSqlParser.g:14192:1: RightParenthesis
            {
             before(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__0"
    // InternalSqlParser.g:14213:1: rule__AnalyticClause__Group__0 : rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 ;
    public final void rule__AnalyticClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14217:1: ( rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 )
            // InternalSqlParser.g:14218:2: rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__AnalyticClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0"


    // $ANTLR start "rule__AnalyticClause__Group__0__Impl"
    // InternalSqlParser.g:14225:1: rule__AnalyticClause__Group__0__Impl : ( () ) ;
    public final void rule__AnalyticClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14229:1: ( ( () ) )
            // InternalSqlParser.g:14230:1: ( () )
            {
            // InternalSqlParser.g:14230:1: ( () )
            // InternalSqlParser.g:14231:1: ()
            {
             before(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 
            // InternalSqlParser.g:14232:1: ()
            // InternalSqlParser.g:14234:1: 
            {
            }

             after(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__1"
    // InternalSqlParser.g:14244:1: rule__AnalyticClause__Group__1 : rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 ;
    public final void rule__AnalyticClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14248:1: ( rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 )
            // InternalSqlParser.g:14249:2: rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2
            {
            pushFollow(FOLLOW_70);
            rule__AnalyticClause__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1"


    // $ANTLR start "rule__AnalyticClause__Group__1__Impl"
    // InternalSqlParser.g:14256:1: rule__AnalyticClause__Group__1__Impl : ( ( rule__AnalyticClause__AbcAssignment_1 )? ) ;
    public final void rule__AnalyticClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14260:1: ( ( ( rule__AnalyticClause__AbcAssignment_1 )? ) )
            // InternalSqlParser.g:14261:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            {
            // InternalSqlParser.g:14261:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            // InternalSqlParser.g:14262:1: ( rule__AnalyticClause__AbcAssignment_1 )?
            {
             before(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 
            // InternalSqlParser.g:14263:1: ( rule__AnalyticClause__AbcAssignment_1 )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==PARTITIONBY) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalSqlParser.g:14263:2: rule__AnalyticClause__AbcAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__AbcAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__2"
    // InternalSqlParser.g:14273:1: rule__AnalyticClause__Group__2 : rule__AnalyticClause__Group__2__Impl ;
    public final void rule__AnalyticClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14277:1: ( rule__AnalyticClause__Group__2__Impl )
            // InternalSqlParser.g:14278:2: rule__AnalyticClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2"


    // $ANTLR start "rule__AnalyticClause__Group__2__Impl"
    // InternalSqlParser.g:14284:1: rule__AnalyticClause__Group__2__Impl : ( ( rule__AnalyticClause__Group_2__0 )? ) ;
    public final void rule__AnalyticClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14288:1: ( ( ( rule__AnalyticClause__Group_2__0 )? ) )
            // InternalSqlParser.g:14289:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            {
            // InternalSqlParser.g:14289:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            // InternalSqlParser.g:14290:1: ( rule__AnalyticClause__Group_2__0 )?
            {
             before(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 
            // InternalSqlParser.g:14291:1: ( rule__AnalyticClause__Group_2__0 )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==ORDERSIBLINGSBY||LA124_0==ORDERBY) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalSqlParser.g:14291:2: rule__AnalyticClause__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__Group_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__0"
    // InternalSqlParser.g:14307:1: rule__AnalyticClause__Group_2__0 : rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 ;
    public final void rule__AnalyticClause__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14311:1: ( rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 )
            // InternalSqlParser.g:14312:2: rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1
            {
            pushFollow(FOLLOW_71);
            rule__AnalyticClause__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0"


    // $ANTLR start "rule__AnalyticClause__Group_2__0__Impl"
    // InternalSqlParser.g:14319:1: rule__AnalyticClause__Group_2__0__Impl : ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) ;
    public final void rule__AnalyticClause__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14323:1: ( ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) )
            // InternalSqlParser.g:14324:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            {
            // InternalSqlParser.g:14324:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            // InternalSqlParser.g:14325:1: ( rule__AnalyticClause__ObcAssignment_2_0 )
            {
             before(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 
            // InternalSqlParser.g:14326:1: ( rule__AnalyticClause__ObcAssignment_2_0 )
            // InternalSqlParser.g:14326:2: rule__AnalyticClause__ObcAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__ObcAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__1"
    // InternalSqlParser.g:14336:1: rule__AnalyticClause__Group_2__1 : rule__AnalyticClause__Group_2__1__Impl ;
    public final void rule__AnalyticClause__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14340:1: ( rule__AnalyticClause__Group_2__1__Impl )
            // InternalSqlParser.g:14341:2: rule__AnalyticClause__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1"


    // $ANTLR start "rule__AnalyticClause__Group_2__1__Impl"
    // InternalSqlParser.g:14347:1: rule__AnalyticClause__Group_2__1__Impl : ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) ;
    public final void rule__AnalyticClause__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14351:1: ( ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) )
            // InternalSqlParser.g:14352:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            {
            // InternalSqlParser.g:14352:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            // InternalSqlParser.g:14353:1: ( rule__AnalyticClause__WincAssignment_2_1 )?
            {
             before(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 
            // InternalSqlParser.g:14354:1: ( rule__AnalyticClause__WincAssignment_2_1 )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==RANGE||LA125_0==ROWS) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalSqlParser.g:14354:2: rule__AnalyticClause__WincAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__WincAssignment_2_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1__Impl"


    // $ANTLR start "rule__WindowingClause__Group__0"
    // InternalSqlParser.g:14368:1: rule__WindowingClause__Group__0 : rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 ;
    public final void rule__WindowingClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14372:1: ( rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 )
            // InternalSqlParser.g:14373:2: rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__WindowingClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0"


    // $ANTLR start "rule__WindowingClause__Group__0__Impl"
    // InternalSqlParser.g:14380:1: rule__WindowingClause__Group__0__Impl : ( ( rule__WindowingClause__Alternatives_0 ) ) ;
    public final void rule__WindowingClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14384:1: ( ( ( rule__WindowingClause__Alternatives_0 ) ) )
            // InternalSqlParser.g:14385:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            {
            // InternalSqlParser.g:14385:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            // InternalSqlParser.g:14386:1: ( rule__WindowingClause__Alternatives_0 )
            {
             before(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 
            // InternalSqlParser.g:14387:1: ( rule__WindowingClause__Alternatives_0 )
            // InternalSqlParser.g:14387:2: rule__WindowingClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0__Impl"


    // $ANTLR start "rule__WindowingClause__Group__1"
    // InternalSqlParser.g:14397:1: rule__WindowingClause__Group__1 : rule__WindowingClause__Group__1__Impl ;
    public final void rule__WindowingClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14401:1: ( rule__WindowingClause__Group__1__Impl )
            // InternalSqlParser.g:14402:2: rule__WindowingClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1"


    // $ANTLR start "rule__WindowingClause__Group__1__Impl"
    // InternalSqlParser.g:14408:1: rule__WindowingClause__Group__1__Impl : ( ( rule__WindowingClause__Alternatives_1 ) ) ;
    public final void rule__WindowingClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14412:1: ( ( ( rule__WindowingClause__Alternatives_1 ) ) )
            // InternalSqlParser.g:14413:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            {
            // InternalSqlParser.g:14413:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            // InternalSqlParser.g:14414:1: ( rule__WindowingClause__Alternatives_1 )
            {
             before(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 
            // InternalSqlParser.g:14415:1: ( rule__WindowingClause__Alternatives_1 )
            // InternalSqlParser.g:14415:2: rule__WindowingClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0"
    // InternalSqlParser.g:14429:1: rule__WindowingClauseBetween__Group__0 : rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 ;
    public final void rule__WindowingClauseBetween__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14433:1: ( rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 )
            // InternalSqlParser.g:14434:2: rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__WindowingClauseBetween__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0__Impl"
    // InternalSqlParser.g:14441:1: rule__WindowingClauseBetween__Group__0__Impl : ( BETWEEN ) ;
    public final void rule__WindowingClauseBetween__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14445:1: ( ( BETWEEN ) )
            // InternalSqlParser.g:14446:1: ( BETWEEN )
            {
            // InternalSqlParser.g:14446:1: ( BETWEEN )
            // InternalSqlParser.g:14447:1: BETWEEN
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 
            match(input,BETWEEN,FOLLOW_2); 
             after(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1"
    // InternalSqlParser.g:14460:1: rule__WindowingClauseBetween__Group__1 : rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 ;
    public final void rule__WindowingClauseBetween__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14464:1: ( rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 )
            // InternalSqlParser.g:14465:2: rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2
            {
            pushFollow(FOLLOW_59);
            rule__WindowingClauseBetween__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1__Impl"
    // InternalSqlParser.g:14472:1: rule__WindowingClauseBetween__Group__1__Impl : ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) ;
    public final void rule__WindowingClauseBetween__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14476:1: ( ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) )
            // InternalSqlParser.g:14477:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            {
            // InternalSqlParser.g:14477:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            // InternalSqlParser.g:14478:1: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 
            // InternalSqlParser.g:14479:1: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            // InternalSqlParser.g:14479:2: rule__WindowingClauseBetween__WcoPAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoPAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2"
    // InternalSqlParser.g:14489:1: rule__WindowingClauseBetween__Group__2 : rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 ;
    public final void rule__WindowingClauseBetween__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14493:1: ( rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 )
            // InternalSqlParser.g:14494:2: rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3
            {
            pushFollow(FOLLOW_73);
            rule__WindowingClauseBetween__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2__Impl"
    // InternalSqlParser.g:14501:1: rule__WindowingClauseBetween__Group__2__Impl : ( AND ) ;
    public final void rule__WindowingClauseBetween__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14505:1: ( ( AND ) )
            // InternalSqlParser.g:14506:1: ( AND )
            {
            // InternalSqlParser.g:14506:1: ( AND )
            // InternalSqlParser.g:14507:1: AND
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 
            match(input,AND,FOLLOW_2); 
             after(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3"
    // InternalSqlParser.g:14520:1: rule__WindowingClauseBetween__Group__3 : rule__WindowingClauseBetween__Group__3__Impl ;
    public final void rule__WindowingClauseBetween__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14524:1: ( rule__WindowingClauseBetween__Group__3__Impl )
            // InternalSqlParser.g:14525:2: rule__WindowingClauseBetween__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3__Impl"
    // InternalSqlParser.g:14531:1: rule__WindowingClauseBetween__Group__3__Impl : ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) ;
    public final void rule__WindowingClauseBetween__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14535:1: ( ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) )
            // InternalSqlParser.g:14536:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            {
            // InternalSqlParser.g:14536:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            // InternalSqlParser.g:14537:1: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 
            // InternalSqlParser.g:14538:1: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            // InternalSqlParser.g:14538:2: rule__WindowingClauseBetween__WcoFAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoFAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0"
    // InternalSqlParser.g:14556:1: rule__WindowingClauseOperandFollowing__Group__0 : rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14560:1: ( rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 )
            // InternalSqlParser.g:14561:2: rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__WindowingClauseOperandFollowing__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0__Impl"
    // InternalSqlParser.g:14568:1: rule__WindowingClauseOperandFollowing__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14572:1: ( ( () ) )
            // InternalSqlParser.g:14573:1: ( () )
            {
            // InternalSqlParser.g:14573:1: ( () )
            // InternalSqlParser.g:14574:1: ()
            {
             before(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 
            // InternalSqlParser.g:14575:1: ()
            // InternalSqlParser.g:14577:1: 
            {
            }

             after(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1"
    // InternalSqlParser.g:14587:1: rule__WindowingClauseOperandFollowing__Group__1 : rule__WindowingClauseOperandFollowing__Group__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14591:1: ( rule__WindowingClauseOperandFollowing__Group__1__Impl )
            // InternalSqlParser.g:14592:2: rule__WindowingClauseOperandFollowing__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1__Impl"
    // InternalSqlParser.g:14598:1: rule__WindowingClauseOperandFollowing__Group__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14602:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) )
            // InternalSqlParser.g:14603:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            {
            // InternalSqlParser.g:14603:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            // InternalSqlParser.g:14604:1: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            {
             before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 
            // InternalSqlParser.g:14605:1: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            // InternalSqlParser.g:14605:2: rule__WindowingClauseOperandFollowing__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0"
    // InternalSqlParser.g:14619:1: rule__WindowingClauseOperandFollowing__Group_1_2__0 : rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14623:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 )
            // InternalSqlParser.g:14624:2: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1
            {
            pushFollow(FOLLOW_74);
            rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"
    // InternalSqlParser.g:14631:1: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14635:1: ( ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) )
            // InternalSqlParser.g:14636:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            {
            // InternalSqlParser.g:14636:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            // InternalSqlParser.g:14637:1: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            {
             before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 
            // InternalSqlParser.g:14638:1: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            // InternalSqlParser.g:14638:2: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1"
    // InternalSqlParser.g:14648:1: rule__WindowingClauseOperandFollowing__Group_1_2__1 : rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14652:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl )
            // InternalSqlParser.g:14653:2: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"
    // InternalSqlParser.g:14659:1: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14663:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) )
            // InternalSqlParser.g:14664:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            {
            // InternalSqlParser.g:14664:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            // InternalSqlParser.g:14665:1: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            {
             before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 
            // InternalSqlParser.g:14666:1: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            // InternalSqlParser.g:14666:2: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0"
    // InternalSqlParser.g:14680:1: rule__WindowingClauseOperandPreceding__Group__0 : rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14684:1: ( rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 )
            // InternalSqlParser.g:14685:2: rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__WindowingClauseOperandPreceding__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0__Impl"
    // InternalSqlParser.g:14692:1: rule__WindowingClauseOperandPreceding__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14696:1: ( ( () ) )
            // InternalSqlParser.g:14697:1: ( () )
            {
            // InternalSqlParser.g:14697:1: ( () )
            // InternalSqlParser.g:14698:1: ()
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 
            // InternalSqlParser.g:14699:1: ()
            // InternalSqlParser.g:14701:1: 
            {
            }

             after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1"
    // InternalSqlParser.g:14711:1: rule__WindowingClauseOperandPreceding__Group__1 : rule__WindowingClauseOperandPreceding__Group__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14715:1: ( rule__WindowingClauseOperandPreceding__Group__1__Impl )
            // InternalSqlParser.g:14716:2: rule__WindowingClauseOperandPreceding__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1__Impl"
    // InternalSqlParser.g:14722:1: rule__WindowingClauseOperandPreceding__Group__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14726:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) )
            // InternalSqlParser.g:14727:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            {
            // InternalSqlParser.g:14727:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            // InternalSqlParser.g:14728:1: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 
            // InternalSqlParser.g:14729:1: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            // InternalSqlParser.g:14729:2: rule__WindowingClauseOperandPreceding__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0"
    // InternalSqlParser.g:14743:1: rule__WindowingClauseOperandPreceding__Group_1_2__0 : rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14747:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 )
            // InternalSqlParser.g:14748:2: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1
            {
            pushFollow(FOLLOW_74);
            rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"
    // InternalSqlParser.g:14755:1: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14759:1: ( ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) )
            // InternalSqlParser.g:14760:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            {
            // InternalSqlParser.g:14760:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            // InternalSqlParser.g:14761:1: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 
            // InternalSqlParser.g:14762:1: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            // InternalSqlParser.g:14762:2: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1"
    // InternalSqlParser.g:14772:1: rule__WindowingClauseOperandPreceding__Group_1_2__1 : rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14776:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl )
            // InternalSqlParser.g:14777:2: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"
    // InternalSqlParser.g:14783:1: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14787:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) )
            // InternalSqlParser.g:14788:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            {
            // InternalSqlParser.g:14788:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            // InternalSqlParser.g:14789:1: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 
            // InternalSqlParser.g:14790:1: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            // InternalSqlParser.g:14790:2: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group__0"
    // InternalSqlParser.g:14804:1: rule__OrderByClause__Group__0 : rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 ;
    public final void rule__OrderByClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14808:1: ( rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 )
            // InternalSqlParser.g:14809:2: rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__OrderByClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0"


    // $ANTLR start "rule__OrderByClause__Group__0__Impl"
    // InternalSqlParser.g:14816:1: rule__OrderByClause__Group__0__Impl : ( ( rule__OrderByClause__Alternatives_0 ) ) ;
    public final void rule__OrderByClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14820:1: ( ( ( rule__OrderByClause__Alternatives_0 ) ) )
            // InternalSqlParser.g:14821:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            {
            // InternalSqlParser.g:14821:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            // InternalSqlParser.g:14822:1: ( rule__OrderByClause__Alternatives_0 )
            {
             before(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 
            // InternalSqlParser.g:14823:1: ( rule__OrderByClause__Alternatives_0 )
            // InternalSqlParser.g:14823:2: rule__OrderByClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Alternatives_0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group__1"
    // InternalSqlParser.g:14833:1: rule__OrderByClause__Group__1 : rule__OrderByClause__Group__1__Impl ;
    public final void rule__OrderByClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14837:1: ( rule__OrderByClause__Group__1__Impl )
            // InternalSqlParser.g:14838:2: rule__OrderByClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1"


    // $ANTLR start "rule__OrderByClause__Group__1__Impl"
    // InternalSqlParser.g:14844:1: rule__OrderByClause__Group__1__Impl : ( ( rule__OrderByClause__ArgsAssignment_1 ) ) ;
    public final void rule__OrderByClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14848:1: ( ( ( rule__OrderByClause__ArgsAssignment_1 ) ) )
            // InternalSqlParser.g:14849:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            {
            // InternalSqlParser.g:14849:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            // InternalSqlParser.g:14850:1: ( rule__OrderByClause__ArgsAssignment_1 )
            {
             before(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 
            // InternalSqlParser.g:14851:1: ( rule__OrderByClause__ArgsAssignment_1 )
            // InternalSqlParser.g:14851:2: rule__OrderByClause__ArgsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__ArgsAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0"
    // InternalSqlParser.g:14865:1: rule__OrderByClauseArgs__Group__0 : rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 ;
    public final void rule__OrderByClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14869:1: ( rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 )
            // InternalSqlParser.g:14870:2: rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__OrderByClauseArgs__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0__Impl"
    // InternalSqlParser.g:14877:1: rule__OrderByClauseArgs__Group__0__Impl : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14881:1: ( ( ruleOrderByClauseArg ) )
            // InternalSqlParser.g:14882:1: ( ruleOrderByClauseArg )
            {
            // InternalSqlParser.g:14882:1: ( ruleOrderByClauseArg )
            // InternalSqlParser.g:14883:1: ruleOrderByClauseArg
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;

             after(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1"
    // InternalSqlParser.g:14894:1: rule__OrderByClauseArgs__Group__1 : rule__OrderByClauseArgs__Group__1__Impl ;
    public final void rule__OrderByClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14898:1: ( rule__OrderByClauseArgs__Group__1__Impl )
            // InternalSqlParser.g:14899:2: rule__OrderByClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1__Impl"
    // InternalSqlParser.g:14905:1: rule__OrderByClauseArgs__Group__1__Impl : ( ( rule__OrderByClauseArgs__Group_1__0 )? ) ;
    public final void rule__OrderByClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14909:1: ( ( ( rule__OrderByClauseArgs__Group_1__0 )? ) )
            // InternalSqlParser.g:14910:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            {
            // InternalSqlParser.g:14910:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            // InternalSqlParser.g:14911:1: ( rule__OrderByClauseArgs__Group_1__0 )?
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 
            // InternalSqlParser.g:14912:1: ( rule__OrderByClauseArgs__Group_1__0 )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==Comma) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalSqlParser.g:14912:2: rule__OrderByClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArgs__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0"
    // InternalSqlParser.g:14926:1: rule__OrderByClauseArgs__Group_1__0 : rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14930:1: ( rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 )
            // InternalSqlParser.g:14931:2: rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__OrderByClauseArgs__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0__Impl"
    // InternalSqlParser.g:14938:1: rule__OrderByClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14942:1: ( ( () ) )
            // InternalSqlParser.g:14943:1: ( () )
            {
            // InternalSqlParser.g:14943:1: ( () )
            // InternalSqlParser.g:14944:1: ()
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 
            // InternalSqlParser.g:14945:1: ()
            // InternalSqlParser.g:14947:1: 
            {
            }

             after(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1"
    // InternalSqlParser.g:14957:1: rule__OrderByClauseArgs__Group_1__1 : rule__OrderByClauseArgs__Group_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14961:1: ( rule__OrderByClauseArgs__Group_1__1__Impl )
            // InternalSqlParser.g:14962:2: rule__OrderByClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1__Impl"
    // InternalSqlParser.g:14968:1: rule__OrderByClauseArgs__Group_1__1__Impl : ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14972:1: ( ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:14973:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:14973:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            // InternalSqlParser.g:14974:1: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:14974:1: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) )
            // InternalSqlParser.g:14975:1: ( rule__OrderByClauseArgs__Group_1_1__0 )
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:14976:1: ( rule__OrderByClauseArgs__Group_1_1__0 )
            // InternalSqlParser.g:14976:2: rule__OrderByClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__OrderByClauseArgs__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:14979:1: ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            // InternalSqlParser.g:14980:1: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:14981:1: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            loop127:
            do {
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( (LA127_0==Comma) ) {
                    alt127=1;
                }


                switch (alt127) {
            	case 1 :
            	    // InternalSqlParser.g:14981:2: rule__OrderByClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__OrderByClauseArgs__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop127;
                }
            } while (true);

             after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0"
    // InternalSqlParser.g:14996:1: rule__OrderByClauseArgs__Group_1_1__0 : rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15000:1: ( rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 )
            // InternalSqlParser.g:15001:2: rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_72);
            rule__OrderByClauseArgs__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0__Impl"
    // InternalSqlParser.g:15008:1: rule__OrderByClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15012:1: ( ( Comma ) )
            // InternalSqlParser.g:15013:1: ( Comma )
            {
            // InternalSqlParser.g:15013:1: ( Comma )
            // InternalSqlParser.g:15014:1: Comma
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1"
    // InternalSqlParser.g:15027:1: rule__OrderByClauseArgs__Group_1_1__1 : rule__OrderByClauseArgs__Group_1_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15031:1: ( rule__OrderByClauseArgs__Group_1_1__1__Impl )
            // InternalSqlParser.g:15032:2: rule__OrderByClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1__Impl"
    // InternalSqlParser.g:15038:1: rule__OrderByClauseArgs__Group_1_1__1__Impl : ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15042:1: ( ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:15043:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:15043:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:15044:1: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:15045:1: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:15045:2: rule__OrderByClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__0"
    // InternalSqlParser.g:15059:1: rule__OrderByClauseArg__Group__0 : rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 ;
    public final void rule__OrderByClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15063:1: ( rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 )
            // InternalSqlParser.g:15064:2: rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__OrderByClauseArg__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0"


    // $ANTLR start "rule__OrderByClauseArg__Group__0__Impl"
    // InternalSqlParser.g:15071:1: rule__OrderByClauseArg__Group__0__Impl : ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) ;
    public final void rule__OrderByClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15075:1: ( ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) )
            // InternalSqlParser.g:15076:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            {
            // InternalSqlParser.g:15076:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            // InternalSqlParser.g:15077:1: ( rule__OrderByClauseArg__ColAssignment_0 )
            {
             before(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 
            // InternalSqlParser.g:15078:1: ( rule__OrderByClauseArg__ColAssignment_0 )
            // InternalSqlParser.g:15078:2: rule__OrderByClauseArg__ColAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__ColAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__1"
    // InternalSqlParser.g:15088:1: rule__OrderByClauseArg__Group__1 : rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 ;
    public final void rule__OrderByClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15092:1: ( rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 )
            // InternalSqlParser.g:15093:2: rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__OrderByClauseArg__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1"


    // $ANTLR start "rule__OrderByClauseArg__Group__1__Impl"
    // InternalSqlParser.g:15100:1: rule__OrderByClauseArg__Group__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_1 )? ) ;
    public final void rule__OrderByClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15104:1: ( ( ( rule__OrderByClauseArg__Alternatives_1 )? ) )
            // InternalSqlParser.g:15105:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            {
            // InternalSqlParser.g:15105:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            // InternalSqlParser.g:15106:1: ( rule__OrderByClauseArg__Alternatives_1 )?
            {
             before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 
            // InternalSqlParser.g:15107:1: ( rule__OrderByClauseArg__Alternatives_1 )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==DESC||LA128_0==ASC) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalSqlParser.g:15107:2: rule__OrderByClauseArg__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__2"
    // InternalSqlParser.g:15117:1: rule__OrderByClauseArg__Group__2 : rule__OrderByClauseArg__Group__2__Impl ;
    public final void rule__OrderByClauseArg__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15121:1: ( rule__OrderByClauseArg__Group__2__Impl )
            // InternalSqlParser.g:15122:2: rule__OrderByClauseArg__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2"


    // $ANTLR start "rule__OrderByClauseArg__Group__2__Impl"
    // InternalSqlParser.g:15128:1: rule__OrderByClauseArg__Group__2__Impl : ( ( rule__OrderByClauseArg__Group_2__0 )? ) ;
    public final void rule__OrderByClauseArg__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15132:1: ( ( ( rule__OrderByClauseArg__Group_2__0 )? ) )
            // InternalSqlParser.g:15133:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            {
            // InternalSqlParser.g:15133:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            // InternalSqlParser.g:15134:1: ( rule__OrderByClauseArg__Group_2__0 )?
            {
             before(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 
            // InternalSqlParser.g:15135:1: ( rule__OrderByClauseArg__Group_2__0 )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==NULLS) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalSqlParser.g:15135:2: rule__OrderByClauseArg__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Group_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0"
    // InternalSqlParser.g:15151:1: rule__OrderByClauseArg__Group_2__0 : rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 ;
    public final void rule__OrderByClauseArg__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15155:1: ( rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 )
            // InternalSqlParser.g:15156:2: rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1
            {
            pushFollow(FOLLOW_76);
            rule__OrderByClauseArg__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0__Impl"
    // InternalSqlParser.g:15163:1: rule__OrderByClauseArg__Group_2__0__Impl : ( NULLS ) ;
    public final void rule__OrderByClauseArg__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15167:1: ( ( NULLS ) )
            // InternalSqlParser.g:15168:1: ( NULLS )
            {
            // InternalSqlParser.g:15168:1: ( NULLS )
            // InternalSqlParser.g:15169:1: NULLS
            {
             before(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 
            match(input,NULLS,FOLLOW_2); 
             after(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1"
    // InternalSqlParser.g:15182:1: rule__OrderByClauseArg__Group_2__1 : rule__OrderByClauseArg__Group_2__1__Impl ;
    public final void rule__OrderByClauseArg__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15186:1: ( rule__OrderByClauseArg__Group_2__1__Impl )
            // InternalSqlParser.g:15187:2: rule__OrderByClauseArg__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1__Impl"
    // InternalSqlParser.g:15193:1: rule__OrderByClauseArg__Group_2__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) ;
    public final void rule__OrderByClauseArg__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15197:1: ( ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) )
            // InternalSqlParser.g:15198:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            {
            // InternalSqlParser.g:15198:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            // InternalSqlParser.g:15199:1: ( rule__OrderByClauseArg__Alternatives_2_1 )
            {
             before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 
            // InternalSqlParser.g:15200:1: ( rule__OrderByClauseArg__Alternatives_2_1 )
            // InternalSqlParser.g:15200:2: rule__OrderByClauseArg__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Alternatives_2_1();

            state._fsp--;


            }

             after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__0"
    // InternalSqlParser.g:15214:1: rule__QueryPartitionClause__Group__0 : rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 ;
    public final void rule__QueryPartitionClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15218:1: ( rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 )
            // InternalSqlParser.g:15219:2: rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__QueryPartitionClause__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0"


    // $ANTLR start "rule__QueryPartitionClause__Group__0__Impl"
    // InternalSqlParser.g:15226:1: rule__QueryPartitionClause__Group__0__Impl : ( PARTITIONBY ) ;
    public final void rule__QueryPartitionClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15230:1: ( ( PARTITIONBY ) )
            // InternalSqlParser.g:15231:1: ( PARTITIONBY )
            {
            // InternalSqlParser.g:15231:1: ( PARTITIONBY )
            // InternalSqlParser.g:15232:1: PARTITIONBY
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONBYKeyword_0()); 
            match(input,PARTITIONBY,FOLLOW_2); 
             after(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONBYKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__1"
    // InternalSqlParser.g:15245:1: rule__QueryPartitionClause__Group__1 : rule__QueryPartitionClause__Group__1__Impl ;
    public final void rule__QueryPartitionClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15249:1: ( rule__QueryPartitionClause__Group__1__Impl )
            // InternalSqlParser.g:15250:2: rule__QueryPartitionClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1"


    // $ANTLR start "rule__QueryPartitionClause__Group__1__Impl"
    // InternalSqlParser.g:15256:1: rule__QueryPartitionClause__Group__1__Impl : ( ( rule__QueryPartitionClause__Alternatives_1 ) ) ;
    public final void rule__QueryPartitionClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15260:1: ( ( ( rule__QueryPartitionClause__Alternatives_1 ) ) )
            // InternalSqlParser.g:15261:1: ( ( rule__QueryPartitionClause__Alternatives_1 ) )
            {
            // InternalSqlParser.g:15261:1: ( ( rule__QueryPartitionClause__Alternatives_1 ) )
            // InternalSqlParser.g:15262:1: ( rule__QueryPartitionClause__Alternatives_1 )
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_1()); 
            // InternalSqlParser.g:15263:1: ( rule__QueryPartitionClause__Alternatives_1 )
            // InternalSqlParser.g:15263:2: rule__QueryPartitionClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_1_1__0"
    // InternalSqlParser.g:15277:1: rule__QueryPartitionClause__Group_1_1__0 : rule__QueryPartitionClause__Group_1_1__0__Impl rule__QueryPartitionClause__Group_1_1__1 ;
    public final void rule__QueryPartitionClause__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15281:1: ( rule__QueryPartitionClause__Group_1_1__0__Impl rule__QueryPartitionClause__Group_1_1__1 )
            // InternalSqlParser.g:15282:2: rule__QueryPartitionClause__Group_1_1__0__Impl rule__QueryPartitionClause__Group_1_1__1
            {
            pushFollow(FOLLOW_72);
            rule__QueryPartitionClause__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_1_1__0"


    // $ANTLR start "rule__QueryPartitionClause__Group_1_1__0__Impl"
    // InternalSqlParser.g:15289:1: rule__QueryPartitionClause__Group_1_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15293:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:15294:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:15294:1: ( LeftParenthesis )
            // InternalSqlParser.g:15295:1: LeftParenthesis
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_1_1__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_1_1__1"
    // InternalSqlParser.g:15308:1: rule__QueryPartitionClause__Group_1_1__1 : rule__QueryPartitionClause__Group_1_1__1__Impl rule__QueryPartitionClause__Group_1_1__2 ;
    public final void rule__QueryPartitionClause__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15312:1: ( rule__QueryPartitionClause__Group_1_1__1__Impl rule__QueryPartitionClause__Group_1_1__2 )
            // InternalSqlParser.g:15313:2: rule__QueryPartitionClause__Group_1_1__1__Impl rule__QueryPartitionClause__Group_1_1__2
            {
            pushFollow(FOLLOW_31);
            rule__QueryPartitionClause__Group_1_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_1_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_1_1__1"


    // $ANTLR start "rule__QueryPartitionClause__Group_1_1__1__Impl"
    // InternalSqlParser.g:15320:1: rule__QueryPartitionClause__Group_1_1__1__Impl : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15324:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSqlParser.g:15325:1: ( ruleAnalyticExprArgs )
            {
            // InternalSqlParser.g:15325:1: ( ruleAnalyticExprArgs )
            // InternalSqlParser.g:15326:1: ruleAnalyticExprArgs
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_1_1_1()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;

             after(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_1_1__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_1_1__2"
    // InternalSqlParser.g:15337:1: rule__QueryPartitionClause__Group_1_1__2 : rule__QueryPartitionClause__Group_1_1__2__Impl ;
    public final void rule__QueryPartitionClause__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15341:1: ( rule__QueryPartitionClause__Group_1_1__2__Impl )
            // InternalSqlParser.g:15342:2: rule__QueryPartitionClause__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_1_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_1_1__2"


    // $ANTLR start "rule__QueryPartitionClause__Group_1_1__2__Impl"
    // InternalSqlParser.g:15348:1: rule__QueryPartitionClause__Group_1_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15352:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:15353:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:15353:1: ( RightParenthesis )
            // InternalSqlParser.g:15354:1: RightParenthesis
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_1_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_1_1__2__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0"
    // InternalSqlParser.g:15373:1: rule__AnalyticExprArgs__Group__0 : rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 ;
    public final void rule__AnalyticExprArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15377:1: ( rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 )
            // InternalSqlParser.g:15378:2: rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__AnalyticExprArgs__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0__Impl"
    // InternalSqlParser.g:15385:1: rule__AnalyticExprArgs__Group__0__Impl : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15389:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:15390:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:15390:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:15391:1: ruleAnalyticExprArg
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;

             after(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1"
    // InternalSqlParser.g:15402:1: rule__AnalyticExprArgs__Group__1 : rule__AnalyticExprArgs__Group__1__Impl ;
    public final void rule__AnalyticExprArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15406:1: ( rule__AnalyticExprArgs__Group__1__Impl )
            // InternalSqlParser.g:15407:2: rule__AnalyticExprArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1__Impl"
    // InternalSqlParser.g:15413:1: rule__AnalyticExprArgs__Group__1__Impl : ( ( rule__AnalyticExprArgs__Group_1__0 )? ) ;
    public final void rule__AnalyticExprArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15417:1: ( ( ( rule__AnalyticExprArgs__Group_1__0 )? ) )
            // InternalSqlParser.g:15418:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            {
            // InternalSqlParser.g:15418:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            // InternalSqlParser.g:15419:1: ( rule__AnalyticExprArgs__Group_1__0 )?
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 
            // InternalSqlParser.g:15420:1: ( rule__AnalyticExprArgs__Group_1__0 )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==Comma) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalSqlParser.g:15420:2: rule__AnalyticExprArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArgs__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0"
    // InternalSqlParser.g:15434:1: rule__AnalyticExprArgs__Group_1__0 : rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15438:1: ( rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 )
            // InternalSqlParser.g:15439:2: rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__AnalyticExprArgs__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0__Impl"
    // InternalSqlParser.g:15446:1: rule__AnalyticExprArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__AnalyticExprArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15450:1: ( ( () ) )
            // InternalSqlParser.g:15451:1: ( () )
            {
            // InternalSqlParser.g:15451:1: ( () )
            // InternalSqlParser.g:15452:1: ()
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 
            // InternalSqlParser.g:15453:1: ()
            // InternalSqlParser.g:15455:1: 
            {
            }

             after(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1"
    // InternalSqlParser.g:15465:1: rule__AnalyticExprArgs__Group_1__1 : rule__AnalyticExprArgs__Group_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15469:1: ( rule__AnalyticExprArgs__Group_1__1__Impl )
            // InternalSqlParser.g:15470:2: rule__AnalyticExprArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1__Impl"
    // InternalSqlParser.g:15476:1: rule__AnalyticExprArgs__Group_1__1__Impl : ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) ;
    public final void rule__AnalyticExprArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15480:1: ( ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:15481:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:15481:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            // InternalSqlParser.g:15482:1: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:15482:1: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) )
            // InternalSqlParser.g:15483:1: ( rule__AnalyticExprArgs__Group_1_1__0 )
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:15484:1: ( rule__AnalyticExprArgs__Group_1_1__0 )
            // InternalSqlParser.g:15484:2: rule__AnalyticExprArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__AnalyticExprArgs__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:15487:1: ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            // InternalSqlParser.g:15488:1: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            // InternalSqlParser.g:15489:1: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==Comma) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // InternalSqlParser.g:15489:2: rule__AnalyticExprArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__AnalyticExprArgs__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);

             after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0"
    // InternalSqlParser.g:15504:1: rule__AnalyticExprArgs__Group_1_1__0 : rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15508:1: ( rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 )
            // InternalSqlParser.g:15509:2: rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_72);
            rule__AnalyticExprArgs__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0__Impl"
    // InternalSqlParser.g:15516:1: rule__AnalyticExprArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15520:1: ( ( Comma ) )
            // InternalSqlParser.g:15521:1: ( Comma )
            {
            // InternalSqlParser.g:15521:1: ( Comma )
            // InternalSqlParser.g:15522:1: Comma
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1"
    // InternalSqlParser.g:15535:1: rule__AnalyticExprArgs__Group_1_1__1 : rule__AnalyticExprArgs__Group_1_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15539:1: ( rule__AnalyticExprArgs__Group_1_1__1__Impl )
            // InternalSqlParser.g:15540:2: rule__AnalyticExprArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1__Impl"
    // InternalSqlParser.g:15546:1: rule__AnalyticExprArgs__Group_1_1__1__Impl : ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15550:1: ( ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:15551:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:15551:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:15552:1: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:15553:1: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:15553:2: rule__AnalyticExprArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__0"
    // InternalSqlParser.g:15567:1: rule__AnalyticExprArg__Group__0 : rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 ;
    public final void rule__AnalyticExprArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15571:1: ( rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 )
            // InternalSqlParser.g:15572:2: rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__AnalyticExprArg__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0"


    // $ANTLR start "rule__AnalyticExprArg__Group__0__Impl"
    // InternalSqlParser.g:15579:1: rule__AnalyticExprArg__Group__0__Impl : ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) ;
    public final void rule__AnalyticExprArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15583:1: ( ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) )
            // InternalSqlParser.g:15584:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            {
            // InternalSqlParser.g:15584:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            // InternalSqlParser.g:15585:1: ( rule__AnalyticExprArg__CeAssignment_0 )
            {
             before(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 
            // InternalSqlParser.g:15586:1: ( rule__AnalyticExprArg__CeAssignment_0 )
            // InternalSqlParser.g:15586:2: rule__AnalyticExprArg__CeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__CeAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__1"
    // InternalSqlParser.g:15596:1: rule__AnalyticExprArg__Group__1 : rule__AnalyticExprArg__Group__1__Impl ;
    public final void rule__AnalyticExprArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15600:1: ( rule__AnalyticExprArg__Group__1__Impl )
            // InternalSqlParser.g:15601:2: rule__AnalyticExprArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1"


    // $ANTLR start "rule__AnalyticExprArg__Group__1__Impl"
    // InternalSqlParser.g:15607:1: rule__AnalyticExprArg__Group__1__Impl : ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) ;
    public final void rule__AnalyticExprArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15611:1: ( ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) )
            // InternalSqlParser.g:15612:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            {
            // InternalSqlParser.g:15612:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            // InternalSqlParser.g:15613:1: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            {
             before(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 
            // InternalSqlParser.g:15614:1: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( ((LA132_0>=RULE_STRING && LA132_0<=RULE_ID)) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalSqlParser.g:15614:2: rule__AnalyticExprArg__ColAliasAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArg__ColAliasAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__0"
    // InternalSqlParser.g:15628:1: rule__OpFunctionArg__Group__0 : rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 ;
    public final void rule__OpFunctionArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15632:1: ( rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 )
            // InternalSqlParser.g:15633:2: rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__OpFunctionArg__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0"


    // $ANTLR start "rule__OpFunctionArg__Group__0__Impl"
    // InternalSqlParser.g:15640:1: rule__OpFunctionArg__Group__0__Impl : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15644:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSqlParser.g:15645:1: ( ruleOpFunctionArgOperand )
            {
            // InternalSqlParser.g:15645:1: ( ruleOpFunctionArgOperand )
            // InternalSqlParser.g:15646:1: ruleOpFunctionArgOperand
            {
             before(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;

             after(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__1"
    // InternalSqlParser.g:15657:1: rule__OpFunctionArg__Group__1 : rule__OpFunctionArg__Group__1__Impl ;
    public final void rule__OpFunctionArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15661:1: ( rule__OpFunctionArg__Group__1__Impl )
            // InternalSqlParser.g:15662:2: rule__OpFunctionArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1"


    // $ANTLR start "rule__OpFunctionArg__Group__1__Impl"
    // InternalSqlParser.g:15668:1: rule__OpFunctionArg__Group__1__Impl : ( ( rule__OpFunctionArg__Group_1__0 )? ) ;
    public final void rule__OpFunctionArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15672:1: ( ( ( rule__OpFunctionArg__Group_1__0 )? ) )
            // InternalSqlParser.g:15673:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            {
            // InternalSqlParser.g:15673:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            // InternalSqlParser.g:15674:1: ( rule__OpFunctionArg__Group_1__0 )?
            {
             before(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 
            // InternalSqlParser.g:15675:1: ( rule__OpFunctionArg__Group_1__0 )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==Comma) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalSqlParser.g:15675:2: rule__OpFunctionArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionArg__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0"
    // InternalSqlParser.g:15689:1: rule__OpFunctionArg__Group_1__0 : rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 ;
    public final void rule__OpFunctionArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15693:1: ( rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 )
            // InternalSqlParser.g:15694:2: rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__OpFunctionArg__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0__Impl"
    // InternalSqlParser.g:15701:1: rule__OpFunctionArg__Group_1__0__Impl : ( () ) ;
    public final void rule__OpFunctionArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15705:1: ( ( () ) )
            // InternalSqlParser.g:15706:1: ( () )
            {
            // InternalSqlParser.g:15706:1: ( () )
            // InternalSqlParser.g:15707:1: ()
            {
             before(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 
            // InternalSqlParser.g:15708:1: ()
            // InternalSqlParser.g:15710:1: 
            {
            }

             after(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1"
    // InternalSqlParser.g:15720:1: rule__OpFunctionArg__Group_1__1 : rule__OpFunctionArg__Group_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15724:1: ( rule__OpFunctionArg__Group_1__1__Impl )
            // InternalSqlParser.g:15725:2: rule__OpFunctionArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1__Impl"
    // InternalSqlParser.g:15731:1: rule__OpFunctionArg__Group_1__1__Impl : ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) ;
    public final void rule__OpFunctionArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15735:1: ( ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:15736:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:15736:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            // InternalSqlParser.g:15737:1: ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:15737:1: ( ( rule__OpFunctionArg__Group_1_1__0 ) )
            // InternalSqlParser.g:15738:1: ( rule__OpFunctionArg__Group_1_1__0 )
            {
             before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            // InternalSqlParser.g:15739:1: ( rule__OpFunctionArg__Group_1_1__0 )
            // InternalSqlParser.g:15739:2: rule__OpFunctionArg__Group_1_1__0
            {
            pushFollow(FOLLOW_22);
            rule__OpFunctionArg__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 

            }

            // InternalSqlParser.g:15742:1: ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            // InternalSqlParser.g:15743:1: ( rule__OpFunctionArg__Group_1_1__0 )*
            {
             before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            // InternalSqlParser.g:15744:1: ( rule__OpFunctionArg__Group_1_1__0 )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==Comma) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // InternalSqlParser.g:15744:2: rule__OpFunctionArg__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__OpFunctionArg__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);

             after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0"
    // InternalSqlParser.g:15759:1: rule__OpFunctionArg__Group_1_1__0 : rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 ;
    public final void rule__OpFunctionArg__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15763:1: ( rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 )
            // InternalSqlParser.g:15764:2: rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1
            {
            pushFollow(FOLLOW_77);
            rule__OpFunctionArg__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0__Impl"
    // InternalSqlParser.g:15771:1: rule__OpFunctionArg__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionArg__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15775:1: ( ( Comma ) )
            // InternalSqlParser.g:15776:1: ( Comma )
            {
            // InternalSqlParser.g:15776:1: ( Comma )
            // InternalSqlParser.g:15777:1: Comma
            {
             before(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1"
    // InternalSqlParser.g:15790:1: rule__OpFunctionArg__Group_1_1__1 : rule__OpFunctionArg__Group_1_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15794:1: ( rule__OpFunctionArg__Group_1_1__1__Impl )
            // InternalSqlParser.g:15795:2: rule__OpFunctionArg__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1__Impl"
    // InternalSqlParser.g:15801:1: rule__OpFunctionArg__Group_1_1__1__Impl : ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OpFunctionArg__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15805:1: ( ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:15806:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:15806:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:15807:1: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            {
             before(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 
            // InternalSqlParser.g:15808:1: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:15808:2: rule__OpFunctionArg__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__EntriesAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__0"
    // InternalSqlParser.g:15822:1: rule__OpFunctionCast__Group__0 : rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 ;
    public final void rule__OpFunctionCast__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15826:1: ( rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 )
            // InternalSqlParser.g:15827:2: rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__OpFunctionCast__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0"


    // $ANTLR start "rule__OpFunctionCast__Group__0__Impl"
    // InternalSqlParser.g:15834:1: rule__OpFunctionCast__Group__0__Impl : ( CAST ) ;
    public final void rule__OpFunctionCast__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15838:1: ( ( CAST ) )
            // InternalSqlParser.g:15839:1: ( CAST )
            {
            // InternalSqlParser.g:15839:1: ( CAST )
            // InternalSqlParser.g:15840:1: CAST
            {
             before(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 
            match(input,CAST,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__1"
    // InternalSqlParser.g:15853:1: rule__OpFunctionCast__Group__1 : rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 ;
    public final void rule__OpFunctionCast__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15857:1: ( rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 )
            // InternalSqlParser.g:15858:2: rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2
            {
            pushFollow(FOLLOW_44);
            rule__OpFunctionCast__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1"


    // $ANTLR start "rule__OpFunctionCast__Group__1__Impl"
    // InternalSqlParser.g:15865:1: rule__OpFunctionCast__Group__1__Impl : ( ( rule__OpFunctionCast__OpAssignment_1 ) ) ;
    public final void rule__OpFunctionCast__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15869:1: ( ( ( rule__OpFunctionCast__OpAssignment_1 ) ) )
            // InternalSqlParser.g:15870:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            {
            // InternalSqlParser.g:15870:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            // InternalSqlParser.g:15871:1: ( rule__OpFunctionCast__OpAssignment_1 )
            {
             before(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 
            // InternalSqlParser.g:15872:1: ( rule__OpFunctionCast__OpAssignment_1 )
            // InternalSqlParser.g:15872:2: rule__OpFunctionCast__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__OpAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__2"
    // InternalSqlParser.g:15882:1: rule__OpFunctionCast__Group__2 : rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 ;
    public final void rule__OpFunctionCast__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15886:1: ( rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 )
            // InternalSqlParser.g:15887:2: rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__OpFunctionCast__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2"


    // $ANTLR start "rule__OpFunctionCast__Group__2__Impl"
    // InternalSqlParser.g:15894:1: rule__OpFunctionCast__Group__2__Impl : ( AS ) ;
    public final void rule__OpFunctionCast__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15898:1: ( ( AS ) )
            // InternalSqlParser.g:15899:1: ( AS )
            {
            // InternalSqlParser.g:15899:1: ( AS )
            // InternalSqlParser.g:15900:1: AS
            {
             before(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 
            match(input,AS,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__3"
    // InternalSqlParser.g:15913:1: rule__OpFunctionCast__Group__3 : rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 ;
    public final void rule__OpFunctionCast__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15917:1: ( rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 )
            // InternalSqlParser.g:15918:2: rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4
            {
            pushFollow(FOLLOW_78);
            rule__OpFunctionCast__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3"


    // $ANTLR start "rule__OpFunctionCast__Group__3__Impl"
    // InternalSqlParser.g:15925:1: rule__OpFunctionCast__Group__3__Impl : ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) ;
    public final void rule__OpFunctionCast__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15929:1: ( ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) )
            // InternalSqlParser.g:15930:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            {
            // InternalSqlParser.g:15930:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            // InternalSqlParser.g:15931:1: ( rule__OpFunctionCast__TypeAssignment_3 )
            {
             before(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 
            // InternalSqlParser.g:15932:1: ( rule__OpFunctionCast__TypeAssignment_3 )
            // InternalSqlParser.g:15932:2: rule__OpFunctionCast__TypeAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__TypeAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__4"
    // InternalSqlParser.g:15942:1: rule__OpFunctionCast__Group__4 : rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 ;
    public final void rule__OpFunctionCast__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15946:1: ( rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 )
            // InternalSqlParser.g:15947:2: rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5
            {
            pushFollow(FOLLOW_78);
            rule__OpFunctionCast__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4"


    // $ANTLR start "rule__OpFunctionCast__Group__4__Impl"
    // InternalSqlParser.g:15954:1: rule__OpFunctionCast__Group__4__Impl : ( ( rule__OpFunctionCast__Group_4__0 )? ) ;
    public final void rule__OpFunctionCast__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15958:1: ( ( ( rule__OpFunctionCast__Group_4__0 )? ) )
            // InternalSqlParser.g:15959:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            {
            // InternalSqlParser.g:15959:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            // InternalSqlParser.g:15960:1: ( rule__OpFunctionCast__Group_4__0 )?
            {
             before(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 
            // InternalSqlParser.g:15961:1: ( rule__OpFunctionCast__Group_4__0 )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==LeftParenthesis) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSqlParser.g:15961:2: rule__OpFunctionCast__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__5"
    // InternalSqlParser.g:15971:1: rule__OpFunctionCast__Group__5 : rule__OpFunctionCast__Group__5__Impl ;
    public final void rule__OpFunctionCast__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15975:1: ( rule__OpFunctionCast__Group__5__Impl )
            // InternalSqlParser.g:15976:2: rule__OpFunctionCast__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5"


    // $ANTLR start "rule__OpFunctionCast__Group__5__Impl"
    // InternalSqlParser.g:15982:1: rule__OpFunctionCast__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15986:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:15987:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:15987:1: ( RightParenthesis )
            // InternalSqlParser.g:15988:1: RightParenthesis
            {
             before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0"
    // InternalSqlParser.g:16013:1: rule__OpFunctionCast__Group_4__0 : rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 ;
    public final void rule__OpFunctionCast__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16017:1: ( rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 )
            // InternalSqlParser.g:16018:2: rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1
            {
            pushFollow(FOLLOW_21);
            rule__OpFunctionCast__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0__Impl"
    // InternalSqlParser.g:16025:1: rule__OpFunctionCast__Group_4__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16029:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:16030:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:16030:1: ( LeftParenthesis )
            // InternalSqlParser.g:16031:1: LeftParenthesis
            {
             before(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1"
    // InternalSqlParser.g:16044:1: rule__OpFunctionCast__Group_4__1 : rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 ;
    public final void rule__OpFunctionCast__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16048:1: ( rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 )
            // InternalSqlParser.g:16049:2: rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2
            {
            pushFollow(FOLLOW_79);
            rule__OpFunctionCast__Group_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1__Impl"
    // InternalSqlParser.g:16056:1: rule__OpFunctionCast__Group_4__1__Impl : ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16060:1: ( ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) )
            // InternalSqlParser.g:16061:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            {
            // InternalSqlParser.g:16061:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            // InternalSqlParser.g:16062:1: ( rule__OpFunctionCast__PAssignment_4_1 )
            {
             before(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 
            // InternalSqlParser.g:16063:1: ( rule__OpFunctionCast__PAssignment_4_1 )
            // InternalSqlParser.g:16063:2: rule__OpFunctionCast__PAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__PAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2"
    // InternalSqlParser.g:16073:1: rule__OpFunctionCast__Group_4__2 : rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 ;
    public final void rule__OpFunctionCast__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16077:1: ( rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 )
            // InternalSqlParser.g:16078:2: rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3
            {
            pushFollow(FOLLOW_79);
            rule__OpFunctionCast__Group_4__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2__Impl"
    // InternalSqlParser.g:16085:1: rule__OpFunctionCast__Group_4__2__Impl : ( ( rule__OpFunctionCast__Group_4_2__0 )? ) ;
    public final void rule__OpFunctionCast__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16089:1: ( ( ( rule__OpFunctionCast__Group_4_2__0 )? ) )
            // InternalSqlParser.g:16090:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            {
            // InternalSqlParser.g:16090:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            // InternalSqlParser.g:16091:1: ( rule__OpFunctionCast__Group_4_2__0 )?
            {
             before(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 
            // InternalSqlParser.g:16092:1: ( rule__OpFunctionCast__Group_4_2__0 )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==Comma) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSqlParser.g:16092:2: rule__OpFunctionCast__Group_4_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3"
    // InternalSqlParser.g:16102:1: rule__OpFunctionCast__Group_4__3 : rule__OpFunctionCast__Group_4__3__Impl ;
    public final void rule__OpFunctionCast__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16106:1: ( rule__OpFunctionCast__Group_4__3__Impl )
            // InternalSqlParser.g:16107:2: rule__OpFunctionCast__Group_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3__Impl"
    // InternalSqlParser.g:16113:1: rule__OpFunctionCast__Group_4__3__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16117:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:16118:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:16118:1: ( RightParenthesis )
            // InternalSqlParser.g:16119:1: RightParenthesis
            {
             before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0"
    // InternalSqlParser.g:16140:1: rule__OpFunctionCast__Group_4_2__0 : rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 ;
    public final void rule__OpFunctionCast__Group_4_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16144:1: ( rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 )
            // InternalSqlParser.g:16145:2: rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1
            {
            pushFollow(FOLLOW_21);
            rule__OpFunctionCast__Group_4_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0__Impl"
    // InternalSqlParser.g:16152:1: rule__OpFunctionCast__Group_4_2__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionCast__Group_4_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16156:1: ( ( Comma ) )
            // InternalSqlParser.g:16157:1: ( Comma )
            {
            // InternalSqlParser.g:16157:1: ( Comma )
            // InternalSqlParser.g:16158:1: Comma
            {
             before(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 
            match(input,Comma,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1"
    // InternalSqlParser.g:16171:1: rule__OpFunctionCast__Group_4_2__1 : rule__OpFunctionCast__Group_4_2__1__Impl ;
    public final void rule__OpFunctionCast__Group_4_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16175:1: ( rule__OpFunctionCast__Group_4_2__1__Impl )
            // InternalSqlParser.g:16176:2: rule__OpFunctionCast__Group_4_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1__Impl"
    // InternalSqlParser.g:16182:1: rule__OpFunctionCast__Group_4_2__1__Impl : ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16186:1: ( ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) )
            // InternalSqlParser.g:16187:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            {
            // InternalSqlParser.g:16187:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            // InternalSqlParser.g:16188:1: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            {
             before(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 
            // InternalSqlParser.g:16189:1: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            // InternalSqlParser.g:16189:2: rule__OpFunctionCast__P2Assignment_4_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__P2Assignment_4_2_1();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0"
    // InternalSqlParser.g:16203:1: rule__OpFunctionArgAgregate__Group__0 : rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 ;
    public final void rule__OpFunctionArgAgregate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16207:1: ( rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 )
            // InternalSqlParser.g:16208:2: rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__OpFunctionArgAgregate__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0__Impl"
    // InternalSqlParser.g:16215:1: rule__OpFunctionArgAgregate__Group__0__Impl : ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) ;
    public final void rule__OpFunctionArgAgregate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16219:1: ( ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) )
            // InternalSqlParser.g:16220:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            {
            // InternalSqlParser.g:16220:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            // InternalSqlParser.g:16221:1: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            {
             before(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 
            // InternalSqlParser.g:16222:1: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            // InternalSqlParser.g:16222:2: rule__OpFunctionArgAgregate__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Alternatives_0();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1"
    // InternalSqlParser.g:16232:1: rule__OpFunctionArgAgregate__Group__1 : rule__OpFunctionArgAgregate__Group__1__Impl ;
    public final void rule__OpFunctionArgAgregate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16236:1: ( rule__OpFunctionArgAgregate__Group__1__Impl )
            // InternalSqlParser.g:16237:2: rule__OpFunctionArgAgregate__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1__Impl"
    // InternalSqlParser.g:16243:1: rule__OpFunctionArgAgregate__Group__1__Impl : ( ruleOperand ) ;
    public final void rule__OpFunctionArgAgregate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16247:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:16248:1: ( ruleOperand )
            {
            // InternalSqlParser.g:16248:1: ( ruleOperand )
            // InternalSqlParser.g:16249:1: ruleOperand
            {
             before(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;

             after(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__0"
    // InternalSqlParser.g:16264:1: rule__ColumnOperand__Group__0 : rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 ;
    public final void rule__ColumnOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16268:1: ( rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 )
            // InternalSqlParser.g:16269:2: rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1
            {
            pushFollow(FOLLOW_80);
            rule__ColumnOperand__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0"


    // $ANTLR start "rule__ColumnOperand__Group__0__Impl"
    // InternalSqlParser.g:16276:1: rule__ColumnOperand__Group__0__Impl : ( ( rule__ColumnOperand__CfullAssignment_0 ) ) ;
    public final void rule__ColumnOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16280:1: ( ( ( rule__ColumnOperand__CfullAssignment_0 ) ) )
            // InternalSqlParser.g:16281:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            {
            // InternalSqlParser.g:16281:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            // InternalSqlParser.g:16282:1: ( rule__ColumnOperand__CfullAssignment_0 )
            {
             before(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 
            // InternalSqlParser.g:16283:1: ( rule__ColumnOperand__CfullAssignment_0 )
            // InternalSqlParser.g:16283:2: rule__ColumnOperand__CfullAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__CfullAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__1"
    // InternalSqlParser.g:16293:1: rule__ColumnOperand__Group__1 : rule__ColumnOperand__Group__1__Impl ;
    public final void rule__ColumnOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16297:1: ( rule__ColumnOperand__Group__1__Impl )
            // InternalSqlParser.g:16298:2: rule__ColumnOperand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1"


    // $ANTLR start "rule__ColumnOperand__Group__1__Impl"
    // InternalSqlParser.g:16304:1: rule__ColumnOperand__Group__1__Impl : ( ( rule__ColumnOperand__OraAssignment_1 )? ) ;
    public final void rule__ColumnOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16308:1: ( ( ( rule__ColumnOperand__OraAssignment_1 )? ) )
            // InternalSqlParser.g:16309:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            {
            // InternalSqlParser.g:16309:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            // InternalSqlParser.g:16310:1: ( rule__ColumnOperand__OraAssignment_1 )?
            {
             before(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 
            // InternalSqlParser.g:16311:1: ( rule__ColumnOperand__OraAssignment_1 )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==LeftParenthesisPlusSignRightParenthesis) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalSqlParser.g:16311:2: rule__ColumnOperand__OraAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOperand__OraAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__0"
    // InternalSqlParser.g:16325:1: rule__SubQueryOperand__Group__0 : rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 ;
    public final void rule__SubQueryOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16329:1: ( rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 )
            // InternalSqlParser.g:16330:2: rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__SubQueryOperand__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0"


    // $ANTLR start "rule__SubQueryOperand__Group__0__Impl"
    // InternalSqlParser.g:16337:1: rule__SubQueryOperand__Group__0__Impl : ( () ) ;
    public final void rule__SubQueryOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16341:1: ( ( () ) )
            // InternalSqlParser.g:16342:1: ( () )
            {
            // InternalSqlParser.g:16342:1: ( () )
            // InternalSqlParser.g:16343:1: ()
            {
             before(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 
            // InternalSqlParser.g:16344:1: ()
            // InternalSqlParser.g:16346:1: 
            {
            }

             after(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__1"
    // InternalSqlParser.g:16356:1: rule__SubQueryOperand__Group__1 : rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 ;
    public final void rule__SubQueryOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16360:1: ( rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 )
            // InternalSqlParser.g:16361:2: rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__SubQueryOperand__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1"


    // $ANTLR start "rule__SubQueryOperand__Group__1__Impl"
    // InternalSqlParser.g:16368:1: rule__SubQueryOperand__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__SubQueryOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16372:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:16373:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:16373:1: ( LeftParenthesis )
            // InternalSqlParser.g:16374:1: LeftParenthesis
            {
             before(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__2"
    // InternalSqlParser.g:16387:1: rule__SubQueryOperand__Group__2 : rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 ;
    public final void rule__SubQueryOperand__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16391:1: ( rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 )
            // InternalSqlParser.g:16392:2: rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__SubQueryOperand__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2"


    // $ANTLR start "rule__SubQueryOperand__Group__2__Impl"
    // InternalSqlParser.g:16399:1: rule__SubQueryOperand__Group__2__Impl : ( ( rule__SubQueryOperand__SelAssignment_2 ) ) ;
    public final void rule__SubQueryOperand__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16403:1: ( ( ( rule__SubQueryOperand__SelAssignment_2 ) ) )
            // InternalSqlParser.g:16404:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            {
            // InternalSqlParser.g:16404:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            // InternalSqlParser.g:16405:1: ( rule__SubQueryOperand__SelAssignment_2 )
            {
             before(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 
            // InternalSqlParser.g:16406:1: ( rule__SubQueryOperand__SelAssignment_2 )
            // InternalSqlParser.g:16406:2: rule__SubQueryOperand__SelAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__SelAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__3"
    // InternalSqlParser.g:16416:1: rule__SubQueryOperand__Group__3 : rule__SubQueryOperand__Group__3__Impl ;
    public final void rule__SubQueryOperand__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16420:1: ( rule__SubQueryOperand__Group__3__Impl )
            // InternalSqlParser.g:16421:2: rule__SubQueryOperand__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3"


    // $ANTLR start "rule__SubQueryOperand__Group__3__Impl"
    // InternalSqlParser.g:16427:1: rule__SubQueryOperand__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__SubQueryOperand__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16431:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:16432:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:16432:1: ( RightParenthesis )
            // InternalSqlParser.g:16433:1: RightParenthesis
            {
             before(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 
            match(input,RightParenthesis,FOLLOW_2); 
             after(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3__Impl"


    // $ANTLR start "rule__SQLCASE__Group__0"
    // InternalSqlParser.g:16454:1: rule__SQLCASE__Group__0 : rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 ;
    public final void rule__SQLCASE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16458:1: ( rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 )
            // InternalSqlParser.g:16459:2: rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1
            {
            pushFollow(FOLLOW_81);
            rule__SQLCASE__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0"


    // $ANTLR start "rule__SQLCASE__Group__0__Impl"
    // InternalSqlParser.g:16466:1: rule__SQLCASE__Group__0__Impl : ( CASE ) ;
    public final void rule__SQLCASE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16470:1: ( ( CASE ) )
            // InternalSqlParser.g:16471:1: ( CASE )
            {
            // InternalSqlParser.g:16471:1: ( CASE )
            // InternalSqlParser.g:16472:1: CASE
            {
             before(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 
            match(input,CASE,FOLLOW_2); 
             after(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0__Impl"


    // $ANTLR start "rule__SQLCASE__Group__1"
    // InternalSqlParser.g:16485:1: rule__SQLCASE__Group__1 : rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 ;
    public final void rule__SQLCASE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16489:1: ( rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 )
            // InternalSqlParser.g:16490:2: rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2
            {
            pushFollow(FOLLOW_81);
            rule__SQLCASE__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1"


    // $ANTLR start "rule__SQLCASE__Group__1__Impl"
    // InternalSqlParser.g:16497:1: rule__SQLCASE__Group__1__Impl : ( ( rule__SQLCASE__ExprAssignment_1 )? ) ;
    public final void rule__SQLCASE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16501:1: ( ( ( rule__SQLCASE__ExprAssignment_1 )? ) )
            // InternalSqlParser.g:16502:1: ( ( rule__SQLCASE__ExprAssignment_1 )? )
            {
            // InternalSqlParser.g:16502:1: ( ( rule__SQLCASE__ExprAssignment_1 )? )
            // InternalSqlParser.g:16503:1: ( rule__SQLCASE__ExprAssignment_1 )?
            {
             before(grammarAccess.getSQLCASEAccess().getExprAssignment_1()); 
            // InternalSqlParser.g:16504:1: ( rule__SQLCASE__ExprAssignment_1 )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==NOTEXISTS||LA138_0==EXTRACT||LA138_0==EXISTS||LA138_0==NOTIN_1||LA138_0==CAST||LA138_0==CASE||(LA138_0>=NOT && LA138_0<=NOT_1)||LA138_0==X||LA138_0==IN||LA138_0==LeftParenthesis||(LA138_0>=RULE_JRPARAM && LA138_0<=RULE_JRNPARAM)||(LA138_0>=RULE_UNSIGNED && LA138_0<=RULE_SIGNED_DOUBLE)||(LA138_0>=RULE_STRING_ && LA138_0<=RULE_ID)) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalSqlParser.g:16504:2: rule__SQLCASE__ExprAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__ExprAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSQLCASEAccess().getExprAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1__Impl"


    // $ANTLR start "rule__SQLCASE__Group__2"
    // InternalSqlParser.g:16514:1: rule__SQLCASE__Group__2 : rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 ;
    public final void rule__SQLCASE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16518:1: ( rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 )
            // InternalSqlParser.g:16519:2: rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3
            {
            pushFollow(FOLLOW_82);
            rule__SQLCASE__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2"


    // $ANTLR start "rule__SQLCASE__Group__2__Impl"
    // InternalSqlParser.g:16526:1: rule__SQLCASE__Group__2__Impl : ( ( rule__SQLCASE__WhenAssignment_2 ) ) ;
    public final void rule__SQLCASE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16530:1: ( ( ( rule__SQLCASE__WhenAssignment_2 ) ) )
            // InternalSqlParser.g:16531:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            {
            // InternalSqlParser.g:16531:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            // InternalSqlParser.g:16532:1: ( rule__SQLCASE__WhenAssignment_2 )
            {
             before(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 
            // InternalSqlParser.g:16533:1: ( rule__SQLCASE__WhenAssignment_2 )
            // InternalSqlParser.g:16533:2: rule__SQLCASE__WhenAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__WhenAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2__Impl"


    // $ANTLR start "rule__SQLCASE__Group__3"
    // InternalSqlParser.g:16543:1: rule__SQLCASE__Group__3 : rule__SQLCASE__Group__3__Impl ;
    public final void rule__SQLCASE__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16547:1: ( rule__SQLCASE__Group__3__Impl )
            // InternalSqlParser.g:16548:2: rule__SQLCASE__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3"


    // $ANTLR start "rule__SQLCASE__Group__3__Impl"
    // InternalSqlParser.g:16554:1: rule__SQLCASE__Group__3__Impl : ( END ) ;
    public final void rule__SQLCASE__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16558:1: ( ( END ) )
            // InternalSqlParser.g:16559:1: ( END )
            {
            // InternalSqlParser.g:16559:1: ( END )
            // InternalSqlParser.g:16560:1: END
            {
             before(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 
            match(input,END,FOLLOW_2); 
             after(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__0"
    // InternalSqlParser.g:16581:1: rule__SQLCaseWhens__Group__0 : rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 ;
    public final void rule__SQLCaseWhens__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16585:1: ( rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 )
            // InternalSqlParser.g:16586:2: rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1
            {
            pushFollow(FOLLOW_81);
            rule__SQLCaseWhens__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0"


    // $ANTLR start "rule__SQLCaseWhens__Group__0__Impl"
    // InternalSqlParser.g:16593:1: rule__SQLCaseWhens__Group__0__Impl : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16597:1: ( ( ruleSqlCaseWhen ) )
            // InternalSqlParser.g:16598:1: ( ruleSqlCaseWhen )
            {
            // InternalSqlParser.g:16598:1: ( ruleSqlCaseWhen )
            // InternalSqlParser.g:16599:1: ruleSqlCaseWhen
            {
             before(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;

             after(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__1"
    // InternalSqlParser.g:16610:1: rule__SQLCaseWhens__Group__1 : rule__SQLCaseWhens__Group__1__Impl ;
    public final void rule__SQLCaseWhens__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16614:1: ( rule__SQLCaseWhens__Group__1__Impl )
            // InternalSqlParser.g:16615:2: rule__SQLCaseWhens__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1"


    // $ANTLR start "rule__SQLCaseWhens__Group__1__Impl"
    // InternalSqlParser.g:16621:1: rule__SQLCaseWhens__Group__1__Impl : ( ( rule__SQLCaseWhens__Group_1__0 )? ) ;
    public final void rule__SQLCaseWhens__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16625:1: ( ( ( rule__SQLCaseWhens__Group_1__0 )? ) )
            // InternalSqlParser.g:16626:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            {
            // InternalSqlParser.g:16626:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            // InternalSqlParser.g:16627:1: ( rule__SQLCaseWhens__Group_1__0 )?
            {
             before(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 
            // InternalSqlParser.g:16628:1: ( rule__SQLCaseWhens__Group_1__0 )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==WHEN) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalSqlParser.g:16628:2: rule__SQLCaseWhens__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCaseWhens__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0"
    // InternalSqlParser.g:16642:1: rule__SQLCaseWhens__Group_1__0 : rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 ;
    public final void rule__SQLCaseWhens__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16646:1: ( rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 )
            // InternalSqlParser.g:16647:2: rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1
            {
            pushFollow(FOLLOW_81);
            rule__SQLCaseWhens__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0__Impl"
    // InternalSqlParser.g:16654:1: rule__SQLCaseWhens__Group_1__0__Impl : ( () ) ;
    public final void rule__SQLCaseWhens__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16658:1: ( ( () ) )
            // InternalSqlParser.g:16659:1: ( () )
            {
            // InternalSqlParser.g:16659:1: ( () )
            // InternalSqlParser.g:16660:1: ()
            {
             before(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 
            // InternalSqlParser.g:16661:1: ()
            // InternalSqlParser.g:16663:1: 
            {
            }

             after(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1"
    // InternalSqlParser.g:16673:1: rule__SQLCaseWhens__Group_1__1 : rule__SQLCaseWhens__Group_1__1__Impl ;
    public final void rule__SQLCaseWhens__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16677:1: ( rule__SQLCaseWhens__Group_1__1__Impl )
            // InternalSqlParser.g:16678:2: rule__SQLCaseWhens__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1__Impl"
    // InternalSqlParser.g:16684:1: rule__SQLCaseWhens__Group_1__1__Impl : ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__SQLCaseWhens__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16688:1: ( ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) )
            // InternalSqlParser.g:16689:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            {
            // InternalSqlParser.g:16689:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            // InternalSqlParser.g:16690:1: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            {
            // InternalSqlParser.g:16690:1: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) )
            // InternalSqlParser.g:16691:1: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            {
             before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            // InternalSqlParser.g:16692:1: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            // InternalSqlParser.g:16692:2: rule__SQLCaseWhens__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_83);
            rule__SQLCaseWhens__EntriesAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 

            }

            // InternalSqlParser.g:16695:1: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            // InternalSqlParser.g:16696:1: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            {
             before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            // InternalSqlParser.g:16697:1: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==WHEN) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    // InternalSqlParser.g:16697:2: rule__SQLCaseWhens__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_83);
            	    rule__SQLCaseWhens__EntriesAssignment_1_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);

             after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__0"
    // InternalSqlParser.g:16712:1: rule__SqlCaseWhen__Group__0 : rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 ;
    public final void rule__SqlCaseWhen__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16716:1: ( rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 )
            // InternalSqlParser.g:16717:2: rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__SqlCaseWhen__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0"


    // $ANTLR start "rule__SqlCaseWhen__Group__0__Impl"
    // InternalSqlParser.g:16724:1: rule__SqlCaseWhen__Group__0__Impl : ( WHEN ) ;
    public final void rule__SqlCaseWhen__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16728:1: ( ( WHEN ) )
            // InternalSqlParser.g:16729:1: ( WHEN )
            {
            // InternalSqlParser.g:16729:1: ( WHEN )
            // InternalSqlParser.g:16730:1: WHEN
            {
             before(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 
            match(input,WHEN,FOLLOW_2); 
             after(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__1"
    // InternalSqlParser.g:16743:1: rule__SqlCaseWhen__Group__1 : rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 ;
    public final void rule__SqlCaseWhen__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16747:1: ( rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 )
            // InternalSqlParser.g:16748:2: rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2
            {
            pushFollow(FOLLOW_84);
            rule__SqlCaseWhen__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1"


    // $ANTLR start "rule__SqlCaseWhen__Group__1__Impl"
    // InternalSqlParser.g:16755:1: rule__SqlCaseWhen__Group__1__Impl : ( ( rule__SqlCaseWhen__ExprAssignment_1 ) ) ;
    public final void rule__SqlCaseWhen__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16759:1: ( ( ( rule__SqlCaseWhen__ExprAssignment_1 ) ) )
            // InternalSqlParser.g:16760:1: ( ( rule__SqlCaseWhen__ExprAssignment_1 ) )
            {
            // InternalSqlParser.g:16760:1: ( ( rule__SqlCaseWhen__ExprAssignment_1 ) )
            // InternalSqlParser.g:16761:1: ( rule__SqlCaseWhen__ExprAssignment_1 )
            {
             before(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1()); 
            // InternalSqlParser.g:16762:1: ( rule__SqlCaseWhen__ExprAssignment_1 )
            // InternalSqlParser.g:16762:2: rule__SqlCaseWhen__ExprAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__ExprAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__2"
    // InternalSqlParser.g:16772:1: rule__SqlCaseWhen__Group__2 : rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 ;
    public final void rule__SqlCaseWhen__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16776:1: ( rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 )
            // InternalSqlParser.g:16777:2: rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3
            {
            pushFollow(FOLLOW_52);
            rule__SqlCaseWhen__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2"


    // $ANTLR start "rule__SqlCaseWhen__Group__2__Impl"
    // InternalSqlParser.g:16784:1: rule__SqlCaseWhen__Group__2__Impl : ( THEN ) ;
    public final void rule__SqlCaseWhen__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16788:1: ( ( THEN ) )
            // InternalSqlParser.g:16789:1: ( THEN )
            {
            // InternalSqlParser.g:16789:1: ( THEN )
            // InternalSqlParser.g:16790:1: THEN
            {
             before(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 
            match(input,THEN,FOLLOW_2); 
             after(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__3"
    // InternalSqlParser.g:16803:1: rule__SqlCaseWhen__Group__3 : rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 ;
    public final void rule__SqlCaseWhen__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16807:1: ( rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 )
            // InternalSqlParser.g:16808:2: rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4
            {
            pushFollow(FOLLOW_85);
            rule__SqlCaseWhen__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3"


    // $ANTLR start "rule__SqlCaseWhen__Group__3__Impl"
    // InternalSqlParser.g:16815:1: rule__SqlCaseWhen__Group__3__Impl : ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) ;
    public final void rule__SqlCaseWhen__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16819:1: ( ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) )
            // InternalSqlParser.g:16820:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            {
            // InternalSqlParser.g:16820:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            // InternalSqlParser.g:16821:1: ( rule__SqlCaseWhen__TexpAssignment_3 )
            {
             before(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 
            // InternalSqlParser.g:16822:1: ( rule__SqlCaseWhen__TexpAssignment_3 )
            // InternalSqlParser.g:16822:2: rule__SqlCaseWhen__TexpAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__TexpAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__4"
    // InternalSqlParser.g:16832:1: rule__SqlCaseWhen__Group__4 : rule__SqlCaseWhen__Group__4__Impl ;
    public final void rule__SqlCaseWhen__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16836:1: ( rule__SqlCaseWhen__Group__4__Impl )
            // InternalSqlParser.g:16837:2: rule__SqlCaseWhen__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4"


    // $ANTLR start "rule__SqlCaseWhen__Group__4__Impl"
    // InternalSqlParser.g:16843:1: rule__SqlCaseWhen__Group__4__Impl : ( ( rule__SqlCaseWhen__Group_4__0 )? ) ;
    public final void rule__SqlCaseWhen__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16847:1: ( ( ( rule__SqlCaseWhen__Group_4__0 )? ) )
            // InternalSqlParser.g:16848:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            {
            // InternalSqlParser.g:16848:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            // InternalSqlParser.g:16849:1: ( rule__SqlCaseWhen__Group_4__0 )?
            {
             before(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 
            // InternalSqlParser.g:16850:1: ( rule__SqlCaseWhen__Group_4__0 )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==ELSE) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalSqlParser.g:16850:2: rule__SqlCaseWhen__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__Group_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0"
    // InternalSqlParser.g:16870:1: rule__SqlCaseWhen__Group_4__0 : rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 ;
    public final void rule__SqlCaseWhen__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16874:1: ( rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 )
            // InternalSqlParser.g:16875:2: rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1
            {
            pushFollow(FOLLOW_52);
            rule__SqlCaseWhen__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0__Impl"
    // InternalSqlParser.g:16882:1: rule__SqlCaseWhen__Group_4__0__Impl : ( ELSE ) ;
    public final void rule__SqlCaseWhen__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16886:1: ( ( ELSE ) )
            // InternalSqlParser.g:16887:1: ( ELSE )
            {
            // InternalSqlParser.g:16887:1: ( ELSE )
            // InternalSqlParser.g:16888:1: ELSE
            {
             before(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 
            match(input,ELSE,FOLLOW_2); 
             after(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1"
    // InternalSqlParser.g:16901:1: rule__SqlCaseWhen__Group_4__1 : rule__SqlCaseWhen__Group_4__1__Impl ;
    public final void rule__SqlCaseWhen__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16905:1: ( rule__SqlCaseWhen__Group_4__1__Impl )
            // InternalSqlParser.g:16906:2: rule__SqlCaseWhen__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1__Impl"
    // InternalSqlParser.g:16912:1: rule__SqlCaseWhen__Group_4__1__Impl : ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) ;
    public final void rule__SqlCaseWhen__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16916:1: ( ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) )
            // InternalSqlParser.g:16917:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            {
            // InternalSqlParser.g:16917:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            // InternalSqlParser.g:16918:1: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            {
             before(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 
            // InternalSqlParser.g:16919:1: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            // InternalSqlParser.g:16919:2: rule__SqlCaseWhen__EexpAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__EexpAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1__Impl"


    // $ANTLR start "rule__JoinType__Group__0"
    // InternalSqlParser.g:16933:1: rule__JoinType__Group__0 : rule__JoinType__Group__0__Impl rule__JoinType__Group__1 ;
    public final void rule__JoinType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16937:1: ( rule__JoinType__Group__0__Impl rule__JoinType__Group__1 )
            // InternalSqlParser.g:16938:2: rule__JoinType__Group__0__Impl rule__JoinType__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__JoinType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__JoinType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0"


    // $ANTLR start "rule__JoinType__Group__0__Impl"
    // InternalSqlParser.g:16945:1: rule__JoinType__Group__0__Impl : ( ( NATURAL )? ) ;
    public final void rule__JoinType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16949:1: ( ( ( NATURAL )? ) )
            // InternalSqlParser.g:16950:1: ( ( NATURAL )? )
            {
            // InternalSqlParser.g:16950:1: ( ( NATURAL )? )
            // InternalSqlParser.g:16951:1: ( NATURAL )?
            {
             before(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 
            // InternalSqlParser.g:16952:1: ( NATURAL )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==NATURAL) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalSqlParser.g:16953:2: NATURAL
                    {
                    match(input,NATURAL,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0__Impl"


    // $ANTLR start "rule__JoinType__Group__1"
    // InternalSqlParser.g:16964:1: rule__JoinType__Group__1 : rule__JoinType__Group__1__Impl rule__JoinType__Group__2 ;
    public final void rule__JoinType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16968:1: ( rule__JoinType__Group__1__Impl rule__JoinType__Group__2 )
            // InternalSqlParser.g:16969:2: rule__JoinType__Group__1__Impl rule__JoinType__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__JoinType__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1"


    // $ANTLR start "rule__JoinType__Group__1__Impl"
    // InternalSqlParser.g:16976:1: rule__JoinType__Group__1__Impl : ( ( rule__JoinType__Alternatives_1 )? ) ;
    public final void rule__JoinType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16980:1: ( ( ( rule__JoinType__Alternatives_1 )? ) )
            // InternalSqlParser.g:16981:1: ( ( rule__JoinType__Alternatives_1 )? )
            {
            // InternalSqlParser.g:16981:1: ( ( rule__JoinType__Alternatives_1 )? )
            // InternalSqlParser.g:16982:1: ( rule__JoinType__Alternatives_1 )?
            {
             before(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 
            // InternalSqlParser.g:16983:1: ( rule__JoinType__Alternatives_1 )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==STRAIGHT_JOIN||LA143_0==CROSS||LA143_0==INNER||LA143_0==RIGHT||LA143_0==FULL||LA143_0==LEFT) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalSqlParser.g:16983:2: rule__JoinType__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Alternatives_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1__Impl"


    // $ANTLR start "rule__JoinType__Group__2"
    // InternalSqlParser.g:16993:1: rule__JoinType__Group__2 : rule__JoinType__Group__2__Impl ;
    public final void rule__JoinType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16997:1: ( rule__JoinType__Group__2__Impl )
            // InternalSqlParser.g:16998:2: rule__JoinType__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2"


    // $ANTLR start "rule__JoinType__Group__2__Impl"
    // InternalSqlParser.g:17004:1: rule__JoinType__Group__2__Impl : ( JOIN ) ;
    public final void rule__JoinType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17008:1: ( ( JOIN ) )
            // InternalSqlParser.g:17009:1: ( JOIN )
            {
            // InternalSqlParser.g:17009:1: ( JOIN )
            // InternalSqlParser.g:17010:1: JOIN
            {
             before(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 
            match(input,JOIN,FOLLOW_2); 
             after(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__0"
    // InternalSqlParser.g:17029:1: rule__JoinType__Group_1_1__0 : rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 ;
    public final void rule__JoinType__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17033:1: ( rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 )
            // InternalSqlParser.g:17034:2: rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1
            {
            pushFollow(FOLLOW_86);
            rule__JoinType__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0"


    // $ANTLR start "rule__JoinType__Group_1_1__0__Impl"
    // InternalSqlParser.g:17041:1: rule__JoinType__Group_1_1__0__Impl : ( ( rule__JoinType__Alternatives_1_1_0 ) ) ;
    public final void rule__JoinType__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17045:1: ( ( ( rule__JoinType__Alternatives_1_1_0 ) ) )
            // InternalSqlParser.g:17046:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            {
            // InternalSqlParser.g:17046:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            // InternalSqlParser.g:17047:1: ( rule__JoinType__Alternatives_1_1_0 )
            {
             before(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 
            // InternalSqlParser.g:17048:1: ( rule__JoinType__Alternatives_1_1_0 )
            // InternalSqlParser.g:17048:2: rule__JoinType__Alternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Alternatives_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__1"
    // InternalSqlParser.g:17058:1: rule__JoinType__Group_1_1__1 : rule__JoinType__Group_1_1__1__Impl ;
    public final void rule__JoinType__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17062:1: ( rule__JoinType__Group_1_1__1__Impl )
            // InternalSqlParser.g:17063:2: rule__JoinType__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1"


    // $ANTLR start "rule__JoinType__Group_1_1__1__Impl"
    // InternalSqlParser.g:17069:1: rule__JoinType__Group_1_1__1__Impl : ( ( OUTER )? ) ;
    public final void rule__JoinType__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17073:1: ( ( ( OUTER )? ) )
            // InternalSqlParser.g:17074:1: ( ( OUTER )? )
            {
            // InternalSqlParser.g:17074:1: ( ( OUTER )? )
            // InternalSqlParser.g:17075:1: ( OUTER )?
            {
             before(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 
            // InternalSqlParser.g:17076:1: ( OUTER )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==OUTER) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalSqlParser.g:17077:2: OUTER
                    {
                    match(input,OUTER,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1__Impl"


    // $ANTLR start "rule__FNAME__Group__0"
    // InternalSqlParser.g:17092:1: rule__FNAME__Group__0 : rule__FNAME__Group__0__Impl rule__FNAME__Group__1 ;
    public final void rule__FNAME__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17096:1: ( rule__FNAME__Group__0__Impl rule__FNAME__Group__1 )
            // InternalSqlParser.g:17097:2: rule__FNAME__Group__0__Impl rule__FNAME__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__FNAME__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0"


    // $ANTLR start "rule__FNAME__Group__0__Impl"
    // InternalSqlParser.g:17104:1: rule__FNAME__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FNAME__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17108:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:17109:1: ( RULE_ID )
            {
            // InternalSqlParser.g:17109:1: ( RULE_ID )
            // InternalSqlParser.g:17110:1: RULE_ID
            {
             before(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0__Impl"


    // $ANTLR start "rule__FNAME__Group__1"
    // InternalSqlParser.g:17121:1: rule__FNAME__Group__1 : rule__FNAME__Group__1__Impl ;
    public final void rule__FNAME__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17125:1: ( rule__FNAME__Group__1__Impl )
            // InternalSqlParser.g:17126:2: rule__FNAME__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1"


    // $ANTLR start "rule__FNAME__Group__1__Impl"
    // InternalSqlParser.g:17132:1: rule__FNAME__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FNAME__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17136:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:17137:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:17137:1: ( LeftParenthesis )
            // InternalSqlParser.g:17138:1: LeftParenthesis
            {
             before(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 
            match(input,LeftParenthesis,FOLLOW_2); 
             after(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1__Impl"


    // $ANTLR start "rule__Model__QueryAssignment_1"
    // InternalSqlParser.g:17156:1: rule__Model__QueryAssignment_1 : ( ruleSelectQuery ) ;
    public final void rule__Model__QueryAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17160:1: ( ( ruleSelectQuery ) )
            // InternalSqlParser.g:17161:1: ( ruleSelectQuery )
            {
            // InternalSqlParser.g:17161:1: ( ruleSelectQuery )
            // InternalSqlParser.g:17162:1: ruleSelectQuery
            {
             before(grammarAccess.getModelAccess().getQuerySelectQueryParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;

             after(grammarAccess.getModelAccess().getQuerySelectQueryParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__QueryAssignment_1"


    // $ANTLR start "rule__FetchFirst__FetchFirstAssignment_0"
    // InternalSqlParser.g:17171:1: rule__FetchFirst__FetchFirstAssignment_0 : ( ruleUnsignedValue ) ;
    public final void rule__FetchFirst__FetchFirstAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17175:1: ( ( ruleUnsignedValue ) )
            // InternalSqlParser.g:17176:1: ( ruleUnsignedValue )
            {
            // InternalSqlParser.g:17176:1: ( ruleUnsignedValue )
            // InternalSqlParser.g:17177:1: ruleUnsignedValue
            {
             before(grammarAccess.getFetchFirstAccess().getFetchFirstUnsignedValueParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleUnsignedValue();

            state._fsp--;

             after(grammarAccess.getFetchFirstAccess().getFetchFirstUnsignedValueParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__FetchFirstAssignment_0"


    // $ANTLR start "rule__FetchFirst__RowAssignment_1"
    // InternalSqlParser.g:17186:1: rule__FetchFirst__RowAssignment_1 : ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) ;
    public final void rule__FetchFirst__RowAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17190:1: ( ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) )
            // InternalSqlParser.g:17191:1: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:17191:1: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            // InternalSqlParser.g:17192:1: ( rule__FetchFirst__RowAlternatives_1_0 )
            {
             before(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 
            // InternalSqlParser.g:17193:1: ( rule__FetchFirst__RowAlternatives_1_0 )
            // InternalSqlParser.g:17193:2: rule__FetchFirst__RowAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAssignment_1"


    // $ANTLR start "rule__Offset__OffsetAssignment"
    // InternalSqlParser.g:17202:1: rule__Offset__OffsetAssignment : ( RULE_INT ) ;
    public final void rule__Offset__OffsetAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17206:1: ( ( RULE_INT ) )
            // InternalSqlParser.g:17207:1: ( RULE_INT )
            {
            // InternalSqlParser.g:17207:1: ( RULE_INT )
            // InternalSqlParser.g:17208:1: RULE_INT
            {
             before(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__OffsetAssignment"


    // $ANTLR start "rule__Limit__L1Assignment_1_0"
    // InternalSqlParser.g:17217:1: rule__Limit__L1Assignment_1_0 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L1Assignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17221:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:17222:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:17222:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:17223:1: RULE_UNSIGNED
            {
             before(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 
            match(input,RULE_UNSIGNED,FOLLOW_2); 
             after(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L1Assignment_1_0"


    // $ANTLR start "rule__Limit__L2Assignment_1_1_1"
    // InternalSqlParser.g:17232:1: rule__Limit__L2Assignment_1_1_1 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L2Assignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17236:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:17237:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:17237:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:17238:1: RULE_UNSIGNED
            {
             before(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 
            match(input,RULE_UNSIGNED,FOLLOW_2); 
             after(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L2Assignment_1_1_1"


    // $ANTLR start "rule__SelectQuery__OpAssignment_1"
    // InternalSqlParser.g:17247:1: rule__SelectQuery__OpAssignment_1 : ( ruleSelectSubSet ) ;
    public final void rule__SelectQuery__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17251:1: ( ( ruleSelectSubSet ) )
            // InternalSqlParser.g:17252:1: ( ruleSelectSubSet )
            {
            // InternalSqlParser.g:17252:1: ( ruleSelectSubSet )
            // InternalSqlParser.g:17253:1: ruleSelectSubSet
            {
             before(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSelectSubSet();

            state._fsp--;

             after(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__OpAssignment_1"


    // $ANTLR start "rule__SelectSubSet__OpAssignment_0"
    // InternalSqlParser.g:17262:1: rule__SelectSubSet__OpAssignment_0 : ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) ;
    public final void rule__SelectSubSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17266:1: ( ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) )
            // InternalSqlParser.g:17267:1: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            {
            // InternalSqlParser.g:17267:1: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            // InternalSqlParser.g:17268:1: ( rule__SelectSubSet__OpAlternatives_0_0 )
            {
             before(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 
            // InternalSqlParser.g:17269:1: ( rule__SelectSubSet__OpAlternatives_0_0 )
            // InternalSqlParser.g:17269:2: rule__SelectSubSet__OpAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAlternatives_0_0();

            state._fsp--;


            }

             after(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAssignment_0"


    // $ANTLR start "rule__SelectSubSet__AllAssignment_1"
    // InternalSqlParser.g:17278:1: rule__SelectSubSet__AllAssignment_1 : ( ( ALL ) ) ;
    public final void rule__SelectSubSet__AllAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17282:1: ( ( ( ALL ) ) )
            // InternalSqlParser.g:17283:1: ( ( ALL ) )
            {
            // InternalSqlParser.g:17283:1: ( ( ALL ) )
            // InternalSqlParser.g:17284:1: ( ALL )
            {
             before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            // InternalSqlParser.g:17285:1: ( ALL )
            // InternalSqlParser.g:17286:1: ALL
            {
             before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            match(input,ALL,FOLLOW_2); 
             after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 

            }

             after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__AllAssignment_1"


    // $ANTLR start "rule__SelectSubSet__QueryAssignment_2"
    // InternalSqlParser.g:17301:1: rule__SelectSubSet__QueryAssignment_2 : ( ruleSelect ) ;
    public final void rule__SelectSubSet__QueryAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17305:1: ( ( ruleSelect ) )
            // InternalSqlParser.g:17306:1: ( ruleSelect )
            {
            // InternalSqlParser.g:17306:1: ( ruleSelect )
            // InternalSqlParser.g:17307:1: ruleSelect
            {
             before(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;

             after(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__QueryAssignment_2"


    // $ANTLR start "rule__Select__SelectAssignment_0"
    // InternalSqlParser.g:17316:1: rule__Select__SelectAssignment_0 : ( ( SELECT ) ) ;
    public final void rule__Select__SelectAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17320:1: ( ( ( SELECT ) ) )
            // InternalSqlParser.g:17321:1: ( ( SELECT ) )
            {
            // InternalSqlParser.g:17321:1: ( ( SELECT ) )
            // InternalSqlParser.g:17322:1: ( SELECT )
            {
             before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            // InternalSqlParser.g:17323:1: ( SELECT )
            // InternalSqlParser.g:17324:1: SELECT
            {
             before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            match(input,SELECT,FOLLOW_2); 
             after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 

            }

             after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__SelectAssignment_0"


    // $ANTLR start "rule__Select__ColsAssignment_3"
    // InternalSqlParser.g:17339:1: rule__Select__ColsAssignment_3 : ( ruleColumns ) ;
    public final void rule__Select__ColsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17343:1: ( ( ruleColumns ) )
            // InternalSqlParser.g:17344:1: ( ruleColumns )
            {
            // InternalSqlParser.g:17344:1: ( ruleColumns )
            // InternalSqlParser.g:17345:1: ruleColumns
            {
             before(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__ColsAssignment_3"


    // $ANTLR start "rule__Select__TblAssignment_5"
    // InternalSqlParser.g:17354:1: rule__Select__TblAssignment_5 : ( ruleTables ) ;
    public final void rule__Select__TblAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17358:1: ( ( ruleTables ) )
            // InternalSqlParser.g:17359:1: ( ruleTables )
            {
            // InternalSqlParser.g:17359:1: ( ruleTables )
            // InternalSqlParser.g:17360:1: ruleTables
            {
             before(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            ruleTables();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__TblAssignment_5"


    // $ANTLR start "rule__Select__WhereExpressionAssignment_6_1"
    // InternalSqlParser.g:17369:1: rule__Select__WhereExpressionAssignment_6_1 : ( ruleFullExpression ) ;
    public final void rule__Select__WhereExpressionAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17373:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:17374:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:17374:1: ( ruleFullExpression )
            // InternalSqlParser.g:17375:1: ruleFullExpression
            {
             before(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__WhereExpressionAssignment_6_1"


    // $ANTLR start "rule__Select__GroupByEntryAssignment_7_1"
    // InternalSqlParser.g:17384:1: rule__Select__GroupByEntryAssignment_7_1 : ( ruleGroupByColumns ) ;
    public final void rule__Select__GroupByEntryAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17388:1: ( ( ruleGroupByColumns ) )
            // InternalSqlParser.g:17389:1: ( ruleGroupByColumns )
            {
            // InternalSqlParser.g:17389:1: ( ruleGroupByColumns )
            // InternalSqlParser.g:17390:1: ruleGroupByColumns
            {
             before(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGroupByColumns();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__GroupByEntryAssignment_7_1"


    // $ANTLR start "rule__Select__HavingEntryAssignment_8_1"
    // InternalSqlParser.g:17399:1: rule__Select__HavingEntryAssignment_8_1 : ( ruleFullExpression ) ;
    public final void rule__Select__HavingEntryAssignment_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17403:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:17404:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:17404:1: ( ruleFullExpression )
            // InternalSqlParser.g:17405:1: ruleFullExpression
            {
             before(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__HavingEntryAssignment_8_1"


    // $ANTLR start "rule__Select__OrderByEntryAssignment_9_1"
    // InternalSqlParser.g:17414:1: rule__Select__OrderByEntryAssignment_9_1 : ( ruleOrderByColumns ) ;
    public final void rule__Select__OrderByEntryAssignment_9_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17418:1: ( ( ruleOrderByColumns ) )
            // InternalSqlParser.g:17419:1: ( ruleOrderByColumns )
            {
            // InternalSqlParser.g:17419:1: ( ruleOrderByColumns )
            // InternalSqlParser.g:17420:1: ruleOrderByColumns
            {
             before(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByColumns();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OrderByEntryAssignment_9_1"


    // $ANTLR start "rule__Select__LimAssignment_10_1"
    // InternalSqlParser.g:17429:1: rule__Select__LimAssignment_10_1 : ( ruleLimit ) ;
    public final void rule__Select__LimAssignment_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17433:1: ( ( ruleLimit ) )
            // InternalSqlParser.g:17434:1: ( ruleLimit )
            {
            // InternalSqlParser.g:17434:1: ( ruleLimit )
            // InternalSqlParser.g:17435:1: ruleLimit
            {
             before(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLimit();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__LimAssignment_10_1"


    // $ANTLR start "rule__Select__OffsetAssignment_11_1"
    // InternalSqlParser.g:17444:1: rule__Select__OffsetAssignment_11_1 : ( ruleOffset ) ;
    public final void rule__Select__OffsetAssignment_11_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17448:1: ( ( ruleOffset ) )
            // InternalSqlParser.g:17449:1: ( ruleOffset )
            {
            // InternalSqlParser.g:17449:1: ( ruleOffset )
            // InternalSqlParser.g:17450:1: ruleOffset
            {
             before(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOffset();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OffsetAssignment_11_1"


    // $ANTLR start "rule__Select__FetchFirstAssignment_12_1"
    // InternalSqlParser.g:17459:1: rule__Select__FetchFirstAssignment_12_1 : ( ruleFetchFirst ) ;
    public final void rule__Select__FetchFirstAssignment_12_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17463:1: ( ( ruleFetchFirst ) )
            // InternalSqlParser.g:17464:1: ( ruleFetchFirst )
            {
            // InternalSqlParser.g:17464:1: ( ruleFetchFirst )
            // InternalSqlParser.g:17465:1: ruleFetchFirst
            {
             before(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFetchFirst();

            state._fsp--;

             after(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__FetchFirstAssignment_12_1"


    // $ANTLR start "rule__Columns__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:17474:1: rule__Columns__EntriesAssignment_1_1_1 : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17478:1: ( ( ruleColumnOrAlias ) )
            // InternalSqlParser.g:17479:1: ( ruleColumnOrAlias )
            {
            // InternalSqlParser.g:17479:1: ( ruleColumnOrAlias )
            // InternalSqlParser.g:17480:1: ruleColumnOrAlias
            {
             before(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;

             after(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnOrAlias__CeAssignment_0_0"
    // InternalSqlParser.g:17489:1: rule__ColumnOrAlias__CeAssignment_0_0 : ( ruleOperandGroup ) ;
    public final void rule__ColumnOrAlias__CeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17493:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:17494:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:17494:1: ( ruleOperandGroup )
            // InternalSqlParser.g:17495:1: ruleOperandGroup
            {
             before(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__CeAssignment_0_0"


    // $ANTLR start "rule__ColumnOrAlias__AliasAssignment_0_1"
    // InternalSqlParser.g:17504:1: rule__ColumnOrAlias__AliasAssignment_0_1 : ( ( AS ) ) ;
    public final void rule__ColumnOrAlias__AliasAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17508:1: ( ( ( AS ) ) )
            // InternalSqlParser.g:17509:1: ( ( AS ) )
            {
            // InternalSqlParser.g:17509:1: ( ( AS ) )
            // InternalSqlParser.g:17510:1: ( AS )
            {
             before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            // InternalSqlParser.g:17511:1: ( AS )
            // InternalSqlParser.g:17512:1: AS
            {
             before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            match(input,AS,FOLLOW_2); 
             after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 

            }

             after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AliasAssignment_0_1"


    // $ANTLR start "rule__ColumnOrAlias__ColAliasAssignment_0_2"
    // InternalSqlParser.g:17527:1: rule__ColumnOrAlias__ColAliasAssignment_0_2 : ( ruleDbObjectName ) ;
    public final void rule__ColumnOrAlias__ColAliasAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17531:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:17532:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:17532:1: ( ruleDbObjectName )
            // InternalSqlParser.g:17533:1: ruleDbObjectName
            {
             before(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__ColAliasAssignment_0_2"


    // $ANTLR start "rule__ColumnOrAlias__AllColsAssignment_1"
    // InternalSqlParser.g:17542:1: rule__ColumnOrAlias__AllColsAssignment_1 : ( RULE_STAR ) ;
    public final void rule__ColumnOrAlias__AllColsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17546:1: ( ( RULE_STAR ) )
            // InternalSqlParser.g:17547:1: ( RULE_STAR )
            {
            // InternalSqlParser.g:17547:1: ( RULE_STAR )
            // InternalSqlParser.g:17548:1: RULE_STAR
            {
             before(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 
            match(input,RULE_STAR,FOLLOW_2); 
             after(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AllColsAssignment_1"


    // $ANTLR start "rule__ColumnOrAlias__DbAllColsAssignment_2"
    // InternalSqlParser.g:17557:1: rule__ColumnOrAlias__DbAllColsAssignment_2 : ( ruleDbObjectNameAll ) ;
    public final void rule__ColumnOrAlias__DbAllColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17561:1: ( ( ruleDbObjectNameAll ) )
            // InternalSqlParser.g:17562:1: ( ruleDbObjectNameAll )
            {
            // InternalSqlParser.g:17562:1: ( ruleDbObjectNameAll )
            // InternalSqlParser.g:17563:1: ruleDbObjectNameAll
            {
             before(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectNameAll();

            state._fsp--;

             after(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__DbAllColsAssignment_2"


    // $ANTLR start "rule__ColumnFull__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:17572:1: rule__ColumnFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17576:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:17577:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:17577:1: ( ruleDbObjectName )
            // InternalSqlParser.g:17578:1: ruleDbObjectName
            {
             before(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Tables__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:17587:1: rule__Tables__EntriesAssignment_1_1_1 : ( ruleFromTable ) ;
    public final void rule__Tables__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17591:1: ( ( ruleFromTable ) )
            // InternalSqlParser.g:17592:1: ( ruleFromTable )
            {
            // InternalSqlParser.g:17592:1: ( ruleFromTable )
            // InternalSqlParser.g:17593:1: ruleFromTable
            {
             before(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;

             after(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__FromTable__TableAssignment_0"
    // InternalSqlParser.g:17602:1: rule__FromTable__TableAssignment_0 : ( ruleTableOrAlias ) ;
    public final void rule__FromTable__TableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17606:1: ( ( ruleTableOrAlias ) )
            // InternalSqlParser.g:17607:1: ( ruleTableOrAlias )
            {
            // InternalSqlParser.g:17607:1: ( ruleTableOrAlias )
            // InternalSqlParser.g:17608:1: ruleTableOrAlias
            {
             before(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;

             after(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__TableAssignment_0"


    // $ANTLR start "rule__FromTable__FjoinAssignment_1"
    // InternalSqlParser.g:17617:1: rule__FromTable__FjoinAssignment_1 : ( ruleFromTableJoin ) ;
    public final void rule__FromTable__FjoinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17621:1: ( ( ruleFromTableJoin ) )
            // InternalSqlParser.g:17622:1: ( ruleFromTableJoin )
            {
            // InternalSqlParser.g:17622:1: ( ruleFromTableJoin )
            // InternalSqlParser.g:17623:1: ruleFromTableJoin
            {
             before(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFromTableJoin();

            state._fsp--;

             after(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__FjoinAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinAssignment_0"
    // InternalSqlParser.g:17632:1: rule__FromTableJoin__JoinAssignment_0 : ( ruleJoinType ) ;
    public final void rule__FromTableJoin__JoinAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17636:1: ( ( ruleJoinType ) )
            // InternalSqlParser.g:17637:1: ( ruleJoinType )
            {
            // InternalSqlParser.g:17637:1: ( ruleJoinType )
            // InternalSqlParser.g:17638:1: ruleJoinType
            {
             before(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleJoinType();

            state._fsp--;

             after(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinAssignment_0"


    // $ANTLR start "rule__FromTableJoin__OnTableAssignment_1"
    // InternalSqlParser.g:17647:1: rule__FromTableJoin__OnTableAssignment_1 : ( ruleTableOrAlias ) ;
    public final void rule__FromTableJoin__OnTableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17651:1: ( ( ruleTableOrAlias ) )
            // InternalSqlParser.g:17652:1: ( ruleTableOrAlias )
            {
            // InternalSqlParser.g:17652:1: ( ruleTableOrAlias )
            // InternalSqlParser.g:17653:1: ruleTableOrAlias
            {
             before(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;

             after(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__OnTableAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinExprAssignment_2_0_1"
    // InternalSqlParser.g:17662:1: rule__FromTableJoin__JoinExprAssignment_2_0_1 : ( ruleFullExpression ) ;
    public final void rule__FromTableJoin__JoinExprAssignment_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17666:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:17667:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:17667:1: ( ruleFullExpression )
            // InternalSqlParser.g:17668:1: ruleFullExpression
            {
             before(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinExprAssignment_2_0_1"


    // $ANTLR start "rule__FromTableJoin__JoinCondAssignment_2_1"
    // InternalSqlParser.g:17677:1: rule__FromTableJoin__JoinCondAssignment_2_1 : ( ruleJoinCondition ) ;
    public final void rule__FromTableJoin__JoinCondAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17681:1: ( ( ruleJoinCondition ) )
            // InternalSqlParser.g:17682:1: ( ruleJoinCondition )
            {
            // InternalSqlParser.g:17682:1: ( ruleJoinCondition )
            // InternalSqlParser.g:17683:1: ruleJoinCondition
            {
             before(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleJoinCondition();

            state._fsp--;

             after(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinCondAssignment_2_1"


    // $ANTLR start "rule__JoinCondition__UseColsAssignment_2"
    // InternalSqlParser.g:17692:1: rule__JoinCondition__UseColsAssignment_2 : ( ruleUsingCols ) ;
    public final void rule__JoinCondition__UseColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17696:1: ( ( ruleUsingCols ) )
            // InternalSqlParser.g:17697:1: ( ruleUsingCols )
            {
            // InternalSqlParser.g:17697:1: ( ruleUsingCols )
            // InternalSqlParser.g:17698:1: ruleUsingCols
            {
             before(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleUsingCols();

            state._fsp--;

             after(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__UseColsAssignment_2"


    // $ANTLR start "rule__UsingCols__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:17707:1: rule__UsingCols__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17711:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:17712:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:17712:1: ( ruleDbObjectName )
            // InternalSqlParser.g:17713:1: ruleDbObjectName
            {
             before(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableOrAlias__TfullAssignment_0_0"
    // InternalSqlParser.g:17722:1: rule__TableOrAlias__TfullAssignment_0_0 : ( ruleTableFull ) ;
    public final void rule__TableOrAlias__TfullAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17726:1: ( ( ruleTableFull ) )
            // InternalSqlParser.g:17727:1: ( ruleTableFull )
            {
            // InternalSqlParser.g:17727:1: ( ruleTableFull )
            // InternalSqlParser.g:17728:1: ruleTableFull
            {
             before(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleTableFull();

            state._fsp--;

             after(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TfullAssignment_0_0"


    // $ANTLR start "rule__TableOrAlias__SqAssignment_0_1"
    // InternalSqlParser.g:17737:1: rule__TableOrAlias__SqAssignment_0_1 : ( ruleSubQueryOperand ) ;
    public final void rule__TableOrAlias__SqAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17741:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:17742:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:17742:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:17743:1: ruleSubQueryOperand
            {
             before(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;

             after(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__SqAssignment_0_1"


    // $ANTLR start "rule__TableOrAlias__ValuesAssignment_0_2"
    // InternalSqlParser.g:17752:1: rule__TableOrAlias__ValuesAssignment_0_2 : ( ruleFromValues ) ;
    public final void rule__TableOrAlias__ValuesAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17756:1: ( ( ruleFromValues ) )
            // InternalSqlParser.g:17757:1: ( ruleFromValues )
            {
            // InternalSqlParser.g:17757:1: ( ruleFromValues )
            // InternalSqlParser.g:17758:1: ruleFromValues
            {
             before(grammarAccess.getTableOrAliasAccess().getValuesFromValuesParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleFromValues();

            state._fsp--;

             after(grammarAccess.getTableOrAliasAccess().getValuesFromValuesParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__ValuesAssignment_0_2"


    // $ANTLR start "rule__TableOrAlias__PivotAssignment_1_0"
    // InternalSqlParser.g:17767:1: rule__TableOrAlias__PivotAssignment_1_0 : ( rulePivotTable ) ;
    public final void rule__TableOrAlias__PivotAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17771:1: ( ( rulePivotTable ) )
            // InternalSqlParser.g:17772:1: ( rulePivotTable )
            {
            // InternalSqlParser.g:17772:1: ( rulePivotTable )
            // InternalSqlParser.g:17773:1: rulePivotTable
            {
             before(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            rulePivotTable();

            state._fsp--;

             after(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__PivotAssignment_1_0"


    // $ANTLR start "rule__TableOrAlias__UnpivotAssignment_1_1"
    // InternalSqlParser.g:17782:1: rule__TableOrAlias__UnpivotAssignment_1_1 : ( ruleUnpivotTable ) ;
    public final void rule__TableOrAlias__UnpivotAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17786:1: ( ( ruleUnpivotTable ) )
            // InternalSqlParser.g:17787:1: ( ruleUnpivotTable )
            {
            // InternalSqlParser.g:17787:1: ( ruleUnpivotTable )
            // InternalSqlParser.g:17788:1: ruleUnpivotTable
            {
             before(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleUnpivotTable();

            state._fsp--;

             after(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__UnpivotAssignment_1_1"


    // $ANTLR start "rule__TableOrAlias__AliasAssignment_2"
    // InternalSqlParser.g:17797:1: rule__TableOrAlias__AliasAssignment_2 : ( ( AS ) ) ;
    public final void rule__TableOrAlias__AliasAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17801:1: ( ( ( AS ) ) )
            // InternalSqlParser.g:17802:1: ( ( AS ) )
            {
            // InternalSqlParser.g:17802:1: ( ( AS ) )
            // InternalSqlParser.g:17803:1: ( AS )
            {
             before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            // InternalSqlParser.g:17804:1: ( AS )
            // InternalSqlParser.g:17805:1: AS
            {
             before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            match(input,AS,FOLLOW_2); 
             after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 

            }

             after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__AliasAssignment_2"


    // $ANTLR start "rule__TableOrAlias__TblAliasAssignment_3"
    // InternalSqlParser.g:17820:1: rule__TableOrAlias__TblAliasAssignment_3 : ( ruleDbObjectName ) ;
    public final void rule__TableOrAlias__TblAliasAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17824:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:17825:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:17825:1: ( ruleDbObjectName )
            // InternalSqlParser.g:17826:1: ruleDbObjectName
            {
             before(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TblAliasAssignment_3"


    // $ANTLR start "rule__FromValues__ValuesAssignment_0"
    // InternalSqlParser.g:17835:1: rule__FromValues__ValuesAssignment_0 : ( ruleValues ) ;
    public final void rule__FromValues__ValuesAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17839:1: ( ( ruleValues ) )
            // InternalSqlParser.g:17840:1: ( ruleValues )
            {
            // InternalSqlParser.g:17840:1: ( ruleValues )
            // InternalSqlParser.g:17841:1: ruleValues
            {
             before(grammarAccess.getFromValuesAccess().getValuesValuesParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleValues();

            state._fsp--;

             after(grammarAccess.getFromValuesAccess().getValuesValuesParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__ValuesAssignment_0"


    // $ANTLR start "rule__FromValues__CAssignment_1"
    // InternalSqlParser.g:17850:1: rule__FromValues__CAssignment_1 : ( ruleFromValuesColumns ) ;
    public final void rule__FromValues__CAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17854:1: ( ( ruleFromValuesColumns ) )
            // InternalSqlParser.g:17855:1: ( ruleFromValuesColumns )
            {
            // InternalSqlParser.g:17855:1: ( ruleFromValuesColumns )
            // InternalSqlParser.g:17856:1: ruleFromValuesColumns
            {
             before(grammarAccess.getFromValuesAccess().getCFromValuesColumnsParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFromValuesColumns();

            state._fsp--;

             after(grammarAccess.getFromValuesAccess().getCFromValuesColumnsParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__CAssignment_1"


    // $ANTLR start "rule__FromValuesColumns__FvColsAssignment_2"
    // InternalSqlParser.g:17865:1: rule__FromValuesColumns__FvColsAssignment_2 : ( ruleFromValuesColumnNames ) ;
    public final void rule__FromValuesColumns__FvColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17869:1: ( ( ruleFromValuesColumnNames ) )
            // InternalSqlParser.g:17870:1: ( ruleFromValuesColumnNames )
            {
            // InternalSqlParser.g:17870:1: ( ruleFromValuesColumnNames )
            // InternalSqlParser.g:17871:1: ruleFromValuesColumnNames
            {
             before(grammarAccess.getFromValuesColumnsAccess().getFvColsFromValuesColumnNamesParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleFromValuesColumnNames();

            state._fsp--;

             after(grammarAccess.getFromValuesColumnsAccess().getFvColsFromValuesColumnNamesParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__FvColsAssignment_2"


    // $ANTLR start "rule__FromValuesColumnNames__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:17880:1: rule__FromValuesColumnNames__EntriesAssignment_1_1_1 : ( ruleColumnName ) ;
    public final void rule__FromValuesColumnNames__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17884:1: ( ( ruleColumnName ) )
            // InternalSqlParser.g:17885:1: ( ruleColumnName )
            {
            // InternalSqlParser.g:17885:1: ( ruleColumnName )
            // InternalSqlParser.g:17886:1: ruleColumnName
            {
             before(grammarAccess.getFromValuesColumnNamesAccess().getEntriesColumnNameParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;

             after(grammarAccess.getFromValuesColumnNamesAccess().getEntriesColumnNameParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnName__ColNameAssignment"
    // InternalSqlParser.g:17895:1: rule__ColumnName__ColNameAssignment : ( RULE_STRING ) ;
    public final void rule__ColumnName__ColNameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17899:1: ( ( RULE_STRING ) )
            // InternalSqlParser.g:17900:1: ( RULE_STRING )
            {
            // InternalSqlParser.g:17900:1: ( RULE_STRING )
            // InternalSqlParser.g:17901:1: RULE_STRING
            {
             before(grammarAccess.getColumnNameAccess().getColNameSTRINGTerminalRuleCall_0()); 
            match(input,RULE_STRING,FOLLOW_2); 
             after(grammarAccess.getColumnNameAccess().getColNameSTRINGTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnName__ColNameAssignment"


    // $ANTLR start "rule__Values__RowsAssignment_2"
    // InternalSqlParser.g:17910:1: rule__Values__RowsAssignment_2 : ( ruleRows ) ;
    public final void rule__Values__RowsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17914:1: ( ( ruleRows ) )
            // InternalSqlParser.g:17915:1: ( ruleRows )
            {
            // InternalSqlParser.g:17915:1: ( ruleRows )
            // InternalSqlParser.g:17916:1: ruleRows
            {
             before(grammarAccess.getValuesAccess().getRowsRowsParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleRows();

            state._fsp--;

             after(grammarAccess.getValuesAccess().getRowsRowsParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__RowsAssignment_2"


    // $ANTLR start "rule__Rows__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:17925:1: rule__Rows__EntriesAssignment_1_1_1 : ( ruleRow ) ;
    public final void rule__Rows__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17929:1: ( ( ruleRow ) )
            // InternalSqlParser.g:17930:1: ( ruleRow )
            {
            // InternalSqlParser.g:17930:1: ( ruleRow )
            // InternalSqlParser.g:17931:1: ruleRow
            {
             before(grammarAccess.getRowsAccess().getEntriesRowParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleRow();

            state._fsp--;

             after(grammarAccess.getRowsAccess().getEntriesRowParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Row__RowValuesAssignment_1"
    // InternalSqlParser.g:17940:1: rule__Row__RowValuesAssignment_1 : ( ruleRowValues ) ;
    public final void rule__Row__RowValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17944:1: ( ( ruleRowValues ) )
            // InternalSqlParser.g:17945:1: ( ruleRowValues )
            {
            // InternalSqlParser.g:17945:1: ( ruleRowValues )
            // InternalSqlParser.g:17946:1: ruleRowValues
            {
             before(grammarAccess.getRowAccess().getRowValuesRowValuesParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleRowValues();

            state._fsp--;

             after(grammarAccess.getRowAccess().getRowValuesRowValuesParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__RowValuesAssignment_1"


    // $ANTLR start "rule__RowValues__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:17955:1: rule__RowValues__EntriesAssignment_1_1_1 : ( ruleRowValue ) ;
    public final void rule__RowValues__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17959:1: ( ( ruleRowValue ) )
            // InternalSqlParser.g:17960:1: ( ruleRowValue )
            {
            // InternalSqlParser.g:17960:1: ( ruleRowValue )
            // InternalSqlParser.g:17961:1: ruleRowValue
            {
             before(grammarAccess.getRowValuesAccess().getEntriesRowValueParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleRowValue();

            state._fsp--;

             after(grammarAccess.getRowValuesAccess().getEntriesRowValueParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__RowValue__NullAssignment_1"
    // InternalSqlParser.g:17970:1: rule__RowValue__NullAssignment_1 : ( ( NULL ) ) ;
    public final void rule__RowValue__NullAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17974:1: ( ( ( NULL ) ) )
            // InternalSqlParser.g:17975:1: ( ( NULL ) )
            {
            // InternalSqlParser.g:17975:1: ( ( NULL ) )
            // InternalSqlParser.g:17976:1: ( NULL )
            {
             before(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            // InternalSqlParser.g:17977:1: ( NULL )
            // InternalSqlParser.g:17978:1: NULL
            {
             before(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            match(input,NULL,FOLLOW_2); 
             after(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 

            }

             after(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValue__NullAssignment_1"


    // $ANTLR start "rule__PivotTable__PfunAssignment_3"
    // InternalSqlParser.g:17993:1: rule__PivotTable__PfunAssignment_3 : ( rulePivotFunctions ) ;
    public final void rule__PivotTable__PfunAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17997:1: ( ( rulePivotFunctions ) )
            // InternalSqlParser.g:17998:1: ( rulePivotFunctions )
            {
            // InternalSqlParser.g:17998:1: ( rulePivotFunctions )
            // InternalSqlParser.g:17999:1: rulePivotFunctions
            {
             before(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            rulePivotFunctions();

            state._fsp--;

             after(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PfunAssignment_3"


    // $ANTLR start "rule__PivotTable__PforAssignment_4"
    // InternalSqlParser.g:18008:1: rule__PivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__PivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18012:1: ( ( rulePivotForClause ) )
            // InternalSqlParser.g:18013:1: ( rulePivotForClause )
            {
            // InternalSqlParser.g:18013:1: ( rulePivotForClause )
            // InternalSqlParser.g:18014:1: rulePivotForClause
            {
             before(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;

             after(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PforAssignment_4"


    // $ANTLR start "rule__PivotTable__PinAssignment_5"
    // InternalSqlParser.g:18023:1: rule__PivotTable__PinAssignment_5 : ( rulePivotInClause ) ;
    public final void rule__PivotTable__PinAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18027:1: ( ( rulePivotInClause ) )
            // InternalSqlParser.g:18028:1: ( rulePivotInClause )
            {
            // InternalSqlParser.g:18028:1: ( rulePivotInClause )
            // InternalSqlParser.g:18029:1: rulePivotInClause
            {
             before(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            rulePivotInClause();

            state._fsp--;

             after(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PinAssignment_5"


    // $ANTLR start "rule__PivotFunctions__AbcAssignment"
    // InternalSqlParser.g:18038:1: rule__PivotFunctions__AbcAssignment : ( RULE_ID ) ;
    public final void rule__PivotFunctions__AbcAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18042:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:18043:1: ( RULE_ID )
            {
            // InternalSqlParser.g:18043:1: ( RULE_ID )
            // InternalSqlParser.g:18044:1: RULE_ID
            {
             before(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotFunctions__AbcAssignment"


    // $ANTLR start "rule__PivotInClause__SqAssignment_2_0"
    // InternalSqlParser.g:18053:1: rule__PivotInClause__SqAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__PivotInClause__SqAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18057:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:18058:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:18058:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:18059:1: ruleSubQueryOperand
            {
             before(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;

             after(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__SqAssignment_2_0"


    // $ANTLR start "rule__PivotInClause__ArgsAssignment_2_1"
    // InternalSqlParser.g:18068:1: rule__PivotInClause__ArgsAssignment_2_1 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__PivotInClause__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18072:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSqlParser.g:18073:1: ( ruleUnpivotInClauseArgs )
            {
            // InternalSqlParser.g:18073:1: ( ruleUnpivotInClauseArgs )
            // InternalSqlParser.g:18074:1: ruleUnpivotInClauseArgs
            {
             before(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;

             after(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__ArgsAssignment_2_1"


    // $ANTLR start "rule__PivotInClause__PinanyAssignment_2_2"
    // InternalSqlParser.g:18083:1: rule__PivotInClause__PinanyAssignment_2_2 : ( rulePivotInClauseAny ) ;
    public final void rule__PivotInClause__PinanyAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18087:1: ( ( rulePivotInClauseAny ) )
            // InternalSqlParser.g:18088:1: ( rulePivotInClauseAny )
            {
            // InternalSqlParser.g:18088:1: ( rulePivotInClauseAny )
            // InternalSqlParser.g:18089:1: rulePivotInClauseAny
            {
             before(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            rulePivotInClauseAny();

            state._fsp--;

             after(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__PinanyAssignment_2_2"


    // $ANTLR start "rule__UnpivotTable__PcolsAssignment_3"
    // InternalSqlParser.g:18098:1: rule__UnpivotTable__PcolsAssignment_3 : ( rulePivotColumns ) ;
    public final void rule__UnpivotTable__PcolsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18102:1: ( ( rulePivotColumns ) )
            // InternalSqlParser.g:18103:1: ( rulePivotColumns )
            {
            // InternalSqlParser.g:18103:1: ( rulePivotColumns )
            // InternalSqlParser.g:18104:1: rulePivotColumns
            {
             before(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;

             after(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PcolsAssignment_3"


    // $ANTLR start "rule__UnpivotTable__PforAssignment_4"
    // InternalSqlParser.g:18113:1: rule__UnpivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__UnpivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18117:1: ( ( rulePivotForClause ) )
            // InternalSqlParser.g:18118:1: ( rulePivotForClause )
            {
            // InternalSqlParser.g:18118:1: ( rulePivotForClause )
            // InternalSqlParser.g:18119:1: rulePivotForClause
            {
             before(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;

             after(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PforAssignment_4"


    // $ANTLR start "rule__UnpivotTable__InopAssignment_5"
    // InternalSqlParser.g:18128:1: rule__UnpivotTable__InopAssignment_5 : ( ruleUnpivotInClause ) ;
    public final void rule__UnpivotTable__InopAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18132:1: ( ( ruleUnpivotInClause ) )
            // InternalSqlParser.g:18133:1: ( ruleUnpivotInClause )
            {
            // InternalSqlParser.g:18133:1: ( ruleUnpivotInClause )
            // InternalSqlParser.g:18134:1: ruleUnpivotInClause
            {
             before(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            ruleUnpivotInClause();

            state._fsp--;

             after(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__InopAssignment_5"


    // $ANTLR start "rule__UnpivotInClause__OpAssignment_1"
    // InternalSqlParser.g:18143:1: rule__UnpivotInClause__OpAssignment_1 : ( ( IN ) ) ;
    public final void rule__UnpivotInClause__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18147:1: ( ( ( IN ) ) )
            // InternalSqlParser.g:18148:1: ( ( IN ) )
            {
            // InternalSqlParser.g:18148:1: ( ( IN ) )
            // InternalSqlParser.g:18149:1: ( IN )
            {
             before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            // InternalSqlParser.g:18150:1: ( IN )
            // InternalSqlParser.g:18151:1: IN
            {
             before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            match(input,IN,FOLLOW_2); 
             after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 

            }

             after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__OpAssignment_1"


    // $ANTLR start "rule__UnpivotInClause__ArgsAssignment_3"
    // InternalSqlParser.g:18166:1: rule__UnpivotInClause__ArgsAssignment_3 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__UnpivotInClause__ArgsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18170:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSqlParser.g:18171:1: ( ruleUnpivotInClauseArgs )
            {
            // InternalSqlParser.g:18171:1: ( ruleUnpivotInClauseArgs )
            // InternalSqlParser.g:18172:1: ruleUnpivotInClauseArgs
            {
             before(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__ArgsAssignment_3"


    // $ANTLR start "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:18181:1: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18185:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSqlParser.g:18186:1: ( ruleUnpivotInClauseArg )
            {
            // InternalSqlParser.g:18186:1: ( ruleUnpivotInClauseArg )
            // InternalSqlParser.g:18187:1: ruleUnpivotInClauseArg
            {
             before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__UnpivotInClauseArg__PcolsAssignment_0"
    // InternalSqlParser.g:18196:1: rule__UnpivotInClauseArg__PcolsAssignment_0 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__PcolsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18200:1: ( ( rulePivotColumns ) )
            // InternalSqlParser.g:18201:1: ( rulePivotColumns )
            {
            // InternalSqlParser.g:18201:1: ( rulePivotColumns )
            // InternalSqlParser.g:18202:1: rulePivotColumns
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__PcolsAssignment_0"


    // $ANTLR start "rule__UnpivotInClauseArg__CfulsAssignment_1_1"
    // InternalSqlParser.g:18211:1: rule__UnpivotInClauseArg__CfulsAssignment_1_1 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__CfulsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18215:1: ( ( rulePivotColumns ) )
            // InternalSqlParser.g:18216:1: ( rulePivotColumns )
            {
            // InternalSqlParser.g:18216:1: ( rulePivotColumns )
            // InternalSqlParser.g:18217:1: rulePivotColumns
            {
             before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;

             after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__CfulsAssignment_1_1"


    // $ANTLR start "rule__PivotCols__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:18226:1: rule__PivotCols__EntriesAssignment_1_1_1 : ( rulePivotCol ) ;
    public final void rule__PivotCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18230:1: ( ( rulePivotCol ) )
            // InternalSqlParser.g:18231:1: ( rulePivotCol )
            {
            // InternalSqlParser.g:18231:1: ( rulePivotCol )
            // InternalSqlParser.g:18232:1: rulePivotCol
            {
             before(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;

             after(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__PivotCol__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:18241:1: rule__PivotCol__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18245:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:18246:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:18246:1: ( ruleDbObjectName )
            // InternalSqlParser.g:18247:1: ruleDbObjectName
            {
             before(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableFull__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:18256:1: rule__TableFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__TableFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18260:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:18261:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:18261:1: ( ruleDbObjectName )
            // InternalSqlParser.g:18262:1: ruleDbObjectName
            {
             before(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__DbObjectNameAll__DbnameAssignment_0"
    // InternalSqlParser.g:18271:1: rule__DbObjectNameAll__DbnameAssignment_0 : ( ruleDBID ) ;
    public final void rule__DbObjectNameAll__DbnameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18275:1: ( ( ruleDBID ) )
            // InternalSqlParser.g:18276:1: ( ruleDBID )
            {
            // InternalSqlParser.g:18276:1: ( ruleDBID )
            // InternalSqlParser.g:18277:1: ruleDBID
            {
             before(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;

             after(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__DbnameAssignment_0"


    // $ANTLR start "rule__DbObjectName__DbnameAssignment"
    // InternalSqlParser.g:18286:1: rule__DbObjectName__DbnameAssignment : ( ruleDBID ) ;
    public final void rule__DbObjectName__DbnameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18290:1: ( ( ruleDBID ) )
            // InternalSqlParser.g:18291:1: ( ruleDBID )
            {
            // InternalSqlParser.g:18291:1: ( ruleDBID )
            // InternalSqlParser.g:18292:1: ruleDBID
            {
             before(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;

             after(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectName__DbnameAssignment"


    // $ANTLR start "rule__OrderByColumns__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:18301:1: rule__OrderByColumns__EntriesAssignment_1_1_1 : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18305:1: ( ( ruleOrderByColumnFull ) )
            // InternalSqlParser.g:18306:1: ( ruleOrderByColumnFull )
            {
            // InternalSqlParser.g:18306:1: ( ruleOrderByColumnFull )
            // InternalSqlParser.g:18307:1: ruleOrderByColumnFull
            {
             before(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;

             after(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderAssignment_0_0"
    // InternalSqlParser.g:18316:1: rule__OrderByColumnFull__ColOrderAssignment_0_0 : ( ruleColumnFull ) ;
    public final void rule__OrderByColumnFull__ColOrderAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18320:1: ( ( ruleColumnFull ) )
            // InternalSqlParser.g:18321:1: ( ruleColumnFull )
            {
            // InternalSqlParser.g:18321:1: ( ruleColumnFull )
            // InternalSqlParser.g:18322:1: ruleColumnFull
            {
             before(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;

             after(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderAssignment_0_0"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"
    // InternalSqlParser.g:18331:1: rule__OrderByColumnFull__ColOrderIntAssignment_0_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OrderByColumnFull__ColOrderIntAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18335:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:18336:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:18336:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:18337:1: RULE_UNSIGNED
            {
             before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 
            match(input,RULE_UNSIGNED,FOLLOW_2); 
             after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAssignment_1"
    // InternalSqlParser.g:18346:1: rule__OrderByColumnFull__DirectionAssignment_1 : ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) ;
    public final void rule__OrderByColumnFull__DirectionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18350:1: ( ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) )
            // InternalSqlParser.g:18351:1: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:18351:1: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            // InternalSqlParser.g:18352:1: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            {
             before(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 
            // InternalSqlParser.g:18353:1: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            // InternalSqlParser.g:18353:2: rule__OrderByColumnFull__DirectionAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__DirectionAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAssignment_1"


    // $ANTLR start "rule__GroupByColumns__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:18362:1: rule__GroupByColumns__EntriesAssignment_1_1_1 : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18366:1: ( ( ruleGroupByColumnFull ) )
            // InternalSqlParser.g:18367:1: ( ruleGroupByColumnFull )
            {
            // InternalSqlParser.g:18367:1: ( ruleGroupByColumnFull )
            // InternalSqlParser.g:18368:1: ruleGroupByColumnFull
            {
             before(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;

             after(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__GroupByColumnFull__ColGrByAssignment_0"
    // InternalSqlParser.g:18377:1: rule__GroupByColumnFull__ColGrByAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__GroupByColumnFull__ColGrByAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18381:1: ( ( ruleColumnFull ) )
            // InternalSqlParser.g:18382:1: ( ruleColumnFull )
            {
            // InternalSqlParser.g:18382:1: ( ruleColumnFull )
            // InternalSqlParser.g:18383:1: ruleColumnFull
            {
             before(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;

             after(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__ColGrByAssignment_0"


    // $ANTLR start "rule__GroupByColumnFull__GbFunctionAssignment_1"
    // InternalSqlParser.g:18392:1: rule__GroupByColumnFull__GbFunctionAssignment_1 : ( ruleOperandFunction ) ;
    public final void rule__GroupByColumnFull__GbFunctionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18396:1: ( ( ruleOperandFunction ) )
            // InternalSqlParser.g:18397:1: ( ruleOperandFunction )
            {
            // InternalSqlParser.g:18397:1: ( ruleOperandFunction )
            // InternalSqlParser.g:18398:1: ruleOperandFunction
            {
             before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;

             after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GbFunctionAssignment_1"


    // $ANTLR start "rule__GroupByColumnFull__GrByIntAssignment_2"
    // InternalSqlParser.g:18407:1: rule__GroupByColumnFull__GrByIntAssignment_2 : ( RULE_UNSIGNED ) ;
    public final void rule__GroupByColumnFull__GrByIntAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18411:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:18412:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:18412:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:18413:1: RULE_UNSIGNED
            {
             before(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 
            match(input,RULE_UNSIGNED,FOLLOW_2); 
             after(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GrByIntAssignment_2"


    // $ANTLR start "rule__FullExpression__EntriesAssignment_1_1"
    // InternalSqlParser.g:18422:1: rule__FullExpression__EntriesAssignment_1_1 : ( ruleExpressionFragmentSecond ) ;
    public final void rule__FullExpression__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18426:1: ( ( ruleExpressionFragmentSecond ) )
            // InternalSqlParser.g:18427:1: ( ruleExpressionFragmentSecond )
            {
            // InternalSqlParser.g:18427:1: ( ruleExpressionFragmentSecond )
            // InternalSqlParser.g:18428:1: ruleExpressionFragmentSecond
            {
             before(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpressionFragmentSecond();

            state._fsp--;

             after(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__EntriesAssignment_1_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAssignment_0_0"
    // InternalSqlParser.g:18437:1: rule__ExpressionFragmentSecond__CAssignment_0_0 : ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__CAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18441:1: ( ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) )
            // InternalSqlParser.g:18442:1: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            {
            // InternalSqlParser.g:18442:1: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            // InternalSqlParser.g:18443:1: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            {
             before(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 
            // InternalSqlParser.g:18444:1: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            // InternalSqlParser.g:18444:2: rule__ExpressionFragmentSecond__CAlternatives_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAlternatives_0_0_0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAssignment_0_0"


    // $ANTLR start "rule__ExpressionFragmentSecond__EfragAssignment_0_1"
    // InternalSqlParser.g:18453:1: rule__ExpressionFragmentSecond__EfragAssignment_0_1 : ( ruleExpressionFragment ) ;
    public final void rule__ExpressionFragmentSecond__EfragAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18457:1: ( ( ruleExpressionFragment ) )
            // InternalSqlParser.g:18458:1: ( ruleExpressionFragment )
            {
            // InternalSqlParser.g:18458:1: ( ruleExpressionFragment )
            // InternalSqlParser.g:18459:1: ruleExpressionFragment
            {
             before(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__EfragAssignment_0_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__NotPrmAssignment_1"
    // InternalSqlParser.g:18468:1: rule__ExpressionFragmentSecond__NotPrmAssignment_1 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragmentSecond__NotPrmAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18472:1: ( ( RULE_JRNPARAM ) )
            // InternalSqlParser.g:18473:1: ( RULE_JRNPARAM )
            {
            // InternalSqlParser.g:18473:1: ( RULE_JRNPARAM )
            // InternalSqlParser.g:18474:1: RULE_JRNPARAM
            {
             before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 
            match(input,RULE_JRNPARAM,FOLLOW_2); 
             after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__NotPrmAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__ExpgroupAssignment_0"
    // InternalSqlParser.g:18483:1: rule__ExpressionFragment__ExpgroupAssignment_0 : ( ruleExpressionGroup ) ;
    public final void rule__ExpressionFragment__ExpgroupAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18487:1: ( ( ruleExpressionGroup ) )
            // InternalSqlParser.g:18488:1: ( ruleExpressionGroup )
            {
            // InternalSqlParser.g:18488:1: ( ruleExpressionGroup )
            // InternalSqlParser.g:18489:1: ruleExpressionGroup
            {
             before(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleExpressionGroup();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpgroupAssignment_0"


    // $ANTLR start "rule__ExpressionFragment__ExpAssignment_1"
    // InternalSqlParser.g:18498:1: rule__ExpressionFragment__ExpAssignment_1 : ( ruleExpression ) ;
    public final void rule__ExpressionFragment__ExpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18502:1: ( ( ruleExpression ) )
            // InternalSqlParser.g:18503:1: ( ruleExpression )
            {
            // InternalSqlParser.g:18503:1: ( ruleExpression )
            // InternalSqlParser.g:18504:1: ruleExpression
            {
             before(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__XexpAssignment_2"
    // InternalSqlParser.g:18513:1: rule__ExpressionFragment__XexpAssignment_2 : ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) ;
    public final void rule__ExpressionFragment__XexpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18517:1: ( ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) )
            // InternalSqlParser.g:18518:1: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            {
            // InternalSqlParser.g:18518:1: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            // InternalSqlParser.g:18519:1: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            {
             before(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 
            // InternalSqlParser.g:18520:1: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            // InternalSqlParser.g:18520:2: rule__ExpressionFragment__XexpAlternatives_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__XexpAlternatives_2_0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAssignment_2"


    // $ANTLR start "rule__ExpressionFragment__NotPrmAssignment_3"
    // InternalSqlParser.g:18529:1: rule__ExpressionFragment__NotPrmAssignment_3 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragment__NotPrmAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18533:1: ( ( RULE_JRNPARAM ) )
            // InternalSqlParser.g:18534:1: ( RULE_JRNPARAM )
            {
            // InternalSqlParser.g:18534:1: ( RULE_JRNPARAM )
            // InternalSqlParser.g:18535:1: RULE_JRNPARAM
            {
             before(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 
            match(input,RULE_JRNPARAM,FOLLOW_2); 
             after(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__NotPrmAssignment_3"


    // $ANTLR start "rule__ExpressionFragment__InAssignment_4"
    // InternalSqlParser.g:18544:1: rule__ExpressionFragment__InAssignment_4 : ( ruleInOperator ) ;
    public final void rule__ExpressionFragment__InAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18548:1: ( ( ruleInOperator ) )
            // InternalSqlParser.g:18549:1: ( ruleInOperator )
            {
            // InternalSqlParser.g:18549:1: ( ruleInOperator )
            // InternalSqlParser.g:18550:1: ruleInOperator
            {
             before(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__InAssignment_4"


    // $ANTLR start "rule__ExpressionFragment__ExistsAssignment_5"
    // InternalSqlParser.g:18559:1: rule__ExpressionFragment__ExistsAssignment_5 : ( ruleExistsOperator ) ;
    public final void rule__ExpressionFragment__ExistsAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18563:1: ( ( ruleExistsOperator ) )
            // InternalSqlParser.g:18564:1: ( ruleExistsOperator )
            {
            // InternalSqlParser.g:18564:1: ( ruleExistsOperator )
            // InternalSqlParser.g:18565:1: ruleExistsOperator
            {
             before(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;

             after(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExistsAssignment_5"


    // $ANTLR start "rule__ExpressionGroup__IsnotAssignment_1"
    // InternalSqlParser.g:18574:1: rule__ExpressionGroup__IsnotAssignment_1 : ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) ;
    public final void rule__ExpressionGroup__IsnotAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18578:1: ( ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) )
            // InternalSqlParser.g:18579:1: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:18579:1: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            // InternalSqlParser.g:18580:1: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            {
             before(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 
            // InternalSqlParser.g:18581:1: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            // InternalSqlParser.g:18581:2: rule__ExpressionGroup__IsnotAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__IsnotAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAssignment_1"


    // $ANTLR start "rule__ExpressionGroup__ExprAssignment_3"
    // InternalSqlParser.g:18590:1: rule__ExpressionGroup__ExprAssignment_3 : ( ruleFullExpression ) ;
    public final void rule__ExpressionGroup__ExprAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18594:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:18595:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:18595:1: ( ruleFullExpression )
            // InternalSqlParser.g:18596:1: ruleFullExpression
            {
             before(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__ExprAssignment_3"


    // $ANTLR start "rule__XExpression__XfAssignment_3"
    // InternalSqlParser.g:18605:1: rule__XExpression__XfAssignment_3 : ( ruleXFunction ) ;
    public final void rule__XExpression__XfAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18609:1: ( ( ruleXFunction ) )
            // InternalSqlParser.g:18610:1: ( ruleXFunction )
            {
            // InternalSqlParser.g:18610:1: ( ruleXFunction )
            // InternalSqlParser.g:18611:1: ruleXFunction
            {
             before(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;

             after(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__XfAssignment_3"


    // $ANTLR start "rule__XExpression__ColAssignment_5"
    // InternalSqlParser.g:18620:1: rule__XExpression__ColAssignment_5 : ( ruleOperandGroup ) ;
    public final void rule__XExpression__ColAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18624:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:18625:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:18625:1: ( ruleOperandGroup )
            // InternalSqlParser.g:18626:1: ruleOperandGroup
            {
             before(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__ColAssignment_5"


    // $ANTLR start "rule__XExpression__PrmAssignment_6_1"
    // InternalSqlParser.g:18635:1: rule__XExpression__PrmAssignment_6_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression__PrmAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18639:1: ( ( ruleXExpressionParams ) )
            // InternalSqlParser.g:18640:1: ( ruleXExpressionParams )
            {
            // InternalSqlParser.g:18640:1: ( ruleXExpressionParams )
            // InternalSqlParser.g:18641:1: ruleXExpressionParams
            {
             before(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;

             after(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__PrmAssignment_6_1"


    // $ANTLR start "rule__XExpression___XfAssignment_3"
    // InternalSqlParser.g:18650:1: rule__XExpression___XfAssignment_3 : ( ruleXFunction ) ;
    public final void rule__XExpression___XfAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18654:1: ( ( ruleXFunction ) )
            // InternalSqlParser.g:18655:1: ( ruleXFunction )
            {
            // InternalSqlParser.g:18655:1: ( ruleXFunction )
            // InternalSqlParser.g:18656:1: ruleXFunction
            {
             before(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;

             after(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___XfAssignment_3"


    // $ANTLR start "rule__XExpression___ColAssignment_5"
    // InternalSqlParser.g:18665:1: rule__XExpression___ColAssignment_5 : ( ruleOperandGroup ) ;
    public final void rule__XExpression___ColAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18669:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:18670:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:18670:1: ( ruleOperandGroup )
            // InternalSqlParser.g:18671:1: ruleOperandGroup
            {
             before(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___ColAssignment_5"


    // $ANTLR start "rule__XExpression___PrmAssignment_6_1"
    // InternalSqlParser.g:18680:1: rule__XExpression___PrmAssignment_6_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression___PrmAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18684:1: ( ( ruleXExpressionParams ) )
            // InternalSqlParser.g:18685:1: ( ruleXExpressionParams )
            {
            // InternalSqlParser.g:18685:1: ( ruleXExpressionParams )
            // InternalSqlParser.g:18686:1: ruleXExpressionParams
            {
             before(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;

             after(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___PrmAssignment_6_1"


    // $ANTLR start "rule__XExpressionParams__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:18695:1: rule__XExpressionParams__EntriesAssignment_1_1_1 : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18699:1: ( ( ruleJRParameter ) )
            // InternalSqlParser.g:18700:1: ( ruleJRParameter )
            {
            // InternalSqlParser.g:18700:1: ( ruleJRParameter )
            // InternalSqlParser.g:18701:1: ruleJRParameter
            {
             before(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;

             after(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__JRParameter__JrprmAssignment"
    // InternalSqlParser.g:18710:1: rule__JRParameter__JrprmAssignment : ( RULE_ID ) ;
    public final void rule__JRParameter__JrprmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18714:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:18715:1: ( RULE_ID )
            {
            // InternalSqlParser.g:18715:1: ( RULE_ID )
            // InternalSqlParser.g:18716:1: RULE_ID
            {
             before(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JRParameter__JrprmAssignment"


    // $ANTLR start "rule__Expression__Op1Assignment_0"
    // InternalSqlParser.g:18725:1: rule__Expression__Op1Assignment_0 : ( ruleOperand ) ;
    public final void rule__Expression__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18729:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:18730:1: ( ruleOperand )
            {
            // InternalSqlParser.g:18730:1: ( ruleOperand )
            // InternalSqlParser.g:18731:1: ruleOperand
            {
             before(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Op1Assignment_0"


    // $ANTLR start "rule__Expression__IsnullAssignment_1_0"
    // InternalSqlParser.g:18740:1: rule__Expression__IsnullAssignment_1_0 : ( ( rule__Expression__IsnullAlternatives_1_0_0 ) ) ;
    public final void rule__Expression__IsnullAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18744:1: ( ( ( rule__Expression__IsnullAlternatives_1_0_0 ) ) )
            // InternalSqlParser.g:18745:1: ( ( rule__Expression__IsnullAlternatives_1_0_0 ) )
            {
            // InternalSqlParser.g:18745:1: ( ( rule__Expression__IsnullAlternatives_1_0_0 ) )
            // InternalSqlParser.g:18746:1: ( rule__Expression__IsnullAlternatives_1_0_0 )
            {
             before(grammarAccess.getExpressionAccess().getIsnullAlternatives_1_0_0()); 
            // InternalSqlParser.g:18747:1: ( rule__Expression__IsnullAlternatives_1_0_0 )
            // InternalSqlParser.g:18747:2: rule__Expression__IsnullAlternatives_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__IsnullAlternatives_1_0_0();

            state._fsp--;


            }

             after(grammarAccess.getExpressionAccess().getIsnullAlternatives_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__IsnullAssignment_1_0"


    // $ANTLR start "rule__Expression__InAssignment_1_1"
    // InternalSqlParser.g:18756:1: rule__Expression__InAssignment_1_1 : ( ruleInOperator ) ;
    public final void rule__Expression__InAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18760:1: ( ( ruleInOperator ) )
            // InternalSqlParser.g:18761:1: ( ruleInOperator )
            {
            // InternalSqlParser.g:18761:1: ( ruleInOperator )
            // InternalSqlParser.g:18762:1: ruleInOperator
            {
             before(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__InAssignment_1_1"


    // $ANTLR start "rule__Expression__ExistsAssignment_1_2"
    // InternalSqlParser.g:18771:1: rule__Expression__ExistsAssignment_1_2 : ( ruleExistsOperator ) ;
    public final void rule__Expression__ExistsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18775:1: ( ( ruleExistsOperator ) )
            // InternalSqlParser.g:18776:1: ( ruleExistsOperator )
            {
            // InternalSqlParser.g:18776:1: ( ruleExistsOperator )
            // InternalSqlParser.g:18777:1: ruleExistsOperator
            {
             before(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__ExistsAssignment_1_2"


    // $ANTLR start "rule__Expression__BetweenAssignment_1_3"
    // InternalSqlParser.g:18786:1: rule__Expression__BetweenAssignment_1_3 : ( ruleBetween ) ;
    public final void rule__Expression__BetweenAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18790:1: ( ( ruleBetween ) )
            // InternalSqlParser.g:18791:1: ( ruleBetween )
            {
            // InternalSqlParser.g:18791:1: ( ruleBetween )
            // InternalSqlParser.g:18792:1: ruleBetween
            {
             before(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBetween();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__BetweenAssignment_1_3"


    // $ANTLR start "rule__Expression__LikeAssignment_1_4"
    // InternalSqlParser.g:18801:1: rule__Expression__LikeAssignment_1_4 : ( ruleLike ) ;
    public final void rule__Expression__LikeAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18805:1: ( ( ruleLike ) )
            // InternalSqlParser.g:18806:1: ( ruleLike )
            {
            // InternalSqlParser.g:18806:1: ( ruleLike )
            // InternalSqlParser.g:18807:1: ruleLike
            {
             before(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 
            pushFollow(FOLLOW_2);
            ruleLike();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__LikeAssignment_1_4"


    // $ANTLR start "rule__Expression__CompAssignment_1_5"
    // InternalSqlParser.g:18816:1: rule__Expression__CompAssignment_1_5 : ( ruleComparison ) ;
    public final void rule__Expression__CompAssignment_1_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18820:1: ( ( ruleComparison ) )
            // InternalSqlParser.g:18821:1: ( ruleComparison )
            {
            // InternalSqlParser.g:18821:1: ( ruleComparison )
            // InternalSqlParser.g:18822:1: ruleComparison
            {
             before(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__CompAssignment_1_5"


    // $ANTLR start "rule__Comparison__OperatorAssignment_0"
    // InternalSqlParser.g:18831:1: rule__Comparison__OperatorAssignment_0 : ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) ;
    public final void rule__Comparison__OperatorAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18835:1: ( ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) )
            // InternalSqlParser.g:18836:1: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            {
            // InternalSqlParser.g:18836:1: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            // InternalSqlParser.g:18837:1: ( rule__Comparison__OperatorAlternatives_0_0 )
            {
             before(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 
            // InternalSqlParser.g:18838:1: ( rule__Comparison__OperatorAlternatives_0_0 )
            // InternalSqlParser.g:18838:2: rule__Comparison__OperatorAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAlternatives_0_0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAssignment_0"


    // $ANTLR start "rule__Comparison__SubOperatorAssignment_1"
    // InternalSqlParser.g:18847:1: rule__Comparison__SubOperatorAssignment_1 : ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) ;
    public final void rule__Comparison__SubOperatorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18851:1: ( ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) )
            // InternalSqlParser.g:18852:1: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:18852:1: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            // InternalSqlParser.g:18853:1: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            {
             before(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 
            // InternalSqlParser.g:18854:1: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            // InternalSqlParser.g:18854:2: rule__Comparison__SubOperatorAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__SubOperatorAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAssignment_1"


    // $ANTLR start "rule__Comparison__Op2Assignment_2"
    // InternalSqlParser.g:18863:1: rule__Comparison__Op2Assignment_2 : ( ruleOperand ) ;
    public final void rule__Comparison__Op2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18867:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:18868:1: ( ruleOperand )
            {
            // InternalSqlParser.g:18868:1: ( ruleOperand )
            // InternalSqlParser.g:18869:1: ruleOperand
            {
             before(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;

             after(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Op2Assignment_2"


    // $ANTLR start "rule__Like__OpLikeAssignment_0"
    // InternalSqlParser.g:18878:1: rule__Like__OpLikeAssignment_0 : ( ( rule__Like__OpLikeAlternatives_0_0 ) ) ;
    public final void rule__Like__OpLikeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18882:1: ( ( ( rule__Like__OpLikeAlternatives_0_0 ) ) )
            // InternalSqlParser.g:18883:1: ( ( rule__Like__OpLikeAlternatives_0_0 ) )
            {
            // InternalSqlParser.g:18883:1: ( ( rule__Like__OpLikeAlternatives_0_0 ) )
            // InternalSqlParser.g:18884:1: ( rule__Like__OpLikeAlternatives_0_0 )
            {
             before(grammarAccess.getLikeAccess().getOpLikeAlternatives_0_0()); 
            // InternalSqlParser.g:18885:1: ( rule__Like__OpLikeAlternatives_0_0 )
            // InternalSqlParser.g:18885:2: rule__Like__OpLikeAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Like__OpLikeAlternatives_0_0();

            state._fsp--;


            }

             after(grammarAccess.getLikeAccess().getOpLikeAlternatives_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__OpLikeAssignment_0"


    // $ANTLR start "rule__Like__Op2Assignment_1"
    // InternalSqlParser.g:18894:1: rule__Like__Op2Assignment_1 : ( ruleLikeOperand ) ;
    public final void rule__Like__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18898:1: ( ( ruleLikeOperand ) )
            // InternalSqlParser.g:18899:1: ( ruleLikeOperand )
            {
            // InternalSqlParser.g:18899:1: ( ruleLikeOperand )
            // InternalSqlParser.g:18900:1: ruleLikeOperand
            {
             before(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLikeOperand();

            state._fsp--;

             after(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Op2Assignment_1"


    // $ANTLR start "rule__LikeOperand__Op2Assignment_0"
    // InternalSqlParser.g:18909:1: rule__LikeOperand__Op2Assignment_0 : ( ruleStringOperand ) ;
    public final void rule__LikeOperand__Op2Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18913:1: ( ( ruleStringOperand ) )
            // InternalSqlParser.g:18914:1: ( ruleStringOperand )
            {
            // InternalSqlParser.g:18914:1: ( ruleStringOperand )
            // InternalSqlParser.g:18915:1: ruleStringOperand
            {
             before(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;

             after(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Op2Assignment_0"


    // $ANTLR start "rule__LikeOperand__Fop2Assignment_1"
    // InternalSqlParser.g:18924:1: rule__LikeOperand__Fop2Assignment_1 : ( ruleOperandFunction ) ;
    public final void rule__LikeOperand__Fop2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18928:1: ( ( ruleOperandFunction ) )
            // InternalSqlParser.g:18929:1: ( ruleOperandFunction )
            {
            // InternalSqlParser.g:18929:1: ( ruleOperandFunction )
            // InternalSqlParser.g:18930:1: ruleOperandFunction
            {
             before(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;

             after(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Fop2Assignment_1"


    // $ANTLR start "rule__LikeOperand__FcastAssignment_2"
    // InternalSqlParser.g:18939:1: rule__LikeOperand__FcastAssignment_2 : ( ruleOpFunctionCast ) ;
    public final void rule__LikeOperand__FcastAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18943:1: ( ( ruleOpFunctionCast ) )
            // InternalSqlParser.g:18944:1: ( ruleOpFunctionCast )
            {
            // InternalSqlParser.g:18944:1: ( ruleOpFunctionCast )
            // InternalSqlParser.g:18945:1: ruleOpFunctionCast
            {
             before(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;

             after(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FcastAssignment_2"


    // $ANTLR start "rule__LikeOperand__FparamAssignment_3"
    // InternalSqlParser.g:18954:1: rule__LikeOperand__FparamAssignment_3 : ( ruleParameterOperand ) ;
    public final void rule__LikeOperand__FparamAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18958:1: ( ( ruleParameterOperand ) )
            // InternalSqlParser.g:18959:1: ( ruleParameterOperand )
            {
            // InternalSqlParser.g:18959:1: ( ruleParameterOperand )
            // InternalSqlParser.g:18960:1: ruleParameterOperand
            {
             before(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;

             after(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FparamAssignment_3"


    // $ANTLR start "rule__Between__OpBetweenAssignment_0"
    // InternalSqlParser.g:18969:1: rule__Between__OpBetweenAssignment_0 : ( ( rule__Between__OpBetweenAlternatives_0_0 ) ) ;
    public final void rule__Between__OpBetweenAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18973:1: ( ( ( rule__Between__OpBetweenAlternatives_0_0 ) ) )
            // InternalSqlParser.g:18974:1: ( ( rule__Between__OpBetweenAlternatives_0_0 ) )
            {
            // InternalSqlParser.g:18974:1: ( ( rule__Between__OpBetweenAlternatives_0_0 ) )
            // InternalSqlParser.g:18975:1: ( rule__Between__OpBetweenAlternatives_0_0 )
            {
             before(grammarAccess.getBetweenAccess().getOpBetweenAlternatives_0_0()); 
            // InternalSqlParser.g:18976:1: ( rule__Between__OpBetweenAlternatives_0_0 )
            // InternalSqlParser.g:18976:2: rule__Between__OpBetweenAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Between__OpBetweenAlternatives_0_0();

            state._fsp--;


            }

             after(grammarAccess.getBetweenAccess().getOpBetweenAlternatives_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__OpBetweenAssignment_0"


    // $ANTLR start "rule__Between__Op2Assignment_1"
    // InternalSqlParser.g:18985:1: rule__Between__Op2Assignment_1 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18989:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:18990:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:18990:1: ( ruleOperandGroup )
            // InternalSqlParser.g:18991:1: ruleOperandGroup
            {
             before(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op2Assignment_1"


    // $ANTLR start "rule__Between__Op3Assignment_3"
    // InternalSqlParser.g:19000:1: rule__Between__Op3Assignment_3 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op3Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19004:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:19005:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:19005:1: ( ruleOperandGroup )
            // InternalSqlParser.g:19006:1: ruleOperandGroup
            {
             before(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op3Assignment_3"


    // $ANTLR start "rule__InOperator__OpAssignment_1"
    // InternalSqlParser.g:19015:1: rule__InOperator__OpAssignment_1 : ( ( rule__InOperator__OpAlternatives_1_0 ) ) ;
    public final void rule__InOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19019:1: ( ( ( rule__InOperator__OpAlternatives_1_0 ) ) )
            // InternalSqlParser.g:19020:1: ( ( rule__InOperator__OpAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:19020:1: ( ( rule__InOperator__OpAlternatives_1_0 ) )
            // InternalSqlParser.g:19021:1: ( rule__InOperator__OpAlternatives_1_0 )
            {
             before(grammarAccess.getInOperatorAccess().getOpAlternatives_1_0()); 
            // InternalSqlParser.g:19022:1: ( rule__InOperator__OpAlternatives_1_0 )
            // InternalSqlParser.g:19022:2: rule__InOperator__OpAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__OpAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getInOperatorAccess().getOpAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpAssignment_1"


    // $ANTLR start "rule__InOperator__SubqueryAssignment_2_0"
    // InternalSqlParser.g:19031:1: rule__InOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__InOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19035:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:19036:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:19036:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:19037:1: ruleSubQueryOperand
            {
             before(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;

             after(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__InOperator__OpListAssignment_2_1"
    // InternalSqlParser.g:19046:1: rule__InOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__InOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19050:1: ( ( ruleOperandListGroup ) )
            // InternalSqlParser.g:19051:1: ( ruleOperandListGroup )
            {
            // InternalSqlParser.g:19051:1: ( ruleOperandListGroup )
            // InternalSqlParser.g:19052:1: ruleOperandListGroup
            {
             before(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;

             after(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__ExistsOperator__OpAssignment_1"
    // InternalSqlParser.g:19061:1: rule__ExistsOperator__OpAssignment_1 : ( ( rule__ExistsOperator__OpAlternatives_1_0 ) ) ;
    public final void rule__ExistsOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19065:1: ( ( ( rule__ExistsOperator__OpAlternatives_1_0 ) ) )
            // InternalSqlParser.g:19066:1: ( ( rule__ExistsOperator__OpAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:19066:1: ( ( rule__ExistsOperator__OpAlternatives_1_0 ) )
            // InternalSqlParser.g:19067:1: ( rule__ExistsOperator__OpAlternatives_1_0 )
            {
             before(grammarAccess.getExistsOperatorAccess().getOpAlternatives_1_0()); 
            // InternalSqlParser.g:19068:1: ( rule__ExistsOperator__OpAlternatives_1_0 )
            // InternalSqlParser.g:19068:2: rule__ExistsOperator__OpAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__OpAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getExistsOperatorAccess().getOpAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpAssignment_1"


    // $ANTLR start "rule__ExistsOperator__SubqueryAssignment_2_0"
    // InternalSqlParser.g:19077:1: rule__ExistsOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__ExistsOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19081:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:19082:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:19082:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:19083:1: ruleSubQueryOperand
            {
             before(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;

             after(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__ExistsOperator__OpListAssignment_2_1"
    // InternalSqlParser.g:19092:1: rule__ExistsOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__ExistsOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19096:1: ( ( ruleOperandListGroup ) )
            // InternalSqlParser.g:19097:1: ( ruleOperandListGroup )
            {
            // InternalSqlParser.g:19097:1: ( ruleOperandListGroup )
            // InternalSqlParser.g:19098:1: ruleOperandListGroup
            {
             before(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;

             after(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__OperandListGroup__OpGroupAssignment_1"
    // InternalSqlParser.g:19107:1: rule__OperandListGroup__OpGroupAssignment_1 : ( ruleOperandList ) ;
    public final void rule__OperandListGroup__OpGroupAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19111:1: ( ( ruleOperandList ) )
            // InternalSqlParser.g:19112:1: ( ruleOperandList )
            {
            // InternalSqlParser.g:19112:1: ( ruleOperandList )
            // InternalSqlParser.g:19113:1: ruleOperandList
            {
             before(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandList();

            state._fsp--;

             after(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__OpGroupAssignment_1"


    // $ANTLR start "rule__OperandList__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19122:1: rule__OperandList__EntriesAssignment_1_1_1 : ( ruleScalarOperand ) ;
    public final void rule__OperandList__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19126:1: ( ( ruleScalarOperand ) )
            // InternalSqlParser.g:19127:1: ( ruleScalarOperand )
            {
            // InternalSqlParser.g:19127:1: ( ruleScalarOperand )
            // InternalSqlParser.g:19128:1: ruleScalarOperand
            {
             before(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;

             after(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Operand__Op1Assignment_0"
    // InternalSqlParser.g:19137:1: rule__Operand__Op1Assignment_0 : ( ruleOperandFragment ) ;
    public final void rule__Operand__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19141:1: ( ( ruleOperandFragment ) )
            // InternalSqlParser.g:19142:1: ( ruleOperandFragment )
            {
            // InternalSqlParser.g:19142:1: ( ruleOperandFragment )
            // InternalSqlParser.g:19143:1: ruleOperandFragment
            {
             before(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;

             after(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Op1Assignment_0"


    // $ANTLR start "rule__Operand__RightAssignment_1_1"
    // InternalSqlParser.g:19152:1: rule__Operand__RightAssignment_1_1 : ( ruleOperandFragment ) ;
    public final void rule__Operand__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19156:1: ( ( ruleOperandFragment ) )
            // InternalSqlParser.g:19157:1: ( ruleOperandFragment )
            {
            // InternalSqlParser.g:19157:1: ( ruleOperandFragment )
            // InternalSqlParser.g:19158:1: ruleOperandFragment
            {
             before(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;

             after(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__RightAssignment_1_1"


    // $ANTLR start "rule__OperandFragment__ColumnAssignment_0"
    // InternalSqlParser.g:19167:1: rule__OperandFragment__ColumnAssignment_0 : ( ruleColumnOperand ) ;
    public final void rule__OperandFragment__ColumnAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19171:1: ( ( ruleColumnOperand ) )
            // InternalSqlParser.g:19172:1: ( ruleColumnOperand )
            {
            // InternalSqlParser.g:19172:1: ( ruleColumnOperand )
            // InternalSqlParser.g:19173:1: ruleColumnOperand
            {
             before(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnOperand();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__ColumnAssignment_0"


    // $ANTLR start "rule__OperandFragment__XopAssignment_1"
    // InternalSqlParser.g:19182:1: rule__OperandFragment__XopAssignment_1 : ( ruleXOperandFragment ) ;
    public final void rule__OperandFragment__XopAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19186:1: ( ( ruleXOperandFragment ) )
            // InternalSqlParser.g:19187:1: ( ruleXOperandFragment )
            {
            // InternalSqlParser.g:19187:1: ( ruleXOperandFragment )
            // InternalSqlParser.g:19188:1: ruleXOperandFragment
            {
             before(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleXOperandFragment();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__XopAssignment_1"


    // $ANTLR start "rule__OperandFragment__SubqAssignment_2"
    // InternalSqlParser.g:19197:1: rule__OperandFragment__SubqAssignment_2 : ( ruleSubQueryOperand ) ;
    public final void rule__OperandFragment__SubqAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19201:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:19202:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:19202:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:19203:1: ruleSubQueryOperand
            {
             before(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SubqAssignment_2"


    // $ANTLR start "rule__OperandFragment__FcastAssignment_3"
    // InternalSqlParser.g:19212:1: rule__OperandFragment__FcastAssignment_3 : ( ruleOpFunctionCast ) ;
    public final void rule__OperandFragment__FcastAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19216:1: ( ( ruleOpFunctionCast ) )
            // InternalSqlParser.g:19217:1: ( ruleOpFunctionCast )
            {
            // InternalSqlParser.g:19217:1: ( ruleOpFunctionCast )
            // InternalSqlParser.g:19218:1: ruleOpFunctionCast
            {
             before(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FcastAssignment_3"


    // $ANTLR start "rule__OperandFragment__FextAssignment_4"
    // InternalSqlParser.g:19227:1: rule__OperandFragment__FextAssignment_4 : ( ruleFunctionExtract ) ;
    public final void rule__OperandFragment__FextAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19231:1: ( ( ruleFunctionExtract ) )
            // InternalSqlParser.g:19232:1: ( ruleFunctionExtract )
            {
            // InternalSqlParser.g:19232:1: ( ruleFunctionExtract )
            // InternalSqlParser.g:19233:1: ruleFunctionExtract
            {
             before(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleFunctionExtract();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FextAssignment_4"


    // $ANTLR start "rule__OperandFragment__FuncAssignment_5"
    // InternalSqlParser.g:19242:1: rule__OperandFragment__FuncAssignment_5 : ( ruleOperandFunction ) ;
    public final void rule__OperandFragment__FuncAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19246:1: ( ( ruleOperandFunction ) )
            // InternalSqlParser.g:19247:1: ( ruleOperandFunction )
            {
            // InternalSqlParser.g:19247:1: ( ruleOperandFunction )
            // InternalSqlParser.g:19248:1: ruleOperandFunction
            {
             before(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FuncAssignment_5"


    // $ANTLR start "rule__OperandFragment__SqlcaseAssignment_6"
    // InternalSqlParser.g:19257:1: rule__OperandFragment__SqlcaseAssignment_6 : ( ruleSQLCASE ) ;
    public final void rule__OperandFragment__SqlcaseAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19261:1: ( ( ruleSQLCASE ) )
            // InternalSqlParser.g:19262:1: ( ruleSQLCASE )
            {
            // InternalSqlParser.g:19262:1: ( ruleSQLCASE )
            // InternalSqlParser.g:19263:1: ruleSQLCASE
            {
             before(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 
            pushFollow(FOLLOW_2);
            ruleSQLCASE();

            state._fsp--;

             after(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SqlcaseAssignment_6"


    // $ANTLR start "rule__OperandFunction__FnameAssignment_1"
    // InternalSqlParser.g:19272:1: rule__OperandFunction__FnameAssignment_1 : ( ruleFNAME ) ;
    public final void rule__OperandFunction__FnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19276:1: ( ( ruleFNAME ) )
            // InternalSqlParser.g:19277:1: ( ruleFNAME )
            {
            // InternalSqlParser.g:19277:1: ( ruleFNAME )
            // InternalSqlParser.g:19278:1: ruleFNAME
            {
             before(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFNAME();

            state._fsp--;

             after(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FnameAssignment_1"


    // $ANTLR start "rule__OperandFunction__StarAssignment_2_0"
    // InternalSqlParser.g:19287:1: rule__OperandFunction__StarAssignment_2_0 : ( RULE_STAR ) ;
    public final void rule__OperandFunction__StarAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19291:1: ( ( RULE_STAR ) )
            // InternalSqlParser.g:19292:1: ( RULE_STAR )
            {
            // InternalSqlParser.g:19292:1: ( RULE_STAR )
            // InternalSqlParser.g:19293:1: RULE_STAR
            {
             before(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 
            match(input,RULE_STAR,FOLLOW_2); 
             after(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__StarAssignment_2_0"


    // $ANTLR start "rule__OperandFunction__ArgsAssignment_2_1"
    // InternalSqlParser.g:19302:1: rule__OperandFunction__ArgsAssignment_2_1 : ( ruleOpFunctionArg ) ;
    public final void rule__OperandFunction__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19306:1: ( ( ruleOpFunctionArg ) )
            // InternalSqlParser.g:19307:1: ( ruleOpFunctionArg )
            {
            // InternalSqlParser.g:19307:1: ( ruleOpFunctionArg )
            // InternalSqlParser.g:19308:1: ruleOpFunctionArg
            {
             before(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOpFunctionArg();

            state._fsp--;

             after(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__ArgsAssignment_2_1"


    // $ANTLR start "rule__OperandFunction__FanAssignment_4"
    // InternalSqlParser.g:19317:1: rule__OperandFunction__FanAssignment_4 : ( ruleFunctionAnalytical ) ;
    public final void rule__OperandFunction__FanAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19321:1: ( ( ruleFunctionAnalytical ) )
            // InternalSqlParser.g:19322:1: ( ruleFunctionAnalytical )
            {
            // InternalSqlParser.g:19322:1: ( ruleFunctionAnalytical )
            // InternalSqlParser.g:19323:1: ruleFunctionAnalytical
            {
             before(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleFunctionAnalytical();

            state._fsp--;

             after(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FanAssignment_4"


    // $ANTLR start "rule__FunctionExtract__VAssignment_2"
    // InternalSqlParser.g:19332:1: rule__FunctionExtract__VAssignment_2 : ( ruleEXTRACT_VALUES ) ;
    public final void rule__FunctionExtract__VAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19336:1: ( ( ruleEXTRACT_VALUES ) )
            // InternalSqlParser.g:19337:1: ( ruleEXTRACT_VALUES )
            {
            // InternalSqlParser.g:19337:1: ( ruleEXTRACT_VALUES )
            // InternalSqlParser.g:19338:1: ruleEXTRACT_VALUES
            {
             before(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEXTRACT_VALUES();

            state._fsp--;

             after(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__VAssignment_2"


    // $ANTLR start "rule__FunctionExtract__OperandAssignment_4"
    // InternalSqlParser.g:19347:1: rule__FunctionExtract__OperandAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__FunctionExtract__OperandAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19351:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:19352:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:19352:1: ( ruleOperandGroup )
            // InternalSqlParser.g:19353:1: ruleOperandGroup
            {
             before(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__OperandAssignment_4"


    // $ANTLR start "rule__FunctionAnalytical__AnClauseAssignment_2"
    // InternalSqlParser.g:19362:1: rule__FunctionAnalytical__AnClauseAssignment_2 : ( ruleAnalyticClause ) ;
    public final void rule__FunctionAnalytical__AnClauseAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19366:1: ( ( ruleAnalyticClause ) )
            // InternalSqlParser.g:19367:1: ( ruleAnalyticClause )
            {
            // InternalSqlParser.g:19367:1: ( ruleAnalyticClause )
            // InternalSqlParser.g:19368:1: ruleAnalyticClause
            {
             before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticClause();

            state._fsp--;

             after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__AnClauseAssignment_2"


    // $ANTLR start "rule__AnalyticClause__AbcAssignment_1"
    // InternalSqlParser.g:19377:1: rule__AnalyticClause__AbcAssignment_1 : ( ruleQueryPartitionClause ) ;
    public final void rule__AnalyticClause__AbcAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19381:1: ( ( ruleQueryPartitionClause ) )
            // InternalSqlParser.g:19382:1: ( ruleQueryPartitionClause )
            {
            // InternalSqlParser.g:19382:1: ( ruleQueryPartitionClause )
            // InternalSqlParser.g:19383:1: ruleQueryPartitionClause
            {
             before(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQueryPartitionClause();

            state._fsp--;

             after(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__AbcAssignment_1"


    // $ANTLR start "rule__AnalyticClause__ObcAssignment_2_0"
    // InternalSqlParser.g:19392:1: rule__AnalyticClause__ObcAssignment_2_0 : ( ruleOrderByClause ) ;
    public final void rule__AnalyticClause__ObcAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19396:1: ( ( ruleOrderByClause ) )
            // InternalSqlParser.g:19397:1: ( ruleOrderByClause )
            {
            // InternalSqlParser.g:19397:1: ( ruleOrderByClause )
            // InternalSqlParser.g:19398:1: ruleOrderByClause
            {
             before(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByClause();

            state._fsp--;

             after(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__ObcAssignment_2_0"


    // $ANTLR start "rule__AnalyticClause__WincAssignment_2_1"
    // InternalSqlParser.g:19407:1: rule__AnalyticClause__WincAssignment_2_1 : ( ruleWindowingClause ) ;
    public final void rule__AnalyticClause__WincAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19411:1: ( ( ruleWindowingClause ) )
            // InternalSqlParser.g:19412:1: ( ruleWindowingClause )
            {
            // InternalSqlParser.g:19412:1: ( ruleWindowingClause )
            // InternalSqlParser.g:19413:1: ruleWindowingClause
            {
             before(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleWindowingClause();

            state._fsp--;

             after(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__WincAssignment_2_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoPAssignment_1"
    // InternalSqlParser.g:19422:1: rule__WindowingClauseBetween__WcoPAssignment_1 : ( ruleWindowingClauseOperandPreceding ) ;
    public final void rule__WindowingClauseBetween__WcoPAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19426:1: ( ( ruleWindowingClauseOperandPreceding ) )
            // InternalSqlParser.g:19427:1: ( ruleWindowingClauseOperandPreceding )
            {
            // InternalSqlParser.g:19427:1: ( ruleWindowingClauseOperandPreceding )
            // InternalSqlParser.g:19428:1: ruleWindowingClauseOperandPreceding
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;

             after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoPAssignment_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoFAssignment_3"
    // InternalSqlParser.g:19437:1: rule__WindowingClauseBetween__WcoFAssignment_3 : ( ruleWindowingClauseOperandFollowing ) ;
    public final void rule__WindowingClauseBetween__WcoFAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19441:1: ( ( ruleWindowingClauseOperandFollowing ) )
            // InternalSqlParser.g:19442:1: ( ruleWindowingClauseOperandFollowing )
            {
            // InternalSqlParser.g:19442:1: ( ruleWindowingClauseOperandFollowing )
            // InternalSqlParser.g:19443:1: ruleWindowingClauseOperandFollowing
            {
             before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;

             after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoFAssignment_3"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"
    // InternalSqlParser.g:19452:1: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19456:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:19457:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:19457:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:19458:1: ruleAnalyticExprArg
            {
             before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;

             after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"
    // InternalSqlParser.g:19467:1: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19471:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:19472:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:19472:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:19473:1: ruleAnalyticExprArg
            {
             before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;

             after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"


    // $ANTLR start "rule__OrderByClause__ArgsAssignment_1"
    // InternalSqlParser.g:19482:1: rule__OrderByClause__ArgsAssignment_1 : ( ruleOrderByClauseArgs ) ;
    public final void rule__OrderByClause__ArgsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19486:1: ( ( ruleOrderByClauseArgs ) )
            // InternalSqlParser.g:19487:1: ( ruleOrderByClauseArgs )
            {
            // InternalSqlParser.g:19487:1: ( ruleOrderByClauseArgs )
            // InternalSqlParser.g:19488:1: ruleOrderByClauseArgs
            {
             before(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArgs();

            state._fsp--;

             after(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__ArgsAssignment_1"


    // $ANTLR start "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19497:1: rule__OrderByClauseArgs__EntriesAssignment_1_1_1 : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19501:1: ( ( ruleOrderByClauseArg ) )
            // InternalSqlParser.g:19502:1: ( ruleOrderByClauseArg )
            {
            // InternalSqlParser.g:19502:1: ( ruleOrderByClauseArg )
            // InternalSqlParser.g:19503:1: ruleOrderByClauseArg
            {
             before(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;

             after(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByClauseArg__ColAssignment_0"
    // InternalSqlParser.g:19512:1: rule__OrderByClauseArg__ColAssignment_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__OrderByClauseArg__ColAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19516:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:19517:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:19517:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:19518:1: ruleAnalyticExprArg
            {
             before(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;

             after(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__ColAssignment_0"


    // $ANTLR start "rule__QueryPartitionClause__ArgsAssignment_1_0"
    // InternalSqlParser.g:19527:1: rule__QueryPartitionClause__ArgsAssignment_1_0 : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__ArgsAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19531:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSqlParser.g:19532:1: ( ruleAnalyticExprArgs )
            {
            // InternalSqlParser.g:19532:1: ( ruleAnalyticExprArgs )
            // InternalSqlParser.g:19533:1: ruleAnalyticExprArgs
            {
             before(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;

             after(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__ArgsAssignment_1_0"


    // $ANTLR start "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19542:1: rule__AnalyticExprArgs__EntriesAssignment_1_1_1 : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19546:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:19547:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:19547:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:19548:1: ruleAnalyticExprArg
            {
             before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;

             after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__AnalyticExprArg__CeAssignment_0"
    // InternalSqlParser.g:19557:1: rule__AnalyticExprArg__CeAssignment_0 : ( ruleOperand ) ;
    public final void rule__AnalyticExprArg__CeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19561:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:19562:1: ( ruleOperand )
            {
            // InternalSqlParser.g:19562:1: ( ruleOperand )
            // InternalSqlParser.g:19563:1: ruleOperand
            {
             before(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;

             after(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__CeAssignment_0"


    // $ANTLR start "rule__AnalyticExprArg__ColAliasAssignment_1"
    // InternalSqlParser.g:19572:1: rule__AnalyticExprArg__ColAliasAssignment_1 : ( ruleDbObjectName ) ;
    public final void rule__AnalyticExprArg__ColAliasAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19576:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:19577:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:19577:1: ( ruleDbObjectName )
            // InternalSqlParser.g:19578:1: ruleDbObjectName
            {
             before(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;

             after(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__ColAliasAssignment_1"


    // $ANTLR start "rule__OpFunctionArg__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19587:1: rule__OpFunctionArg__EntriesAssignment_1_1_1 : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19591:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSqlParser.g:19592:1: ( ruleOpFunctionArgOperand )
            {
            // InternalSqlParser.g:19592:1: ( ruleOpFunctionArgOperand )
            // InternalSqlParser.g:19593:1: ruleOpFunctionArgOperand
            {
             before(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;

             after(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAssignment"
    // InternalSqlParser.g:19602:1: rule__OpFunctionArgOperand__OpAssignment : ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) ;
    public final void rule__OpFunctionArgOperand__OpAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19606:1: ( ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) )
            // InternalSqlParser.g:19607:1: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            {
            // InternalSqlParser.g:19607:1: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            // InternalSqlParser.g:19608:1: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            {
             before(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 
            // InternalSqlParser.g:19609:1: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            // InternalSqlParser.g:19609:2: rule__OpFunctionArgOperand__OpAlternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAlternatives_0();

            state._fsp--;


            }

             after(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAssignment"


    // $ANTLR start "rule__OpFunctionCast__OpAssignment_1"
    // InternalSqlParser.g:19618:1: rule__OpFunctionCast__OpAssignment_1 : ( ruleOperandGroup ) ;
    public final void rule__OpFunctionCast__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19622:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:19623:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:19623:1: ( ruleOperandGroup )
            // InternalSqlParser.g:19624:1: ruleOperandGroup
            {
             before(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__OpAssignment_1"


    // $ANTLR start "rule__OpFunctionCast__TypeAssignment_3"
    // InternalSqlParser.g:19633:1: rule__OpFunctionCast__TypeAssignment_3 : ( RULE_ID ) ;
    public final void rule__OpFunctionCast__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19637:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:19638:1: ( RULE_ID )
            {
            // InternalSqlParser.g:19638:1: ( RULE_ID )
            // InternalSqlParser.g:19639:1: RULE_ID
            {
             before(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__TypeAssignment_3"


    // $ANTLR start "rule__OpFunctionCast__PAssignment_4_1"
    // InternalSqlParser.g:19648:1: rule__OpFunctionCast__PAssignment_4_1 : ( RULE_INT ) ;
    public final void rule__OpFunctionCast__PAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19652:1: ( ( RULE_INT ) )
            // InternalSqlParser.g:19653:1: ( RULE_INT )
            {
            // InternalSqlParser.g:19653:1: ( RULE_INT )
            // InternalSqlParser.g:19654:1: RULE_INT
            {
             before(grammarAccess.getOpFunctionCastAccess().getPINTTerminalRuleCall_4_1_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getPINTTerminalRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__PAssignment_4_1"


    // $ANTLR start "rule__OpFunctionCast__P2Assignment_4_2_1"
    // InternalSqlParser.g:19663:1: rule__OpFunctionCast__P2Assignment_4_2_1 : ( RULE_INT ) ;
    public final void rule__OpFunctionCast__P2Assignment_4_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19667:1: ( ( RULE_INT ) )
            // InternalSqlParser.g:19668:1: ( RULE_INT )
            {
            // InternalSqlParser.g:19668:1: ( RULE_INT )
            // InternalSqlParser.g:19669:1: RULE_INT
            {
             before(grammarAccess.getOpFunctionCastAccess().getP2INTTerminalRuleCall_4_2_1_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getOpFunctionCastAccess().getP2INTTerminalRuleCall_4_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__P2Assignment_4_2_1"


    // $ANTLR start "rule__XOperandFragment__ParamAssignment_0"
    // InternalSqlParser.g:19678:1: rule__XOperandFragment__ParamAssignment_0 : ( ruleParameterOperand ) ;
    public final void rule__XOperandFragment__ParamAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19682:1: ( ( ruleParameterOperand ) )
            // InternalSqlParser.g:19683:1: ( ruleParameterOperand )
            {
            // InternalSqlParser.g:19683:1: ( ruleParameterOperand )
            // InternalSqlParser.g:19684:1: ruleParameterOperand
            {
             before(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;

             after(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ParamAssignment_0"


    // $ANTLR start "rule__XOperandFragment__EparamAssignment_1"
    // InternalSqlParser.g:19693:1: rule__XOperandFragment__EparamAssignment_1 : ( ruleExclamationParameterOperand ) ;
    public final void rule__XOperandFragment__EparamAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19697:1: ( ( ruleExclamationParameterOperand ) )
            // InternalSqlParser.g:19698:1: ( ruleExclamationParameterOperand )
            {
            // InternalSqlParser.g:19698:1: ( ruleExclamationParameterOperand )
            // InternalSqlParser.g:19699:1: ruleExclamationParameterOperand
            {
             before(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExclamationParameterOperand();

            state._fsp--;

             after(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__EparamAssignment_1"


    // $ANTLR start "rule__XOperandFragment__ScalarAssignment_2"
    // InternalSqlParser.g:19708:1: rule__XOperandFragment__ScalarAssignment_2 : ( ruleScalarNumberOperand ) ;
    public final void rule__XOperandFragment__ScalarAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19712:1: ( ( ruleScalarNumberOperand ) )
            // InternalSqlParser.g:19713:1: ( ruleScalarNumberOperand )
            {
            // InternalSqlParser.g:19713:1: ( ruleScalarNumberOperand )
            // InternalSqlParser.g:19714:1: ruleScalarNumberOperand
            {
             before(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleScalarNumberOperand();

            state._fsp--;

             after(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ScalarAssignment_2"


    // $ANTLR start "rule__ParameterOperand__PrmAssignment"
    // InternalSqlParser.g:19723:1: rule__ParameterOperand__PrmAssignment : ( RULE_JRPARAM ) ;
    public final void rule__ParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19727:1: ( ( RULE_JRPARAM ) )
            // InternalSqlParser.g:19728:1: ( RULE_JRPARAM )
            {
            // InternalSqlParser.g:19728:1: ( RULE_JRPARAM )
            // InternalSqlParser.g:19729:1: RULE_JRPARAM
            {
             before(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 
            match(input,RULE_JRPARAM,FOLLOW_2); 
             after(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ExclamationParameterOperand__PrmAssignment"
    // InternalSqlParser.g:19738:1: rule__ExclamationParameterOperand__PrmAssignment : ( RULE_JRNPARAM ) ;
    public final void rule__ExclamationParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19742:1: ( ( RULE_JRNPARAM ) )
            // InternalSqlParser.g:19743:1: ( RULE_JRNPARAM )
            {
            // InternalSqlParser.g:19743:1: ( RULE_JRNPARAM )
            // InternalSqlParser.g:19744:1: RULE_JRNPARAM
            {
             before(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 
            match(input,RULE_JRNPARAM,FOLLOW_2); 
             after(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclamationParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ColumnOperand__CfullAssignment_0"
    // InternalSqlParser.g:19753:1: rule__ColumnOperand__CfullAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__ColumnOperand__CfullAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19757:1: ( ( ruleColumnFull ) )
            // InternalSqlParser.g:19758:1: ( ruleColumnFull )
            {
            // InternalSqlParser.g:19758:1: ( ruleColumnFull )
            // InternalSqlParser.g:19759:1: ruleColumnFull
            {
             before(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;

             after(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__CfullAssignment_0"


    // $ANTLR start "rule__ColumnOperand__OraAssignment_1"
    // InternalSqlParser.g:19768:1: rule__ColumnOperand__OraAssignment_1 : ( ( LeftParenthesisPlusSignRightParenthesis ) ) ;
    public final void rule__ColumnOperand__OraAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19772:1: ( ( ( LeftParenthesisPlusSignRightParenthesis ) ) )
            // InternalSqlParser.g:19773:1: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            {
            // InternalSqlParser.g:19773:1: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            // InternalSqlParser.g:19774:1: ( LeftParenthesisPlusSignRightParenthesis )
            {
             before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            // InternalSqlParser.g:19775:1: ( LeftParenthesisPlusSignRightParenthesis )
            // InternalSqlParser.g:19776:1: LeftParenthesisPlusSignRightParenthesis
            {
             before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            match(input,LeftParenthesisPlusSignRightParenthesis,FOLLOW_2); 
             after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 

            }

             after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__OraAssignment_1"


    // $ANTLR start "rule__SubQueryOperand__SelAssignment_2"
    // InternalSqlParser.g:19791:1: rule__SubQueryOperand__SelAssignment_2 : ( ruleSelectQuery ) ;
    public final void rule__SubQueryOperand__SelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19795:1: ( ( ruleSelectQuery ) )
            // InternalSqlParser.g:19796:1: ( ruleSelectQuery )
            {
            // InternalSqlParser.g:19796:1: ( ruleSelectQuery )
            // InternalSqlParser.g:19797:1: ruleSelectQuery
            {
             before(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;

             after(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__SelAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SostrAssignment_0"
    // InternalSqlParser.g:19806:1: rule__ScalarOperand__SostrAssignment_0 : ( ruleStringOperand ) ;
    public final void rule__ScalarOperand__SostrAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19810:1: ( ( ruleStringOperand ) )
            // InternalSqlParser.g:19811:1: ( ruleStringOperand )
            {
            // InternalSqlParser.g:19811:1: ( ruleStringOperand )
            // InternalSqlParser.g:19812:1: ruleStringOperand
            {
             before(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;

             after(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SostrAssignment_0"


    // $ANTLR start "rule__ScalarOperand__SodblAssignment_1"
    // InternalSqlParser.g:19821:1: rule__ScalarOperand__SodblAssignment_1 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarOperand__SodblAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19825:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSqlParser.g:19826:1: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSqlParser.g:19826:1: ( RULE_SIGNED_DOUBLE )
            // InternalSqlParser.g:19827:1: RULE_SIGNED_DOUBLE
            {
             before(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); 
             after(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodblAssignment_1"


    // $ANTLR start "rule__ScalarOperand__SodateAssignment_2"
    // InternalSqlParser.g:19836:1: rule__ScalarOperand__SodateAssignment_2 : ( RULE_DATE ) ;
    public final void rule__ScalarOperand__SodateAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19840:1: ( ( RULE_DATE ) )
            // InternalSqlParser.g:19841:1: ( RULE_DATE )
            {
            // InternalSqlParser.g:19841:1: ( RULE_DATE )
            // InternalSqlParser.g:19842:1: RULE_DATE
            {
             before(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 
            match(input,RULE_DATE,FOLLOW_2); 
             after(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodateAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SotimeAssignment_3"
    // InternalSqlParser.g:19851:1: rule__ScalarOperand__SotimeAssignment_3 : ( RULE_TIME ) ;
    public final void rule__ScalarOperand__SotimeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19855:1: ( ( RULE_TIME ) )
            // InternalSqlParser.g:19856:1: ( RULE_TIME )
            {
            // InternalSqlParser.g:19856:1: ( RULE_TIME )
            // InternalSqlParser.g:19857:1: RULE_TIME
            {
             before(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 
            match(input,RULE_TIME,FOLLOW_2); 
             after(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SotimeAssignment_3"


    // $ANTLR start "rule__ScalarOperand__SodtAssignment_4"
    // InternalSqlParser.g:19866:1: rule__ScalarOperand__SodtAssignment_4 : ( RULE_TIMESTAMP ) ;
    public final void rule__ScalarOperand__SodtAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19870:1: ( ( RULE_TIMESTAMP ) )
            // InternalSqlParser.g:19871:1: ( RULE_TIMESTAMP )
            {
            // InternalSqlParser.g:19871:1: ( RULE_TIMESTAMP )
            // InternalSqlParser.g:19872:1: RULE_TIMESTAMP
            {
             before(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 
            match(input,RULE_TIMESTAMP,FOLLOW_2); 
             after(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodtAssignment_4"


    // $ANTLR start "rule__ScalarNumberOperand__SoUIntAssignment_0"
    // InternalSqlParser.g:19881:1: rule__ScalarNumberOperand__SoUIntAssignment_0 : ( RULE_UNSIGNED ) ;
    public final void rule__ScalarNumberOperand__SoUIntAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19885:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:19886:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:19886:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:19887:1: RULE_UNSIGNED
            {
             before(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 
            match(input,RULE_UNSIGNED,FOLLOW_2); 
             after(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SoUIntAssignment_0"


    // $ANTLR start "rule__ScalarNumberOperand__SointAssignment_1"
    // InternalSqlParser.g:19896:1: rule__ScalarNumberOperand__SointAssignment_1 : ( RULE_INT ) ;
    public final void rule__ScalarNumberOperand__SointAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19900:1: ( ( RULE_INT ) )
            // InternalSqlParser.g:19901:1: ( RULE_INT )
            {
            // InternalSqlParser.g:19901:1: ( RULE_INT )
            // InternalSqlParser.g:19902:1: RULE_INT
            {
             before(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SointAssignment_1"


    // $ANTLR start "rule__ScalarNumberOperand__SodblAssignment_2"
    // InternalSqlParser.g:19911:1: rule__ScalarNumberOperand__SodblAssignment_2 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarNumberOperand__SodblAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19915:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSqlParser.g:19916:1: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSqlParser.g:19916:1: ( RULE_SIGNED_DOUBLE )
            // InternalSqlParser.g:19917:1: RULE_SIGNED_DOUBLE
            {
             before(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); 
             after(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SodblAssignment_2"


    // $ANTLR start "rule__ScalarNumberOperand__SostrAssignment_3"
    // InternalSqlParser.g:19926:1: rule__ScalarNumberOperand__SostrAssignment_3 : ( ruleStringOperand ) ;
    public final void rule__ScalarNumberOperand__SostrAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19930:1: ( ( ruleStringOperand ) )
            // InternalSqlParser.g:19931:1: ( ruleStringOperand )
            {
            // InternalSqlParser.g:19931:1: ( ruleStringOperand )
            // InternalSqlParser.g:19932:1: ruleStringOperand
            {
             before(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;

             after(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SostrAssignment_3"


    // $ANTLR start "rule__SQLCASE__ExprAssignment_1"
    // InternalSqlParser.g:19941:1: rule__SQLCASE__ExprAssignment_1 : ( ruleFullExpression ) ;
    public final void rule__SQLCASE__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19945:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:19946:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:19946:1: ( ruleFullExpression )
            // InternalSqlParser.g:19947:1: ruleFullExpression
            {
             before(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__ExprAssignment_1"


    // $ANTLR start "rule__SQLCASE__WhenAssignment_2"
    // InternalSqlParser.g:19956:1: rule__SQLCASE__WhenAssignment_2 : ( ruleSQLCaseWhens ) ;
    public final void rule__SQLCASE__WhenAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19960:1: ( ( ruleSQLCaseWhens ) )
            // InternalSqlParser.g:19961:1: ( ruleSQLCaseWhens )
            {
            // InternalSqlParser.g:19961:1: ( ruleSQLCaseWhens )
            // InternalSqlParser.g:19962:1: ruleSQLCaseWhens
            {
             before(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSQLCaseWhens();

            state._fsp--;

             after(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__WhenAssignment_2"


    // $ANTLR start "rule__SQLCaseWhens__EntriesAssignment_1_1"
    // InternalSqlParser.g:19971:1: rule__SQLCaseWhens__EntriesAssignment_1_1 : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19975:1: ( ( ruleSqlCaseWhen ) )
            // InternalSqlParser.g:19976:1: ( ruleSqlCaseWhen )
            {
            // InternalSqlParser.g:19976:1: ( ruleSqlCaseWhen )
            // InternalSqlParser.g:19977:1: ruleSqlCaseWhen
            {
             before(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;

             after(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__EntriesAssignment_1_1"


    // $ANTLR start "rule__SqlCaseWhen__ExprAssignment_1"
    // InternalSqlParser.g:19986:1: rule__SqlCaseWhen__ExprAssignment_1 : ( ruleFullExpression ) ;
    public final void rule__SqlCaseWhen__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19990:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:19991:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:19991:1: ( ruleFullExpression )
            // InternalSqlParser.g:19992:1: ruleFullExpression
            {
             before(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;

             after(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__ExprAssignment_1"


    // $ANTLR start "rule__SqlCaseWhen__TexpAssignment_3"
    // InternalSqlParser.g:20001:1: rule__SqlCaseWhen__TexpAssignment_3 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__TexpAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20005:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:20006:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:20006:1: ( ruleOperandGroup )
            // InternalSqlParser.g:20007:1: ruleOperandGroup
            {
             before(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__TexpAssignment_3"


    // $ANTLR start "rule__SqlCaseWhen__EexpAssignment_4_1"
    // InternalSqlParser.g:20016:1: rule__SqlCaseWhen__EexpAssignment_4_1 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__EexpAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20020:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:20021:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:20021:1: ( ruleOperandGroup )
            // InternalSqlParser.g:20022:1: ruleOperandGroup
            {
             before(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;

             after(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__EexpAssignment_4_1"


    // $ANTLR start "rule__UnsignedValue__IntegerAssignment"
    // InternalSqlParser.g:20032:1: rule__UnsignedValue__IntegerAssignment : ( RULE_UNSIGNED ) ;
    public final void rule__UnsignedValue__IntegerAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20036:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:20037:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:20037:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:20038:1: RULE_UNSIGNED
            {
             before(grammarAccess.getUnsignedValueAccess().getIntegerUNSIGNEDTerminalRuleCall_0()); 
            match(input,RULE_UNSIGNED,FOLLOW_2); 
             after(grammarAccess.getUnsignedValueAccess().getIntegerUNSIGNEDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnsignedValue__IntegerAssignment"

    // Delegated rules


    protected DFA20 dfa20 = new DFA20(this);
    static final String dfa_1s = "\21\uffff";
    static final String dfa_2s = "\1\156\1\u0082\1\35\14\173\2\uffff";
    static final String dfa_3s = "\1\156\1\u0082\1\163\14\u0083\2\uffff";
    static final String dfa_4s = "\17\uffff\1\2\1\1";
    static final String dfa_5s = "\21\uffff}>";
    static final String[] dfa_6s = {
            "\1\1",
            "\1\2",
            "\1\14\1\16\4\uffff\1\6\1\uffff\1\15\1\12\1\13\2\uffff\1\10\21\uffff\1\5\2\uffff\1\11\3\uffff\1\4\21\uffff\1\7\35\uffff\1\3",
            "\1\20\7\uffff\1\17",
            "\1\20\7\uffff\1\17",
            "\1\20\7\uffff\1\17",
            "\1\20\7\uffff\1\17",
            "\1\20\7\uffff\1\17",
            "\1\20\7\uffff\1\17",
            "\1\20\7\uffff\1\17",
            "\1\20\7\uffff\1\17",
            "\1\20\7\uffff\1\17",
            "\1\20\7\uffff\1\17",
            "\1\20\7\uffff\1\17",
            "\1\20\7\uffff\1\17",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "3452:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000040010000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0002000004000000L,0x0000000000000202L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0002000004000002L,0x0000000000000202L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0100000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0400020100000000L,0x0100080000001000L,0x000000000003C7E0L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000038000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0048001200008000L,0x0000000000000801L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000400010000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0424020000800000L,0x0108400001801000L,0x000000000003C760L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000038100L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000002L,0x0800000000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L,0x0000000000038000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000038000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x4800200000001000L,0x0000000000150100L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x4800200000001002L,0x0000000000150100L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000400L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0001000000000000L,0x0004000000000040L,0x0000000000038000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L,0x0000000000004760L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0100100000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0100002000000000L,0x0000000000038000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000090000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000004000002000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0020001000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x0020001000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0100000001800000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x900004E860000000L,0x0008000000200008L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0400020000000000L,0x0100000000001000L,0x000000000003C760L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000018L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0424128400940000L,0x814BE00001C01000L,0x000000000003C763L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0400020000000000L,0x0100002820001000L,0x000000000003C760L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0400000000000000L,0x0000000000000000L,0x0000000000024760L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0020000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000007F60L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x5480000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000002L,0x5480000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0400020100000000L,0x0300000800001000L,0x000000000003C7E0L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x00908000816B0EC0L,0x0000008280020004L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000001000002100L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000080L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0400028000004020L,0x0100000000001000L,0x000000000003C760L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0400028000004030L,0x0100000000001000L,0x000000000003C760L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x000000000A000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000004000002010L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x2000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0400020100000000L,0x0100000800001000L,0x000000000003C7E0L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0300000000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0A00000000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0424020000800000L,0x0108400101801000L,0x000000000003C760L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0424020000800002L,0x0108400101801000L,0x000000000003C760L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});

}
